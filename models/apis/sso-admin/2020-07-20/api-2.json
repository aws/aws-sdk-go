{
  "metadata": {
    "apiVersion": "2020-07-20",
    "endpointPrefix": "sso",
    "jsonVersion": "1.1",
    "protocol": "json",
    "serviceAbbreviation": "SSO Admin",
    "serviceFullName": "AWS Single Sign-On Admin",
    "serviceId": "SSO Admin",
    "signatureVersion": "v4",
    "signingName": "sso",
    "targetPrefix": "SWBExternalService",
    "uid": "sso-admin-2020-07-20"
  },
  "operations": {
    "AttachCustomerManagedPolicyReferenceToPermissionSet": {
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "AttachCustomerManagedPolicyReferenceToPermissionSetRequest"
      },
      "name": "AttachCustomerManagedPolicyReferenceToPermissionSet",
      "output": {
        "shape": "AttachCustomerManagedPolicyReferenceToPermissionSetResponse"
      }
    },
    "AttachManagedPolicyToPermissionSet": {
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "AttachManagedPolicyToPermissionSetRequest"
      },
      "name": "AttachManagedPolicyToPermissionSet",
      "output": {
        "shape": "AttachManagedPolicyToPermissionSetResponse"
      }
    },
    "CreateAccountAssignment": {
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateAccountAssignmentRequest"
      },
      "name": "CreateAccountAssignment",
      "output": {
        "shape": "CreateAccountAssignmentResponse"
      }
    },
    "CreateApplication": {
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateApplicationRequest"
      },
      "name": "CreateApplication",
      "output": {
        "shape": "CreateApplicationResponse"
      }
    },
    "CreateApplicationAssignment": {
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateApplicationAssignmentRequest"
      },
      "name": "CreateApplicationAssignment",
      "output": {
        "shape": "CreateApplicationAssignmentResponse"
      }
    },
    "CreateInstance": {
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateInstanceRequest"
      },
      "name": "CreateInstance",
      "output": {
        "shape": "CreateInstanceResponse"
      }
    },
    "CreateInstanceAccessControlAttributeConfiguration": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateInstanceAccessControlAttributeConfigurationRequest"
      },
      "name": "CreateInstanceAccessControlAttributeConfiguration",
      "output": {
        "shape": "CreateInstanceAccessControlAttributeConfigurationResponse"
      }
    },
    "CreatePermissionSet": {
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreatePermissionSetRequest"
      },
      "name": "CreatePermissionSet",
      "output": {
        "shape": "CreatePermissionSetResponse"
      }
    },
    "CreateTrustedTokenIssuer": {
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateTrustedTokenIssuerRequest"
      },
      "name": "CreateTrustedTokenIssuer",
      "output": {
        "shape": "CreateTrustedTokenIssuerResponse"
      }
    },
    "DeleteAccountAssignment": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteAccountAssignmentRequest"
      },
      "name": "DeleteAccountAssignment",
      "output": {
        "shape": "DeleteAccountAssignmentResponse"
      }
    },
    "DeleteApplication": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteApplicationRequest"
      },
      "name": "DeleteApplication",
      "output": {
        "shape": "DeleteApplicationResponse"
      }
    },
    "DeleteApplicationAccessScope": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteApplicationAccessScopeRequest"
      },
      "name": "DeleteApplicationAccessScope"
    },
    "DeleteApplicationAssignment": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteApplicationAssignmentRequest"
      },
      "name": "DeleteApplicationAssignment",
      "output": {
        "shape": "DeleteApplicationAssignmentResponse"
      }
    },
    "DeleteApplicationAuthenticationMethod": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteApplicationAuthenticationMethodRequest"
      },
      "name": "DeleteApplicationAuthenticationMethod"
    },
    "DeleteApplicationGrant": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteApplicationGrantRequest"
      },
      "name": "DeleteApplicationGrant"
    },
    "DeleteInlinePolicyFromPermissionSet": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteInlinePolicyFromPermissionSetRequest"
      },
      "name": "DeleteInlinePolicyFromPermissionSet",
      "output": {
        "shape": "DeleteInlinePolicyFromPermissionSetResponse"
      }
    },
    "DeleteInstance": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteInstanceRequest"
      },
      "name": "DeleteInstance",
      "output": {
        "shape": "DeleteInstanceResponse"
      }
    },
    "DeleteInstanceAccessControlAttributeConfiguration": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteInstanceAccessControlAttributeConfigurationRequest"
      },
      "name": "DeleteInstanceAccessControlAttributeConfiguration",
      "output": {
        "shape": "DeleteInstanceAccessControlAttributeConfigurationResponse"
      }
    },
    "DeletePermissionSet": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeletePermissionSetRequest"
      },
      "name": "DeletePermissionSet",
      "output": {
        "shape": "DeletePermissionSetResponse"
      }
    },
    "DeletePermissionsBoundaryFromPermissionSet": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeletePermissionsBoundaryFromPermissionSetRequest"
      },
      "name": "DeletePermissionsBoundaryFromPermissionSet",
      "output": {
        "shape": "DeletePermissionsBoundaryFromPermissionSetResponse"
      }
    },
    "DeleteTrustedTokenIssuer": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteTrustedTokenIssuerRequest"
      },
      "name": "DeleteTrustedTokenIssuer",
      "output": {
        "shape": "DeleteTrustedTokenIssuerResponse"
      }
    },
    "DescribeAccountAssignmentCreationStatus": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeAccountAssignmentCreationStatusRequest"
      },
      "name": "DescribeAccountAssignmentCreationStatus",
      "output": {
        "shape": "DescribeAccountAssignmentCreationStatusResponse"
      }
    },
    "DescribeAccountAssignmentDeletionStatus": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeAccountAssignmentDeletionStatusRequest"
      },
      "name": "DescribeAccountAssignmentDeletionStatus",
      "output": {
        "shape": "DescribeAccountAssignmentDeletionStatusResponse"
      }
    },
    "DescribeApplication": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeApplicationRequest"
      },
      "name": "DescribeApplication",
      "output": {
        "shape": "DescribeApplicationResponse"
      }
    },
    "DescribeApplicationAssignment": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeApplicationAssignmentRequest"
      },
      "name": "DescribeApplicationAssignment",
      "output": {
        "shape": "DescribeApplicationAssignmentResponse"
      }
    },
    "DescribeApplicationProvider": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeApplicationProviderRequest"
      },
      "name": "DescribeApplicationProvider",
      "output": {
        "shape": "DescribeApplicationProviderResponse"
      }
    },
    "DescribeInstance": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeInstanceRequest"
      },
      "name": "DescribeInstance",
      "output": {
        "shape": "DescribeInstanceResponse"
      }
    },
    "DescribeInstanceAccessControlAttributeConfiguration": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeInstanceAccessControlAttributeConfigurationRequest"
      },
      "name": "DescribeInstanceAccessControlAttributeConfiguration",
      "output": {
        "shape": "DescribeInstanceAccessControlAttributeConfigurationResponse"
      }
    },
    "DescribePermissionSet": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribePermissionSetRequest"
      },
      "name": "DescribePermissionSet",
      "output": {
        "shape": "DescribePermissionSetResponse"
      }
    },
    "DescribePermissionSetProvisioningStatus": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribePermissionSetProvisioningStatusRequest"
      },
      "name": "DescribePermissionSetProvisioningStatus",
      "output": {
        "shape": "DescribePermissionSetProvisioningStatusResponse"
      }
    },
    "DescribeTrustedTokenIssuer": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeTrustedTokenIssuerRequest"
      },
      "name": "DescribeTrustedTokenIssuer",
      "output": {
        "shape": "DescribeTrustedTokenIssuerResponse"
      }
    },
    "DetachCustomerManagedPolicyReferenceFromPermissionSet": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DetachCustomerManagedPolicyReferenceFromPermissionSetRequest"
      },
      "name": "DetachCustomerManagedPolicyReferenceFromPermissionSet",
      "output": {
        "shape": "DetachCustomerManagedPolicyReferenceFromPermissionSetResponse"
      }
    },
    "DetachManagedPolicyFromPermissionSet": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DetachManagedPolicyFromPermissionSetRequest"
      },
      "name": "DetachManagedPolicyFromPermissionSet",
      "output": {
        "shape": "DetachManagedPolicyFromPermissionSetResponse"
      }
    },
    "GetApplicationAccessScope": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetApplicationAccessScopeRequest"
      },
      "name": "GetApplicationAccessScope",
      "output": {
        "shape": "GetApplicationAccessScopeResponse"
      }
    },
    "GetApplicationAssignmentConfiguration": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetApplicationAssignmentConfigurationRequest"
      },
      "name": "GetApplicationAssignmentConfiguration",
      "output": {
        "shape": "GetApplicationAssignmentConfigurationResponse"
      }
    },
    "GetApplicationAuthenticationMethod": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetApplicationAuthenticationMethodRequest"
      },
      "name": "GetApplicationAuthenticationMethod",
      "output": {
        "shape": "GetApplicationAuthenticationMethodResponse"
      }
    },
    "GetApplicationGrant": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetApplicationGrantRequest"
      },
      "name": "GetApplicationGrant",
      "output": {
        "shape": "GetApplicationGrantResponse"
      }
    },
    "GetInlinePolicyForPermissionSet": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetInlinePolicyForPermissionSetRequest"
      },
      "name": "GetInlinePolicyForPermissionSet",
      "output": {
        "shape": "GetInlinePolicyForPermissionSetResponse"
      }
    },
    "GetPermissionsBoundaryForPermissionSet": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetPermissionsBoundaryForPermissionSetRequest"
      },
      "name": "GetPermissionsBoundaryForPermissionSet",
      "output": {
        "shape": "GetPermissionsBoundaryForPermissionSetResponse"
      }
    },
    "ListAccountAssignmentCreationStatus": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListAccountAssignmentCreationStatusRequest"
      },
      "name": "ListAccountAssignmentCreationStatus",
      "output": {
        "shape": "ListAccountAssignmentCreationStatusResponse"
      }
    },
    "ListAccountAssignmentDeletionStatus": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListAccountAssignmentDeletionStatusRequest"
      },
      "name": "ListAccountAssignmentDeletionStatus",
      "output": {
        "shape": "ListAccountAssignmentDeletionStatusResponse"
      }
    },
    "ListAccountAssignments": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListAccountAssignmentsRequest"
      },
      "name": "ListAccountAssignments",
      "output": {
        "shape": "ListAccountAssignmentsResponse"
      }
    },
    "ListAccountAssignmentsForPrincipal": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListAccountAssignmentsForPrincipalRequest"
      },
      "name": "ListAccountAssignmentsForPrincipal",
      "output": {
        "shape": "ListAccountAssignmentsForPrincipalResponse"
      }
    },
    "ListAccountsForProvisionedPermissionSet": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListAccountsForProvisionedPermissionSetRequest"
      },
      "name": "ListAccountsForProvisionedPermissionSet",
      "output": {
        "shape": "ListAccountsForProvisionedPermissionSetResponse"
      }
    },
    "ListApplicationAccessScopes": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListApplicationAccessScopesRequest"
      },
      "name": "ListApplicationAccessScopes",
      "output": {
        "shape": "ListApplicationAccessScopesResponse"
      }
    },
    "ListApplicationAssignments": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListApplicationAssignmentsRequest"
      },
      "name": "ListApplicationAssignments",
      "output": {
        "shape": "ListApplicationAssignmentsResponse"
      }
    },
    "ListApplicationAssignmentsForPrincipal": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListApplicationAssignmentsForPrincipalRequest"
      },
      "name": "ListApplicationAssignmentsForPrincipal",
      "output": {
        "shape": "ListApplicationAssignmentsForPrincipalResponse"
      }
    },
    "ListApplicationAuthenticationMethods": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListApplicationAuthenticationMethodsRequest"
      },
      "name": "ListApplicationAuthenticationMethods",
      "output": {
        "shape": "ListApplicationAuthenticationMethodsResponse"
      }
    },
    "ListApplicationGrants": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListApplicationGrantsRequest"
      },
      "name": "ListApplicationGrants",
      "output": {
        "shape": "ListApplicationGrantsResponse"
      }
    },
    "ListApplicationProviders": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListApplicationProvidersRequest"
      },
      "name": "ListApplicationProviders",
      "output": {
        "shape": "ListApplicationProvidersResponse"
      }
    },
    "ListApplications": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListApplicationsRequest"
      },
      "name": "ListApplications",
      "output": {
        "shape": "ListApplicationsResponse"
      }
    },
    "ListCustomerManagedPolicyReferencesInPermissionSet": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListCustomerManagedPolicyReferencesInPermissionSetRequest"
      },
      "name": "ListCustomerManagedPolicyReferencesInPermissionSet",
      "output": {
        "shape": "ListCustomerManagedPolicyReferencesInPermissionSetResponse"
      }
    },
    "ListInstances": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListInstancesRequest"
      },
      "name": "ListInstances",
      "output": {
        "shape": "ListInstancesResponse"
      }
    },
    "ListManagedPoliciesInPermissionSet": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListManagedPoliciesInPermissionSetRequest"
      },
      "name": "ListManagedPoliciesInPermissionSet",
      "output": {
        "shape": "ListManagedPoliciesInPermissionSetResponse"
      }
    },
    "ListPermissionSetProvisioningStatus": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListPermissionSetProvisioningStatusRequest"
      },
      "name": "ListPermissionSetProvisioningStatus",
      "output": {
        "shape": "ListPermissionSetProvisioningStatusResponse"
      }
    },
    "ListPermissionSets": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListPermissionSetsRequest"
      },
      "name": "ListPermissionSets",
      "output": {
        "shape": "ListPermissionSetsResponse"
      }
    },
    "ListPermissionSetsProvisionedToAccount": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListPermissionSetsProvisionedToAccountRequest"
      },
      "name": "ListPermissionSetsProvisionedToAccount",
      "output": {
        "shape": "ListPermissionSetsProvisionedToAccountResponse"
      }
    },
    "ListTagsForResource": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "ListTrustedTokenIssuers": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListTrustedTokenIssuersRequest"
      },
      "name": "ListTrustedTokenIssuers",
      "output": {
        "shape": "ListTrustedTokenIssuersResponse"
      }
    },
    "ProvisionPermissionSet": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ProvisionPermissionSetRequest"
      },
      "name": "ProvisionPermissionSet",
      "output": {
        "shape": "ProvisionPermissionSetResponse"
      }
    },
    "PutApplicationAccessScope": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "idempotent": true,
      "input": {
        "shape": "PutApplicationAccessScopeRequest"
      },
      "name": "PutApplicationAccessScope"
    },
    "PutApplicationAssignmentConfiguration": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "idempotent": true,
      "input": {
        "shape": "PutApplicationAssignmentConfigurationRequest"
      },
      "name": "PutApplicationAssignmentConfiguration",
      "output": {
        "shape": "PutApplicationAssignmentConfigurationResponse"
      }
    },
    "PutApplicationAuthenticationMethod": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "idempotent": true,
      "input": {
        "shape": "PutApplicationAuthenticationMethodRequest"
      },
      "name": "PutApplicationAuthenticationMethod"
    },
    "PutApplicationGrant": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "idempotent": true,
      "input": {
        "shape": "PutApplicationGrantRequest"
      },
      "name": "PutApplicationGrant"
    },
    "PutInlinePolicyToPermissionSet": {
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "PutInlinePolicyToPermissionSetRequest"
      },
      "name": "PutInlinePolicyToPermissionSet",
      "output": {
        "shape": "PutInlinePolicyToPermissionSetResponse"
      }
    },
    "PutPermissionsBoundaryToPermissionSet": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "PutPermissionsBoundaryToPermissionSetRequest"
      },
      "name": "PutPermissionsBoundaryToPermissionSet",
      "output": {
        "shape": "PutPermissionsBoundaryToPermissionSetResponse"
      }
    },
    "TagResource": {
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateApplication": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateApplicationRequest"
      },
      "name": "UpdateApplication",
      "output": {
        "shape": "UpdateApplicationResponse"
      }
    },
    "UpdateInstance": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateInstanceRequest"
      },
      "name": "UpdateInstance",
      "output": {
        "shape": "UpdateInstanceResponse"
      }
    },
    "UpdateInstanceAccessControlAttributeConfiguration": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateInstanceAccessControlAttributeConfigurationRequest"
      },
      "name": "UpdateInstanceAccessControlAttributeConfiguration",
      "output": {
        "shape": "UpdateInstanceAccessControlAttributeConfigurationResponse"
      }
    },
    "UpdatePermissionSet": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdatePermissionSetRequest"
      },
      "name": "UpdatePermissionSet",
      "output": {
        "shape": "UpdatePermissionSetResponse"
      }
    },
    "UpdateTrustedTokenIssuer": {
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateTrustedTokenIssuerRequest"
      },
      "name": "UpdateTrustedTokenIssuer",
      "output": {
        "shape": "UpdateTrustedTokenIssuerResponse"
      }
    }
  },
  "shapes": {
    "AccessControlAttribute": {
      "members": {
        "Key": {
          "shape": "AccessControlAttributeKey"
        },
        "Value": {
          "shape": "AccessControlAttributeValue"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "structure"
    },
    "AccessControlAttributeKey": {
      "max": 128,
      "min": 1,
      "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]+$",
      "type": "string"
    },
    "AccessControlAttributeList": {
      "max": 50,
      "member": {
        "shape": "AccessControlAttribute"
      },
      "min": 0,
      "type": "list"
    },
    "AccessControlAttributeValue": {
      "members": {
        "Source": {
          "shape": "AccessControlAttributeValueSourceList"
        }
      },
      "required": [
        "Source"
      ],
      "type": "structure"
    },
    "AccessControlAttributeValueSource": {
      "max": 256,
      "min": 0,
      "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@\\[\\]\\{\\}\\$\\\\\"]*$",
      "type": "string"
    },
    "AccessControlAttributeValueSourceList": {
      "max": 1,
      "member": {
        "shape": "AccessControlAttributeValueSource"
      },
      "min": 1,
      "type": "list"
    },
    "AccessDeniedException": {
      "exception": true,
      "members": {
        "Message": {
          "shape": "AccessDeniedExceptionMessage"
        }
      },
      "type": "structure"
    },
    "AccessDeniedExceptionMessage": {
      "type": "string"
    },
    "AccountAssignment": {
      "members": {
        "AccountId": {
          "shape": "AccountId"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        },
        "PrincipalId": {
          "shape": "PrincipalId"
        },
        "PrincipalType": {
          "shape": "PrincipalType"
        }
      },
      "type": "structure"
    },
    "AccountAssignmentForPrincipal": {
      "members": {
        "AccountId": {
          "shape": "AccountId"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        },
        "PrincipalId": {
          "shape": "PrincipalId"
        },
        "PrincipalType": {
          "shape": "PrincipalType"
        }
      },
      "type": "structure"
    },
    "AccountAssignmentList": {
      "member": {
        "shape": "AccountAssignment"
      },
      "type": "list"
    },
    "AccountAssignmentListForPrincipal": {
      "member": {
        "shape": "AccountAssignmentForPrincipal"
      },
      "type": "list"
    },
    "AccountAssignmentOperationStatus": {
      "members": {
        "CreatedDate": {
          "shape": "Date"
        },
        "FailureReason": {
          "shape": "Reason"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        },
        "PrincipalId": {
          "shape": "PrincipalId"
        },
        "PrincipalType": {
          "shape": "PrincipalType"
        },
        "RequestId": {
          "shape": "UUId"
        },
        "Status": {
          "shape": "StatusValues"
        },
        "TargetId": {
          "shape": "TargetId"
        },
        "TargetType": {
          "shape": "TargetType"
        }
      },
      "type": "structure"
    },
    "AccountAssignmentOperationStatusList": {
      "member": {
        "shape": "AccountAssignmentOperationStatusMetadata"
      },
      "type": "list"
    },
    "AccountAssignmentOperationStatusMetadata": {
      "members": {
        "CreatedDate": {
          "shape": "Date"
        },
        "RequestId": {
          "shape": "UUId"
        },
        "Status": {
          "shape": "StatusValues"
        }
      },
      "type": "structure"
    },
    "AccountId": {
      "max": 12,
      "min": 12,
      "pattern": "^\\d{12}$",
      "type": "string"
    },
    "AccountList": {
      "member": {
        "shape": "AccountId"
      },
      "type": "list"
    },
    "Application": {
      "members": {
        "ApplicationAccount": {
          "shape": "AccountId"
        },
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "ApplicationProviderArn": {
          "shape": "ApplicationProviderArn"
        },
        "CreatedDate": {
          "shape": "Date"
        },
        "Description": {
          "shape": "Description"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "Name": {
          "shape": "NameType"
        },
        "PortalOptions": {
          "shape": "PortalOptions"
        },
        "Status": {
          "shape": "ApplicationStatus"
        }
      },
      "type": "structure"
    },
    "ApplicationArn": {
      "max": 1224,
      "min": 10,
      "pattern": "^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso::\\d{12}:application/(sso)?ins-[a-zA-Z0-9-.]{16}/apl-[a-zA-Z0-9]{16}$",
      "type": "string"
    },
    "ApplicationAssignment": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "PrincipalId": {
          "shape": "PrincipalId"
        },
        "PrincipalType": {
          "shape": "PrincipalType"
        }
      },
      "required": [
        "ApplicationArn",
        "PrincipalId",
        "PrincipalType"
      ],
      "type": "structure"
    },
    "ApplicationAssignmentForPrincipal": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "PrincipalId": {
          "shape": "PrincipalId"
        },
        "PrincipalType": {
          "shape": "PrincipalType"
        }
      },
      "type": "structure"
    },
    "ApplicationAssignmentListForPrincipal": {
      "member": {
        "shape": "ApplicationAssignmentForPrincipal"
      },
      "type": "list"
    },
    "ApplicationAssignmentsList": {
      "member": {
        "shape": "ApplicationAssignment"
      },
      "type": "list"
    },
    "ApplicationList": {
      "max": 50,
      "member": {
        "shape": "Application"
      },
      "min": 0,
      "type": "list"
    },
    "ApplicationProvider": {
      "members": {
        "ApplicationProviderArn": {
          "shape": "ApplicationProviderArn"
        },
        "DisplayData": {
          "shape": "DisplayData"
        },
        "FederationProtocol": {
          "shape": "FederationProtocol"
        },
        "ResourceServerConfig": {
          "shape": "ResourceServerConfig"
        }
      },
      "required": [
        "ApplicationProviderArn"
      ],
      "type": "structure"
    },
    "ApplicationProviderArn": {
      "max": 1224,
      "min": 10,
      "pattern": "^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso::aws:applicationProvider/[a-zA-Z0-9-/]+$",
      "type": "string"
    },
    "ApplicationProviderList": {
      "member": {
        "shape": "ApplicationProvider"
      },
      "type": "list"
    },
    "ApplicationStatus": {
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "type": "string"
    },
    "ApplicationUrl": {
      "max": 512,
      "min": 1,
      "pattern": "^http(s)?:\\/\\/[-a-zA-Z0-9+\u0026@#\\/%?=~_|!:,.;]*[-a-zA-Z0-9+\u0026bb@#\\/%?=~_|]$",
      "type": "string"
    },
    "ApplicationVisibility": {
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "type": "string"
    },
    "AssignmentRequired": {
      "box": true,
      "type": "boolean"
    },
    "AttachCustomerManagedPolicyReferenceToPermissionSetRequest": {
      "members": {
        "CustomerManagedPolicyReference": {
          "shape": "CustomerManagedPolicyReference"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        }
      },
      "required": [
        "CustomerManagedPolicyReference",
        "InstanceArn",
        "PermissionSetArn"
      ],
      "type": "structure"
    },
    "AttachCustomerManagedPolicyReferenceToPermissionSetResponse": {
      "members": {},
      "type": "structure"
    },
    "AttachManagedPolicyToPermissionSetRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "ManagedPolicyArn": {
          "shape": "ManagedPolicyArn"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        }
      },
      "required": [
        "InstanceArn",
        "ManagedPolicyArn",
        "PermissionSetArn"
      ],
      "type": "structure"
    },
    "AttachManagedPolicyToPermissionSetResponse": {
      "members": {},
      "type": "structure"
    },
    "AttachedManagedPolicy": {
      "members": {
        "Arn": {
          "shape": "ManagedPolicyArn"
        },
        "Name": {
          "shape": "Name"
        }
      },
      "type": "structure"
    },
    "AttachedManagedPolicyList": {
      "member": {
        "shape": "AttachedManagedPolicy"
      },
      "type": "list"
    },
    "AuthenticationMethod": {
      "members": {},
      "type": "structure",
      "union": true
    },
    "AuthenticationMethodItem": {
      "members": {
        "AuthenticationMethod": {
          "shape": "AuthenticationMethod"
        },
        "AuthenticationMethodType": {
          "shape": "AuthenticationMethodType"
        }
      },
      "type": "structure"
    },
    "AuthenticationMethodType": {
      "enum": [
        "IAM"
      ],
      "type": "string"
    },
    "AuthenticationMethods": {
      "member": {
        "shape": "AuthenticationMethodItem"
      },
      "type": "list"
    },
    "AuthorizationCodeGrant": {
      "members": {
        "RedirectUris": {
          "shape": "RedirectUris"
        }
      },
      "type": "structure"
    },
    "AuthorizedTokenIssuer": {
      "members": {
        "AuthorizedAudiences": {
          "shape": "TokenIssuerAudiences"
        },
        "TrustedTokenIssuerArn": {
          "shape": "TrustedTokenIssuerArn"
        }
      },
      "type": "structure"
    },
    "AuthorizedTokenIssuers": {
      "max": 10,
      "member": {
        "shape": "AuthorizedTokenIssuer"
      },
      "min": 1,
      "type": "list"
    },
    "ClaimAttributePath": {
      "max": 255,
      "min": 1,
      "pattern": "^\\p{L}+(?:(\\.|\\_)\\p{L}+){0,2}$",
      "type": "string"
    },
    "ClientToken": {
      "max": 64,
      "min": 1,
      "pattern": "^[!-~]+$",
      "type": "string"
    },
    "ConflictException": {
      "exception": true,
      "members": {
        "Message": {
          "shape": "ConflictExceptionMessage"
        }
      },
      "type": "structure"
    },
    "ConflictExceptionMessage": {
      "type": "string"
    },
    "CreateAccountAssignmentRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        },
        "PrincipalId": {
          "shape": "PrincipalId"
        },
        "PrincipalType": {
          "shape": "PrincipalType"
        },
        "TargetId": {
          "shape": "TargetId"
        },
        "TargetType": {
          "shape": "TargetType"
        }
      },
      "required": [
        "InstanceArn",
        "PermissionSetArn",
        "PrincipalId",
        "PrincipalType",
        "TargetId",
        "TargetType"
      ],
      "type": "structure"
    },
    "CreateAccountAssignmentResponse": {
      "members": {
        "AccountAssignmentCreationStatus": {
          "shape": "AccountAssignmentOperationStatus"
        }
      },
      "type": "structure"
    },
    "CreateApplicationAssignmentRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "PrincipalId": {
          "shape": "PrincipalId"
        },
        "PrincipalType": {
          "shape": "PrincipalType"
        }
      },
      "required": [
        "ApplicationArn",
        "PrincipalId",
        "PrincipalType"
      ],
      "type": "structure"
    },
    "CreateApplicationAssignmentResponse": {
      "members": {},
      "type": "structure"
    },
    "CreateApplicationRequest": {
      "members": {
        "ApplicationProviderArn": {
          "shape": "ApplicationProviderArn"
        },
        "ClientToken": {
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "Description": {
          "shape": "Description"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "Name": {
          "shape": "NameType"
        },
        "PortalOptions": {
          "shape": "PortalOptions"
        },
        "Status": {
          "shape": "ApplicationStatus"
        },
        "Tags": {
          "shape": "TagList"
        }
      },
      "required": [
        "ApplicationProviderArn",
        "InstanceArn",
        "Name"
      ],
      "type": "structure"
    },
    "CreateApplicationResponse": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        }
      },
      "type": "structure"
    },
    "CreateInstanceAccessControlAttributeConfigurationRequest": {
      "members": {
        "InstanceAccessControlAttributeConfiguration": {
          "shape": "InstanceAccessControlAttributeConfiguration"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        }
      },
      "required": [
        "InstanceAccessControlAttributeConfiguration",
        "InstanceArn"
      ],
      "type": "structure"
    },
    "CreateInstanceAccessControlAttributeConfigurationResponse": {
      "members": {},
      "type": "structure"
    },
    "CreateInstanceRequest": {
      "members": {
        "ClientToken": {
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "Name": {
          "shape": "NameType"
        },
        "Tags": {
          "shape": "TagList"
        }
      },
      "type": "structure"
    },
    "CreateInstanceResponse": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        }
      },
      "type": "structure"
    },
    "CreatePermissionSetRequest": {
      "members": {
        "Description": {
          "shape": "PermissionSetDescription"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "Name": {
          "shape": "PermissionSetName"
        },
        "RelayState": {
          "shape": "RelayState"
        },
        "SessionDuration": {
          "shape": "Duration"
        },
        "Tags": {
          "shape": "TagList"
        }
      },
      "required": [
        "InstanceArn",
        "Name"
      ],
      "type": "structure"
    },
    "CreatePermissionSetResponse": {
      "members": {
        "PermissionSet": {
          "shape": "PermissionSet"
        }
      },
      "type": "structure"
    },
    "CreateTrustedTokenIssuerRequest": {
      "members": {
        "ClientToken": {
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "Name": {
          "shape": "TrustedTokenIssuerName"
        },
        "Tags": {
          "shape": "TagList"
        },
        "TrustedTokenIssuerConfiguration": {
          "shape": "TrustedTokenIssuerConfiguration"
        },
        "TrustedTokenIssuerType": {
          "shape": "TrustedTokenIssuerType"
        }
      },
      "required": [
        "InstanceArn",
        "Name",
        "TrustedTokenIssuerConfiguration",
        "TrustedTokenIssuerType"
      ],
      "type": "structure"
    },
    "CreateTrustedTokenIssuerResponse": {
      "members": {
        "TrustedTokenIssuerArn": {
          "shape": "TrustedTokenIssuerArn"
        }
      },
      "type": "structure"
    },
    "CustomerManagedPolicyReference": {
      "members": {
        "Name": {
          "shape": "ManagedPolicyName"
        },
        "Path": {
          "shape": "ManagedPolicyPath"
        }
      },
      "required": [
        "Name"
      ],
      "type": "structure"
    },
    "CustomerManagedPolicyReferenceList": {
      "member": {
        "shape": "CustomerManagedPolicyReference"
      },
      "type": "list"
    },
    "Date": {
      "type": "timestamp"
    },
    "DeleteAccountAssignmentRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        },
        "PrincipalId": {
          "shape": "PrincipalId"
        },
        "PrincipalType": {
          "shape": "PrincipalType"
        },
        "TargetId": {
          "shape": "TargetId"
        },
        "TargetType": {
          "shape": "TargetType"
        }
      },
      "required": [
        "InstanceArn",
        "PermissionSetArn",
        "PrincipalId",
        "PrincipalType",
        "TargetId",
        "TargetType"
      ],
      "type": "structure"
    },
    "DeleteAccountAssignmentResponse": {
      "members": {
        "AccountAssignmentDeletionStatus": {
          "shape": "AccountAssignmentOperationStatus"
        }
      },
      "type": "structure"
    },
    "DeleteApplicationAccessScopeRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "Scope": {
          "shape": "Scope"
        }
      },
      "required": [
        "ApplicationArn",
        "Scope"
      ],
      "type": "structure"
    },
    "DeleteApplicationAssignmentRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "PrincipalId": {
          "shape": "PrincipalId"
        },
        "PrincipalType": {
          "shape": "PrincipalType"
        }
      },
      "required": [
        "ApplicationArn",
        "PrincipalId",
        "PrincipalType"
      ],
      "type": "structure"
    },
    "DeleteApplicationAssignmentResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteApplicationAuthenticationMethodRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "AuthenticationMethodType": {
          "shape": "AuthenticationMethodType"
        }
      },
      "required": [
        "ApplicationArn",
        "AuthenticationMethodType"
      ],
      "type": "structure"
    },
    "DeleteApplicationGrantRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "GrantType": {
          "shape": "GrantType"
        }
      },
      "required": [
        "ApplicationArn",
        "GrantType"
      ],
      "type": "structure"
    },
    "DeleteApplicationRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        }
      },
      "required": [
        "ApplicationArn"
      ],
      "type": "structure"
    },
    "DeleteApplicationResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteInlinePolicyFromPermissionSetRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        }
      },
      "required": [
        "InstanceArn",
        "PermissionSetArn"
      ],
      "type": "structure"
    },
    "DeleteInlinePolicyFromPermissionSetResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteInstanceAccessControlAttributeConfigurationRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        }
      },
      "required": [
        "InstanceArn"
      ],
      "type": "structure"
    },
    "DeleteInstanceAccessControlAttributeConfigurationResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteInstanceRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        }
      },
      "required": [
        "InstanceArn"
      ],
      "type": "structure"
    },
    "DeleteInstanceResponse": {
      "members": {},
      "type": "structure"
    },
    "DeletePermissionSetRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        }
      },
      "required": [
        "InstanceArn",
        "PermissionSetArn"
      ],
      "type": "structure"
    },
    "DeletePermissionSetResponse": {
      "members": {},
      "type": "structure"
    },
    "DeletePermissionsBoundaryFromPermissionSetRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        }
      },
      "required": [
        "InstanceArn",
        "PermissionSetArn"
      ],
      "type": "structure"
    },
    "DeletePermissionsBoundaryFromPermissionSetResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteTrustedTokenIssuerRequest": {
      "members": {
        "TrustedTokenIssuerArn": {
          "shape": "TrustedTokenIssuerArn"
        }
      },
      "required": [
        "TrustedTokenIssuerArn"
      ],
      "type": "structure"
    },
    "DeleteTrustedTokenIssuerResponse": {
      "members": {},
      "type": "structure"
    },
    "DescribeAccountAssignmentCreationStatusRequest": {
      "members": {
        "AccountAssignmentCreationRequestId": {
          "shape": "UUId"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        }
      },
      "required": [
        "AccountAssignmentCreationRequestId",
        "InstanceArn"
      ],
      "type": "structure"
    },
    "DescribeAccountAssignmentCreationStatusResponse": {
      "members": {
        "AccountAssignmentCreationStatus": {
          "shape": "AccountAssignmentOperationStatus"
        }
      },
      "type": "structure"
    },
    "DescribeAccountAssignmentDeletionStatusRequest": {
      "members": {
        "AccountAssignmentDeletionRequestId": {
          "shape": "UUId"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        }
      },
      "required": [
        "AccountAssignmentDeletionRequestId",
        "InstanceArn"
      ],
      "type": "structure"
    },
    "DescribeAccountAssignmentDeletionStatusResponse": {
      "members": {
        "AccountAssignmentDeletionStatus": {
          "shape": "AccountAssignmentOperationStatus"
        }
      },
      "type": "structure"
    },
    "DescribeApplicationAssignmentRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "PrincipalId": {
          "shape": "PrincipalId"
        },
        "PrincipalType": {
          "shape": "PrincipalType"
        }
      },
      "required": [
        "ApplicationArn",
        "PrincipalId",
        "PrincipalType"
      ],
      "type": "structure"
    },
    "DescribeApplicationAssignmentResponse": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "PrincipalId": {
          "shape": "PrincipalId"
        },
        "PrincipalType": {
          "shape": "PrincipalType"
        }
      },
      "type": "structure"
    },
    "DescribeApplicationProviderRequest": {
      "members": {
        "ApplicationProviderArn": {
          "shape": "ApplicationProviderArn"
        }
      },
      "required": [
        "ApplicationProviderArn"
      ],
      "type": "structure"
    },
    "DescribeApplicationProviderResponse": {
      "members": {
        "ApplicationProviderArn": {
          "shape": "ApplicationProviderArn"
        },
        "DisplayData": {
          "shape": "DisplayData"
        },
        "FederationProtocol": {
          "shape": "FederationProtocol"
        },
        "ResourceServerConfig": {
          "shape": "ResourceServerConfig"
        }
      },
      "required": [
        "ApplicationProviderArn"
      ],
      "type": "structure"
    },
    "DescribeApplicationRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        }
      },
      "required": [
        "ApplicationArn"
      ],
      "type": "structure"
    },
    "DescribeApplicationResponse": {
      "members": {
        "ApplicationAccount": {
          "shape": "AccountId"
        },
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "ApplicationProviderArn": {
          "shape": "ApplicationProviderArn"
        },
        "CreatedDate": {
          "shape": "Date"
        },
        "Description": {
          "shape": "Description"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "Name": {
          "shape": "NameType"
        },
        "PortalOptions": {
          "shape": "PortalOptions"
        },
        "Status": {
          "shape": "ApplicationStatus"
        }
      },
      "type": "structure"
    },
    "DescribeInstanceAccessControlAttributeConfigurationRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        }
      },
      "required": [
        "InstanceArn"
      ],
      "type": "structure"
    },
    "DescribeInstanceAccessControlAttributeConfigurationResponse": {
      "members": {
        "InstanceAccessControlAttributeConfiguration": {
          "shape": "InstanceAccessControlAttributeConfiguration"
        },
        "Status": {
          "shape": "InstanceAccessControlAttributeConfigurationStatus"
        },
        "StatusReason": {
          "shape": "InstanceAccessControlAttributeConfigurationStatusReason"
        }
      },
      "type": "structure"
    },
    "DescribeInstanceRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        }
      },
      "required": [
        "InstanceArn"
      ],
      "type": "structure"
    },
    "DescribeInstanceResponse": {
      "members": {
        "CreatedDate": {
          "shape": "Date"
        },
        "IdentityStoreId": {
          "shape": "Id"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "Name": {
          "shape": "NameType"
        },
        "OwnerAccountId": {
          "shape": "AccountId"
        },
        "Status": {
          "shape": "InstanceStatus"
        }
      },
      "type": "structure"
    },
    "DescribePermissionSetProvisioningStatusRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "ProvisionPermissionSetRequestId": {
          "shape": "UUId"
        }
      },
      "required": [
        "InstanceArn",
        "ProvisionPermissionSetRequestId"
      ],
      "type": "structure"
    },
    "DescribePermissionSetProvisioningStatusResponse": {
      "members": {
        "PermissionSetProvisioningStatus": {
          "shape": "PermissionSetProvisioningStatus"
        }
      },
      "type": "structure"
    },
    "DescribePermissionSetRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        }
      },
      "required": [
        "InstanceArn",
        "PermissionSetArn"
      ],
      "type": "structure"
    },
    "DescribePermissionSetResponse": {
      "members": {
        "PermissionSet": {
          "shape": "PermissionSet"
        }
      },
      "type": "structure"
    },
    "DescribeTrustedTokenIssuerRequest": {
      "members": {
        "TrustedTokenIssuerArn": {
          "shape": "TrustedTokenIssuerArn"
        }
      },
      "required": [
        "TrustedTokenIssuerArn"
      ],
      "type": "structure"
    },
    "DescribeTrustedTokenIssuerResponse": {
      "members": {
        "Name": {
          "shape": "TrustedTokenIssuerName"
        },
        "TrustedTokenIssuerArn": {
          "shape": "TrustedTokenIssuerArn"
        },
        "TrustedTokenIssuerConfiguration": {
          "shape": "TrustedTokenIssuerConfiguration"
        },
        "TrustedTokenIssuerType": {
          "shape": "TrustedTokenIssuerType"
        }
      },
      "type": "structure"
    },
    "Description": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "DetachCustomerManagedPolicyReferenceFromPermissionSetRequest": {
      "members": {
        "CustomerManagedPolicyReference": {
          "shape": "CustomerManagedPolicyReference"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        }
      },
      "required": [
        "CustomerManagedPolicyReference",
        "InstanceArn",
        "PermissionSetArn"
      ],
      "type": "structure"
    },
    "DetachCustomerManagedPolicyReferenceFromPermissionSetResponse": {
      "members": {},
      "type": "structure"
    },
    "DetachManagedPolicyFromPermissionSetRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "ManagedPolicyArn": {
          "shape": "ManagedPolicyArn"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        }
      },
      "required": [
        "InstanceArn",
        "ManagedPolicyArn",
        "PermissionSetArn"
      ],
      "type": "structure"
    },
    "DetachManagedPolicyFromPermissionSetResponse": {
      "members": {},
      "type": "structure"
    },
    "DisplayData": {
      "members": {
        "Description": {
          "shape": "Description"
        },
        "DisplayName": {
          "shape": "Name"
        },
        "IconUrl": {
          "shape": "IconUrl"
        }
      },
      "type": "structure"
    },
    "Duration": {
      "max": 100,
      "min": 1,
      "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
      "type": "string"
    },
    "FederationProtocol": {
      "enum": [
        "SAML",
        "OAUTH"
      ],
      "type": "string"
    },
    "GetApplicationAccessScopeRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "Scope": {
          "shape": "Scope"
        }
      },
      "required": [
        "ApplicationArn",
        "Scope"
      ],
      "type": "structure"
    },
    "GetApplicationAccessScopeResponse": {
      "members": {
        "AuthorizedTargets": {
          "shape": "ScopeTargets"
        },
        "Scope": {
          "shape": "Scope"
        }
      },
      "required": [
        "Scope"
      ],
      "type": "structure"
    },
    "GetApplicationAssignmentConfigurationRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        }
      },
      "required": [
        "ApplicationArn"
      ],
      "type": "structure"
    },
    "GetApplicationAssignmentConfigurationResponse": {
      "members": {
        "AssignmentRequired": {
          "shape": "AssignmentRequired"
        }
      },
      "required": [
        "AssignmentRequired"
      ],
      "type": "structure"
    },
    "GetApplicationAuthenticationMethodRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "AuthenticationMethodType": {
          "shape": "AuthenticationMethodType"
        }
      },
      "required": [
        "ApplicationArn",
        "AuthenticationMethodType"
      ],
      "type": "structure"
    },
    "GetApplicationAuthenticationMethodResponse": {
      "members": {
        "AuthenticationMethod": {
          "shape": "AuthenticationMethod"
        }
      },
      "type": "structure"
    },
    "GetApplicationGrantRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "GrantType": {
          "shape": "GrantType"
        }
      },
      "required": [
        "ApplicationArn",
        "GrantType"
      ],
      "type": "structure"
    },
    "GetApplicationGrantResponse": {
      "members": {
        "Grant": {
          "shape": "Grant"
        }
      },
      "required": [
        "Grant"
      ],
      "type": "structure"
    },
    "GetInlinePolicyForPermissionSetRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        }
      },
      "required": [
        "InstanceArn",
        "PermissionSetArn"
      ],
      "type": "structure"
    },
    "GetInlinePolicyForPermissionSetResponse": {
      "members": {
        "InlinePolicy": {
          "shape": "PermissionSetPolicyDocument"
        }
      },
      "type": "structure"
    },
    "GetPermissionsBoundaryForPermissionSetRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        }
      },
      "required": [
        "InstanceArn",
        "PermissionSetArn"
      ],
      "type": "structure"
    },
    "GetPermissionsBoundaryForPermissionSetResponse": {
      "members": {
        "PermissionsBoundary": {
          "shape": "PermissionsBoundary"
        }
      },
      "type": "structure"
    },
    "Grant": {
      "members": {
        "AuthorizationCode": {
          "shape": "AuthorizationCodeGrant"
        },
        "JwtBearer": {
          "shape": "JwtBearerGrant"
        },
        "RefreshToken": {
          "shape": "RefreshTokenGrant"
        },
        "TokenExchange": {
          "shape": "TokenExchangeGrant"
        }
      },
      "type": "structure",
      "union": true
    },
    "GrantItem": {
      "members": {
        "Grant": {
          "shape": "Grant"
        },
        "GrantType": {
          "shape": "GrantType"
        }
      },
      "required": [
        "Grant",
        "GrantType"
      ],
      "type": "structure"
    },
    "GrantType": {
      "enum": [
        "authorization_code",
        "refresh_token",
        "urn:ietf:params:oauth:grant-type:jwt-bearer",
        "urn:ietf:params:oauth:grant-type:token-exchange"
      ],
      "type": "string"
    },
    "Grants": {
      "member": {
        "shape": "GrantItem"
      },
      "type": "list"
    },
    "IconUrl": {
      "max": 768,
      "min": 1,
      "pattern": "^(http|https):\\/\\/.*$",
      "type": "string"
    },
    "Id": {
      "max": 64,
      "min": 1,
      "pattern": "^[a-zA-Z0-9-]*$",
      "type": "string"
    },
    "InstanceAccessControlAttributeConfiguration": {
      "members": {
        "AccessControlAttributes": {
          "shape": "AccessControlAttributeList"
        }
      },
      "required": [
        "AccessControlAttributes"
      ],
      "type": "structure"
    },
    "InstanceAccessControlAttributeConfigurationStatus": {
      "enum": [
        "ENABLED",
        "CREATION_IN_PROGRESS",
        "CREATION_FAILED"
      ],
      "type": "string"
    },
    "InstanceAccessControlAttributeConfigurationStatusReason": {
      "type": "string"
    },
    "InstanceArn": {
      "max": 1224,
      "min": 10,
      "pattern": "^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}$",
      "type": "string"
    },
    "InstanceList": {
      "max": 10,
      "member": {
        "shape": "InstanceMetadata"
      },
      "min": 0,
      "type": "list"
    },
    "InstanceMetadata": {
      "members": {
        "CreatedDate": {
          "shape": "Date"
        },
        "IdentityStoreId": {
          "shape": "Id"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "Name": {
          "shape": "NameType"
        },
        "OwnerAccountId": {
          "shape": "AccountId"
        },
        "Status": {
          "shape": "InstanceStatus"
        }
      },
      "type": "structure"
    },
    "InstanceStatus": {
      "enum": [
        "CREATE_IN_PROGRESS",
        "DELETE_IN_PROGRESS",
        "ACTIVE"
      ],
      "type": "string"
    },
    "InternalFailureMessage": {
      "type": "string"
    },
    "InternalServerException": {
      "exception": true,
      "fault": true,
      "members": {
        "Message": {
          "shape": "InternalFailureMessage"
        }
      },
      "type": "structure"
    },
    "JMESPath": {
      "max": 255,
      "min": 1,
      "pattern": "^\\p{L}+(?:\\.\\p{L}+){0,2}$",
      "type": "string"
    },
    "JwksRetrievalOption": {
      "enum": [
        "OPEN_ID_DISCOVERY"
      ],
      "type": "string"
    },
    "JwtBearerGrant": {
      "members": {
        "AuthorizedTokenIssuers": {
          "shape": "AuthorizedTokenIssuers"
        }
      },
      "type": "structure"
    },
    "ListAccountAssignmentCreationStatusRequest": {
      "members": {
        "Filter": {
          "shape": "OperationStatusFilter"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "required": [
        "InstanceArn"
      ],
      "type": "structure"
    },
    "ListAccountAssignmentCreationStatusResponse": {
      "members": {
        "AccountAssignmentsCreationStatus": {
          "shape": "AccountAssignmentOperationStatusList"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListAccountAssignmentDeletionStatusRequest": {
      "members": {
        "Filter": {
          "shape": "OperationStatusFilter"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "required": [
        "InstanceArn"
      ],
      "type": "structure"
    },
    "ListAccountAssignmentDeletionStatusResponse": {
      "members": {
        "AccountAssignmentsDeletionStatus": {
          "shape": "AccountAssignmentOperationStatusList"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListAccountAssignmentsFilter": {
      "members": {
        "AccountId": {
          "shape": "AccountId"
        }
      },
      "type": "structure"
    },
    "ListAccountAssignmentsForPrincipalRequest": {
      "members": {
        "Filter": {
          "shape": "ListAccountAssignmentsFilter"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "Token"
        },
        "PrincipalId": {
          "shape": "PrincipalId"
        },
        "PrincipalType": {
          "shape": "PrincipalType"
        }
      },
      "required": [
        "InstanceArn",
        "PrincipalId",
        "PrincipalType"
      ],
      "type": "structure"
    },
    "ListAccountAssignmentsForPrincipalResponse": {
      "members": {
        "AccountAssignments": {
          "shape": "AccountAssignmentListForPrincipal"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListAccountAssignmentsRequest": {
      "members": {
        "AccountId": {
          "shape": "TargetId"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "Token"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        }
      },
      "required": [
        "AccountId",
        "InstanceArn",
        "PermissionSetArn"
      ],
      "type": "structure"
    },
    "ListAccountAssignmentsResponse": {
      "members": {
        "AccountAssignments": {
          "shape": "AccountAssignmentList"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListAccountsForProvisionedPermissionSetRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "Token"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        },
        "ProvisioningStatus": {
          "shape": "ProvisioningStatus"
        }
      },
      "required": [
        "InstanceArn",
        "PermissionSetArn"
      ],
      "type": "structure"
    },
    "ListAccountsForProvisionedPermissionSetResponse": {
      "members": {
        "AccountIds": {
          "shape": "AccountList"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListApplicationAccessScopesRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "MaxResults": {
          "shape": "ListApplicationAccessScopesRequestMaxResultsInteger"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "required": [
        "ApplicationArn"
      ],
      "type": "structure"
    },
    "ListApplicationAccessScopesRequestMaxResultsInteger": {
      "box": true,
      "max": 10,
      "min": 1,
      "type": "integer"
    },
    "ListApplicationAccessScopesResponse": {
      "members": {
        "NextToken": {
          "shape": "Token"
        },
        "Scopes": {
          "shape": "Scopes"
        }
      },
      "required": [
        "Scopes"
      ],
      "type": "structure"
    },
    "ListApplicationAssignmentsFilter": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        }
      },
      "type": "structure"
    },
    "ListApplicationAssignmentsForPrincipalRequest": {
      "members": {
        "Filter": {
          "shape": "ListApplicationAssignmentsFilter"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "Token"
        },
        "PrincipalId": {
          "shape": "PrincipalId"
        },
        "PrincipalType": {
          "shape": "PrincipalType"
        }
      },
      "required": [
        "InstanceArn",
        "PrincipalId",
        "PrincipalType"
      ],
      "type": "structure"
    },
    "ListApplicationAssignmentsForPrincipalResponse": {
      "members": {
        "ApplicationAssignments": {
          "shape": "ApplicationAssignmentListForPrincipal"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListApplicationAssignmentsRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "required": [
        "ApplicationArn"
      ],
      "type": "structure"
    },
    "ListApplicationAssignmentsResponse": {
      "members": {
        "ApplicationAssignments": {
          "shape": "ApplicationAssignmentsList"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListApplicationAuthenticationMethodsRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "required": [
        "ApplicationArn"
      ],
      "type": "structure"
    },
    "ListApplicationAuthenticationMethodsResponse": {
      "members": {
        "AuthenticationMethods": {
          "shape": "AuthenticationMethods"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListApplicationGrantsRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "required": [
        "ApplicationArn"
      ],
      "type": "structure"
    },
    "ListApplicationGrantsResponse": {
      "members": {
        "Grants": {
          "shape": "Grants"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "required": [
        "Grants"
      ],
      "type": "structure"
    },
    "ListApplicationProvidersRequest": {
      "members": {
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListApplicationProvidersResponse": {
      "members": {
        "ApplicationProviders": {
          "shape": "ApplicationProviderList"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListApplicationsFilter": {
      "members": {
        "ApplicationAccount": {
          "shape": "AccountId"
        },
        "ApplicationProvider": {
          "shape": "ApplicationProviderArn"
        }
      },
      "type": "structure"
    },
    "ListApplicationsRequest": {
      "members": {
        "Filter": {
          "shape": "ListApplicationsFilter"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "required": [
        "InstanceArn"
      ],
      "type": "structure"
    },
    "ListApplicationsResponse": {
      "members": {
        "Applications": {
          "shape": "ApplicationList"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListCustomerManagedPolicyReferencesInPermissionSetRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "Token"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        }
      },
      "required": [
        "InstanceArn",
        "PermissionSetArn"
      ],
      "type": "structure"
    },
    "ListCustomerManagedPolicyReferencesInPermissionSetResponse": {
      "members": {
        "CustomerManagedPolicyReferences": {
          "shape": "CustomerManagedPolicyReferenceList"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListInstancesRequest": {
      "members": {
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListInstancesResponse": {
      "members": {
        "Instances": {
          "shape": "InstanceList"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListManagedPoliciesInPermissionSetRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "Token"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        }
      },
      "required": [
        "InstanceArn",
        "PermissionSetArn"
      ],
      "type": "structure"
    },
    "ListManagedPoliciesInPermissionSetResponse": {
      "members": {
        "AttachedManagedPolicies": {
          "shape": "AttachedManagedPolicyList"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListPermissionSetProvisioningStatusRequest": {
      "members": {
        "Filter": {
          "shape": "OperationStatusFilter"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "required": [
        "InstanceArn"
      ],
      "type": "structure"
    },
    "ListPermissionSetProvisioningStatusResponse": {
      "members": {
        "NextToken": {
          "shape": "Token"
        },
        "PermissionSetsProvisioningStatus": {
          "shape": "PermissionSetProvisioningStatusList"
        }
      },
      "type": "structure"
    },
    "ListPermissionSetsProvisionedToAccountRequest": {
      "members": {
        "AccountId": {
          "shape": "AccountId"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "Token"
        },
        "ProvisioningStatus": {
          "shape": "ProvisioningStatus"
        }
      },
      "required": [
        "AccountId",
        "InstanceArn"
      ],
      "type": "structure"
    },
    "ListPermissionSetsProvisionedToAccountResponse": {
      "members": {
        "NextToken": {
          "shape": "Token"
        },
        "PermissionSets": {
          "shape": "PermissionSetList"
        }
      },
      "type": "structure"
    },
    "ListPermissionSetsRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "required": [
        "InstanceArn"
      ],
      "type": "structure"
    },
    "ListPermissionSetsResponse": {
      "members": {
        "NextToken": {
          "shape": "Token"
        },
        "PermissionSets": {
          "shape": "PermissionSetList"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "NextToken": {
          "shape": "Token"
        },
        "ResourceArn": {
          "shape": "TaggableResourceArn"
        }
      },
      "required": [
        "ResourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "NextToken": {
          "shape": "Token"
        },
        "Tags": {
          "shape": "TagList"
        }
      },
      "type": "structure"
    },
    "ListTrustedTokenIssuersRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "Token"
        }
      },
      "required": [
        "InstanceArn"
      ],
      "type": "structure"
    },
    "ListTrustedTokenIssuersResponse": {
      "members": {
        "NextToken": {
          "shape": "Token"
        },
        "TrustedTokenIssuers": {
          "shape": "TrustedTokenIssuerList"
        }
      },
      "type": "structure"
    },
    "ManagedPolicyArn": {
      "max": 2048,
      "min": 20,
      "pattern": "^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):iam::aws:policy/[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]+$",
      "type": "string"
    },
    "ManagedPolicyName": {
      "max": 128,
      "min": 1,
      "pattern": "^[\\w+=,.@-]+$",
      "type": "string"
    },
    "ManagedPolicyPath": {
      "max": 512,
      "min": 1,
      "pattern": "^((/[A-Za-z0-9\\.,\\+@=_-]+)*)/$",
      "type": "string"
    },
    "MaxResults": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "Name": {
      "max": 100,
      "min": 1,
      "type": "string"
    },
    "NameType": {
      "max": 255,
      "min": 0,
      "pattern": "^[\\w+=,.@-]+$",
      "type": "string"
    },
    "OidcJwtConfiguration": {
      "members": {
        "ClaimAttributePath": {
          "shape": "ClaimAttributePath"
        },
        "IdentityStoreAttributePath": {
          "shape": "JMESPath"
        },
        "IssuerUrl": {
          "shape": "TrustedTokenIssuerUrl"
        },
        "JwksRetrievalOption": {
          "shape": "JwksRetrievalOption"
        }
      },
      "required": [
        "ClaimAttributePath",
        "IdentityStoreAttributePath",
        "IssuerUrl",
        "JwksRetrievalOption"
      ],
      "type": "structure"
    },
    "OidcJwtUpdateConfiguration": {
      "members": {
        "ClaimAttributePath": {
          "shape": "ClaimAttributePath"
        },
        "IdentityStoreAttributePath": {
          "shape": "JMESPath"
        },
        "JwksRetrievalOption": {
          "shape": "JwksRetrievalOption"
        }
      },
      "type": "structure"
    },
    "OperationStatusFilter": {
      "members": {
        "Status": {
          "shape": "StatusValues"
        }
      },
      "type": "structure"
    },
    "PermissionSet": {
      "members": {
        "CreatedDate": {
          "shape": "Date"
        },
        "Description": {
          "shape": "PermissionSetDescription"
        },
        "Name": {
          "shape": "PermissionSetName"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        },
        "RelayState": {
          "shape": "RelayState"
        },
        "SessionDuration": {
          "shape": "Duration"
        }
      },
      "type": "structure"
    },
    "PermissionSetArn": {
      "max": 1224,
      "min": 10,
      "pattern": "^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::permissionSet/(sso)?ins-[a-zA-Z0-9-.]{16}/ps-[a-zA-Z0-9-./]{16}$",
      "type": "string"
    },
    "PermissionSetDescription": {
      "max": 700,
      "min": 1,
      "pattern": "^[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u00A1-\\u00FF]*$",
      "type": "string"
    },
    "PermissionSetList": {
      "member": {
        "shape": "PermissionSetArn"
      },
      "type": "list"
    },
    "PermissionSetName": {
      "max": 32,
      "min": 1,
      "pattern": "^[\\w+=,.@-]+$",
      "type": "string"
    },
    "PermissionSetPolicyDocument": {
      "max": 32768,
      "min": 1,
      "pattern": "^[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+$",
      "type": "string"
    },
    "PermissionSetProvisioningStatus": {
      "members": {
        "AccountId": {
          "shape": "AccountId"
        },
        "CreatedDate": {
          "shape": "Date"
        },
        "FailureReason": {
          "shape": "Reason"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        },
        "RequestId": {
          "shape": "UUId"
        },
        "Status": {
          "shape": "StatusValues"
        }
      },
      "type": "structure"
    },
    "PermissionSetProvisioningStatusList": {
      "member": {
        "shape": "PermissionSetProvisioningStatusMetadata"
      },
      "type": "list"
    },
    "PermissionSetProvisioningStatusMetadata": {
      "members": {
        "CreatedDate": {
          "shape": "Date"
        },
        "RequestId": {
          "shape": "UUId"
        },
        "Status": {
          "shape": "StatusValues"
        }
      },
      "type": "structure"
    },
    "PermissionsBoundary": {
      "members": {
        "CustomerManagedPolicyReference": {
          "shape": "CustomerManagedPolicyReference"
        },
        "ManagedPolicyArn": {
          "shape": "ManagedPolicyArn"
        }
      },
      "type": "structure"
    },
    "PortalOptions": {
      "members": {
        "SignInOptions": {
          "shape": "SignInOptions"
        },
        "Visibility": {
          "shape": "ApplicationVisibility"
        }
      },
      "type": "structure"
    },
    "PrincipalId": {
      "max": 47,
      "min": 1,
      "pattern": "^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$",
      "type": "string"
    },
    "PrincipalType": {
      "enum": [
        "USER",
        "GROUP"
      ],
      "type": "string"
    },
    "ProvisionPermissionSetRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        },
        "TargetId": {
          "shape": "TargetId"
        },
        "TargetType": {
          "shape": "ProvisionTargetType"
        }
      },
      "required": [
        "InstanceArn",
        "PermissionSetArn",
        "TargetType"
      ],
      "type": "structure"
    },
    "ProvisionPermissionSetResponse": {
      "members": {
        "PermissionSetProvisioningStatus": {
          "shape": "PermissionSetProvisioningStatus"
        }
      },
      "type": "structure"
    },
    "ProvisionTargetType": {
      "enum": [
        "AWS_ACCOUNT",
        "ALL_PROVISIONED_ACCOUNTS"
      ],
      "type": "string"
    },
    "ProvisioningStatus": {
      "enum": [
        "LATEST_PERMISSION_SET_PROVISIONED",
        "LATEST_PERMISSION_SET_NOT_PROVISIONED"
      ],
      "type": "string"
    },
    "PutApplicationAccessScopeRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "AuthorizedTargets": {
          "shape": "ScopeTargets"
        },
        "Scope": {
          "shape": "Scope"
        }
      },
      "required": [
        "ApplicationArn",
        "Scope"
      ],
      "type": "structure"
    },
    "PutApplicationAssignmentConfigurationRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "AssignmentRequired": {
          "shape": "AssignmentRequired"
        }
      },
      "required": [
        "ApplicationArn",
        "AssignmentRequired"
      ],
      "type": "structure"
    },
    "PutApplicationAssignmentConfigurationResponse": {
      "members": {},
      "type": "structure"
    },
    "PutApplicationAuthenticationMethodRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "AuthenticationMethod": {
          "shape": "AuthenticationMethod"
        },
        "AuthenticationMethodType": {
          "shape": "AuthenticationMethodType"
        }
      },
      "required": [
        "ApplicationArn",
        "AuthenticationMethod",
        "AuthenticationMethodType"
      ],
      "type": "structure"
    },
    "PutApplicationGrantRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "Grant": {
          "shape": "Grant"
        },
        "GrantType": {
          "shape": "GrantType"
        }
      },
      "required": [
        "ApplicationArn",
        "Grant",
        "GrantType"
      ],
      "type": "structure"
    },
    "PutInlinePolicyToPermissionSetRequest": {
      "members": {
        "InlinePolicy": {
          "shape": "PermissionSetPolicyDocument"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        }
      },
      "required": [
        "InlinePolicy",
        "InstanceArn",
        "PermissionSetArn"
      ],
      "type": "structure"
    },
    "PutInlinePolicyToPermissionSetResponse": {
      "members": {},
      "type": "structure"
    },
    "PutPermissionsBoundaryToPermissionSetRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        },
        "PermissionsBoundary": {
          "shape": "PermissionsBoundary"
        }
      },
      "required": [
        "InstanceArn",
        "PermissionSetArn",
        "PermissionsBoundary"
      ],
      "type": "structure"
    },
    "PutPermissionsBoundaryToPermissionSetResponse": {
      "members": {},
      "type": "structure"
    },
    "Reason": {
      "pattern": "^[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*$",
      "type": "string"
    },
    "RedirectUris": {
      "max": 10,
      "member": {
        "shape": "URI"
      },
      "min": 1,
      "type": "list"
    },
    "RefreshTokenGrant": {
      "members": {},
      "type": "structure"
    },
    "RelayState": {
      "max": 240,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\u0026$@#\\\\\\/%?=~\\-_'\"|!:,.;*+\\[\\]\\ \\(\\)\\{\\}]+$",
      "type": "string"
    },
    "ResourceNotFoundException": {
      "exception": true,
      "members": {
        "Message": {
          "shape": "ResourceNotFoundMessage"
        }
      },
      "type": "structure"
    },
    "ResourceNotFoundMessage": {
      "type": "string"
    },
    "ResourceServerConfig": {
      "members": {
        "Scopes": {
          "shape": "ResourceServerScopes"
        }
      },
      "type": "structure"
    },
    "ResourceServerScope": {
      "max": 80,
      "min": 1,
      "pattern": "^[^:=\\-\\.\\s][0-9a-zA-Z_:\\-\\.]+$",
      "type": "string"
    },
    "ResourceServerScopeDetails": {
      "members": {
        "DetailedTitle": {
          "shape": "Description"
        },
        "LongDescription": {
          "shape": "Description"
        }
      },
      "type": "structure"
    },
    "ResourceServerScopes": {
      "key": {
        "shape": "ResourceServerScope"
      },
      "type": "map",
      "value": {
        "shape": "ResourceServerScopeDetails"
      }
    },
    "Scope": {
      "pattern": "^([A-Za-z0-9_]{1,50})(:[A-Za-z0-9_]{1,50}){0,1}(:[A-Za-z0-9_]{1,50}){0,1}$",
      "type": "string"
    },
    "ScopeDetails": {
      "members": {
        "AuthorizedTargets": {
          "shape": "ScopeTargets"
        },
        "Scope": {
          "shape": "Scope"
        }
      },
      "required": [
        "Scope"
      ],
      "type": "structure"
    },
    "ScopeTarget": {
      "max": 100,
      "min": 1,
      "pattern": "^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso::(\\d{12}:application/(sso)?ins-[a-zA-Z0-9-.]{16}/apl-[a-zA-Z0-9]{16}|:instance/(sso)?ins-[a-zA-Z0-9-.]{16})$",
      "type": "string"
    },
    "ScopeTargets": {
      "max": 10,
      "member": {
        "shape": "ScopeTarget"
      },
      "min": 1,
      "type": "list"
    },
    "Scopes": {
      "max": 10,
      "member": {
        "shape": "ScopeDetails"
      },
      "min": 0,
      "type": "list"
    },
    "ServiceQuotaExceededException": {
      "exception": true,
      "members": {
        "Message": {
          "shape": "ServiceQuotaExceededMessage"
        }
      },
      "type": "structure"
    },
    "ServiceQuotaExceededMessage": {
      "type": "string"
    },
    "SignInOptions": {
      "members": {
        "ApplicationUrl": {
          "shape": "ApplicationUrl"
        },
        "Origin": {
          "shape": "SignInOrigin"
        }
      },
      "required": [
        "Origin"
      ],
      "type": "structure"
    },
    "SignInOrigin": {
      "enum": [
        "IDENTITY_CENTER",
        "APPLICATION"
      ],
      "type": "string"
    },
    "StatusValues": {
      "enum": [
        "IN_PROGRESS",
        "FAILED",
        "SUCCEEDED"
      ],
      "type": "string"
    },
    "Tag": {
      "members": {
        "Key": {
          "shape": "TagKey"
        },
        "Value": {
          "shape": "TagValue"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "structure"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string"
    },
    "TagKeyList": {
      "max": 75,
      "member": {
        "shape": "TagKey"
      },
      "min": 1,
      "type": "list"
    },
    "TagList": {
      "max": 75,
      "member": {
        "shape": "Tag"
      },
      "min": 0,
      "type": "list"
    },
    "TagResourceRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "ResourceArn": {
          "shape": "TaggableResourceArn"
        },
        "Tags": {
          "shape": "TagList"
        }
      },
      "required": [
        "ResourceArn",
        "Tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 0,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string"
    },
    "TaggableResourceArn": {
      "max": 2048,
      "min": 10,
      "pattern": "^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso::((:instance/(sso)?ins-[a-zA-Z0-9-.]{16})|(:permissionSet/(sso)?ins-[a-zA-Z0-9-.]{16}/ps-[a-zA-Z0-9-./]{16})|(\\d{12}:application/(sso)?ins-[a-zA-Z0-9-.]{16}/apl-[a-zA-Z0-9]{16})|(\\d{12}:trustedTokenIssuer/(sso)?ins-[a-zA-Z0-9-.]{16}/tti-[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}))$",
      "type": "string"
    },
    "TargetId": {
      "max": 12,
      "min": 12,
      "pattern": "^\\d{12}$",
      "type": "string"
    },
    "TargetType": {
      "enum": [
        "AWS_ACCOUNT"
      ],
      "type": "string"
    },
    "ThrottlingException": {
      "exception": true,
      "members": {
        "Message": {
          "shape": "ThrottlingExceptionMessage"
        }
      },
      "type": "structure"
    },
    "ThrottlingExceptionMessage": {
      "type": "string"
    },
    "Token": {
      "max": 2048,
      "min": 0,
      "pattern": "^[-a-zA-Z0-9+=/_]*$",
      "type": "string"
    },
    "TokenExchangeGrant": {
      "members": {},
      "type": "structure"
    },
    "TokenIssuerAudience": {
      "max": 512,
      "min": 1,
      "type": "string"
    },
    "TokenIssuerAudiences": {
      "max": 10,
      "member": {
        "shape": "TokenIssuerAudience"
      },
      "min": 1,
      "type": "list"
    },
    "TrustedTokenIssuerArn": {
      "max": 1224,
      "min": 10,
      "pattern": "^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso::\\d{12}:trustedTokenIssuer/(sso)?ins-[a-zA-Z0-9-.]{16}/tti-[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
      "type": "string"
    },
    "TrustedTokenIssuerConfiguration": {
      "members": {
        "OidcJwtConfiguration": {
          "shape": "OidcJwtConfiguration"
        }
      },
      "type": "structure",
      "union": true
    },
    "TrustedTokenIssuerList": {
      "member": {
        "shape": "TrustedTokenIssuerMetadata"
      },
      "type": "list"
    },
    "TrustedTokenIssuerMetadata": {
      "members": {
        "Name": {
          "shape": "TrustedTokenIssuerName"
        },
        "TrustedTokenIssuerArn": {
          "shape": "TrustedTokenIssuerArn"
        },
        "TrustedTokenIssuerType": {
          "shape": "TrustedTokenIssuerType"
        }
      },
      "type": "structure"
    },
    "TrustedTokenIssuerName": {
      "max": 255,
      "min": 1,
      "pattern": "^[\\w+=,.@-]+$",
      "type": "string"
    },
    "TrustedTokenIssuerType": {
      "enum": [
        "OIDC_JWT"
      ],
      "type": "string"
    },
    "TrustedTokenIssuerUpdateConfiguration": {
      "members": {
        "OidcJwtConfiguration": {
          "shape": "OidcJwtUpdateConfiguration"
        }
      },
      "type": "structure",
      "union": true
    },
    "TrustedTokenIssuerUrl": {
      "max": 512,
      "min": 1,
      "pattern": "^https?:\\/\\/[-a-zA-Z0-9+\u0026@\\/%=~_|!:,.;]*[-a-zA-Z0-9+\u0026@\\/%=~_|]$",
      "type": "string"
    },
    "URI": {
      "type": "string"
    },
    "UUId": {
      "max": 36,
      "min": 36,
      "pattern": "^\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b$",
      "type": "string"
    },
    "UntagResourceRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "ResourceArn": {
          "shape": "TaggableResourceArn"
        },
        "TagKeys": {
          "shape": "TagKeyList"
        }
      },
      "required": [
        "ResourceArn",
        "TagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateApplicationPortalOptions": {
      "members": {
        "SignInOptions": {
          "shape": "SignInOptions"
        }
      },
      "type": "structure"
    },
    "UpdateApplicationRequest": {
      "members": {
        "ApplicationArn": {
          "shape": "ApplicationArn"
        },
        "Description": {
          "shape": "Description"
        },
        "Name": {
          "shape": "NameType"
        },
        "PortalOptions": {
          "shape": "UpdateApplicationPortalOptions"
        },
        "Status": {
          "shape": "ApplicationStatus"
        }
      },
      "required": [
        "ApplicationArn"
      ],
      "type": "structure"
    },
    "UpdateApplicationResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateInstanceAccessControlAttributeConfigurationRequest": {
      "members": {
        "InstanceAccessControlAttributeConfiguration": {
          "shape": "InstanceAccessControlAttributeConfiguration"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        }
      },
      "required": [
        "InstanceAccessControlAttributeConfiguration",
        "InstanceArn"
      ],
      "type": "structure"
    },
    "UpdateInstanceAccessControlAttributeConfigurationResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateInstanceRequest": {
      "members": {
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "Name": {
          "shape": "NameType"
        }
      },
      "required": [
        "InstanceArn",
        "Name"
      ],
      "type": "structure"
    },
    "UpdateInstanceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdatePermissionSetRequest": {
      "members": {
        "Description": {
          "shape": "PermissionSetDescription"
        },
        "InstanceArn": {
          "shape": "InstanceArn"
        },
        "PermissionSetArn": {
          "shape": "PermissionSetArn"
        },
        "RelayState": {
          "shape": "RelayState"
        },
        "SessionDuration": {
          "shape": "Duration"
        }
      },
      "required": [
        "InstanceArn",
        "PermissionSetArn"
      ],
      "type": "structure"
    },
    "UpdatePermissionSetResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateTrustedTokenIssuerRequest": {
      "members": {
        "Name": {
          "shape": "TrustedTokenIssuerName"
        },
        "TrustedTokenIssuerArn": {
          "shape": "TrustedTokenIssuerArn"
        },
        "TrustedTokenIssuerConfiguration": {
          "shape": "TrustedTokenIssuerUpdateConfiguration"
        }
      },
      "required": [
        "TrustedTokenIssuerArn"
      ],
      "type": "structure"
    },
    "UpdateTrustedTokenIssuerResponse": {
      "members": {},
      "type": "structure"
    },
    "ValidationException": {
      "exception": true,
      "members": {
        "Message": {
          "shape": "ValidationExceptionMessage"
        }
      },
      "type": "structure"
    },
    "ValidationExceptionMessage": {
      "type": "string"
    }
  },
  "version": "2.0"
}