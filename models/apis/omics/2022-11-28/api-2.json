{
  "metadata": {
    "apiVersion": "2022-11-28",
    "endpointPrefix": "omics",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "Amazon Omics",
    "serviceId": "Omics",
    "signatureVersion": "v4",
    "signingName": "omics",
    "uid": "omics-2022-11-28"
  },
  "operations": {
    "AbortMultipartReadSetUpload": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "NotSupportedOperationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/sequencestore/{sequenceStoreId}/upload/{uploadId}/abort",
        "responseCode": 200
      },
      "input": {
        "shape": "AbortMultipartReadSetUploadRequest"
      },
      "name": "AbortMultipartReadSetUpload",
      "output": {
        "shape": "AbortMultipartReadSetUploadResponse"
      }
    },
    "AcceptShare": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/share/{shareId}",
        "responseCode": 200
      },
      "input": {
        "shape": "AcceptShareRequest"
      },
      "name": "AcceptShare",
      "output": {
        "shape": "AcceptShareResponse"
      }
    },
    "BatchDeleteReadSet": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sequencestore/{sequenceStoreId}/readset/batch/delete",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "BatchDeleteReadSetRequest"
      },
      "name": "BatchDeleteReadSet",
      "output": {
        "shape": "BatchDeleteReadSetResponse"
      }
    },
    "CancelAnnotationImportJob": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/import/annotation/{jobId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "CancelAnnotationImportRequest"
      },
      "name": "CancelAnnotationImportJob",
      "output": {
        "shape": "CancelAnnotationImportResponse"
      }
    },
    "CancelRun": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/run/{id}/cancel",
        "responseCode": 202
      },
      "input": {
        "shape": "CancelRunRequest"
      },
      "name": "CancelRun"
    },
    "CancelVariantImportJob": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/import/variant/{jobId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "CancelVariantImportRequest"
      },
      "name": "CancelVariantImportJob",
      "output": {
        "shape": "CancelVariantImportResponse"
      }
    },
    "CompleteMultipartReadSetUpload": {
      "endpoint": {
        "hostPrefix": "storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "NotSupportedOperationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sequencestore/{sequenceStoreId}/upload/{uploadId}/complete",
        "responseCode": 200
      },
      "input": {
        "shape": "CompleteMultipartReadSetUploadRequest"
      },
      "name": "CompleteMultipartReadSetUpload",
      "output": {
        "shape": "CompleteMultipartReadSetUploadResponse"
      }
    },
    "CreateAnnotationStore": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/annotationStore",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateAnnotationStoreRequest"
      },
      "name": "CreateAnnotationStore",
      "output": {
        "shape": "CreateAnnotationStoreResponse"
      }
    },
    "CreateAnnotationStoreVersion": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/annotationStore/{name}/version",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateAnnotationStoreVersionRequest"
      },
      "name": "CreateAnnotationStoreVersion",
      "output": {
        "shape": "CreateAnnotationStoreVersionResponse"
      }
    },
    "CreateMultipartReadSetUpload": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "NotSupportedOperationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sequencestore/{sequenceStoreId}/upload",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateMultipartReadSetUploadRequest"
      },
      "name": "CreateMultipartReadSetUpload",
      "output": {
        "shape": "CreateMultipartReadSetUploadResponse"
      }
    },
    "CreateReferenceStore": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/referencestore",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateReferenceStoreRequest"
      },
      "name": "CreateReferenceStore",
      "output": {
        "shape": "CreateReferenceStoreResponse"
      }
    },
    "CreateRunGroup": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/runGroup",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateRunGroupRequest"
      },
      "name": "CreateRunGroup",
      "output": {
        "shape": "CreateRunGroupResponse"
      }
    },
    "CreateSequenceStore": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sequencestore",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateSequenceStoreRequest"
      },
      "name": "CreateSequenceStore",
      "output": {
        "shape": "CreateSequenceStoreResponse"
      }
    },
    "CreateShare": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/share",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateShareRequest"
      },
      "name": "CreateShare",
      "output": {
        "shape": "CreateShareResponse"
      }
    },
    "CreateVariantStore": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/variantStore",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateVariantStoreRequest"
      },
      "name": "CreateVariantStore",
      "output": {
        "shape": "CreateVariantStoreResponse"
      }
    },
    "CreateWorkflow": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workflow",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateWorkflowRequest"
      },
      "name": "CreateWorkflow",
      "output": {
        "shape": "CreateWorkflowResponse"
      }
    },
    "DeleteAnnotationStore": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/annotationStore/{name}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteAnnotationStoreRequest"
      },
      "name": "DeleteAnnotationStore",
      "output": {
        "shape": "DeleteAnnotationStoreResponse"
      }
    },
    "DeleteAnnotationStoreVersions": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/annotationStore/{name}/versions/delete",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteAnnotationStoreVersionsRequest"
      },
      "name": "DeleteAnnotationStoreVersions",
      "output": {
        "shape": "DeleteAnnotationStoreVersionsResponse"
      }
    },
    "DeleteReference": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/referencestore/{referenceStoreId}/reference/{id}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteReferenceRequest"
      },
      "name": "DeleteReference",
      "output": {
        "shape": "DeleteReferenceResponse"
      }
    },
    "DeleteReferenceStore": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/referencestore/{id}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteReferenceStoreRequest"
      },
      "name": "DeleteReferenceStore",
      "output": {
        "shape": "DeleteReferenceStoreResponse"
      }
    },
    "DeleteRun": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/run/{id}",
        "responseCode": 202
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteRunRequest"
      },
      "name": "DeleteRun"
    },
    "DeleteRunGroup": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/runGroup/{id}",
        "responseCode": 202
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteRunGroupRequest"
      },
      "name": "DeleteRunGroup"
    },
    "DeleteSequenceStore": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/sequencestore/{id}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteSequenceStoreRequest"
      },
      "name": "DeleteSequenceStore",
      "output": {
        "shape": "DeleteSequenceStoreResponse"
      }
    },
    "DeleteShare": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/share/{shareId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteShareRequest"
      },
      "name": "DeleteShare",
      "output": {
        "shape": "DeleteShareResponse"
      }
    },
    "DeleteVariantStore": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/variantStore/{name}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteVariantStoreRequest"
      },
      "name": "DeleteVariantStore",
      "output": {
        "shape": "DeleteVariantStoreResponse"
      }
    },
    "DeleteWorkflow": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/workflow/{id}",
        "responseCode": 202
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteWorkflowRequest"
      },
      "name": "DeleteWorkflow"
    },
    "GetAnnotationImportJob": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/import/annotation/{jobId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetAnnotationImportRequest"
      },
      "name": "GetAnnotationImportJob",
      "output": {
        "shape": "GetAnnotationImportResponse"
      }
    },
    "GetAnnotationStore": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/annotationStore/{name}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetAnnotationStoreRequest"
      },
      "name": "GetAnnotationStore",
      "output": {
        "shape": "GetAnnotationStoreResponse"
      }
    },
    "GetAnnotationStoreVersion": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/annotationStore/{name}/version/{versionName}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetAnnotationStoreVersionRequest"
      },
      "name": "GetAnnotationStoreVersion",
      "output": {
        "shape": "GetAnnotationStoreVersionResponse"
      }
    },
    "GetReadSet": {
      "endpoint": {
        "hostPrefix": "storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "RangeNotSatisfiableException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sequencestore/{sequenceStoreId}/readset/{id}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetReadSetRequest"
      },
      "name": "GetReadSet",
      "output": {
        "shape": "GetReadSetResponse"
      }
    },
    "GetReadSetActivationJob": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sequencestore/{sequenceStoreId}/activationjob/{id}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetReadSetActivationJobRequest"
      },
      "name": "GetReadSetActivationJob",
      "output": {
        "shape": "GetReadSetActivationJobResponse"
      }
    },
    "GetReadSetExportJob": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sequencestore/{sequenceStoreId}/exportjob/{id}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetReadSetExportJobRequest"
      },
      "name": "GetReadSetExportJob",
      "output": {
        "shape": "GetReadSetExportJobResponse"
      }
    },
    "GetReadSetImportJob": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sequencestore/{sequenceStoreId}/importjob/{id}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetReadSetImportJobRequest"
      },
      "name": "GetReadSetImportJob",
      "output": {
        "shape": "GetReadSetImportJobResponse"
      }
    },
    "GetReadSetMetadata": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sequencestore/{sequenceStoreId}/readset/{id}/metadata",
        "responseCode": 200
      },
      "input": {
        "shape": "GetReadSetMetadataRequest"
      },
      "name": "GetReadSetMetadata",
      "output": {
        "shape": "GetReadSetMetadataResponse"
      }
    },
    "GetReference": {
      "endpoint": {
        "hostPrefix": "storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "RangeNotSatisfiableException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/referencestore/{referenceStoreId}/reference/{id}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetReferenceRequest"
      },
      "name": "GetReference",
      "output": {
        "shape": "GetReferenceResponse"
      }
    },
    "GetReferenceImportJob": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/referencestore/{referenceStoreId}/importjob/{id}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetReferenceImportJobRequest"
      },
      "name": "GetReferenceImportJob",
      "output": {
        "shape": "GetReferenceImportJobResponse"
      }
    },
    "GetReferenceMetadata": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/referencestore/{referenceStoreId}/reference/{id}/metadata",
        "responseCode": 200
      },
      "input": {
        "shape": "GetReferenceMetadataRequest"
      },
      "name": "GetReferenceMetadata",
      "output": {
        "shape": "GetReferenceMetadataResponse"
      }
    },
    "GetReferenceStore": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/referencestore/{id}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetReferenceStoreRequest"
      },
      "name": "GetReferenceStore",
      "output": {
        "shape": "GetReferenceStoreResponse"
      }
    },
    "GetRun": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/run/{id}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetRunRequest"
      },
      "name": "GetRun",
      "output": {
        "shape": "GetRunResponse"
      }
    },
    "GetRunGroup": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/runGroup/{id}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetRunGroupRequest"
      },
      "name": "GetRunGroup",
      "output": {
        "shape": "GetRunGroupResponse"
      }
    },
    "GetRunTask": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/run/{id}/task/{taskId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetRunTaskRequest"
      },
      "name": "GetRunTask",
      "output": {
        "shape": "GetRunTaskResponse"
      }
    },
    "GetSequenceStore": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sequencestore/{id}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetSequenceStoreRequest"
      },
      "name": "GetSequenceStore",
      "output": {
        "shape": "GetSequenceStoreResponse"
      }
    },
    "GetShare": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/share/{shareId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetShareRequest"
      },
      "name": "GetShare",
      "output": {
        "shape": "GetShareResponse"
      }
    },
    "GetVariantImportJob": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/import/variant/{jobId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetVariantImportRequest"
      },
      "name": "GetVariantImportJob",
      "output": {
        "shape": "GetVariantImportResponse"
      }
    },
    "GetVariantStore": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/variantStore/{name}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetVariantStoreRequest"
      },
      "name": "GetVariantStore",
      "output": {
        "shape": "GetVariantStoreResponse"
      }
    },
    "GetWorkflow": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/workflow/{id}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetWorkflowRequest"
      },
      "name": "GetWorkflow",
      "output": {
        "shape": "GetWorkflowResponse"
      }
    },
    "ListAnnotationImportJobs": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/import/annotations",
        "responseCode": 200
      },
      "input": {
        "shape": "ListAnnotationImportJobsRequest"
      },
      "name": "ListAnnotationImportJobs",
      "output": {
        "shape": "ListAnnotationImportJobsResponse"
      }
    },
    "ListAnnotationStoreVersions": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/annotationStore/{name}/versions",
        "responseCode": 200
      },
      "input": {
        "shape": "ListAnnotationStoreVersionsRequest"
      },
      "name": "ListAnnotationStoreVersions",
      "output": {
        "shape": "ListAnnotationStoreVersionsResponse"
      }
    },
    "ListAnnotationStores": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/annotationStores",
        "responseCode": 200
      },
      "input": {
        "shape": "ListAnnotationStoresRequest"
      },
      "name": "ListAnnotationStores",
      "output": {
        "shape": "ListAnnotationStoresResponse"
      }
    },
    "ListMultipartReadSetUploads": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "NotSupportedOperationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sequencestore/{sequenceStoreId}/uploads",
        "responseCode": 200
      },
      "input": {
        "shape": "ListMultipartReadSetUploadsRequest"
      },
      "name": "ListMultipartReadSetUploads",
      "output": {
        "shape": "ListMultipartReadSetUploadsResponse"
      }
    },
    "ListReadSetActivationJobs": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sequencestore/{sequenceStoreId}/activationjobs",
        "responseCode": 200
      },
      "input": {
        "shape": "ListReadSetActivationJobsRequest"
      },
      "name": "ListReadSetActivationJobs",
      "output": {
        "shape": "ListReadSetActivationJobsResponse"
      }
    },
    "ListReadSetExportJobs": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sequencestore/{sequenceStoreId}/exportjobs",
        "responseCode": 200
      },
      "input": {
        "shape": "ListReadSetExportJobsRequest"
      },
      "name": "ListReadSetExportJobs",
      "output": {
        "shape": "ListReadSetExportJobsResponse"
      }
    },
    "ListReadSetImportJobs": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sequencestore/{sequenceStoreId}/importjobs",
        "responseCode": 200
      },
      "input": {
        "shape": "ListReadSetImportJobsRequest"
      },
      "name": "ListReadSetImportJobs",
      "output": {
        "shape": "ListReadSetImportJobsResponse"
      }
    },
    "ListReadSetUploadParts": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "NotSupportedOperationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sequencestore/{sequenceStoreId}/upload/{uploadId}/parts",
        "responseCode": 200
      },
      "input": {
        "shape": "ListReadSetUploadPartsRequest"
      },
      "name": "ListReadSetUploadParts",
      "output": {
        "shape": "ListReadSetUploadPartsResponse"
      }
    },
    "ListReadSets": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sequencestore/{sequenceStoreId}/readsets",
        "responseCode": 200
      },
      "input": {
        "shape": "ListReadSetsRequest"
      },
      "name": "ListReadSets",
      "output": {
        "shape": "ListReadSetsResponse"
      }
    },
    "ListReferenceImportJobs": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/referencestore/{referenceStoreId}/importjobs",
        "responseCode": 200
      },
      "input": {
        "shape": "ListReferenceImportJobsRequest"
      },
      "name": "ListReferenceImportJobs",
      "output": {
        "shape": "ListReferenceImportJobsResponse"
      }
    },
    "ListReferenceStores": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/referencestores",
        "responseCode": 200
      },
      "input": {
        "shape": "ListReferenceStoresRequest"
      },
      "name": "ListReferenceStores",
      "output": {
        "shape": "ListReferenceStoresResponse"
      }
    },
    "ListReferences": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/referencestore/{referenceStoreId}/references",
        "responseCode": 200
      },
      "input": {
        "shape": "ListReferencesRequest"
      },
      "name": "ListReferences",
      "output": {
        "shape": "ListReferencesResponse"
      }
    },
    "ListRunGroups": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/runGroup",
        "responseCode": 200
      },
      "input": {
        "shape": "ListRunGroupsRequest"
      },
      "name": "ListRunGroups",
      "output": {
        "shape": "ListRunGroupsResponse"
      }
    },
    "ListRunTasks": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/run/{id}/task",
        "responseCode": 200
      },
      "input": {
        "shape": "ListRunTasksRequest"
      },
      "name": "ListRunTasks",
      "output": {
        "shape": "ListRunTasksResponse"
      }
    },
    "ListRuns": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/run",
        "responseCode": 200
      },
      "input": {
        "shape": "ListRunsRequest"
      },
      "name": "ListRuns",
      "output": {
        "shape": "ListRunsResponse"
      }
    },
    "ListSequenceStores": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sequencestores",
        "responseCode": 200
      },
      "input": {
        "shape": "ListSequenceStoresRequest"
      },
      "name": "ListSequenceStores",
      "output": {
        "shape": "ListSequenceStoresResponse"
      }
    },
    "ListShares": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/shares",
        "responseCode": 200
      },
      "input": {
        "shape": "ListSharesRequest"
      },
      "name": "ListShares",
      "output": {
        "shape": "ListSharesResponse"
      }
    },
    "ListTagsForResource": {
      "endpoint": {
        "hostPrefix": "tags-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "ListVariantImportJobs": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/import/variants",
        "responseCode": 200
      },
      "input": {
        "shape": "ListVariantImportJobsRequest"
      },
      "name": "ListVariantImportJobs",
      "output": {
        "shape": "ListVariantImportJobsResponse"
      }
    },
    "ListVariantStores": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/variantStores",
        "responseCode": 200
      },
      "input": {
        "shape": "ListVariantStoresRequest"
      },
      "name": "ListVariantStores",
      "output": {
        "shape": "ListVariantStoresResponse"
      }
    },
    "ListWorkflows": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/workflow",
        "responseCode": 200
      },
      "input": {
        "shape": "ListWorkflowsRequest"
      },
      "name": "ListWorkflows",
      "output": {
        "shape": "ListWorkflowsResponse"
      }
    },
    "StartAnnotationImportJob": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/import/annotation",
        "responseCode": 200
      },
      "input": {
        "shape": "StartAnnotationImportRequest"
      },
      "name": "StartAnnotationImportJob",
      "output": {
        "shape": "StartAnnotationImportResponse"
      }
    },
    "StartReadSetActivationJob": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sequencestore/{sequenceStoreId}/activationjob",
        "responseCode": 200
      },
      "input": {
        "shape": "StartReadSetActivationJobRequest"
      },
      "name": "StartReadSetActivationJob",
      "output": {
        "shape": "StartReadSetActivationJobResponse"
      }
    },
    "StartReadSetExportJob": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sequencestore/{sequenceStoreId}/exportjob",
        "responseCode": 200
      },
      "input": {
        "shape": "StartReadSetExportJobRequest"
      },
      "name": "StartReadSetExportJob",
      "output": {
        "shape": "StartReadSetExportJobResponse"
      }
    },
    "StartReadSetImportJob": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sequencestore/{sequenceStoreId}/importjob",
        "responseCode": 200
      },
      "input": {
        "shape": "StartReadSetImportJobRequest"
      },
      "name": "StartReadSetImportJob",
      "output": {
        "shape": "StartReadSetImportJobResponse"
      }
    },
    "StartReferenceImportJob": {
      "endpoint": {
        "hostPrefix": "control-storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/referencestore/{referenceStoreId}/importjob",
        "responseCode": 200
      },
      "input": {
        "shape": "StartReferenceImportJobRequest"
      },
      "name": "StartReferenceImportJob",
      "output": {
        "shape": "StartReferenceImportJobResponse"
      }
    },
    "StartRun": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/run",
        "responseCode": 201
      },
      "input": {
        "shape": "StartRunRequest"
      },
      "name": "StartRun",
      "output": {
        "shape": "StartRunResponse"
      }
    },
    "StartVariantImportJob": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/import/variant",
        "responseCode": 200
      },
      "input": {
        "shape": "StartVariantImportRequest"
      },
      "name": "StartVariantImportJob",
      "output": {
        "shape": "StartVariantImportResponse"
      }
    },
    "TagResource": {
      "endpoint": {
        "hostPrefix": "tags-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 204
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "endpoint": {
        "hostPrefix": "tags-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 204
      },
      "idempotent": true,
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateAnnotationStore": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/annotationStore/{name}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateAnnotationStoreRequest"
      },
      "name": "UpdateAnnotationStore",
      "output": {
        "shape": "UpdateAnnotationStoreResponse"
      }
    },
    "UpdateAnnotationStoreVersion": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/annotationStore/{name}/version/{versionName}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateAnnotationStoreVersionRequest"
      },
      "name": "UpdateAnnotationStoreVersion",
      "output": {
        "shape": "UpdateAnnotationStoreVersionResponse"
      }
    },
    "UpdateRunGroup": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/runGroup/{id}",
        "responseCode": 202
      },
      "input": {
        "shape": "UpdateRunGroupRequest"
      },
      "name": "UpdateRunGroup"
    },
    "UpdateVariantStore": {
      "endpoint": {
        "hostPrefix": "analytics-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/variantStore/{name}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateVariantStoreRequest"
      },
      "name": "UpdateVariantStore",
      "output": {
        "shape": "UpdateVariantStoreResponse"
      }
    },
    "UpdateWorkflow": {
      "endpoint": {
        "hostPrefix": "workflows-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workflow/{id}",
        "responseCode": 202
      },
      "input": {
        "shape": "UpdateWorkflowRequest"
      },
      "name": "UpdateWorkflow"
    },
    "UploadReadSetPart": {
      "authtype": "v4-unsigned-body",
      "endpoint": {
        "hostPrefix": "storage-"
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "NotSupportedOperationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RequestTimeoutException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/sequencestore/{sequenceStoreId}/upload/{uploadId}/part",
        "responseCode": 200
      },
      "input": {
        "shape": "UploadReadSetPartRequest"
      },
      "name": "UploadReadSetPart",
      "output": {
        "shape": "UploadReadSetPartResponse"
      }
    }
  },
  "shapes": {
    "AbortMultipartReadSetUploadRequest": {
      "members": {
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        },
        "uploadId": {
          "location": "uri",
          "locationName": "uploadId",
          "shape": "UploadId"
        }
      },
      "required": [
        "sequenceStoreId",
        "uploadId"
      ],
      "type": "structure"
    },
    "AbortMultipartReadSetUploadResponse": {
      "members": {},
      "type": "structure"
    },
    "Accelerators": {
      "enum": [
        "GPU"
      ],
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "AcceptShareRequest": {
      "members": {
        "shareId": {
          "location": "uri",
          "locationName": "shareId",
          "shape": "String"
        }
      },
      "required": [
        "shareId"
      ],
      "type": "structure"
    },
    "AcceptShareResponse": {
      "members": {
        "status": {
          "shape": "ShareStatus"
        }
      },
      "type": "structure"
    },
    "AccessDeniedException": {
      "error": {
        "httpStatusCode": 403,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "ActivateReadSetFilter": {
      "members": {
        "createdAfter": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "createdBefore": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "status": {
          "shape": "ReadSetActivationJobStatus"
        }
      },
      "type": "structure"
    },
    "ActivateReadSetJobItem": {
      "members": {
        "completionTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "id": {
          "shape": "ActivationJobId"
        },
        "sequenceStoreId": {
          "shape": "SequenceStoreId"
        },
        "status": {
          "shape": "ReadSetActivationJobStatus"
        }
      },
      "required": [
        "id",
        "sequenceStoreId",
        "status",
        "creationTime"
      ],
      "type": "structure"
    },
    "ActivateReadSetJobList": {
      "member": {
        "shape": "ActivateReadSetJobItem"
      },
      "type": "list"
    },
    "ActivateReadSetSourceItem": {
      "members": {
        "readSetId": {
          "shape": "ReadSetId"
        },
        "status": {
          "shape": "ReadSetActivationJobItemStatus"
        },
        "statusMessage": {
          "shape": "JobStatusMessage"
        }
      },
      "required": [
        "readSetId",
        "status"
      ],
      "type": "structure"
    },
    "ActivateReadSetSourceList": {
      "member": {
        "shape": "ActivateReadSetSourceItem"
      },
      "type": "list"
    },
    "ActivationJobId": {
      "max": 36,
      "min": 10,
      "pattern": "[0-9]+",
      "type": "string"
    },
    "AnnotationFieldMap": {
      "key": {
        "shape": "AnnotationFieldMapKeyString"
      },
      "type": "map",
      "value": {
        "shape": "AnnotationFieldMapValueString"
      }
    },
    "AnnotationFieldMapKeyString": {
      "max": 21,
      "min": 1,
      "type": "string"
    },
    "AnnotationFieldMapValueString": {
      "max": 21,
      "min": 1,
      "type": "string"
    },
    "AnnotationImportItemDetail": {
      "members": {
        "jobStatus": {
          "shape": "JobStatus"
        },
        "source": {
          "shape": "S3Uri"
        }
      },
      "required": [
        "source",
        "jobStatus"
      ],
      "type": "structure"
    },
    "AnnotationImportItemDetails": {
      "max": 1,
      "member": {
        "shape": "AnnotationImportItemDetail"
      },
      "min": 1,
      "type": "list"
    },
    "AnnotationImportItemSource": {
      "members": {
        "source": {
          "shape": "S3Uri"
        }
      },
      "required": [
        "source"
      ],
      "type": "structure"
    },
    "AnnotationImportItemSources": {
      "member": {
        "shape": "AnnotationImportItemSource"
      },
      "min": 1,
      "type": "list"
    },
    "AnnotationImportJobItem": {
      "members": {
        "annotationFields": {
          "shape": "AnnotationFieldMap"
        },
        "completionTime": {
          "shape": "CompletionTime"
        },
        "creationTime": {
          "shape": "CreationTime"
        },
        "destinationName": {
          "shape": "String"
        },
        "id": {
          "shape": "String"
        },
        "roleArn": {
          "shape": "Arn"
        },
        "runLeftNormalization": {
          "shape": "RunLeftNormalization"
        },
        "status": {
          "shape": "JobStatus"
        },
        "updateTime": {
          "shape": "UpdateTime"
        },
        "versionName": {
          "shape": "VersionName"
        }
      },
      "required": [
        "id",
        "destinationName",
        "versionName",
        "roleArn",
        "status",
        "creationTime",
        "updateTime"
      ],
      "type": "structure"
    },
    "AnnotationImportJobItems": {
      "member": {
        "shape": "AnnotationImportJobItem"
      },
      "type": "list"
    },
    "AnnotationStoreItem": {
      "members": {
        "creationTime": {
          "shape": "CreationTime"
        },
        "description": {
          "shape": "Description"
        },
        "id": {
          "shape": "ResourceId"
        },
        "name": {
          "shape": "String"
        },
        "reference": {
          "shape": "ReferenceItem"
        },
        "sseConfig": {
          "shape": "SseConfig"
        },
        "status": {
          "shape": "StoreStatus"
        },
        "statusMessage": {
          "shape": "StatusMessage"
        },
        "storeArn": {
          "shape": "Arn"
        },
        "storeFormat": {
          "shape": "StoreFormat"
        },
        "storeSizeBytes": {
          "shape": "Long"
        },
        "updateTime": {
          "shape": "UpdateTime"
        }
      },
      "required": [
        "id",
        "reference",
        "status",
        "storeArn",
        "name",
        "storeFormat",
        "description",
        "sseConfig",
        "creationTime",
        "updateTime",
        "statusMessage",
        "storeSizeBytes"
      ],
      "type": "structure"
    },
    "AnnotationStoreItems": {
      "member": {
        "shape": "AnnotationStoreItem"
      },
      "type": "list"
    },
    "AnnotationStoreVersionItem": {
      "members": {
        "creationTime": {
          "shape": "CreationTime"
        },
        "description": {
          "shape": "Description"
        },
        "id": {
          "shape": "ResourceId"
        },
        "name": {
          "shape": "StoreName"
        },
        "status": {
          "shape": "VersionStatus"
        },
        "statusMessage": {
          "shape": "StatusMessage"
        },
        "storeId": {
          "shape": "ResourceId"
        },
        "updateTime": {
          "shape": "UpdateTime"
        },
        "versionArn": {
          "shape": "Arn"
        },
        "versionName": {
          "shape": "VersionName"
        },
        "versionSizeBytes": {
          "shape": "Long"
        }
      },
      "required": [
        "storeId",
        "id",
        "status",
        "versionArn",
        "name",
        "versionName",
        "description",
        "creationTime",
        "updateTime",
        "statusMessage",
        "versionSizeBytes"
      ],
      "type": "structure"
    },
    "AnnotationStoreVersionItems": {
      "member": {
        "shape": "AnnotationStoreVersionItem"
      },
      "type": "list"
    },
    "AnnotationType": {
      "enum": [
        "GENERIC",
        "CHR_POS",
        "CHR_POS_REF_ALT",
        "CHR_START_END_ONE_BASE",
        "CHR_START_END_REF_ALT_ONE_BASE",
        "CHR_START_END_ZERO_BASE",
        "CHR_START_END_REF_ALT_ZERO_BASE"
      ],
      "type": "string"
    },
    "Arn": {
      "max": 2048,
      "min": 20,
      "pattern": "arn:([^: ]*):([^: ]*):([^: ]*):([0-9]{12}):([^: ]*)",
      "type": "string"
    },
    "ArnList": {
      "max": 10,
      "member": {
        "shape": "String"
      },
      "min": 1,
      "type": "list"
    },
    "BatchDeleteReadSetRequest": {
      "members": {
        "ids": {
          "shape": "ReadSetIdList"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        }
      },
      "required": [
        "ids",
        "sequenceStoreId"
      ],
      "type": "structure"
    },
    "BatchDeleteReadSetResponse": {
      "members": {
        "errors": {
          "shape": "ReadSetBatchErrorList"
        }
      },
      "type": "structure"
    },
    "Blob": {
      "type": "blob"
    },
    "Boolean": {
      "box": true,
      "type": "boolean"
    },
    "CancelAnnotationImportRequest": {
      "members": {
        "jobId": {
          "location": "uri",
          "locationName": "jobId",
          "shape": "ResourceId"
        }
      },
      "required": [
        "jobId"
      ],
      "type": "structure"
    },
    "CancelAnnotationImportResponse": {
      "members": {},
      "type": "structure"
    },
    "CancelRunRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "RunId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "CancelVariantImportRequest": {
      "members": {
        "jobId": {
          "location": "uri",
          "locationName": "jobId",
          "shape": "ResourceId"
        }
      },
      "required": [
        "jobId"
      ],
      "type": "structure"
    },
    "CancelVariantImportResponse": {
      "members": {},
      "type": "structure"
    },
    "ClientToken": {
      "max": 127,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "CommentChar": {
      "max": 1,
      "min": 1,
      "type": "string"
    },
    "CompleteMultipartReadSetUploadRequest": {
      "members": {
        "parts": {
          "shape": "CompleteReadSetUploadPartList"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        },
        "uploadId": {
          "location": "uri",
          "locationName": "uploadId",
          "shape": "UploadId"
        }
      },
      "required": [
        "sequenceStoreId",
        "uploadId",
        "parts"
      ],
      "type": "structure"
    },
    "CompleteMultipartReadSetUploadResponse": {
      "members": {
        "readSetId": {
          "shape": "ReadSetId"
        }
      },
      "required": [
        "readSetId"
      ],
      "type": "structure"
    },
    "CompleteReadSetUploadPartList": {
      "member": {
        "shape": "CompleteReadSetUploadPartListItem"
      },
      "type": "list"
    },
    "CompleteReadSetUploadPartListItem": {
      "members": {
        "checksum": {
          "shape": "String"
        },
        "partNumber": {
          "shape": "CompleteReadSetUploadPartListItemPartNumberInteger"
        },
        "partSource": {
          "shape": "ReadSetPartSource"
        }
      },
      "required": [
        "partNumber",
        "partSource",
        "checksum"
      ],
      "type": "structure"
    },
    "CompleteReadSetUploadPartListItemPartNumberInteger": {
      "box": true,
      "max": 10000,
      "min": 1,
      "type": "integer"
    },
    "CompletionTime": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "ConflictException": {
      "error": {
        "httpStatusCode": 409,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "CreateAnnotationStoreRequest": {
      "members": {
        "description": {
          "shape": "Description"
        },
        "name": {
          "shape": "StoreName"
        },
        "reference": {
          "shape": "ReferenceItem"
        },
        "sseConfig": {
          "shape": "SseConfig"
        },
        "storeFormat": {
          "shape": "StoreFormat"
        },
        "storeOptions": {
          "shape": "StoreOptions"
        },
        "tags": {
          "shape": "TagMap"
        },
        "versionName": {
          "shape": "VersionName"
        }
      },
      "required": [
        "storeFormat"
      ],
      "type": "structure"
    },
    "CreateAnnotationStoreResponse": {
      "members": {
        "creationTime": {
          "shape": "CreationTime"
        },
        "id": {
          "shape": "ResourceId"
        },
        "name": {
          "shape": "String"
        },
        "reference": {
          "shape": "ReferenceItem"
        },
        "status": {
          "shape": "StoreStatus"
        },
        "storeFormat": {
          "shape": "StoreFormat"
        },
        "storeOptions": {
          "shape": "StoreOptions"
        },
        "versionName": {
          "shape": "VersionName"
        }
      },
      "required": [
        "id",
        "status",
        "name",
        "versionName",
        "creationTime"
      ],
      "type": "structure"
    },
    "CreateAnnotationStoreVersionRequest": {
      "members": {
        "description": {
          "shape": "Description"
        },
        "name": {
          "location": "uri",
          "locationName": "name",
          "shape": "StoreName"
        },
        "tags": {
          "shape": "TagMap"
        },
        "versionName": {
          "shape": "VersionName"
        },
        "versionOptions": {
          "shape": "VersionOptions"
        }
      },
      "required": [
        "name",
        "versionName"
      ],
      "type": "structure"
    },
    "CreateAnnotationStoreVersionResponse": {
      "members": {
        "creationTime": {
          "shape": "CreationTime"
        },
        "id": {
          "shape": "ResourceId"
        },
        "name": {
          "shape": "StoreName"
        },
        "status": {
          "shape": "VersionStatus"
        },
        "storeId": {
          "shape": "ResourceId"
        },
        "versionName": {
          "shape": "VersionName"
        },
        "versionOptions": {
          "shape": "VersionOptions"
        }
      },
      "required": [
        "id",
        "versionName",
        "storeId",
        "name",
        "status",
        "creationTime"
      ],
      "type": "structure"
    },
    "CreateMultipartReadSetUploadRequest": {
      "members": {
        "clientToken": {
          "shape": "ClientToken"
        },
        "description": {
          "shape": "ReadSetDescription"
        },
        "generatedFrom": {
          "shape": "GeneratedFrom"
        },
        "name": {
          "shape": "ReadSetName"
        },
        "referenceArn": {
          "shape": "ReferenceArn"
        },
        "sampleId": {
          "shape": "SampleId"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        },
        "sourceFileType": {
          "shape": "FileType"
        },
        "subjectId": {
          "shape": "SubjectId"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "required": [
        "sequenceStoreId",
        "sourceFileType",
        "subjectId",
        "sampleId",
        "referenceArn",
        "name"
      ],
      "type": "structure"
    },
    "CreateMultipartReadSetUploadResponse": {
      "members": {
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "description": {
          "shape": "ReadSetDescription"
        },
        "generatedFrom": {
          "shape": "GeneratedFrom"
        },
        "name": {
          "shape": "ReadSetName"
        },
        "referenceArn": {
          "shape": "ReferenceArn"
        },
        "sampleId": {
          "shape": "SampleId"
        },
        "sequenceStoreId": {
          "shape": "SequenceStoreId"
        },
        "sourceFileType": {
          "shape": "FileType"
        },
        "subjectId": {
          "shape": "SubjectId"
        },
        "tags": {
          "shape": "TagMap"
        },
        "uploadId": {
          "shape": "UploadId"
        }
      },
      "required": [
        "sequenceStoreId",
        "uploadId",
        "sourceFileType",
        "subjectId",
        "sampleId",
        "referenceArn",
        "creationTime"
      ],
      "type": "structure"
    },
    "CreateReferenceStoreRequest": {
      "members": {
        "clientToken": {
          "shape": "ClientToken"
        },
        "description": {
          "shape": "ReferenceStoreDescription"
        },
        "name": {
          "shape": "ReferenceStoreName"
        },
        "sseConfig": {
          "shape": "SseConfig"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "CreateReferenceStoreResponse": {
      "members": {
        "arn": {
          "shape": "ReferenceStoreArn"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "description": {
          "shape": "ReferenceStoreDescription"
        },
        "id": {
          "shape": "ReferenceStoreId"
        },
        "name": {
          "shape": "ReferenceStoreName"
        },
        "sseConfig": {
          "shape": "SseConfig"
        }
      },
      "required": [
        "id",
        "arn",
        "creationTime"
      ],
      "type": "structure"
    },
    "CreateRunGroupRequest": {
      "members": {
        "maxCpus": {
          "shape": "CreateRunGroupRequestMaxCpusInteger"
        },
        "maxDuration": {
          "shape": "CreateRunGroupRequestMaxDurationInteger"
        },
        "maxGpus": {
          "shape": "CreateRunGroupRequestMaxGpusInteger"
        },
        "maxRuns": {
          "shape": "CreateRunGroupRequestMaxRunsInteger"
        },
        "name": {
          "shape": "RunGroupName"
        },
        "requestId": {
          "idempotencyToken": true,
          "shape": "RunGroupRequestId"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "required": [
        "requestId"
      ],
      "type": "structure"
    },
    "CreateRunGroupRequestMaxCpusInteger": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "integer"
    },
    "CreateRunGroupRequestMaxDurationInteger": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "integer"
    },
    "CreateRunGroupRequestMaxGpusInteger": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "integer"
    },
    "CreateRunGroupRequestMaxRunsInteger": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "integer"
    },
    "CreateRunGroupResponse": {
      "members": {
        "arn": {
          "shape": "RunGroupArn"
        },
        "id": {
          "shape": "RunGroupId"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "CreateSequenceStoreRequest": {
      "members": {
        "clientToken": {
          "shape": "ClientToken"
        },
        "description": {
          "shape": "SequenceStoreDescription"
        },
        "fallbackLocation": {
          "shape": "S3Destination"
        },
        "name": {
          "shape": "SequenceStoreName"
        },
        "sseConfig": {
          "shape": "SseConfig"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "CreateSequenceStoreResponse": {
      "members": {
        "arn": {
          "shape": "SequenceStoreArn"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "description": {
          "shape": "SequenceStoreDescription"
        },
        "fallbackLocation": {
          "shape": "S3Destination"
        },
        "id": {
          "shape": "SequenceStoreId"
        },
        "name": {
          "shape": "SequenceStoreName"
        },
        "sseConfig": {
          "shape": "SseConfig"
        }
      },
      "required": [
        "id",
        "arn",
        "creationTime"
      ],
      "type": "structure"
    },
    "CreateShareRequest": {
      "members": {
        "principalSubscriber": {
          "shape": "String"
        },
        "resourceArn": {
          "shape": "String"
        },
        "shareName": {
          "shape": "ShareName"
        }
      },
      "required": [
        "resourceArn",
        "principalSubscriber"
      ],
      "type": "structure"
    },
    "CreateShareResponse": {
      "members": {
        "shareId": {
          "shape": "String"
        },
        "shareName": {
          "shape": "ShareName"
        },
        "status": {
          "shape": "ShareStatus"
        }
      },
      "type": "structure"
    },
    "CreateVariantStoreRequest": {
      "members": {
        "description": {
          "shape": "Description"
        },
        "name": {
          "shape": "StoreName"
        },
        "reference": {
          "shape": "ReferenceItem"
        },
        "sseConfig": {
          "shape": "SseConfig"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "required": [
        "reference"
      ],
      "type": "structure"
    },
    "CreateVariantStoreResponse": {
      "members": {
        "creationTime": {
          "shape": "CreationTime"
        },
        "id": {
          "shape": "ResourceId"
        },
        "name": {
          "shape": "String"
        },
        "reference": {
          "shape": "ReferenceItem"
        },
        "status": {
          "shape": "StoreStatus"
        }
      },
      "required": [
        "id",
        "status",
        "name",
        "creationTime"
      ],
      "type": "structure"
    },
    "CreateWorkflowRequest": {
      "members": {
        "accelerators": {
          "shape": "Accelerators"
        },
        "definitionUri": {
          "shape": "WorkflowDefinition"
        },
        "definitionZip": {
          "shape": "Blob"
        },
        "description": {
          "shape": "WorkflowDescription"
        },
        "engine": {
          "shape": "WorkflowEngine"
        },
        "main": {
          "shape": "WorkflowMain"
        },
        "name": {
          "shape": "WorkflowName"
        },
        "parameterTemplate": {
          "shape": "WorkflowParameterTemplate"
        },
        "requestId": {
          "idempotencyToken": true,
          "shape": "WorkflowRequestId"
        },
        "storageCapacity": {
          "shape": "CreateWorkflowRequestStorageCapacityInteger"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "required": [
        "requestId"
      ],
      "type": "structure"
    },
    "CreateWorkflowRequestStorageCapacityInteger": {
      "box": true,
      "max": 100000,
      "min": 0,
      "type": "integer"
    },
    "CreateWorkflowResponse": {
      "members": {
        "arn": {
          "shape": "WorkflowArn"
        },
        "id": {
          "shape": "WorkflowId"
        },
        "status": {
          "shape": "WorkflowStatus"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "CreationTime": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "CreationType": {
      "enum": [
        "IMPORT",
        "UPLOAD"
      ],
      "type": "string"
    },
    "DeleteAnnotationStoreRequest": {
      "members": {
        "force": {
          "location": "querystring",
          "locationName": "force",
          "shape": "PrimitiveBoolean"
        },
        "name": {
          "location": "uri",
          "locationName": "name",
          "shape": "String"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "DeleteAnnotationStoreResponse": {
      "members": {
        "status": {
          "shape": "StoreStatus"
        }
      },
      "required": [
        "status"
      ],
      "type": "structure"
    },
    "DeleteAnnotationStoreVersionsRequest": {
      "members": {
        "force": {
          "location": "querystring",
          "locationName": "force",
          "shape": "PrimitiveBoolean"
        },
        "name": {
          "location": "uri",
          "locationName": "name",
          "shape": "String"
        },
        "versions": {
          "shape": "VersionList"
        }
      },
      "required": [
        "name",
        "versions"
      ],
      "type": "structure"
    },
    "DeleteAnnotationStoreVersionsResponse": {
      "members": {
        "errors": {
          "shape": "VersionDeleteErrorList"
        }
      },
      "type": "structure"
    },
    "DeleteReferenceRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "ReferenceId"
        },
        "referenceStoreId": {
          "location": "uri",
          "locationName": "referenceStoreId",
          "shape": "ReferenceStoreId"
        }
      },
      "required": [
        "id",
        "referenceStoreId"
      ],
      "type": "structure"
    },
    "DeleteReferenceResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteReferenceStoreRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "ReferenceStoreId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "DeleteReferenceStoreResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteRunGroupRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "RunGroupId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "DeleteRunRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "RunId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "DeleteSequenceStoreRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "SequenceStoreId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "DeleteSequenceStoreResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteShareRequest": {
      "members": {
        "shareId": {
          "location": "uri",
          "locationName": "shareId",
          "shape": "String"
        }
      },
      "required": [
        "shareId"
      ],
      "type": "structure"
    },
    "DeleteShareResponse": {
      "members": {
        "status": {
          "shape": "ShareStatus"
        }
      },
      "type": "structure"
    },
    "DeleteVariantStoreRequest": {
      "members": {
        "force": {
          "location": "querystring",
          "locationName": "force",
          "shape": "PrimitiveBoolean"
        },
        "name": {
          "location": "uri",
          "locationName": "name",
          "shape": "String"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "DeleteVariantStoreResponse": {
      "members": {
        "status": {
          "shape": "StoreStatus"
        }
      },
      "required": [
        "status"
      ],
      "type": "structure"
    },
    "DeleteWorkflowRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "WorkflowId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "Description": {
      "max": 500,
      "min": 0,
      "type": "string"
    },
    "ETag": {
      "members": {
        "algorithm": {
          "shape": "ETagAlgorithm"
        },
        "source1": {
          "shape": "String"
        },
        "source2": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ETagAlgorithm": {
      "enum": [
        "FASTQ_MD5up",
        "BAM_MD5up",
        "CRAM_MD5up"
      ],
      "type": "string"
    },
    "Encoding": {
      "max": 20,
      "min": 1,
      "type": "string"
    },
    "EncryptionType": {
      "enum": [
        "KMS"
      ],
      "type": "string"
    },
    "EscapeChar": {
      "max": 1,
      "min": 1,
      "type": "string"
    },
    "EscapeQuotes": {
      "type": "boolean"
    },
    "ExportJobId": {
      "max": 36,
      "min": 10,
      "pattern": "[0-9]+",
      "type": "string"
    },
    "ExportReadSet": {
      "members": {
        "readSetId": {
          "shape": "ReadSetId"
        }
      },
      "required": [
        "readSetId"
      ],
      "type": "structure"
    },
    "ExportReadSetDetail": {
      "members": {
        "id": {
          "shape": "ReadSetId"
        },
        "status": {
          "shape": "ReadSetExportJobItemStatus"
        },
        "statusMessage": {
          "shape": "JobStatusMessage"
        }
      },
      "required": [
        "id",
        "status"
      ],
      "type": "structure"
    },
    "ExportReadSetDetailList": {
      "member": {
        "shape": "ExportReadSetDetail"
      },
      "type": "list"
    },
    "ExportReadSetFilter": {
      "members": {
        "createdAfter": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "createdBefore": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "status": {
          "shape": "ReadSetExportJobStatus"
        }
      },
      "type": "structure"
    },
    "ExportReadSetJobDetail": {
      "members": {
        "completionTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "destination": {
          "shape": "S3Destination"
        },
        "id": {
          "shape": "ExportJobId"
        },
        "sequenceStoreId": {
          "shape": "SequenceStoreId"
        },
        "status": {
          "shape": "ReadSetExportJobStatus"
        }
      },
      "required": [
        "id",
        "sequenceStoreId",
        "destination",
        "status",
        "creationTime"
      ],
      "type": "structure"
    },
    "ExportReadSetJobDetailList": {
      "member": {
        "shape": "ExportReadSetJobDetail"
      },
      "type": "list"
    },
    "FileInformation": {
      "members": {
        "contentLength": {
          "shape": "FileInformationContentLengthLong"
        },
        "partSize": {
          "shape": "FileInformationPartSizeLong"
        },
        "totalParts": {
          "shape": "FileInformationTotalPartsInteger"
        }
      },
      "type": "structure"
    },
    "FileInformationContentLengthLong": {
      "box": true,
      "max": 5497558138880,
      "min": 1,
      "type": "long"
    },
    "FileInformationPartSizeLong": {
      "box": true,
      "max": 5368709120,
      "min": 1,
      "type": "long"
    },
    "FileInformationTotalPartsInteger": {
      "box": true,
      "max": 10000,
      "min": 1,
      "type": "integer"
    },
    "FileType": {
      "enum": [
        "FASTQ",
        "BAM",
        "CRAM"
      ],
      "type": "string"
    },
    "Filter": {
      "members": {
        "resourceArns": {
          "shape": "ArnList"
        },
        "status": {
          "shape": "StatusList"
        }
      },
      "type": "structure"
    },
    "FormatOptions": {
      "members": {
        "tsvOptions": {
          "shape": "TsvOptions"
        },
        "vcfOptions": {
          "shape": "VcfOptions"
        }
      },
      "type": "structure",
      "union": true
    },
    "FormatToHeader": {
      "key": {
        "shape": "FormatToHeaderKey"
      },
      "type": "map",
      "value": {
        "shape": "FormatToHeaderValueString"
      }
    },
    "FormatToHeaderKey": {
      "enum": [
        "CHR",
        "START",
        "END",
        "REF",
        "ALT",
        "POS"
      ],
      "type": "string"
    },
    "FormatToHeaderValueString": {
      "max": 1000,
      "min": 0,
      "type": "string"
    },
    "GeneratedFrom": {
      "max": 127,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "GetAnnotationImportRequest": {
      "members": {
        "jobId": {
          "location": "uri",
          "locationName": "jobId",
          "shape": "ResourceId"
        }
      },
      "required": [
        "jobId"
      ],
      "type": "structure"
    },
    "GetAnnotationImportResponse": {
      "members": {
        "annotationFields": {
          "shape": "AnnotationFieldMap"
        },
        "completionTime": {
          "shape": "CompletionTime"
        },
        "creationTime": {
          "shape": "CreationTime"
        },
        "destinationName": {
          "shape": "StoreName"
        },
        "formatOptions": {
          "shape": "FormatOptions"
        },
        "id": {
          "shape": "ResourceId"
        },
        "items": {
          "shape": "AnnotationImportItemDetails"
        },
        "roleArn": {
          "shape": "Arn"
        },
        "runLeftNormalization": {
          "shape": "RunLeftNormalization"
        },
        "status": {
          "shape": "JobStatus"
        },
        "statusMessage": {
          "shape": "JobStatusMsg"
        },
        "updateTime": {
          "shape": "UpdateTime"
        },
        "versionName": {
          "shape": "VersionName"
        }
      },
      "required": [
        "id",
        "destinationName",
        "versionName",
        "roleArn",
        "status",
        "statusMessage",
        "creationTime",
        "updateTime",
        "completionTime",
        "items",
        "runLeftNormalization",
        "formatOptions"
      ],
      "type": "structure"
    },
    "GetAnnotationStoreRequest": {
      "members": {
        "name": {
          "location": "uri",
          "locationName": "name",
          "shape": "String"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "GetAnnotationStoreResponse": {
      "members": {
        "creationTime": {
          "shape": "CreationTime"
        },
        "description": {
          "shape": "Description"
        },
        "id": {
          "shape": "ResourceId"
        },
        "name": {
          "shape": "String"
        },
        "numVersions": {
          "shape": "Integer"
        },
        "reference": {
          "shape": "ReferenceItem"
        },
        "sseConfig": {
          "shape": "SseConfig"
        },
        "status": {
          "shape": "StoreStatus"
        },
        "statusMessage": {
          "shape": "StatusMessage"
        },
        "storeArn": {
          "shape": "Arn"
        },
        "storeFormat": {
          "shape": "StoreFormat"
        },
        "storeOptions": {
          "shape": "StoreOptions"
        },
        "storeSizeBytes": {
          "shape": "Long"
        },
        "tags": {
          "shape": "TagMap"
        },
        "updateTime": {
          "shape": "UpdateTime"
        }
      },
      "required": [
        "id",
        "reference",
        "status",
        "storeArn",
        "name",
        "description",
        "sseConfig",
        "creationTime",
        "updateTime",
        "tags",
        "statusMessage",
        "storeSizeBytes",
        "numVersions"
      ],
      "type": "structure"
    },
    "GetAnnotationStoreVersionRequest": {
      "members": {
        "name": {
          "location": "uri",
          "locationName": "name",
          "shape": "String"
        },
        "versionName": {
          "location": "uri",
          "locationName": "versionName",
          "shape": "String"
        }
      },
      "required": [
        "name",
        "versionName"
      ],
      "type": "structure"
    },
    "GetAnnotationStoreVersionResponse": {
      "members": {
        "creationTime": {
          "shape": "CreationTime"
        },
        "description": {
          "shape": "Description"
        },
        "id": {
          "shape": "ResourceId"
        },
        "name": {
          "shape": "StoreName"
        },
        "status": {
          "shape": "VersionStatus"
        },
        "statusMessage": {
          "shape": "StatusMessage"
        },
        "storeId": {
          "shape": "ResourceId"
        },
        "tags": {
          "shape": "TagMap"
        },
        "updateTime": {
          "shape": "UpdateTime"
        },
        "versionArn": {
          "shape": "Arn"
        },
        "versionName": {
          "shape": "VersionName"
        },
        "versionOptions": {
          "shape": "VersionOptions"
        },
        "versionSizeBytes": {
          "shape": "Long"
        }
      },
      "required": [
        "storeId",
        "id",
        "status",
        "versionArn",
        "name",
        "versionName",
        "description",
        "creationTime",
        "updateTime",
        "tags",
        "statusMessage",
        "versionSizeBytes"
      ],
      "type": "structure"
    },
    "GetReadSetActivationJobRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "ActivationJobId"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        }
      },
      "required": [
        "id",
        "sequenceStoreId"
      ],
      "type": "structure"
    },
    "GetReadSetActivationJobResponse": {
      "members": {
        "completionTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "id": {
          "shape": "ActivationJobId"
        },
        "sequenceStoreId": {
          "shape": "SequenceStoreId"
        },
        "sources": {
          "shape": "ActivateReadSetSourceList"
        },
        "status": {
          "shape": "ReadSetActivationJobStatus"
        },
        "statusMessage": {
          "shape": "JobStatusMessage"
        }
      },
      "required": [
        "id",
        "sequenceStoreId",
        "status",
        "creationTime"
      ],
      "type": "structure"
    },
    "GetReadSetExportJobRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "ExportJobId"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        }
      },
      "required": [
        "sequenceStoreId",
        "id"
      ],
      "type": "structure"
    },
    "GetReadSetExportJobResponse": {
      "members": {
        "completionTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "destination": {
          "shape": "S3Destination"
        },
        "id": {
          "shape": "ExportJobId"
        },
        "readSets": {
          "shape": "ExportReadSetDetailList"
        },
        "sequenceStoreId": {
          "shape": "SequenceStoreId"
        },
        "status": {
          "shape": "ReadSetExportJobStatus"
        },
        "statusMessage": {
          "shape": "JobStatusMessage"
        }
      },
      "required": [
        "id",
        "sequenceStoreId",
        "destination",
        "status",
        "creationTime"
      ],
      "type": "structure"
    },
    "GetReadSetImportJobRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "ImportJobId"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        }
      },
      "required": [
        "id",
        "sequenceStoreId"
      ],
      "type": "structure"
    },
    "GetReadSetImportJobResponse": {
      "members": {
        "completionTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "id": {
          "shape": "ImportJobId"
        },
        "roleArn": {
          "shape": "RoleArn"
        },
        "sequenceStoreId": {
          "shape": "SequenceStoreId"
        },
        "sources": {
          "shape": "ImportReadSetSourceList"
        },
        "status": {
          "shape": "ReadSetImportJobStatus"
        },
        "statusMessage": {
          "shape": "JobStatusMessage"
        }
      },
      "required": [
        "id",
        "sequenceStoreId",
        "roleArn",
        "status",
        "creationTime",
        "sources"
      ],
      "type": "structure"
    },
    "GetReadSetMetadataRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "ReadSetId"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        }
      },
      "required": [
        "id",
        "sequenceStoreId"
      ],
      "type": "structure"
    },
    "GetReadSetMetadataResponse": {
      "members": {
        "arn": {
          "shape": "ReadSetArn"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "creationType": {
          "shape": "CreationType"
        },
        "description": {
          "shape": "ReadSetDescription"
        },
        "etag": {
          "shape": "ETag"
        },
        "fileType": {
          "shape": "FileType"
        },
        "files": {
          "shape": "ReadSetFiles"
        },
        "id": {
          "shape": "ReadSetId"
        },
        "name": {
          "shape": "ReadSetName"
        },
        "referenceArn": {
          "shape": "ReferenceArn"
        },
        "sampleId": {
          "shape": "SampleId"
        },
        "sequenceInformation": {
          "shape": "SequenceInformation"
        },
        "sequenceStoreId": {
          "shape": "SequenceStoreId"
        },
        "status": {
          "shape": "ReadSetStatus"
        },
        "statusMessage": {
          "shape": "ReadSetStatusMessage"
        },
        "subjectId": {
          "shape": "SubjectId"
        }
      },
      "required": [
        "id",
        "arn",
        "sequenceStoreId",
        "status",
        "fileType",
        "creationTime"
      ],
      "type": "structure"
    },
    "GetReadSetRequest": {
      "members": {
        "file": {
          "location": "querystring",
          "locationName": "file",
          "shape": "ReadSetFile"
        },
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "ReadSetId"
        },
        "partNumber": {
          "location": "querystring",
          "locationName": "partNumber",
          "shape": "GetReadSetRequestPartNumberInteger"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        }
      },
      "required": [
        "id",
        "sequenceStoreId",
        "partNumber"
      ],
      "type": "structure"
    },
    "GetReadSetRequestPartNumberInteger": {
      "box": true,
      "max": 10000,
      "min": 1,
      "type": "integer"
    },
    "GetReadSetResponse": {
      "members": {
        "payload": {
          "shape": "ReadSetStreamingBlob"
        }
      },
      "payload": "payload",
      "type": "structure"
    },
    "GetReferenceImportJobRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "ImportJobId"
        },
        "referenceStoreId": {
          "location": "uri",
          "locationName": "referenceStoreId",
          "shape": "ReferenceStoreId"
        }
      },
      "required": [
        "id",
        "referenceStoreId"
      ],
      "type": "structure"
    },
    "GetReferenceImportJobResponse": {
      "members": {
        "completionTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "id": {
          "shape": "ImportJobId"
        },
        "referenceStoreId": {
          "shape": "ReferenceStoreId"
        },
        "roleArn": {
          "shape": "RoleArn"
        },
        "sources": {
          "shape": "ImportReferenceSourceList"
        },
        "status": {
          "shape": "ReferenceImportJobStatus"
        },
        "statusMessage": {
          "shape": "JobStatusMessage"
        }
      },
      "required": [
        "id",
        "referenceStoreId",
        "roleArn",
        "status",
        "creationTime",
        "sources"
      ],
      "type": "structure"
    },
    "GetReferenceMetadataRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "ReferenceId"
        },
        "referenceStoreId": {
          "location": "uri",
          "locationName": "referenceStoreId",
          "shape": "ReferenceStoreId"
        }
      },
      "required": [
        "id",
        "referenceStoreId"
      ],
      "type": "structure"
    },
    "GetReferenceMetadataResponse": {
      "members": {
        "arn": {
          "shape": "ReferenceArn"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "description": {
          "shape": "ReferenceDescription"
        },
        "files": {
          "shape": "ReferenceFiles"
        },
        "id": {
          "shape": "ReferenceId"
        },
        "md5": {
          "shape": "Md5"
        },
        "name": {
          "shape": "ReferenceName"
        },
        "referenceStoreId": {
          "shape": "ReferenceStoreId"
        },
        "status": {
          "shape": "ReferenceStatus"
        },
        "updateTime": {
          "shape": "SyntheticTimestamp_date_time"
        }
      },
      "required": [
        "id",
        "arn",
        "referenceStoreId",
        "md5",
        "creationTime",
        "updateTime"
      ],
      "type": "structure"
    },
    "GetReferenceRequest": {
      "members": {
        "file": {
          "location": "querystring",
          "locationName": "file",
          "shape": "ReferenceFile"
        },
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "ReferenceId"
        },
        "partNumber": {
          "location": "querystring",
          "locationName": "partNumber",
          "shape": "GetReferenceRequestPartNumberInteger"
        },
        "range": {
          "location": "header",
          "locationName": "Range",
          "shape": "Range"
        },
        "referenceStoreId": {
          "location": "uri",
          "locationName": "referenceStoreId",
          "shape": "ReferenceStoreId"
        }
      },
      "required": [
        "id",
        "referenceStoreId",
        "partNumber"
      ],
      "type": "structure"
    },
    "GetReferenceRequestPartNumberInteger": {
      "box": true,
      "max": 10000,
      "min": 1,
      "type": "integer"
    },
    "GetReferenceResponse": {
      "members": {
        "payload": {
          "shape": "ReferenceStreamingBlob"
        }
      },
      "payload": "payload",
      "type": "structure"
    },
    "GetReferenceStoreRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "ReferenceStoreId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "GetReferenceStoreResponse": {
      "members": {
        "arn": {
          "shape": "ReferenceStoreArn"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "description": {
          "shape": "ReferenceStoreDescription"
        },
        "id": {
          "shape": "ReferenceStoreId"
        },
        "name": {
          "shape": "ReferenceStoreName"
        },
        "sseConfig": {
          "shape": "SseConfig"
        }
      },
      "required": [
        "id",
        "arn",
        "creationTime"
      ],
      "type": "structure"
    },
    "GetRunGroupRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "RunGroupId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "GetRunGroupResponse": {
      "members": {
        "arn": {
          "shape": "RunGroupArn"
        },
        "creationTime": {
          "shape": "RunGroupTimestamp"
        },
        "id": {
          "shape": "RunGroupId"
        },
        "maxCpus": {
          "shape": "GetRunGroupResponseMaxCpusInteger"
        },
        "maxDuration": {
          "shape": "GetRunGroupResponseMaxDurationInteger"
        },
        "maxGpus": {
          "shape": "GetRunGroupResponseMaxGpusInteger"
        },
        "maxRuns": {
          "shape": "GetRunGroupResponseMaxRunsInteger"
        },
        "name": {
          "shape": "RunGroupName"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "GetRunGroupResponseMaxCpusInteger": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "integer"
    },
    "GetRunGroupResponseMaxDurationInteger": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "integer"
    },
    "GetRunGroupResponseMaxGpusInteger": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "integer"
    },
    "GetRunGroupResponseMaxRunsInteger": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "integer"
    },
    "GetRunRequest": {
      "members": {
        "export": {
          "location": "querystring",
          "locationName": "export",
          "shape": "RunExportList"
        },
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "RunId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "GetRunResponse": {
      "members": {
        "accelerators": {
          "shape": "Accelerators"
        },
        "arn": {
          "shape": "RunArn"
        },
        "creationTime": {
          "shape": "RunTimestamp"
        },
        "definition": {
          "shape": "WorkflowDefinition"
        },
        "digest": {
          "shape": "WorkflowDigest"
        },
        "id": {
          "shape": "RunId"
        },
        "logLevel": {
          "shape": "RunLogLevel"
        },
        "name": {
          "shape": "RunName"
        },
        "outputUri": {
          "shape": "RunOutputUri"
        },
        "priority": {
          "shape": "GetRunResponsePriorityInteger"
        },
        "resourceDigests": {
          "shape": "RunResourceDigests"
        },
        "retentionMode": {
          "shape": "RunRetentionMode"
        },
        "roleArn": {
          "shape": "RunRoleArn"
        },
        "runGroupId": {
          "shape": "RunGroupId"
        },
        "runId": {
          "shape": "RunId"
        },
        "startTime": {
          "shape": "RunTimestamp"
        },
        "startedBy": {
          "shape": "RunStartedBy"
        },
        "status": {
          "shape": "RunStatus"
        },
        "statusMessage": {
          "shape": "RunStatusMessage"
        },
        "stopTime": {
          "shape": "RunTimestamp"
        },
        "storageCapacity": {
          "shape": "GetRunResponseStorageCapacityInteger"
        },
        "tags": {
          "shape": "TagMap"
        },
        "workflowId": {
          "shape": "WorkflowId"
        },
        "workflowType": {
          "shape": "WorkflowType"
        }
      },
      "type": "structure"
    },
    "GetRunResponsePriorityInteger": {
      "box": true,
      "max": 100000,
      "min": 0,
      "type": "integer"
    },
    "GetRunResponseStorageCapacityInteger": {
      "box": true,
      "max": 100000,
      "min": 0,
      "type": "integer"
    },
    "GetRunTaskRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "RunId"
        },
        "taskId": {
          "location": "uri",
          "locationName": "taskId",
          "shape": "TaskId"
        }
      },
      "required": [
        "id",
        "taskId"
      ],
      "type": "structure"
    },
    "GetRunTaskResponse": {
      "members": {
        "cpus": {
          "shape": "GetRunTaskResponseCpusInteger"
        },
        "creationTime": {
          "shape": "TaskTimestamp"
        },
        "gpus": {
          "shape": "GetRunTaskResponseGpusInteger"
        },
        "instanceType": {
          "shape": "TaskInstanceType"
        },
        "logStream": {
          "shape": "TaskLogStream"
        },
        "memory": {
          "shape": "GetRunTaskResponseMemoryInteger"
        },
        "name": {
          "shape": "TaskName"
        },
        "startTime": {
          "shape": "TaskTimestamp"
        },
        "status": {
          "shape": "TaskStatus"
        },
        "statusMessage": {
          "shape": "TaskStatusMessage"
        },
        "stopTime": {
          "shape": "TaskTimestamp"
        },
        "taskId": {
          "shape": "TaskId"
        }
      },
      "type": "structure"
    },
    "GetRunTaskResponseCpusInteger": {
      "box": true,
      "min": 1,
      "type": "integer"
    },
    "GetRunTaskResponseGpusInteger": {
      "box": true,
      "min": 0,
      "type": "integer"
    },
    "GetRunTaskResponseMemoryInteger": {
      "box": true,
      "min": 1,
      "type": "integer"
    },
    "GetSequenceStoreRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "SequenceStoreId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "GetSequenceStoreResponse": {
      "members": {
        "arn": {
          "shape": "SequenceStoreArn"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "description": {
          "shape": "SequenceStoreDescription"
        },
        "fallbackLocation": {
          "shape": "S3Destination"
        },
        "id": {
          "shape": "SequenceStoreId"
        },
        "name": {
          "shape": "SequenceStoreName"
        },
        "sseConfig": {
          "shape": "SseConfig"
        }
      },
      "required": [
        "id",
        "arn",
        "creationTime"
      ],
      "type": "structure"
    },
    "GetShareRequest": {
      "members": {
        "shareId": {
          "location": "uri",
          "locationName": "shareId",
          "shape": "String"
        }
      },
      "required": [
        "shareId"
      ],
      "type": "structure"
    },
    "GetShareResponse": {
      "members": {
        "share": {
          "shape": "ShareDetails"
        }
      },
      "type": "structure"
    },
    "GetVariantImportRequest": {
      "members": {
        "jobId": {
          "location": "uri",
          "locationName": "jobId",
          "shape": "ResourceId"
        }
      },
      "required": [
        "jobId"
      ],
      "type": "structure"
    },
    "GetVariantImportResponse": {
      "members": {
        "annotationFields": {
          "shape": "AnnotationFieldMap"
        },
        "completionTime": {
          "shape": "CompletionTime"
        },
        "creationTime": {
          "shape": "CreationTime"
        },
        "destinationName": {
          "shape": "StoreName"
        },
        "id": {
          "shape": "ResourceId"
        },
        "items": {
          "shape": "VariantImportItemDetails"
        },
        "roleArn": {
          "shape": "Arn"
        },
        "runLeftNormalization": {
          "shape": "RunLeftNormalization"
        },
        "status": {
          "shape": "JobStatus"
        },
        "statusMessage": {
          "shape": "JobStatusMsg"
        },
        "updateTime": {
          "shape": "UpdateTime"
        }
      },
      "required": [
        "id",
        "destinationName",
        "roleArn",
        "status",
        "statusMessage",
        "creationTime",
        "updateTime",
        "items",
        "runLeftNormalization"
      ],
      "type": "structure"
    },
    "GetVariantStoreRequest": {
      "members": {
        "name": {
          "location": "uri",
          "locationName": "name",
          "shape": "String"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "GetVariantStoreResponse": {
      "members": {
        "creationTime": {
          "shape": "CreationTime"
        },
        "description": {
          "shape": "Description"
        },
        "id": {
          "shape": "ResourceId"
        },
        "name": {
          "shape": "String"
        },
        "reference": {
          "shape": "ReferenceItem"
        },
        "sseConfig": {
          "shape": "SseConfig"
        },
        "status": {
          "shape": "StoreStatus"
        },
        "statusMessage": {
          "shape": "StatusMessage"
        },
        "storeArn": {
          "shape": "Arn"
        },
        "storeSizeBytes": {
          "shape": "Long"
        },
        "tags": {
          "shape": "TagMap"
        },
        "updateTime": {
          "shape": "UpdateTime"
        }
      },
      "required": [
        "id",
        "reference",
        "status",
        "storeArn",
        "name",
        "description",
        "sseConfig",
        "creationTime",
        "updateTime",
        "tags",
        "statusMessage",
        "storeSizeBytes"
      ],
      "type": "structure"
    },
    "GetWorkflowRequest": {
      "members": {
        "export": {
          "location": "querystring",
          "locationName": "export",
          "shape": "WorkflowExportList"
        },
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "WorkflowId"
        },
        "type": {
          "location": "querystring",
          "locationName": "type",
          "shape": "WorkflowType"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "GetWorkflowResponse": {
      "members": {
        "accelerators": {
          "shape": "Accelerators"
        },
        "arn": {
          "shape": "WorkflowArn"
        },
        "creationTime": {
          "shape": "WorkflowTimestamp"
        },
        "definition": {
          "shape": "WorkflowDefinition"
        },
        "description": {
          "shape": "WorkflowDescription"
        },
        "digest": {
          "shape": "WorkflowDigest"
        },
        "engine": {
          "shape": "WorkflowEngine"
        },
        "id": {
          "shape": "WorkflowId"
        },
        "main": {
          "shape": "WorkflowMain"
        },
        "metadata": {
          "shape": "WorkflowMetadata"
        },
        "name": {
          "shape": "WorkflowName"
        },
        "parameterTemplate": {
          "shape": "WorkflowParameterTemplate"
        },
        "status": {
          "shape": "WorkflowStatus"
        },
        "statusMessage": {
          "shape": "WorkflowStatusMessage"
        },
        "storageCapacity": {
          "shape": "GetWorkflowResponseStorageCapacityInteger"
        },
        "tags": {
          "shape": "TagMap"
        },
        "type": {
          "shape": "WorkflowType"
        }
      },
      "type": "structure"
    },
    "GetWorkflowResponseStorageCapacityInteger": {
      "box": true,
      "max": 100000,
      "min": 0,
      "type": "integer"
    },
    "Header": {
      "type": "boolean"
    },
    "ImportJobId": {
      "max": 36,
      "min": 10,
      "pattern": "[0-9]+",
      "type": "string"
    },
    "ImportReadSetFilter": {
      "members": {
        "createdAfter": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "createdBefore": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "status": {
          "shape": "ReadSetImportJobStatus"
        }
      },
      "type": "structure"
    },
    "ImportReadSetJobItem": {
      "members": {
        "completionTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "id": {
          "shape": "ImportJobId"
        },
        "roleArn": {
          "shape": "RoleArn"
        },
        "sequenceStoreId": {
          "shape": "SequenceStoreId"
        },
        "status": {
          "shape": "ReadSetImportJobStatus"
        }
      },
      "required": [
        "id",
        "sequenceStoreId",
        "roleArn",
        "status",
        "creationTime"
      ],
      "type": "structure"
    },
    "ImportReadSetJobList": {
      "member": {
        "shape": "ImportReadSetJobItem"
      },
      "type": "list"
    },
    "ImportReadSetSourceItem": {
      "members": {
        "description": {
          "shape": "ReadSetDescription"
        },
        "generatedFrom": {
          "shape": "GeneratedFrom"
        },
        "name": {
          "shape": "ReadSetName"
        },
        "referenceArn": {
          "shape": "ReferenceArn"
        },
        "sampleId": {
          "shape": "SampleId"
        },
        "sourceFileType": {
          "shape": "FileType"
        },
        "sourceFiles": {
          "shape": "SourceFiles"
        },
        "status": {
          "shape": "ReadSetImportJobItemStatus"
        },
        "statusMessage": {
          "shape": "JobStatusMessage"
        },
        "subjectId": {
          "shape": "SubjectId"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "required": [
        "sourceFiles",
        "sourceFileType",
        "status",
        "subjectId",
        "sampleId"
      ],
      "type": "structure"
    },
    "ImportReadSetSourceList": {
      "member": {
        "shape": "ImportReadSetSourceItem"
      },
      "type": "list"
    },
    "ImportReferenceFilter": {
      "members": {
        "createdAfter": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "createdBefore": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "status": {
          "shape": "ReferenceImportJobStatus"
        }
      },
      "type": "structure"
    },
    "ImportReferenceJobItem": {
      "members": {
        "completionTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "id": {
          "shape": "ImportJobId"
        },
        "referenceStoreId": {
          "shape": "ReferenceStoreId"
        },
        "roleArn": {
          "shape": "RoleArn"
        },
        "status": {
          "shape": "ReferenceImportJobStatus"
        }
      },
      "required": [
        "id",
        "referenceStoreId",
        "roleArn",
        "status",
        "creationTime"
      ],
      "type": "structure"
    },
    "ImportReferenceJobList": {
      "member": {
        "shape": "ImportReferenceJobItem"
      },
      "type": "list"
    },
    "ImportReferenceSourceItem": {
      "members": {
        "description": {
          "shape": "ReferenceDescription"
        },
        "name": {
          "shape": "ReferenceName"
        },
        "sourceFile": {
          "shape": "S3Uri"
        },
        "status": {
          "shape": "ReferenceImportJobItemStatus"
        },
        "statusMessage": {
          "shape": "JobStatusMessage"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "required": [
        "status"
      ],
      "type": "structure"
    },
    "ImportReferenceSourceList": {
      "member": {
        "shape": "ImportReferenceSourceItem"
      },
      "type": "list"
    },
    "Integer": {
      "box": true,
      "type": "integer"
    },
    "InternalServerException": {
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "JobStatus": {
      "enum": [
        "SUBMITTED",
        "IN_PROGRESS",
        "CANCELLED",
        "COMPLETED",
        "FAILED",
        "COMPLETED_WITH_FAILURES"
      ],
      "type": "string"
    },
    "JobStatusMessage": {
      "max": 127,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "JobStatusMsg": {
      "type": "string"
    },
    "LineSep": {
      "max": 20,
      "min": 1,
      "type": "string"
    },
    "ListAnnotationImportJobsFilter": {
      "members": {
        "status": {
          "shape": "JobStatus"
        },
        "storeName": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListAnnotationImportJobsRequest": {
      "members": {
        "filter": {
          "shape": "ListAnnotationImportJobsFilter"
        },
        "ids": {
          "shape": "ListAnnotationImportJobsRequestIdsList"
        },
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListAnnotationImportJobsRequestMaxResultsInteger"
        },
        "nextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "ListAnnotationImportJobsRequestNextTokenString"
        }
      },
      "type": "structure"
    },
    "ListAnnotationImportJobsRequestIdsList": {
      "max": 20,
      "member": {
        "shape": "ResourceIdentifier"
      },
      "min": 1,
      "type": "list"
    },
    "ListAnnotationImportJobsRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListAnnotationImportJobsRequestNextTokenString": {
      "max": 10000,
      "min": 1,
      "type": "string"
    },
    "ListAnnotationImportJobsResponse": {
      "members": {
        "annotationImportJobs": {
          "shape": "AnnotationImportJobItems"
        },
        "nextToken": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListAnnotationStoreVersionsFilter": {
      "members": {
        "status": {
          "shape": "VersionStatus"
        }
      },
      "type": "structure"
    },
    "ListAnnotationStoreVersionsRequest": {
      "members": {
        "filter": {
          "shape": "ListAnnotationStoreVersionsFilter"
        },
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListAnnotationStoreVersionsRequestMaxResultsInteger"
        },
        "name": {
          "location": "uri",
          "locationName": "name",
          "shape": "String"
        },
        "nextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "ListAnnotationStoreVersionsRequestNextTokenString"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "ListAnnotationStoreVersionsRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListAnnotationStoreVersionsRequestNextTokenString": {
      "max": 10000,
      "min": 1,
      "type": "string"
    },
    "ListAnnotationStoreVersionsResponse": {
      "members": {
        "annotationStoreVersions": {
          "shape": "AnnotationStoreVersionItems"
        },
        "nextToken": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListAnnotationStoresFilter": {
      "members": {
        "status": {
          "shape": "StoreStatus"
        }
      },
      "type": "structure"
    },
    "ListAnnotationStoresRequest": {
      "members": {
        "filter": {
          "shape": "ListAnnotationStoresFilter"
        },
        "ids": {
          "shape": "ListAnnotationStoresRequestIdsList"
        },
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListAnnotationStoresRequestMaxResultsInteger"
        },
        "nextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "ListAnnotationStoresRequestNextTokenString"
        }
      },
      "type": "structure"
    },
    "ListAnnotationStoresRequestIdsList": {
      "max": 20,
      "member": {
        "shape": "ResourceIdentifier"
      },
      "min": 1,
      "type": "list"
    },
    "ListAnnotationStoresRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListAnnotationStoresRequestNextTokenString": {
      "max": 10000,
      "min": 1,
      "type": "string"
    },
    "ListAnnotationStoresResponse": {
      "members": {
        "annotationStores": {
          "shape": "AnnotationStoreItems"
        },
        "nextToken": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListMultipartReadSetUploadsRequest": {
      "members": {
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListMultipartReadSetUploadsRequestMaxResultsInteger"
        },
        "nextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        }
      },
      "required": [
        "sequenceStoreId"
      ],
      "type": "structure"
    },
    "ListMultipartReadSetUploadsRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListMultipartReadSetUploadsResponse": {
      "members": {
        "nextToken": {
          "shape": "NextToken"
        },
        "uploads": {
          "shape": "MultipartReadSetUploadList"
        }
      },
      "type": "structure"
    },
    "ListReadSetActivationJobsRequest": {
      "members": {
        "filter": {
          "shape": "ActivateReadSetFilter"
        },
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListReadSetActivationJobsRequestMaxResultsInteger"
        },
        "nextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        }
      },
      "required": [
        "sequenceStoreId"
      ],
      "type": "structure"
    },
    "ListReadSetActivationJobsRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListReadSetActivationJobsResponse": {
      "members": {
        "activationJobs": {
          "shape": "ActivateReadSetJobList"
        },
        "nextToken": {
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListReadSetExportJobsRequest": {
      "members": {
        "filter": {
          "shape": "ExportReadSetFilter"
        },
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListReadSetExportJobsRequestMaxResultsInteger"
        },
        "nextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        }
      },
      "required": [
        "sequenceStoreId"
      ],
      "type": "structure"
    },
    "ListReadSetExportJobsRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListReadSetExportJobsResponse": {
      "members": {
        "exportJobs": {
          "shape": "ExportReadSetJobDetailList"
        },
        "nextToken": {
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListReadSetImportJobsRequest": {
      "members": {
        "filter": {
          "shape": "ImportReadSetFilter"
        },
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListReadSetImportJobsRequestMaxResultsInteger"
        },
        "nextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        }
      },
      "required": [
        "sequenceStoreId"
      ],
      "type": "structure"
    },
    "ListReadSetImportJobsRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListReadSetImportJobsResponse": {
      "members": {
        "importJobs": {
          "shape": "ImportReadSetJobList"
        },
        "nextToken": {
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListReadSetUploadPartsRequest": {
      "members": {
        "filter": {
          "shape": "ReadSetUploadPartListFilter"
        },
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListReadSetUploadPartsRequestMaxResultsInteger"
        },
        "nextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "partSource": {
          "shape": "ReadSetPartSource"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        },
        "uploadId": {
          "location": "uri",
          "locationName": "uploadId",
          "shape": "UploadId"
        }
      },
      "required": [
        "sequenceStoreId",
        "uploadId",
        "partSource"
      ],
      "type": "structure"
    },
    "ListReadSetUploadPartsRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListReadSetUploadPartsResponse": {
      "members": {
        "nextToken": {
          "shape": "NextToken"
        },
        "parts": {
          "shape": "ReadSetUploadPartList"
        }
      },
      "type": "structure"
    },
    "ListReadSetsRequest": {
      "members": {
        "filter": {
          "shape": "ReadSetFilter"
        },
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListReadSetsRequestMaxResultsInteger"
        },
        "nextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        }
      },
      "required": [
        "sequenceStoreId"
      ],
      "type": "structure"
    },
    "ListReadSetsRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListReadSetsResponse": {
      "members": {
        "nextToken": {
          "shape": "NextToken"
        },
        "readSets": {
          "shape": "ReadSetList"
        }
      },
      "required": [
        "readSets"
      ],
      "type": "structure"
    },
    "ListReferenceImportJobsRequest": {
      "members": {
        "filter": {
          "shape": "ImportReferenceFilter"
        },
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListReferenceImportJobsRequestMaxResultsInteger"
        },
        "nextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "referenceStoreId": {
          "location": "uri",
          "locationName": "referenceStoreId",
          "shape": "ReferenceStoreId"
        }
      },
      "required": [
        "referenceStoreId"
      ],
      "type": "structure"
    },
    "ListReferenceImportJobsRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListReferenceImportJobsResponse": {
      "members": {
        "importJobs": {
          "shape": "ImportReferenceJobList"
        },
        "nextToken": {
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListReferenceStoresRequest": {
      "members": {
        "filter": {
          "shape": "ReferenceStoreFilter"
        },
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListReferenceStoresRequestMaxResultsInteger"
        },
        "nextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListReferenceStoresRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListReferenceStoresResponse": {
      "members": {
        "nextToken": {
          "shape": "NextToken"
        },
        "referenceStores": {
          "shape": "ReferenceStoreDetailList"
        }
      },
      "required": [
        "referenceStores"
      ],
      "type": "structure"
    },
    "ListReferencesRequest": {
      "members": {
        "filter": {
          "shape": "ReferenceFilter"
        },
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListReferencesRequestMaxResultsInteger"
        },
        "nextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "referenceStoreId": {
          "location": "uri",
          "locationName": "referenceStoreId",
          "shape": "ReferenceStoreId"
        }
      },
      "required": [
        "referenceStoreId"
      ],
      "type": "structure"
    },
    "ListReferencesRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListReferencesResponse": {
      "members": {
        "nextToken": {
          "shape": "NextToken"
        },
        "references": {
          "shape": "ReferenceList"
        }
      },
      "required": [
        "references"
      ],
      "type": "structure"
    },
    "ListRunGroupsRequest": {
      "members": {
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListRunGroupsRequestMaxResultsInteger"
        },
        "name": {
          "location": "querystring",
          "locationName": "name",
          "shape": "RunGroupName"
        },
        "startingToken": {
          "location": "querystring",
          "locationName": "startingToken",
          "shape": "RunGroupListToken"
        }
      },
      "type": "structure"
    },
    "ListRunGroupsRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListRunGroupsResponse": {
      "members": {
        "items": {
          "shape": "RunGroupList"
        },
        "nextToken": {
          "shape": "RunGroupListToken"
        }
      },
      "type": "structure"
    },
    "ListRunTasksRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "RunId"
        },
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListRunTasksRequestMaxResultsInteger"
        },
        "startingToken": {
          "location": "querystring",
          "locationName": "startingToken",
          "shape": "TaskListToken"
        },
        "status": {
          "location": "querystring",
          "locationName": "status",
          "shape": "TaskStatus"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "ListRunTasksRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListRunTasksResponse": {
      "members": {
        "items": {
          "shape": "TaskList"
        },
        "nextToken": {
          "shape": "TaskListToken"
        }
      },
      "type": "structure"
    },
    "ListRunsRequest": {
      "members": {
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListRunsRequestMaxResultsInteger"
        },
        "name": {
          "location": "querystring",
          "locationName": "name",
          "shape": "RunName"
        },
        "runGroupId": {
          "location": "querystring",
          "locationName": "runGroupId",
          "shape": "RunGroupId"
        },
        "startingToken": {
          "location": "querystring",
          "locationName": "startingToken",
          "shape": "RunListToken"
        },
        "status": {
          "location": "querystring",
          "locationName": "status",
          "shape": "RunStatus"
        }
      },
      "type": "structure"
    },
    "ListRunsRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListRunsResponse": {
      "members": {
        "items": {
          "shape": "RunList"
        },
        "nextToken": {
          "shape": "RunListToken"
        }
      },
      "type": "structure"
    },
    "ListSequenceStoresRequest": {
      "members": {
        "filter": {
          "shape": "SequenceStoreFilter"
        },
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListSequenceStoresRequestMaxResultsInteger"
        },
        "nextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListSequenceStoresRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListSequenceStoresResponse": {
      "members": {
        "nextToken": {
          "shape": "NextToken"
        },
        "sequenceStores": {
          "shape": "SequenceStoreDetailList"
        }
      },
      "required": [
        "sequenceStores"
      ],
      "type": "structure"
    },
    "ListSharesRequest": {
      "members": {
        "filter": {
          "shape": "Filter"
        },
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "Integer"
        },
        "nextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "String"
        },
        "resourceOwner": {
          "shape": "ResourceOwner"
        }
      },
      "required": [
        "resourceOwner"
      ],
      "type": "structure"
    },
    "ListSharesResponse": {
      "members": {
        "nextToken": {
          "shape": "String"
        },
        "shares": {
          "shape": "ShareDetailsList"
        }
      },
      "required": [
        "shares"
      ],
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "resourceArn": {
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "TagArn"
        }
      },
      "required": [
        "resourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "tags": {
          "shape": "TagMap"
        }
      },
      "required": [
        "tags"
      ],
      "type": "structure"
    },
    "ListVariantImportJobsFilter": {
      "members": {
        "status": {
          "shape": "JobStatus"
        },
        "storeName": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListVariantImportJobsRequest": {
      "members": {
        "filter": {
          "shape": "ListVariantImportJobsFilter"
        },
        "ids": {
          "shape": "ListVariantImportJobsRequestIdsList"
        },
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListVariantImportJobsRequestMaxResultsInteger"
        },
        "nextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "ListVariantImportJobsRequestNextTokenString"
        }
      },
      "type": "structure"
    },
    "ListVariantImportJobsRequestIdsList": {
      "max": 20,
      "member": {
        "shape": "ResourceIdentifier"
      },
      "min": 1,
      "type": "list"
    },
    "ListVariantImportJobsRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListVariantImportJobsRequestNextTokenString": {
      "max": 10000,
      "min": 1,
      "type": "string"
    },
    "ListVariantImportJobsResponse": {
      "members": {
        "nextToken": {
          "shape": "String"
        },
        "variantImportJobs": {
          "shape": "VariantImportJobItems"
        }
      },
      "type": "structure"
    },
    "ListVariantStoresFilter": {
      "members": {
        "status": {
          "shape": "StoreStatus"
        }
      },
      "type": "structure"
    },
    "ListVariantStoresRequest": {
      "members": {
        "filter": {
          "shape": "ListVariantStoresFilter"
        },
        "ids": {
          "shape": "ListVariantStoresRequestIdsList"
        },
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListVariantStoresRequestMaxResultsInteger"
        },
        "nextToken": {
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "ListVariantStoresRequestNextTokenString"
        }
      },
      "type": "structure"
    },
    "ListVariantStoresRequestIdsList": {
      "max": 20,
      "member": {
        "shape": "ResourceIdentifier"
      },
      "min": 1,
      "type": "list"
    },
    "ListVariantStoresRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListVariantStoresRequestNextTokenString": {
      "max": 10000,
      "min": 1,
      "type": "string"
    },
    "ListVariantStoresResponse": {
      "members": {
        "nextToken": {
          "shape": "String"
        },
        "variantStores": {
          "shape": "VariantStoreItems"
        }
      },
      "type": "structure"
    },
    "ListWorkflowsRequest": {
      "members": {
        "maxResults": {
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListWorkflowsRequestMaxResultsInteger"
        },
        "name": {
          "location": "querystring",
          "locationName": "name",
          "shape": "WorkflowName"
        },
        "startingToken": {
          "location": "querystring",
          "locationName": "startingToken",
          "shape": "WorkflowListToken"
        },
        "type": {
          "location": "querystring",
          "locationName": "type",
          "shape": "WorkflowType"
        }
      },
      "type": "structure"
    },
    "ListWorkflowsRequestMaxResultsInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListWorkflowsResponse": {
      "members": {
        "items": {
          "shape": "WorkflowList"
        },
        "nextToken": {
          "shape": "WorkflowListToken"
        }
      },
      "type": "structure"
    },
    "Long": {
      "box": true,
      "type": "long"
    },
    "Md5": {
      "max": 255,
      "min": 1,
      "pattern": "[\\p{L}||\\p{N}]+",
      "type": "string"
    },
    "MultipartReadSetUploadList": {
      "member": {
        "shape": "MultipartReadSetUploadListItem"
      },
      "type": "list"
    },
    "MultipartReadSetUploadListItem": {
      "members": {
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "description": {
          "shape": "ReadSetDescription"
        },
        "generatedFrom": {
          "shape": "GeneratedFrom"
        },
        "name": {
          "shape": "ReadSetName"
        },
        "referenceArn": {
          "shape": "ReferenceArn"
        },
        "sampleId": {
          "shape": "SampleId"
        },
        "sequenceStoreId": {
          "shape": "SequenceStoreId"
        },
        "sourceFileType": {
          "shape": "FileType"
        },
        "subjectId": {
          "shape": "SubjectId"
        },
        "tags": {
          "shape": "TagMap"
        },
        "uploadId": {
          "shape": "UploadId"
        }
      },
      "required": [
        "sequenceStoreId",
        "uploadId",
        "sourceFileType",
        "subjectId",
        "sampleId",
        "generatedFrom",
        "referenceArn",
        "creationTime"
      ],
      "type": "structure"
    },
    "NextToken": {
      "max": 6144,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "NotSupportedOperationException": {
      "error": {
        "httpStatusCode": 405,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "PrimitiveBoolean": {
      "type": "boolean"
    },
    "Quote": {
      "max": 1,
      "min": 1,
      "type": "string"
    },
    "QuoteAll": {
      "type": "boolean"
    },
    "Range": {
      "max": 127,
      "min": 1,
      "pattern": "[\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "RangeNotSatisfiableException": {
      "error": {
        "httpStatusCode": 416,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "ReadOptions": {
      "members": {
        "comment": {
          "shape": "CommentChar"
        },
        "encoding": {
          "shape": "Encoding"
        },
        "escape": {
          "shape": "EscapeChar"
        },
        "escapeQuotes": {
          "shape": "EscapeQuotes"
        },
        "header": {
          "shape": "Header"
        },
        "lineSep": {
          "shape": "LineSep"
        },
        "quote": {
          "shape": "Quote"
        },
        "quoteAll": {
          "shape": "QuoteAll"
        },
        "sep": {
          "shape": "Separator"
        }
      },
      "type": "structure"
    },
    "ReadSetActivationJobItemStatus": {
      "enum": [
        "NOT_STARTED",
        "IN_PROGRESS",
        "FINISHED",
        "FAILED"
      ],
      "type": "string"
    },
    "ReadSetActivationJobStatus": {
      "enum": [
        "SUBMITTED",
        "IN_PROGRESS",
        "CANCELLING",
        "CANCELLED",
        "FAILED",
        "COMPLETED",
        "COMPLETED_WITH_FAILURES"
      ],
      "type": "string"
    },
    "ReadSetArn": {
      "max": 127,
      "min": 1,
      "pattern": "arn:.+",
      "type": "string"
    },
    "ReadSetBatchError": {
      "members": {
        "code": {
          "shape": "String"
        },
        "id": {
          "shape": "ReadSetId"
        },
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "id",
        "code",
        "message"
      ],
      "type": "structure"
    },
    "ReadSetBatchErrorList": {
      "member": {
        "shape": "ReadSetBatchError"
      },
      "type": "list"
    },
    "ReadSetDescription": {
      "max": 255,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "ReadSetExportJobItemStatus": {
      "enum": [
        "NOT_STARTED",
        "IN_PROGRESS",
        "FINISHED",
        "FAILED"
      ],
      "type": "string"
    },
    "ReadSetExportJobStatus": {
      "enum": [
        "SUBMITTED",
        "IN_PROGRESS",
        "CANCELLING",
        "CANCELLED",
        "FAILED",
        "COMPLETED",
        "COMPLETED_WITH_FAILURES"
      ],
      "type": "string"
    },
    "ReadSetFile": {
      "enum": [
        "SOURCE1",
        "SOURCE2",
        "INDEX"
      ],
      "type": "string"
    },
    "ReadSetFiles": {
      "members": {
        "index": {
          "shape": "FileInformation"
        },
        "source1": {
          "shape": "FileInformation"
        },
        "source2": {
          "shape": "FileInformation"
        }
      },
      "type": "structure"
    },
    "ReadSetFilter": {
      "members": {
        "createdAfter": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "createdBefore": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "creationType": {
          "shape": "CreationType"
        },
        "generatedFrom": {
          "shape": "GeneratedFrom"
        },
        "name": {
          "shape": "ReadSetName"
        },
        "referenceArn": {
          "shape": "ReferenceArn"
        },
        "sampleId": {
          "shape": "SampleId"
        },
        "status": {
          "shape": "ReadSetStatus"
        },
        "subjectId": {
          "shape": "SubjectId"
        }
      },
      "type": "structure"
    },
    "ReadSetId": {
      "max": 36,
      "min": 10,
      "pattern": "[0-9]+",
      "type": "string"
    },
    "ReadSetIdList": {
      "max": 100,
      "member": {
        "shape": "ReadSetId"
      },
      "min": 1,
      "type": "list"
    },
    "ReadSetImportJobItemStatus": {
      "enum": [
        "NOT_STARTED",
        "IN_PROGRESS",
        "FINISHED",
        "FAILED"
      ],
      "type": "string"
    },
    "ReadSetImportJobStatus": {
      "enum": [
        "SUBMITTED",
        "IN_PROGRESS",
        "CANCELLING",
        "CANCELLED",
        "FAILED",
        "COMPLETED",
        "COMPLETED_WITH_FAILURES"
      ],
      "type": "string"
    },
    "ReadSetList": {
      "member": {
        "shape": "ReadSetListItem"
      },
      "type": "list"
    },
    "ReadSetListItem": {
      "members": {
        "arn": {
          "shape": "ReadSetArn"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "creationType": {
          "shape": "CreationType"
        },
        "description": {
          "shape": "ReadSetDescription"
        },
        "etag": {
          "shape": "ETag"
        },
        "fileType": {
          "shape": "FileType"
        },
        "id": {
          "shape": "ReadSetId"
        },
        "name": {
          "shape": "ReadSetName"
        },
        "referenceArn": {
          "shape": "ReferenceArn"
        },
        "sampleId": {
          "shape": "SampleId"
        },
        "sequenceInformation": {
          "shape": "SequenceInformation"
        },
        "sequenceStoreId": {
          "shape": "SequenceStoreId"
        },
        "status": {
          "shape": "ReadSetStatus"
        },
        "statusMessage": {
          "shape": "ReadSetStatusMessage"
        },
        "subjectId": {
          "shape": "SubjectId"
        }
      },
      "required": [
        "id",
        "arn",
        "sequenceStoreId",
        "status",
        "fileType",
        "creationTime"
      ],
      "type": "structure"
    },
    "ReadSetName": {
      "max": 127,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "ReadSetPartSource": {
      "enum": [
        "SOURCE1",
        "SOURCE2"
      ],
      "type": "string"
    },
    "ReadSetPartStreamingBlob": {
      "requiresLength": true,
      "streaming": true,
      "type": "blob"
    },
    "ReadSetStatus": {
      "enum": [
        "ARCHIVED",
        "ACTIVATING",
        "ACTIVE",
        "DELETING",
        "DELETED",
        "PROCESSING_UPLOAD",
        "UPLOAD_FAILED"
      ],
      "type": "string"
    },
    "ReadSetStatusMessage": {
      "max": 255,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "ReadSetStreamingBlob": {
      "streaming": true,
      "type": "blob"
    },
    "ReadSetUploadPartList": {
      "member": {
        "shape": "ReadSetUploadPartListItem"
      },
      "type": "list"
    },
    "ReadSetUploadPartListFilter": {
      "members": {
        "createdAfter": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "createdBefore": {
          "shape": "SyntheticTimestamp_date_time"
        }
      },
      "type": "structure"
    },
    "ReadSetUploadPartListItem": {
      "members": {
        "checksum": {
          "shape": "String"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "lastUpdatedTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "partNumber": {
          "shape": "ReadSetUploadPartListItemPartNumberInteger"
        },
        "partSize": {
          "shape": "ReadSetUploadPartListItemPartSizeLong"
        },
        "partSource": {
          "shape": "ReadSetPartSource"
        }
      },
      "required": [
        "partNumber",
        "partSize",
        "partSource",
        "checksum"
      ],
      "type": "structure"
    },
    "ReadSetUploadPartListItemPartNumberInteger": {
      "box": true,
      "max": 10000,
      "min": 1,
      "type": "integer"
    },
    "ReadSetUploadPartListItemPartSizeLong": {
      "box": true,
      "max": 5368709120,
      "min": 1,
      "type": "long"
    },
    "ReferenceArn": {
      "max": 127,
      "min": 1,
      "pattern": "arn:.+",
      "type": "string"
    },
    "ReferenceDescription": {
      "max": 255,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "ReferenceFile": {
      "enum": [
        "SOURCE",
        "INDEX"
      ],
      "type": "string"
    },
    "ReferenceFiles": {
      "members": {
        "index": {
          "shape": "FileInformation"
        },
        "source": {
          "shape": "FileInformation"
        }
      },
      "type": "structure"
    },
    "ReferenceFilter": {
      "members": {
        "createdAfter": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "createdBefore": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "md5": {
          "shape": "Md5"
        },
        "name": {
          "shape": "ReferenceName"
        }
      },
      "type": "structure"
    },
    "ReferenceId": {
      "max": 36,
      "min": 10,
      "pattern": "[0-9]+",
      "type": "string"
    },
    "ReferenceImportJobItemStatus": {
      "enum": [
        "NOT_STARTED",
        "IN_PROGRESS",
        "FINISHED",
        "FAILED"
      ],
      "type": "string"
    },
    "ReferenceImportJobStatus": {
      "enum": [
        "SUBMITTED",
        "IN_PROGRESS",
        "CANCELLING",
        "CANCELLED",
        "FAILED",
        "COMPLETED",
        "COMPLETED_WITH_FAILURES"
      ],
      "type": "string"
    },
    "ReferenceItem": {
      "members": {
        "referenceArn": {
          "shape": "ReferenceArn"
        }
      },
      "type": "structure",
      "union": true
    },
    "ReferenceList": {
      "member": {
        "shape": "ReferenceListItem"
      },
      "type": "list"
    },
    "ReferenceListItem": {
      "members": {
        "arn": {
          "shape": "ReferenceArn"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "description": {
          "shape": "ReferenceDescription"
        },
        "id": {
          "shape": "ReferenceId"
        },
        "md5": {
          "shape": "Md5"
        },
        "name": {
          "shape": "ReferenceName"
        },
        "referenceStoreId": {
          "shape": "ReferenceStoreId"
        },
        "status": {
          "shape": "ReferenceStatus"
        },
        "updateTime": {
          "shape": "SyntheticTimestamp_date_time"
        }
      },
      "required": [
        "id",
        "arn",
        "referenceStoreId",
        "md5",
        "creationTime",
        "updateTime"
      ],
      "type": "structure"
    },
    "ReferenceName": {
      "max": 255,
      "min": 3,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "ReferenceStatus": {
      "enum": [
        "ACTIVE",
        "DELETING",
        "DELETED"
      ],
      "type": "string"
    },
    "ReferenceStoreArn": {
      "max": 127,
      "min": 1,
      "pattern": "arn:.+",
      "type": "string"
    },
    "ReferenceStoreDescription": {
      "max": 255,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "ReferenceStoreDetail": {
      "members": {
        "arn": {
          "shape": "ReferenceStoreArn"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "description": {
          "shape": "ReferenceStoreDescription"
        },
        "id": {
          "shape": "ReferenceStoreId"
        },
        "name": {
          "shape": "ReferenceStoreName"
        },
        "sseConfig": {
          "shape": "SseConfig"
        }
      },
      "required": [
        "arn",
        "id",
        "creationTime"
      ],
      "type": "structure"
    },
    "ReferenceStoreDetailList": {
      "member": {
        "shape": "ReferenceStoreDetail"
      },
      "type": "list"
    },
    "ReferenceStoreFilter": {
      "members": {
        "createdAfter": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "createdBefore": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "name": {
          "shape": "ReferenceStoreName"
        }
      },
      "type": "structure"
    },
    "ReferenceStoreId": {
      "max": 36,
      "min": 10,
      "pattern": "[0-9]+",
      "type": "string"
    },
    "ReferenceStoreName": {
      "max": 127,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "ReferenceStreamingBlob": {
      "streaming": true,
      "type": "blob"
    },
    "RequestTimeoutException": {
      "error": {
        "httpStatusCode": 408,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "ResourceId": {
      "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}",
      "type": "string"
    },
    "ResourceIdentifier": {
      "max": 50,
      "min": 1,
      "type": "string"
    },
    "ResourceNotFoundException": {
      "error": {
        "httpStatusCode": 404,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "ResourceOwner": {
      "enum": [
        "SELF",
        "OTHER"
      ],
      "type": "string"
    },
    "RoleArn": {
      "max": 2048,
      "min": 20,
      "pattern": "arn:.*",
      "type": "string"
    },
    "RunArn": {
      "max": 128,
      "min": 1,
      "pattern": "arn:.+",
      "type": "string"
    },
    "RunExport": {
      "enum": [
        "DEFINITION"
      ],
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "RunExportList": {
      "max": 32,
      "member": {
        "shape": "RunExport"
      },
      "min": 0,
      "type": "list"
    },
    "RunGroupArn": {
      "max": 128,
      "min": 1,
      "pattern": "arn:.+",
      "type": "string"
    },
    "RunGroupId": {
      "max": 18,
      "min": 1,
      "pattern": "[0-9]+",
      "type": "string"
    },
    "RunGroupList": {
      "member": {
        "shape": "RunGroupListItem"
      },
      "type": "list"
    },
    "RunGroupListItem": {
      "members": {
        "arn": {
          "shape": "RunGroupArn"
        },
        "creationTime": {
          "shape": "RunGroupTimestamp"
        },
        "id": {
          "shape": "RunGroupId"
        },
        "maxCpus": {
          "shape": "RunGroupListItemMaxCpusInteger"
        },
        "maxDuration": {
          "shape": "RunGroupListItemMaxDurationInteger"
        },
        "maxGpus": {
          "shape": "RunGroupListItemMaxGpusInteger"
        },
        "maxRuns": {
          "shape": "RunGroupListItemMaxRunsInteger"
        },
        "name": {
          "shape": "RunGroupName"
        }
      },
      "type": "structure"
    },
    "RunGroupListItemMaxCpusInteger": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "integer"
    },
    "RunGroupListItemMaxDurationInteger": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "integer"
    },
    "RunGroupListItemMaxGpusInteger": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "integer"
    },
    "RunGroupListItemMaxRunsInteger": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "integer"
    },
    "RunGroupListToken": {
      "max": 128,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "RunGroupName": {
      "max": 128,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "RunGroupRequestId": {
      "max": 128,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "RunGroupTimestamp": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "RunId": {
      "max": 18,
      "min": 1,
      "pattern": "[0-9]+",
      "type": "string"
    },
    "RunLeftNormalization": {
      "type": "boolean"
    },
    "RunList": {
      "member": {
        "shape": "RunListItem"
      },
      "type": "list"
    },
    "RunListItem": {
      "members": {
        "arn": {
          "shape": "RunArn"
        },
        "creationTime": {
          "shape": "RunTimestamp"
        },
        "id": {
          "shape": "RunId"
        },
        "name": {
          "shape": "RunName"
        },
        "priority": {
          "shape": "RunListItemPriorityInteger"
        },
        "startTime": {
          "shape": "RunTimestamp"
        },
        "status": {
          "shape": "RunStatus"
        },
        "stopTime": {
          "shape": "RunTimestamp"
        },
        "storageCapacity": {
          "shape": "RunListItemStorageCapacityInteger"
        },
        "workflowId": {
          "shape": "WorkflowId"
        }
      },
      "type": "structure"
    },
    "RunListItemPriorityInteger": {
      "box": true,
      "max": 100000,
      "min": 0,
      "type": "integer"
    },
    "RunListItemStorageCapacityInteger": {
      "box": true,
      "max": 100000,
      "min": 0,
      "type": "integer"
    },
    "RunListToken": {
      "max": 128,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "RunLogLevel": {
      "enum": [
        "OFF",
        "FATAL",
        "ERROR",
        "ALL"
      ],
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "RunName": {
      "max": 128,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "RunOutputUri": {
      "max": 128,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "RunRequestId": {
      "max": 128,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "RunResourceDigest": {
      "max": 64,
      "min": 0,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "RunResourceDigestKey": {
      "max": 256,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "RunResourceDigests": {
      "key": {
        "shape": "RunResourceDigestKey"
      },
      "type": "map",
      "value": {
        "shape": "RunResourceDigest"
      }
    },
    "RunRetentionMode": {
      "enum": [
        "RETAIN",
        "REMOVE"
      ],
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "RunRoleArn": {
      "max": 128,
      "min": 1,
      "pattern": "arn:.+",
      "type": "string"
    },
    "RunStartedBy": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "RunStatus": {
      "enum": [
        "PENDING",
        "STARTING",
        "RUNNING",
        "STOPPING",
        "COMPLETED",
        "DELETED",
        "CANCELLED",
        "FAILED"
      ],
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "RunStatusMessage": {
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "RunTimestamp": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "S3Destination": {
      "pattern": "s3://([a-z0-9][a-z0-9-.]{1,61}[a-z0-9])/?((.{1,1024})/)?",
      "type": "string"
    },
    "S3Uri": {
      "pattern": "s3://([a-z0-9][a-z0-9-.]{1,61}[a-z0-9])/(.{1,1024})",
      "type": "string"
    },
    "SampleId": {
      "max": 127,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "SchemaItem": {
      "key": {
        "shape": "SchemaItemKeyString"
      },
      "max": 1,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "SchemaValueType"
      }
    },
    "SchemaItemKeyString": {
      "pattern": "[a-z0-9_]{1,255}",
      "type": "string"
    },
    "SchemaValueType": {
      "enum": [
        "LONG",
        "INT",
        "STRING",
        "FLOAT",
        "DOUBLE",
        "BOOLEAN"
      ],
      "type": "string"
    },
    "Separator": {
      "max": 20,
      "min": 1,
      "type": "string"
    },
    "SequenceInformation": {
      "members": {
        "alignment": {
          "shape": "String"
        },
        "generatedFrom": {
          "shape": "GeneratedFrom"
        },
        "totalBaseCount": {
          "shape": "Long"
        },
        "totalReadCount": {
          "shape": "Long"
        }
      },
      "type": "structure"
    },
    "SequenceStoreArn": {
      "max": 127,
      "min": 1,
      "pattern": "arn:.+",
      "type": "string"
    },
    "SequenceStoreDescription": {
      "max": 255,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "SequenceStoreDetail": {
      "members": {
        "arn": {
          "shape": "SequenceStoreArn"
        },
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "description": {
          "shape": "SequenceStoreDescription"
        },
        "fallbackLocation": {
          "shape": "S3Destination"
        },
        "id": {
          "shape": "SequenceStoreId"
        },
        "name": {
          "shape": "SequenceStoreName"
        },
        "sseConfig": {
          "shape": "SseConfig"
        }
      },
      "required": [
        "arn",
        "id",
        "creationTime"
      ],
      "type": "structure"
    },
    "SequenceStoreDetailList": {
      "member": {
        "shape": "SequenceStoreDetail"
      },
      "type": "list"
    },
    "SequenceStoreFilter": {
      "members": {
        "createdAfter": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "createdBefore": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "name": {
          "shape": "SequenceStoreName"
        }
      },
      "type": "structure"
    },
    "SequenceStoreId": {
      "max": 36,
      "min": 10,
      "pattern": "[0-9]+",
      "type": "string"
    },
    "SequenceStoreName": {
      "max": 127,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "ServiceQuotaExceededException": {
      "error": {
        "httpStatusCode": 402,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "ShareDetails": {
      "members": {
        "creationTime": {
          "shape": "CreationTime"
        },
        "ownerId": {
          "shape": "String"
        },
        "principalSubscriber": {
          "shape": "String"
        },
        "resourceArn": {
          "shape": "String"
        },
        "shareId": {
          "shape": "String"
        },
        "shareName": {
          "shape": "ShareName"
        },
        "status": {
          "shape": "ShareStatus"
        },
        "statusMessage": {
          "shape": "StatusMessage"
        },
        "updateTime": {
          "shape": "UpdateTime"
        }
      },
      "type": "structure"
    },
    "ShareDetailsList": {
      "member": {
        "shape": "ShareDetails"
      },
      "type": "list"
    },
    "ShareName": {
      "max": 256,
      "min": 1,
      "pattern": "[a-zA-Z0-9_-]+",
      "type": "string"
    },
    "ShareStatus": {
      "enum": [
        "PENDING",
        "ACTIVATING",
        "ACTIVE",
        "DELETING",
        "DELETED",
        "FAILED"
      ],
      "type": "string"
    },
    "SourceFiles": {
      "members": {
        "source1": {
          "shape": "S3Uri"
        },
        "source2": {
          "shape": "S3Uri"
        }
      },
      "required": [
        "source1"
      ],
      "type": "structure"
    },
    "SseConfig": {
      "members": {
        "keyArn": {
          "shape": "SseConfigKeyArnString"
        },
        "type": {
          "shape": "EncryptionType"
        }
      },
      "required": [
        "type"
      ],
      "type": "structure"
    },
    "SseConfigKeyArnString": {
      "max": 2048,
      "min": 20,
      "pattern": ".*arn:([^: ]*):([^: ]*):([^: ]*):([0-9]{12}):([^: ]*).*",
      "type": "string"
    },
    "StartAnnotationImportRequest": {
      "members": {
        "annotationFields": {
          "shape": "AnnotationFieldMap"
        },
        "destinationName": {
          "shape": "StoreName"
        },
        "formatOptions": {
          "shape": "FormatOptions"
        },
        "items": {
          "shape": "AnnotationImportItemSources"
        },
        "roleArn": {
          "shape": "Arn"
        },
        "runLeftNormalization": {
          "shape": "RunLeftNormalization"
        },
        "versionName": {
          "shape": "VersionName"
        }
      },
      "required": [
        "destinationName",
        "roleArn",
        "items"
      ],
      "type": "structure"
    },
    "StartAnnotationImportResponse": {
      "members": {
        "jobId": {
          "shape": "ResourceId"
        }
      },
      "required": [
        "jobId"
      ],
      "type": "structure"
    },
    "StartReadSetActivationJobRequest": {
      "members": {
        "clientToken": {
          "shape": "ClientToken"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        },
        "sources": {
          "shape": "StartReadSetActivationJobRequestSourcesList"
        }
      },
      "required": [
        "sequenceStoreId",
        "sources"
      ],
      "type": "structure"
    },
    "StartReadSetActivationJobRequestSourcesList": {
      "max": 20,
      "member": {
        "shape": "StartReadSetActivationJobSourceItem"
      },
      "min": 1,
      "type": "list"
    },
    "StartReadSetActivationJobResponse": {
      "members": {
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "id": {
          "shape": "ActivationJobId"
        },
        "sequenceStoreId": {
          "shape": "SequenceStoreId"
        },
        "status": {
          "shape": "ReadSetActivationJobStatus"
        }
      },
      "required": [
        "id",
        "sequenceStoreId",
        "status",
        "creationTime"
      ],
      "type": "structure"
    },
    "StartReadSetActivationJobSourceItem": {
      "members": {
        "readSetId": {
          "shape": "ReadSetId"
        }
      },
      "required": [
        "readSetId"
      ],
      "type": "structure"
    },
    "StartReadSetExportJobRequest": {
      "members": {
        "clientToken": {
          "shape": "ClientToken"
        },
        "destination": {
          "shape": "S3Destination"
        },
        "roleArn": {
          "shape": "RoleArn"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        },
        "sources": {
          "shape": "StartReadSetExportJobRequestSourcesList"
        }
      },
      "required": [
        "sequenceStoreId",
        "destination",
        "roleArn",
        "sources"
      ],
      "type": "structure"
    },
    "StartReadSetExportJobRequestSourcesList": {
      "max": 100,
      "member": {
        "shape": "ExportReadSet"
      },
      "min": 1,
      "type": "list"
    },
    "StartReadSetExportJobResponse": {
      "members": {
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "destination": {
          "shape": "S3Destination"
        },
        "id": {
          "shape": "ExportJobId"
        },
        "sequenceStoreId": {
          "shape": "SequenceStoreId"
        },
        "status": {
          "shape": "ReadSetExportJobStatus"
        }
      },
      "required": [
        "id",
        "sequenceStoreId",
        "destination",
        "status",
        "creationTime"
      ],
      "type": "structure"
    },
    "StartReadSetImportJobRequest": {
      "members": {
        "clientToken": {
          "shape": "ClientToken"
        },
        "roleArn": {
          "shape": "RoleArn"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        },
        "sources": {
          "shape": "StartReadSetImportJobRequestSourcesList"
        }
      },
      "required": [
        "sequenceStoreId",
        "roleArn",
        "sources"
      ],
      "type": "structure"
    },
    "StartReadSetImportJobRequestSourcesList": {
      "max": 100,
      "member": {
        "shape": "StartReadSetImportJobSourceItem"
      },
      "min": 1,
      "type": "list"
    },
    "StartReadSetImportJobResponse": {
      "members": {
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "id": {
          "shape": "ImportJobId"
        },
        "roleArn": {
          "shape": "RoleArn"
        },
        "sequenceStoreId": {
          "shape": "SequenceStoreId"
        },
        "status": {
          "shape": "ReadSetImportJobStatus"
        }
      },
      "required": [
        "id",
        "sequenceStoreId",
        "roleArn",
        "status",
        "creationTime"
      ],
      "type": "structure"
    },
    "StartReadSetImportJobSourceItem": {
      "members": {
        "description": {
          "shape": "ReadSetDescription"
        },
        "generatedFrom": {
          "shape": "GeneratedFrom"
        },
        "name": {
          "shape": "ReadSetName"
        },
        "referenceArn": {
          "shape": "ReferenceArn"
        },
        "sampleId": {
          "shape": "SampleId"
        },
        "sourceFileType": {
          "shape": "FileType"
        },
        "sourceFiles": {
          "shape": "SourceFiles"
        },
        "subjectId": {
          "shape": "SubjectId"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "required": [
        "sourceFiles",
        "sourceFileType",
        "subjectId",
        "sampleId",
        "referenceArn"
      ],
      "type": "structure"
    },
    "StartReferenceImportJobRequest": {
      "members": {
        "clientToken": {
          "shape": "ClientToken"
        },
        "referenceStoreId": {
          "location": "uri",
          "locationName": "referenceStoreId",
          "shape": "ReferenceStoreId"
        },
        "roleArn": {
          "shape": "RoleArn"
        },
        "sources": {
          "shape": "StartReferenceImportJobRequestSourcesList"
        }
      },
      "required": [
        "referenceStoreId",
        "roleArn",
        "sources"
      ],
      "type": "structure"
    },
    "StartReferenceImportJobRequestSourcesList": {
      "max": 100,
      "member": {
        "shape": "StartReferenceImportJobSourceItem"
      },
      "min": 1,
      "type": "list"
    },
    "StartReferenceImportJobResponse": {
      "members": {
        "creationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "id": {
          "shape": "ImportJobId"
        },
        "referenceStoreId": {
          "shape": "ReferenceStoreId"
        },
        "roleArn": {
          "shape": "RoleArn"
        },
        "status": {
          "shape": "ReferenceImportJobStatus"
        }
      },
      "required": [
        "id",
        "referenceStoreId",
        "roleArn",
        "status",
        "creationTime"
      ],
      "type": "structure"
    },
    "StartReferenceImportJobSourceItem": {
      "members": {
        "description": {
          "shape": "ReferenceDescription"
        },
        "name": {
          "shape": "ReferenceName"
        },
        "sourceFile": {
          "shape": "S3Uri"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "required": [
        "sourceFile",
        "name"
      ],
      "type": "structure"
    },
    "StartRunRequest": {
      "members": {
        "logLevel": {
          "shape": "RunLogLevel"
        },
        "name": {
          "shape": "RunName"
        },
        "outputUri": {
          "shape": "RunOutputUri"
        },
        "priority": {
          "shape": "StartRunRequestPriorityInteger"
        },
        "requestId": {
          "idempotencyToken": true,
          "shape": "RunRequestId"
        },
        "retentionMode": {
          "shape": "RunRetentionMode"
        },
        "roleArn": {
          "shape": "RunRoleArn"
        },
        "runGroupId": {
          "shape": "RunGroupId"
        },
        "runId": {
          "shape": "RunId"
        },
        "storageCapacity": {
          "shape": "StartRunRequestStorageCapacityInteger"
        },
        "tags": {
          "shape": "TagMap"
        },
        "workflowId": {
          "shape": "WorkflowId"
        },
        "workflowType": {
          "shape": "WorkflowType"
        }
      },
      "required": [
        "roleArn",
        "requestId"
      ],
      "type": "structure"
    },
    "StartRunRequestPriorityInteger": {
      "box": true,
      "max": 100000,
      "min": 0,
      "type": "integer"
    },
    "StartRunRequestStorageCapacityInteger": {
      "box": true,
      "max": 100000,
      "min": 0,
      "type": "integer"
    },
    "StartRunResponse": {
      "members": {
        "arn": {
          "shape": "RunArn"
        },
        "id": {
          "shape": "RunId"
        },
        "status": {
          "shape": "RunStatus"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "StartVariantImportRequest": {
      "members": {
        "annotationFields": {
          "shape": "AnnotationFieldMap"
        },
        "destinationName": {
          "shape": "StoreName"
        },
        "items": {
          "shape": "VariantImportItemSources"
        },
        "roleArn": {
          "shape": "Arn"
        },
        "runLeftNormalization": {
          "shape": "RunLeftNormalization"
        }
      },
      "required": [
        "destinationName",
        "roleArn",
        "items"
      ],
      "type": "structure"
    },
    "StartVariantImportResponse": {
      "members": {
        "jobId": {
          "shape": "ResourceId"
        }
      },
      "required": [
        "jobId"
      ],
      "type": "structure"
    },
    "StatusList": {
      "member": {
        "shape": "ShareStatus"
      },
      "type": "list"
    },
    "StatusMessage": {
      "max": 1000,
      "min": 0,
      "type": "string"
    },
    "StoreFormat": {
      "enum": [
        "GFF",
        "TSV",
        "VCF"
      ],
      "type": "string"
    },
    "StoreName": {
      "max": 255,
      "min": 3,
      "pattern": "([a-z]){1}([a-z0-9_]){2,254}",
      "type": "string"
    },
    "StoreOptions": {
      "members": {
        "tsvStoreOptions": {
          "shape": "TsvStoreOptions"
        }
      },
      "type": "structure",
      "union": true
    },
    "StoreStatus": {
      "enum": [
        "CREATING",
        "UPDATING",
        "DELETING",
        "ACTIVE",
        "FAILED"
      ],
      "type": "string"
    },
    "String": {
      "type": "string"
    },
    "SubjectId": {
      "max": 127,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "SyntheticTimestamp_date_time": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "TagArn": {
      "max": 128,
      "min": 1,
      "pattern": "arn:.+",
      "type": "string"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "TagKeyList": {
      "max": 50,
      "member": {
        "shape": "TagKey"
      },
      "min": 0,
      "type": "list"
    },
    "TagMap": {
      "key": {
        "shape": "TagKey"
      },
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "TagResourceRequest": {
      "members": {
        "resourceArn": {
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "TagArn"
        },
        "tags": {
          "shape": "TagResourceRequestTagsMap"
        }
      },
      "required": [
        "resourceArn",
        "tags"
      ],
      "type": "structure"
    },
    "TagResourceRequestTagsMap": {
      "key": {
        "shape": "TagKey"
      },
      "max": 50,
      "min": 0,
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 0,
      "type": "string"
    },
    "TaskId": {
      "max": 18,
      "min": 1,
      "pattern": "[0-9]+",
      "type": "string"
    },
    "TaskInstanceType": {
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "TaskList": {
      "member": {
        "shape": "TaskListItem"
      },
      "type": "list"
    },
    "TaskListItem": {
      "members": {
        "cpus": {
          "shape": "TaskListItemCpusInteger"
        },
        "creationTime": {
          "shape": "TaskTimestamp"
        },
        "gpus": {
          "shape": "TaskListItemGpusInteger"
        },
        "instanceType": {
          "shape": "TaskInstanceType"
        },
        "memory": {
          "shape": "TaskListItemMemoryInteger"
        },
        "name": {
          "shape": "TaskName"
        },
        "startTime": {
          "shape": "TaskTimestamp"
        },
        "status": {
          "shape": "TaskStatus"
        },
        "stopTime": {
          "shape": "TaskTimestamp"
        },
        "taskId": {
          "shape": "TaskId"
        }
      },
      "type": "structure"
    },
    "TaskListItemCpusInteger": {
      "box": true,
      "min": 1,
      "type": "integer"
    },
    "TaskListItemGpusInteger": {
      "box": true,
      "min": 0,
      "type": "integer"
    },
    "TaskListItemMemoryInteger": {
      "box": true,
      "min": 1,
      "type": "integer"
    },
    "TaskListToken": {
      "max": 128,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "TaskLogStream": {
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "TaskName": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "TaskStatus": {
      "enum": [
        "PENDING",
        "STARTING",
        "RUNNING",
        "STOPPING",
        "COMPLETED",
        "CANCELLED",
        "FAILED"
      ],
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "TaskStatusMessage": {
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "TaskTimestamp": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "ThrottlingException": {
      "error": {
        "httpStatusCode": 429,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "retryable": {
        "throttling": true
      },
      "type": "structure"
    },
    "TsvOptions": {
      "members": {
        "readOptions": {
          "shape": "ReadOptions"
        }
      },
      "type": "structure"
    },
    "TsvStoreOptions": {
      "members": {
        "annotationType": {
          "shape": "AnnotationType"
        },
        "formatToHeader": {
          "shape": "FormatToHeader"
        },
        "schema": {
          "shape": "TsvStoreOptionsSchemaList"
        }
      },
      "type": "structure"
    },
    "TsvStoreOptionsSchemaList": {
      "max": 5000,
      "member": {
        "shape": "SchemaItem"
      },
      "min": 1,
      "type": "list"
    },
    "TsvVersionOptions": {
      "members": {
        "annotationType": {
          "shape": "AnnotationType"
        },
        "formatToHeader": {
          "shape": "FormatToHeader"
        },
        "schema": {
          "shape": "TsvVersionOptionsSchemaList"
        }
      },
      "type": "structure"
    },
    "TsvVersionOptionsSchemaList": {
      "max": 5000,
      "member": {
        "shape": "SchemaItem"
      },
      "min": 1,
      "type": "list"
    },
    "UntagResourceRequest": {
      "members": {
        "resourceArn": {
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "TagArn"
        },
        "tagKeys": {
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateAnnotationStoreRequest": {
      "members": {
        "description": {
          "shape": "Description"
        },
        "name": {
          "location": "uri",
          "locationName": "name",
          "shape": "String"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "UpdateAnnotationStoreResponse": {
      "members": {
        "creationTime": {
          "shape": "CreationTime"
        },
        "description": {
          "shape": "Description"
        },
        "id": {
          "shape": "ResourceId"
        },
        "name": {
          "shape": "String"
        },
        "reference": {
          "shape": "ReferenceItem"
        },
        "status": {
          "shape": "StoreStatus"
        },
        "storeFormat": {
          "shape": "StoreFormat"
        },
        "storeOptions": {
          "shape": "StoreOptions"
        },
        "updateTime": {
          "shape": "UpdateTime"
        }
      },
      "required": [
        "id",
        "reference",
        "status",
        "name",
        "description",
        "creationTime",
        "updateTime"
      ],
      "type": "structure"
    },
    "UpdateAnnotationStoreVersionRequest": {
      "members": {
        "description": {
          "shape": "Description"
        },
        "name": {
          "location": "uri",
          "locationName": "name",
          "shape": "String"
        },
        "versionName": {
          "location": "uri",
          "locationName": "versionName",
          "shape": "String"
        }
      },
      "required": [
        "name",
        "versionName"
      ],
      "type": "structure"
    },
    "UpdateAnnotationStoreVersionResponse": {
      "members": {
        "creationTime": {
          "shape": "CreationTime"
        },
        "description": {
          "shape": "Description"
        },
        "id": {
          "shape": "ResourceId"
        },
        "name": {
          "shape": "StoreName"
        },
        "status": {
          "shape": "VersionStatus"
        },
        "storeId": {
          "shape": "ResourceId"
        },
        "updateTime": {
          "shape": "UpdateTime"
        },
        "versionName": {
          "shape": "VersionName"
        }
      },
      "required": [
        "storeId",
        "id",
        "status",
        "name",
        "versionName",
        "description",
        "creationTime",
        "updateTime"
      ],
      "type": "structure"
    },
    "UpdateRunGroupRequest": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "RunGroupId"
        },
        "maxCpus": {
          "shape": "UpdateRunGroupRequestMaxCpusInteger"
        },
        "maxDuration": {
          "shape": "UpdateRunGroupRequestMaxDurationInteger"
        },
        "maxGpus": {
          "shape": "UpdateRunGroupRequestMaxGpusInteger"
        },
        "maxRuns": {
          "shape": "UpdateRunGroupRequestMaxRunsInteger"
        },
        "name": {
          "shape": "RunGroupName"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "UpdateRunGroupRequestMaxCpusInteger": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "integer"
    },
    "UpdateRunGroupRequestMaxDurationInteger": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "integer"
    },
    "UpdateRunGroupRequestMaxGpusInteger": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "integer"
    },
    "UpdateRunGroupRequestMaxRunsInteger": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "integer"
    },
    "UpdateTime": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "UpdateVariantStoreRequest": {
      "members": {
        "description": {
          "shape": "Description"
        },
        "name": {
          "location": "uri",
          "locationName": "name",
          "shape": "String"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "UpdateVariantStoreResponse": {
      "members": {
        "creationTime": {
          "shape": "CreationTime"
        },
        "description": {
          "shape": "Description"
        },
        "id": {
          "shape": "ResourceId"
        },
        "name": {
          "shape": "String"
        },
        "reference": {
          "shape": "ReferenceItem"
        },
        "status": {
          "shape": "StoreStatus"
        },
        "updateTime": {
          "shape": "UpdateTime"
        }
      },
      "required": [
        "id",
        "reference",
        "status",
        "name",
        "description",
        "creationTime",
        "updateTime"
      ],
      "type": "structure"
    },
    "UpdateWorkflowRequest": {
      "members": {
        "description": {
          "shape": "WorkflowDescription"
        },
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "WorkflowId"
        },
        "name": {
          "shape": "WorkflowName"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "UploadId": {
      "max": 36,
      "min": 10,
      "pattern": "[0-9]+",
      "type": "string"
    },
    "UploadReadSetPartRequest": {
      "members": {
        "partNumber": {
          "location": "querystring",
          "locationName": "partNumber",
          "shape": "UploadReadSetPartRequestPartNumberInteger"
        },
        "partSource": {
          "location": "querystring",
          "locationName": "partSource",
          "shape": "ReadSetPartSource"
        },
        "payload": {
          "shape": "ReadSetPartStreamingBlob"
        },
        "sequenceStoreId": {
          "location": "uri",
          "locationName": "sequenceStoreId",
          "shape": "SequenceStoreId"
        },
        "uploadId": {
          "location": "uri",
          "locationName": "uploadId",
          "shape": "UploadId"
        }
      },
      "payload": "payload",
      "required": [
        "sequenceStoreId",
        "uploadId",
        "partSource",
        "partNumber",
        "payload"
      ],
      "type": "structure"
    },
    "UploadReadSetPartRequestPartNumberInteger": {
      "box": true,
      "max": 10000,
      "min": 1,
      "type": "integer"
    },
    "UploadReadSetPartResponse": {
      "members": {
        "checksum": {
          "shape": "String"
        }
      },
      "required": [
        "checksum"
      ],
      "type": "structure"
    },
    "ValidationException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "VariantImportItemDetail": {
      "members": {
        "jobStatus": {
          "shape": "JobStatus"
        },
        "source": {
          "shape": "S3Uri"
        },
        "statusMessage": {
          "shape": "JobStatusMsg"
        }
      },
      "required": [
        "source",
        "jobStatus"
      ],
      "type": "structure"
    },
    "VariantImportItemDetails": {
      "member": {
        "shape": "VariantImportItemDetail"
      },
      "min": 1,
      "type": "list"
    },
    "VariantImportItemSource": {
      "members": {
        "source": {
          "shape": "S3Uri"
        }
      },
      "required": [
        "source"
      ],
      "type": "structure"
    },
    "VariantImportItemSources": {
      "member": {
        "shape": "VariantImportItemSource"
      },
      "min": 1,
      "type": "list"
    },
    "VariantImportJobItem": {
      "members": {
        "annotationFields": {
          "shape": "AnnotationFieldMap"
        },
        "completionTime": {
          "shape": "CompletionTime"
        },
        "creationTime": {
          "shape": "CreationTime"
        },
        "destinationName": {
          "shape": "String"
        },
        "id": {
          "shape": "String"
        },
        "roleArn": {
          "shape": "Arn"
        },
        "runLeftNormalization": {
          "shape": "RunLeftNormalization"
        },
        "status": {
          "shape": "JobStatus"
        },
        "updateTime": {
          "shape": "UpdateTime"
        }
      },
      "required": [
        "id",
        "destinationName",
        "roleArn",
        "status",
        "creationTime",
        "updateTime"
      ],
      "type": "structure"
    },
    "VariantImportJobItems": {
      "member": {
        "shape": "VariantImportJobItem"
      },
      "type": "list"
    },
    "VariantStoreItem": {
      "members": {
        "creationTime": {
          "shape": "CreationTime"
        },
        "description": {
          "shape": "Description"
        },
        "id": {
          "shape": "ResourceId"
        },
        "name": {
          "shape": "String"
        },
        "reference": {
          "shape": "ReferenceItem"
        },
        "sseConfig": {
          "shape": "SseConfig"
        },
        "status": {
          "shape": "StoreStatus"
        },
        "statusMessage": {
          "shape": "StatusMessage"
        },
        "storeArn": {
          "shape": "Arn"
        },
        "storeSizeBytes": {
          "shape": "Long"
        },
        "updateTime": {
          "shape": "UpdateTime"
        }
      },
      "required": [
        "id",
        "reference",
        "status",
        "storeArn",
        "name",
        "description",
        "sseConfig",
        "creationTime",
        "updateTime",
        "statusMessage",
        "storeSizeBytes"
      ],
      "type": "structure"
    },
    "VariantStoreItems": {
      "member": {
        "shape": "VariantStoreItem"
      },
      "type": "list"
    },
    "VcfOptions": {
      "members": {
        "ignoreFilterField": {
          "shape": "Boolean"
        },
        "ignoreQualField": {
          "shape": "Boolean"
        }
      },
      "type": "structure"
    },
    "VersionDeleteError": {
      "members": {
        "message": {
          "shape": "String"
        },
        "versionName": {
          "shape": "VersionName"
        }
      },
      "required": [
        "versionName",
        "message"
      ],
      "type": "structure"
    },
    "VersionDeleteErrorList": {
      "member": {
        "shape": "VersionDeleteError"
      },
      "type": "list"
    },
    "VersionList": {
      "max": 10,
      "member": {
        "shape": "VersionName"
      },
      "min": 1,
      "type": "list"
    },
    "VersionName": {
      "max": 255,
      "min": 3,
      "pattern": "([a-z]){1}([a-z0-9_]){2,254}",
      "type": "string"
    },
    "VersionOptions": {
      "members": {
        "tsvVersionOptions": {
          "shape": "TsvVersionOptions"
        }
      },
      "type": "structure",
      "union": true
    },
    "VersionStatus": {
      "enum": [
        "CREATING",
        "UPDATING",
        "DELETING",
        "ACTIVE",
        "FAILED"
      ],
      "type": "string"
    },
    "WorkflowArn": {
      "max": 128,
      "min": 1,
      "pattern": "arn:.+",
      "type": "string"
    },
    "WorkflowDefinition": {
      "max": 256,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "WorkflowDescription": {
      "max": 256,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "WorkflowDigest": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "WorkflowEngine": {
      "enum": [
        "WDL",
        "NEXTFLOW",
        "CWL"
      ],
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "WorkflowExport": {
      "enum": [
        "DEFINITION"
      ],
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "WorkflowExportList": {
      "max": 32,
      "member": {
        "shape": "WorkflowExport"
      },
      "min": 0,
      "type": "list"
    },
    "WorkflowId": {
      "max": 18,
      "min": 1,
      "pattern": "[0-9]+",
      "type": "string"
    },
    "WorkflowList": {
      "member": {
        "shape": "WorkflowListItem"
      },
      "type": "list"
    },
    "WorkflowListItem": {
      "members": {
        "arn": {
          "shape": "WorkflowArn"
        },
        "creationTime": {
          "shape": "WorkflowTimestamp"
        },
        "digest": {
          "shape": "WorkflowDigest"
        },
        "id": {
          "shape": "WorkflowId"
        },
        "metadata": {
          "shape": "WorkflowMetadata"
        },
        "name": {
          "shape": "WorkflowName"
        },
        "status": {
          "shape": "WorkflowStatus"
        },
        "type": {
          "shape": "WorkflowType"
        }
      },
      "type": "structure"
    },
    "WorkflowListToken": {
      "max": 128,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "WorkflowMain": {
      "max": 128,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "WorkflowMetadata": {
      "key": {
        "shape": "WorkflowMetadataKey"
      },
      "type": "map",
      "value": {
        "shape": "WorkflowMetadataValue"
      }
    },
    "WorkflowMetadataKey": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "WorkflowMetadataValue": {
      "max": 256,
      "min": 0,
      "type": "string"
    },
    "WorkflowName": {
      "max": 128,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "WorkflowParameter": {
      "members": {
        "description": {
          "shape": "WorkflowParameterDescription"
        },
        "optional": {
          "shape": "Boolean"
        }
      },
      "type": "structure"
    },
    "WorkflowParameterDescription": {
      "max": 256,
      "min": 0,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "WorkflowParameterName": {
      "max": 128,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "WorkflowParameterTemplate": {
      "key": {
        "shape": "WorkflowParameterName"
      },
      "max": 1000,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "WorkflowParameter"
      }
    },
    "WorkflowRequestId": {
      "max": 128,
      "min": 1,
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "WorkflowStatus": {
      "enum": [
        "CREATING",
        "ACTIVE",
        "UPDATING",
        "DELETED",
        "FAILED",
        "INACTIVE"
      ],
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "WorkflowStatusMessage": {
      "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
      "type": "string"
    },
    "WorkflowTimestamp": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "WorkflowType": {
      "enum": [
        "PRIVATE",
        "READY2RUN"
      ],
      "max": 64,
      "min": 1,
      "type": "string"
    }
  },
  "version": "2.0"
}