{
  "version": "2.0",
  "service": "<fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p>",
  "operations": {
    "CreateApplicationInstance": "<p>Creates an application instance and deploys it to a device.</p>",
    "CreateJobForDevices": "<p>Creates a job to run on one or more devices.</p>",
    "CreateNodeFromTemplateJob": "<p>Creates a camera stream node.</p>",
    "CreatePackage": "<p>Creates a package and storage location in an Amazon S3 access point.</p>",
    "CreatePackageImportJob": "<p>Imports a node package.</p>",
    "DeleteDevice": "<p>Deletes a device.</p>",
    "DeletePackage": "<p>Deletes a package.</p>",
    "DeregisterPackageVersion": "<p>Deregisters a package version.</p>",
    "DescribeApplicationInstance": "<p>Returns information about an application instance on a device.</p>",
    "DescribeApplicationInstanceDetails": "<p>Returns information about an application instance's configuration manifest.</p>",
    "DescribeDevice": "<p>Returns information about a device.</p>",
    "DescribeDeviceJob": "<p>Returns information about a device job.</p>",
    "DescribeNode": "<p>Returns information about a node.</p>",
    "DescribeNodeFromTemplateJob": "<p>Returns information about a job to create a camera stream node.</p>",
    "DescribePackage": "<p>Returns information about a package.</p>",
    "DescribePackageImportJob": "<p>Returns information about a package import job.</p>",
    "DescribePackageVersion": "<p>Returns information about a package version.</p>",
    "ListApplicationInstanceDependencies": "<p>Returns a list of application instance dependencies.</p>",
    "ListApplicationInstanceNodeInstances": "<p>Returns a list of application node instances.</p>",
    "ListApplicationInstances": "<p>Returns a list of application instances.</p>",
    "ListDevices": "<p>Returns a list of devices.</p>",
    "ListDevicesJobs": "<p>Returns a list of jobs.</p>",
    "ListNodeFromTemplateJobs": "<p>Returns a list of camera stream node jobs.</p>",
    "ListNodes": "<p>Returns a list of nodes.</p>",
    "ListPackageImportJobs": "<p>Returns a list of package import jobs.</p>",
    "ListPackages": "<p>Returns a list of packages.</p>",
    "ListTagsForResource": "<p>Returns a list of tags for a resource.</p>",
    "ProvisionDevice": "<p>Creates a device and returns a configuration archive. The configuration archive is a ZIP file that contains a provisioning certificate that is valid for 5 minutes. Transfer the configuration archive to the device with the included USB storage device within 5 minutes.</p>",
    "RegisterPackageVersion": "<p>Registers a package version.</p>",
    "RemoveApplicationInstance": "<p>Removes an application instance.</p>",
    "TagResource": "<p>Tags a resource.</p>",
    "UntagResource": "<p>Removes tags from a resource.</p>",
    "UpdateDeviceMetadata": "<p>Updates a device's metadata.</p>"
  },
  "shapes": {
    "AccessDeniedException": {
      "base": "<p>The requestor does not have permission to access the target action or resource.</p>",
      "refs": {
      }
    },
    "ApplicationInstance": {
      "base": "<p>An application instance on a device.</p>",
      "refs": {
        "ApplicationInstances$member": null
      }
    },
    "ApplicationInstanceArn": {
      "base": null,
      "refs": {
        "ApplicationInstance$Arn": "<p>The application instance's ARN.</p>",
        "DescribeApplicationInstanceResponse$Arn": "<p>The application instance's ARN.</p>"
      }
    },
    "ApplicationInstanceHealthStatus": {
      "base": null,
      "refs": {
        "ApplicationInstance$HealthStatus": "<p>The application instance's health status.</p>",
        "DescribeApplicationInstanceResponse$HealthStatus": "<p>The application instance's health status.</p>"
      }
    },
    "ApplicationInstanceId": {
      "base": null,
      "refs": {
        "ApplicationInstance$ApplicationInstanceId": "<p>The application instance's ID.</p>",
        "CreateApplicationInstanceRequest$ApplicationInstanceIdToReplace": "<p>The ID of an application instance to replace with the new instance.</p>",
        "CreateApplicationInstanceResponse$ApplicationInstanceId": "<p>The application instance's ID.</p>",
        "DescribeApplicationInstanceDetailsRequest$ApplicationInstanceId": "<p>The application instance's ID.</p>",
        "DescribeApplicationInstanceDetailsResponse$ApplicationInstanceIdToReplace": "<p>The ID of the application instance that this instance replaced.</p>",
        "DescribeApplicationInstanceDetailsResponse$ApplicationInstanceId": "<p>The application instance's ID.</p>",
        "DescribeApplicationInstanceRequest$ApplicationInstanceId": "<p>The application instance's ID.</p>",
        "DescribeApplicationInstanceResponse$ApplicationInstanceIdToReplace": "<p>The ID of the application instance that this instance replaced.</p>",
        "DescribeApplicationInstanceResponse$ApplicationInstanceId": "<p>The application instance's ID.</p>",
        "ListApplicationInstanceDependenciesRequest$ApplicationInstanceId": "<p>The application instance's ID.</p>",
        "ListApplicationInstanceNodeInstancesRequest$ApplicationInstanceId": "<p>The node instances' application instance ID.</p>",
        "RemoveApplicationInstanceRequest$ApplicationInstanceId": "<p>An application instance ID.</p>"
      }
    },
    "ApplicationInstanceName": {
      "base": null,
      "refs": {
        "ApplicationInstance$Name": "<p>The application instance's name.</p>",
        "CreateApplicationInstanceRequest$Name": "<p>A name for the application instance.</p>",
        "DescribeApplicationInstanceDetailsResponse$Name": "<p>The application instance's name.</p>",
        "DescribeApplicationInstanceResponse$Name": "<p>The application instance's name.</p>"
      }
    },
    "ApplicationInstanceStatus": {
      "base": null,
      "refs": {
        "ApplicationInstance$Status": "<p>The application instance's status.</p>",
        "DescribeApplicationInstanceResponse$Status": "<p>The application instance's status.</p>"
      }
    },
    "ApplicationInstanceStatusDescription": {
      "base": null,
      "refs": {
        "ApplicationInstance$StatusDescription": "<p>The application instance's status description.</p>",
        "DescribeApplicationInstanceResponse$StatusDescription": "<p>The application instance's status description.</p>"
      }
    },
    "ApplicationInstances": {
      "base": null,
      "refs": {
        "ListApplicationInstancesResponse$ApplicationInstances": "<p>A list of application instances.</p>"
      }
    },
    "Boolean": {
      "base": null,
      "refs": {
        "DeletePackageRequest$ForceDelete": "<p>Delete the package even if it has artifacts stored in its access point. Deletes the package's artifacts from Amazon S3.</p>",
        "DescribePackageVersionResponse$IsLatestPatch": "<p>Whether the version is the latest available.</p>"
      }
    },
    "Bucket": {
      "base": null,
      "refs": {
        "StorageLocation$Bucket": "<p>The location's bucket.</p>"
      }
    },
    "BucketName": {
      "base": null,
      "refs": {
        "OutPutS3Location$BucketName": "<p>The object's bucket.</p>",
        "S3Location$BucketName": "<p>A bucket name.</p>"
      }
    },
    "Certificates": {
      "base": null,
      "refs": {
        "ProvisionDeviceResponse$Certificates": "<p>The device's configuration bundle.</p>"
      }
    },
    "ClientToken": {
      "base": null,
      "refs": {
        "CreatePackageImportJobRequest$ClientToken": "<p>A client token for the package import job.</p>",
        "DescribePackageImportJobResponse$ClientToken": "<p>The job's client token.</p>"
      }
    },
    "ConflictException": {
      "base": "<p>The target resource is in use.</p>",
      "refs": {
      }
    },
    "ConflictExceptionErrorArgument": {
      "base": "<p>A conflict exception error argument.</p>",
      "refs": {
        "ConflictExceptionErrorArgumentList$member": null
      }
    },
    "ConflictExceptionErrorArgumentList": {
      "base": null,
      "refs": {
        "ConflictException$ErrorArguments": "<p>A list of attributes that led to the exception and their values.</p>"
      }
    },
    "ConnectionType": {
      "base": null,
      "refs": {
        "EthernetPayload$ConnectionType": "<p>How the device gets an IP address.</p>"
      }
    },
    "CreateApplicationInstanceRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateApplicationInstanceResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateJobForDevicesRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateJobForDevicesResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateNodeFromTemplateJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateNodeFromTemplateJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreatePackageImportJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreatePackageImportJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreatePackageRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreatePackageResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreatedTime": {
      "base": null,
      "refs": {
        "DescribeDeviceResponse$CreatedTime": "<p>When the device was created.</p>",
        "DescribeNodeFromTemplateJobResponse$CreatedTime": "<p>When the job was created.</p>",
        "DescribePackageImportJobResponse$CreatedTime": "<p>When the job was created.</p>",
        "Device$CreatedTime": "<p>When the device was created.</p>",
        "DeviceJob$CreatedTime": "<p>When the job was created.</p>",
        "NodeFromTemplateJob$CreatedTime": "<p>When the job was created.</p>",
        "PackageImportJob$CreatedTime": "<p>When the job was created.</p>"
      }
    },
    "CurrentSoftware": {
      "base": null,
      "refs": {
        "DescribeDeviceResponse$CurrentSoftware": "<p>The device's current software version.</p>"
      }
    },
    "DefaultGateway": {
      "base": null,
      "refs": {
        "StaticIpConnectionInfo$DefaultGateway": "<p>The connection's default gateway.</p>"
      }
    },
    "DefaultRuntimeContextDevice": {
      "base": null,
      "refs": {
        "ApplicationInstance$DefaultRuntimeContextDevice": "<p>The device's ID.</p>",
        "CreateApplicationInstanceRequest$DefaultRuntimeContextDevice": "<p>A device's ID.</p>",
        "DescribeApplicationInstanceDetailsResponse$DefaultRuntimeContextDevice": "<p>The application instance's default runtime context device.</p>",
        "DescribeApplicationInstanceResponse$DefaultRuntimeContextDevice": "<p>The device's ID.</p>"
      }
    },
    "DeleteDeviceRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteDeviceResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeletePackageRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeletePackageResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeregisterPackageVersionRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeregisterPackageVersionResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeApplicationInstanceDetailsRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeApplicationInstanceDetailsResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeApplicationInstanceRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeApplicationInstanceResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeDeviceJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeDeviceJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeDeviceRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeDeviceResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeNodeFromTemplateJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeNodeFromTemplateJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeNodeRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeNodeResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribePackageImportJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribePackageImportJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribePackageRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribePackageResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribePackageVersionRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribePackageVersionResponse": {
      "base": null,
      "refs": {
      }
    },
    "Description": {
      "base": null,
      "refs": {
        "ApplicationInstance$Description": "<p>The application instance's description.</p>",
        "CreateApplicationInstanceRequest$Description": "<p>A description for the application instance.</p>",
        "CreateNodeFromTemplateJobRequest$NodeDescription": "<p>A description for the node.</p>",
        "DescribeApplicationInstanceDetailsResponse$Description": "<p>The application instance's description.</p>",
        "DescribeApplicationInstanceResponse$Description": "<p>The application instance's description.</p>",
        "DescribeDeviceResponse$Description": "<p>The device's description.</p>",
        "DescribeNodeFromTemplateJobResponse$NodeDescription": "<p>The node's description.</p>",
        "DescribeNodeResponse$Description": "<p>The node's description.</p>",
        "Node$Description": "<p>The node's description.</p>",
        "NodeInputPort$Description": "<p>The input port's description.</p>",
        "NodeOutputPort$Description": "<p>The output port's description.</p>",
        "ProvisionDeviceRequest$Description": "<p>A description for the device.</p>",
        "UpdateDeviceMetadataRequest$Description": "<p>A description for the device.</p>"
      }
    },
    "Device": {
      "base": "<p>A device.</p>",
      "refs": {
        "DeviceList$member": null
      }
    },
    "DeviceArn": {
      "base": null,
      "refs": {
        "DescribeDeviceJobResponse$DeviceArn": "<p>The device's ARN.</p>",
        "DescribeDeviceResponse$Arn": "<p>The device's ARN.</p>",
        "ProvisionDeviceResponse$Arn": "<p>The device's ARN.</p>"
      }
    },
    "DeviceConnectionStatus": {
      "base": null,
      "refs": {
        "DescribeDeviceResponse$DeviceConnectionStatus": "<p>The device's connection status.</p>"
      }
    },
    "DeviceId": {
      "base": null,
      "refs": {
        "DeleteDeviceRequest$DeviceId": "<p>The device's ID.</p>",
        "DeleteDeviceResponse$DeviceId": "<p>The device's ID.</p>",
        "DescribeDeviceJobResponse$DeviceId": "<p>The device's ID.</p>",
        "DescribeDeviceRequest$DeviceId": "<p>The device's ID.</p>",
        "DescribeDeviceResponse$DeviceId": "<p>The device's ID.</p>",
        "Device$DeviceId": "<p>The device's ID.</p>",
        "DeviceIdList$member": null,
        "DeviceJob$DeviceId": "<p>The ID of the target device.</p>",
        "Job$DeviceId": "<p>The target device's ID.</p>",
        "ListApplicationInstancesRequest$DeviceId": "<p>The application instances' device ID.</p>",
        "ListDevicesJobsRequest$DeviceId": "<p>Filter results by the job's target device ID.</p>",
        "ProvisionDeviceResponse$DeviceId": "<p>The device's ID.</p>",
        "UpdateDeviceMetadataRequest$DeviceId": "<p>The device's ID.</p>",
        "UpdateDeviceMetadataResponse$DeviceId": "<p>The device's ID.</p>"
      }
    },
    "DeviceIdList": {
      "base": null,
      "refs": {
        "CreateJobForDevicesRequest$DeviceIds": "<p>IDs of target devices.</p>"
      }
    },
    "DeviceJob": {
      "base": "<p>A job that runs on a device.</p>",
      "refs": {
        "DeviceJobList$member": null
      }
    },
    "DeviceJobConfig": {
      "base": "<p>A job's configuration.</p>",
      "refs": {
        "CreateJobForDevicesRequest$DeviceJobConfig": "<p>Configuration settings for the job.</p>"
      }
    },
    "DeviceJobList": {
      "base": null,
      "refs": {
        "ListDevicesJobsResponse$DeviceJobs": "<p>A list of jobs.</p>"
      }
    },
    "DeviceList": {
      "base": null,
      "refs": {
        "ListDevicesResponse$Devices": "<p>A list of devices.</p>"
      }
    },
    "DeviceName": {
      "base": null,
      "refs": {
        "ApplicationInstance$DefaultRuntimeContextDeviceName": "<p>The device's name.</p>",
        "DescribeApplicationInstanceResponse$DefaultRuntimeContextDeviceName": "<p>The device's bane.</p>",
        "DescribeDeviceJobResponse$DeviceName": "<p>The device's name.</p>",
        "DescribeDeviceResponse$Name": "<p>The device's name.</p>",
        "Device$Name": "<p>The device's name.</p>",
        "DeviceJob$DeviceName": "<p>The name of the target device</p>",
        "ProvisionDeviceRequest$Name": "<p>A name for the device.</p>"
      }
    },
    "DeviceSerialNumber": {
      "base": null,
      "refs": {
        "DescribeDeviceResponse$SerialNumber": "<p>The device's serial number.</p>"
      }
    },
    "DeviceStatus": {
      "base": null,
      "refs": {
        "DescribeDeviceResponse$ProvisioningStatus": "<p>The device's provisioning status.</p>",
        "Device$ProvisioningStatus": "<p>The device's provisioning status.</p>",
        "ProvisionDeviceResponse$Status": "<p>The device's status.</p>"
      }
    },
    "DeviceType": {
      "base": null,
      "refs": {
        "DescribeDeviceJobResponse$DeviceType": "<p>The device's type.</p>",
        "DescribeDeviceResponse$Type": "<p>The device's type.</p>"
      }
    },
    "Dns": {
      "base": null,
      "refs": {
        "DnsList$member": null
      }
    },
    "DnsList": {
      "base": null,
      "refs": {
        "StaticIpConnectionInfo$Dns": "<p>The connection's DNS address.</p>"
      }
    },
    "EthernetPayload": {
      "base": "<p>A device's network configuration.</p>",
      "refs": {
        "NetworkPayload$Ethernet0": "<p>Settings for Ethernet port 0.</p>",
        "NetworkPayload$Ethernet1": "<p>Settings for Ethernet port 1.</p>"
      }
    },
    "EthernetStatus": {
      "base": "<p>A device's Ethernet status.</p>",
      "refs": {
        "NetworkStatus$Ethernet0Status": "<p>The status of Ethernet port 0.</p>",
        "NetworkStatus$Ethernet1Status": "<p>The status of Ethernet port 1.</p>"
      }
    },
    "HwAddress": {
      "base": null,
      "refs": {
        "EthernetStatus$HwAddress": "<p>The device's physical address.</p>"
      }
    },
    "ImageVersion": {
      "base": null,
      "refs": {
        "DescribeDeviceJobResponse$ImageVersion": "<p>For an OTA job, the target version of the device software.</p>",
        "OTAJobConfig$ImageVersion": "<p>The target version of the device software.</p>"
      }
    },
    "InputPortList": {
      "base": null,
      "refs": {
        "NodeInterface$Inputs": "<p>The node interface's inputs.</p>"
      }
    },
    "InternalServerException": {
      "base": "<p>An internal error occurred.</p>",
      "refs": {
      }
    },
    "IotThingName": {
      "base": null,
      "refs": {
        "ProvisionDeviceResponse$IotThingName": "<p>The device's IoT thing name.</p>"
      }
    },
    "IpAddress": {
      "base": null,
      "refs": {
        "EthernetStatus$IpAddress": "<p>The device's IP address.</p>",
        "StaticIpConnectionInfo$IpAddress": "<p>The connection's IP address.</p>"
      }
    },
    "Job": {
      "base": "<p>A job for a device.</p>",
      "refs": {
        "JobList$member": null
      }
    },
    "JobId": {
      "base": null,
      "refs": {
        "CreateNodeFromTemplateJobResponse$JobId": "<p>The job's ID.</p>",
        "CreatePackageImportJobResponse$JobId": "<p>The job's ID.</p>",
        "DescribeDeviceJobRequest$JobId": "<p>The job's ID.</p>",
        "DescribeDeviceJobResponse$JobId": "<p>The job's ID.</p>",
        "DescribeNodeFromTemplateJobRequest$JobId": "<p>The job's ID.</p>",
        "DescribeNodeFromTemplateJobResponse$JobId": "<p>The job's ID.</p>",
        "DescribePackageImportJobRequest$JobId": "<p>The job's ID.</p>",
        "DescribePackageImportJobResponse$JobId": "<p>The job's ID.</p>",
        "DeviceJob$JobId": "<p>The job's ID.</p>",
        "Job$JobId": "<p>The job's ID.</p>",
        "NodeFromTemplateJob$JobId": "<p>The job's ID.</p>",
        "PackageImportJob$JobId": "<p>The job's ID.</p>"
      }
    },
    "JobList": {
      "base": null,
      "refs": {
        "CreateJobForDevicesResponse$Jobs": "<p>A list of jobs.</p>"
      }
    },
    "JobResourceTags": {
      "base": "<p>Tags for a job.</p>",
      "refs": {
        "JobTagsList$member": null
      }
    },
    "JobResourceType": {
      "base": null,
      "refs": {
        "JobResourceTags$ResourceType": "<p>The job's type.</p>"
      }
    },
    "JobTagsList": {
      "base": null,
      "refs": {
        "CreateNodeFromTemplateJobRequest$JobTags": "<p>Tags for the job.</p>",
        "CreatePackageImportJobRequest$JobTags": "<p>Tags for the package import job.</p>",
        "DescribeNodeFromTemplateJobResponse$JobTags": "<p>The job's tags.</p>",
        "DescribePackageImportJobResponse$JobTags": "<p>The job's tags.</p>"
      }
    },
    "JobType": {
      "base": null,
      "refs": {
        "CreateJobForDevicesRequest$JobType": "<p>The type of job to run.</p>"
      }
    },
    "LastUpdatedTime": {
      "base": null,
      "refs": {
        "DescribeNodeFromTemplateJobResponse$LastUpdatedTime": "<p>When the job was updated.</p>",
        "DescribePackageImportJobResponse$LastUpdatedTime": "<p>When the job was updated.</p>",
        "Device$LastUpdatedTime": "<p>When the device was updated.</p>",
        "PackageImportJob$LastUpdatedTime": "<p>When the job was updated.</p>"
      }
    },
    "LatestSoftware": {
      "base": null,
      "refs": {
        "DescribeDeviceResponse$LatestSoftware": "<p>The latest software version available for the device.</p>"
      }
    },
    "LeaseExpirationTime": {
      "base": null,
      "refs": {
        "DescribeDeviceResponse$LeaseExpirationTime": "<p>The device's lease expiration time.</p>",
        "Device$LeaseExpirationTime": "<p>The device's lease expiration time.</p>"
      }
    },
    "ListApplicationInstanceDependenciesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListApplicationInstanceDependenciesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListApplicationInstanceNodeInstancesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListApplicationInstanceNodeInstancesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListApplicationInstancesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListApplicationInstancesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListDevicesJobsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListDevicesJobsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListDevicesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListDevicesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListNodeFromTemplateJobsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListNodeFromTemplateJobsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListNodesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListNodesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListPackageImportJobsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListPackageImportJobsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListPackagesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListPackagesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "ManifestOverridesPayload": {
      "base": "<p>Parameter overrides for an application instance. This is a JSON document that has a single key (<code>PayloadData</code>) where the value is an escaped string representation of the overrides document.</p>",
      "refs": {
        "CreateApplicationInstanceRequest$ManifestOverridesPayload": "<p>Setting overrides for the application manifest.</p>",
        "DescribeApplicationInstanceDetailsResponse$ManifestOverridesPayload": "<p>Parameter overrides for the configuration manifest.</p>"
      }
    },
    "ManifestOverridesPayloadData": {
      "base": null,
      "refs": {
        "ManifestOverridesPayload$PayloadData": "<p>The overrides document.</p>"
      }
    },
    "ManifestPayload": {
      "base": "<p>A application verion's manifest file. This is a JSON document that has a single key (<code>PayloadData</code>) where the value is an escaped string representation of the application manifest (<code>graph.json</code>). This file is located in the <code>graphs</code> folder in your application source.</p>",
      "refs": {
        "CreateApplicationInstanceRequest$ManifestPayload": "<p>The application's manifest document.</p>",
        "DescribeApplicationInstanceDetailsResponse$ManifestPayload": "<p>The application instance's configuration manifest.</p>"
      }
    },
    "ManifestPayloadData": {
      "base": null,
      "refs": {
        "ManifestPayload$PayloadData": "<p>The application manifest.</p>"
      }
    },
    "MarkLatestPatch": {
      "base": null,
      "refs": {
        "PackageVersionOutputConfig$MarkLatest": "<p>Indicates that the version is recommended for all users.</p>",
        "RegisterPackageVersionRequest$MarkLatest": "<p>Whether to mark the new version as the latest version.</p>"
      }
    },
    "Mask": {
      "base": null,
      "refs": {
        "StaticIpConnectionInfo$Mask": "<p>The connection's DNS mask.</p>"
      }
    },
    "MaxConnections": {
      "base": null,
      "refs": {
        "NodeInputPort$MaxConnections": "<p>The input port's max connections.</p>"
      }
    },
    "MaxSize25": {
      "base": null,
      "refs": {
        "ListApplicationInstanceDependenciesRequest$MaxResults": "<p>The maximum number of application instance dependencies to return in one page of results.</p>",
        "ListApplicationInstanceNodeInstancesRequest$MaxResults": "<p>The maximum number of node instances to return in one page of results.</p>",
        "ListApplicationInstancesRequest$MaxResults": "<p>The maximum number of application instances to return in one page of results.</p>",
        "ListDevicesJobsRequest$MaxResults": "<p>The maximum number of device jobs to return in one page of results.</p>",
        "ListDevicesRequest$MaxResults": "<p>The maximum number of devices to return in one page of results.</p>",
        "ListNodeFromTemplateJobsRequest$MaxResults": "<p>The maximum number of node from template jobs to return in one page of results.</p>",
        "ListNodesRequest$MaxResults": "<p>The maximum number of nodes to return in one page of results.</p>",
        "ListPackageImportJobsRequest$MaxResults": "<p>The maximum number of package import jobs to return in one page of results.</p>",
        "ListPackagesRequest$MaxResults": "<p>The maximum number of packages to return in one page of results.</p>"
      }
    },
    "NetworkConnectionStatus": {
      "base": null,
      "refs": {
        "EthernetStatus$ConnectionStatus": "<p>The device's connection status.</p>"
      }
    },
    "NetworkPayload": {
      "base": "<p>The network configuration for a device.</p>",
      "refs": {
        "DescribeDeviceResponse$NetworkingConfiguration": "<p>The device's networking configuration.</p>",
        "ProvisionDeviceRequest$NetworkingConfiguration": "<p>A networking configuration for the device.</p>"
      }
    },
    "NetworkStatus": {
      "base": "<p>The network status of a device.</p>",
      "refs": {
        "DescribeDeviceResponse$CurrentNetworkingStatus": "<p>The device's networking status.</p>"
      }
    },
    "NextToken": {
      "base": null,
      "refs": {
        "ListApplicationInstanceDependenciesRequest$NextToken": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
        "ListApplicationInstanceDependenciesResponse$NextToken": "<p>A pagination token that's included if more results are available.</p>",
        "ListApplicationInstanceNodeInstancesRequest$NextToken": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
        "ListApplicationInstanceNodeInstancesResponse$NextToken": "<p>A pagination token that's included if more results are available.</p>",
        "ListApplicationInstancesRequest$NextToken": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
        "ListApplicationInstancesResponse$NextToken": "<p>A pagination token that's included if more results are available.</p>",
        "ListDevicesJobsRequest$NextToken": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
        "ListDevicesJobsResponse$NextToken": "<p>A pagination token that's included if more results are available.</p>",
        "ListDevicesRequest$NextToken": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
        "ListDevicesResponse$NextToken": "<p>A pagination token that's included if more results are available.</p>",
        "ListNodeFromTemplateJobsRequest$NextToken": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
        "ListNodeFromTemplateJobsResponse$NextToken": "<p>A pagination token that's included if more results are available.</p>",
        "ListPackageImportJobsRequest$NextToken": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
        "ListPackageImportJobsResponse$NextToken": "<p>A pagination token that's included if more results are available.</p>",
        "ListPackagesResponse$NextToken": "<p>A pagination token that's included if more results are available.</p>"
      }
    },
    "Node": {
      "base": "<p>An application node that represents a camera stream, a model, code, or output.</p>",
      "refs": {
        "NodesList$member": null
      }
    },
    "NodeAssetName": {
      "base": null,
      "refs": {
        "DescribeNodeResponse$AssetName": "<p>The node's asset name.</p>"
      }
    },
    "NodeCategory": {
      "base": null,
      "refs": {
        "DescribeNodeResponse$Category": "<p>The node's category.</p>",
        "ListNodesRequest$Category": "<p>Search for nodes by category.</p>",
        "Node$Category": "<p>The node's category.</p>"
      }
    },
    "NodeFromTemplateJob": {
      "base": "<p>A job to create a camera stream node.</p>",
      "refs": {
        "NodeFromTemplateJobList$member": null
      }
    },
    "NodeFromTemplateJobList": {
      "base": null,
      "refs": {
        "ListNodeFromTemplateJobsResponse$NodeFromTemplateJobs": "<p>A list of jobs.</p>"
      }
    },
    "NodeFromTemplateJobStatus": {
      "base": null,
      "refs": {
        "DescribeNodeFromTemplateJobResponse$Status": "<p>The job's status.</p>",
        "NodeFromTemplateJob$Status": "<p>The job's status.</p>"
      }
    },
    "NodeFromTemplateJobStatusMessage": {
      "base": null,
      "refs": {
        "DescribeNodeFromTemplateJobResponse$StatusMessage": "<p>The job's status message.</p>",
        "NodeFromTemplateJob$StatusMessage": "<p>The job's status message.</p>"
      }
    },
    "NodeId": {
      "base": null,
      "refs": {
        "DescribeNodeRequest$NodeId": "<p>The node's ID.</p>",
        "DescribeNodeResponse$NodeId": "<p>The node's ID.</p>",
        "Node$NodeId": "<p>The node's ID.</p>",
        "NodeInstance$NodeId": "<p>The node's ID.</p>"
      }
    },
    "NodeInputPort": {
      "base": "<p>A node input port.</p>",
      "refs": {
        "InputPortList$member": null
      }
    },
    "NodeInstance": {
      "base": "<p>A node instance.</p>",
      "refs": {
        "NodeInstances$member": null
      }
    },
    "NodeInstanceId": {
      "base": null,
      "refs": {
        "NodeInstance$NodeInstanceId": "<p>The instance's ID.</p>"
      }
    },
    "NodeInstanceStatus": {
      "base": null,
      "refs": {
        "NodeInstance$CurrentStatus": "<p>The instance's current status.</p>"
      }
    },
    "NodeInstances": {
      "base": null,
      "refs": {
        "ListApplicationInstanceNodeInstancesResponse$NodeInstances": "<p>A list of node instances.</p>"
      }
    },
    "NodeInterface": {
      "base": "<p>A node interface.</p>",
      "refs": {
        "DescribeNodeResponse$NodeInterface": "<p>The node's interface.</p>"
      }
    },
    "NodeName": {
      "base": null,
      "refs": {
        "CreateNodeFromTemplateJobRequest$NodeName": "<p>A name for the node.</p>",
        "DescribeNodeFromTemplateJobResponse$NodeName": "<p>The node's name.</p>",
        "DescribeNodeResponse$Name": "<p>The node's name.</p>",
        "Node$Name": "<p>The node's name.</p>",
        "NodeFromTemplateJob$NodeName": "<p>The node's name.</p>",
        "NodeInstance$NodeName": "<p>The instance's name.</p>"
      }
    },
    "NodeOutputPort": {
      "base": "<p>A node output port.</p>",
      "refs": {
        "OutputPortList$member": null
      }
    },
    "NodePackageArn": {
      "base": null,
      "refs": {
        "CreatePackageResponse$Arn": "<p>The package's ARN.</p>",
        "DescribeNodeResponse$PackageArn": "<p>The node's ARN.</p>",
        "DescribePackageResponse$Arn": "<p>The package's ARN.</p>",
        "DescribePackageVersionResponse$PackageArn": "<p>The ARN of the package.</p>",
        "Node$PackageArn": "<p>The node's ARN.</p>",
        "PackageListItem$Arn": "<p>The package's ARN.</p>"
      }
    },
    "NodePackageId": {
      "base": null,
      "refs": {
        "CreatePackageResponse$PackageId": "<p>The package's ID.</p>",
        "DeletePackageRequest$PackageId": "<p>The package's ID.</p>",
        "DeregisterPackageVersionRequest$PackageId": "<p>A package ID.</p>",
        "DescribeNodeResponse$PackageId": "<p>The node's package ID.</p>",
        "DescribePackageRequest$PackageId": "<p>The package's ID.</p>",
        "DescribePackageResponse$PackageId": "<p>The package's ID.</p>",
        "DescribePackageVersionRequest$PackageId": "<p>The version's ID.</p>",
        "DescribePackageVersionResponse$PackageId": "<p>The version's ID.</p>",
        "Node$PackageId": "<p>The node's package ID.</p>",
        "PackageImportJobOutput$PackageId": "<p>The package's ID.</p>",
        "PackageListItem$PackageId": "<p>The package's ID.</p>",
        "RegisterPackageVersionRequest$PackageId": "<p>A package ID.</p>"
      }
    },
    "NodePackageName": {
      "base": null,
      "refs": {
        "CreateNodeFromTemplateJobRequest$OutputPackageName": "<p>An output package name for the node.</p>",
        "CreatePackageRequest$PackageName": "<p>A name for the package.</p>",
        "DescribeNodeFromTemplateJobResponse$OutputPackageName": "<p>The job's output package name.</p>",
        "DescribeNodeResponse$PackageName": "<p>The node's package name.</p>",
        "DescribePackageResponse$PackageName": "<p>The package's name.</p>",
        "DescribePackageVersionResponse$PackageName": "<p>The version's name.</p>",
        "ListNodesRequest$PackageName": "<p>Search for nodes by name.</p>",
        "Node$PackageName": "<p>The node's package name.</p>",
        "NodeInstance$PackageName": "<p>The instance's package name.</p>",
        "PackageListItem$PackageName": "<p>The package's name.</p>",
        "PackageObject$Name": "<p>The object's name.</p>",
        "PackageVersionOutputConfig$PackageName": "<p>The output's package name.</p>"
      }
    },
    "NodePackagePatchVersion": {
      "base": null,
      "refs": {
        "DeregisterPackageVersionRequest$PatchVersion": "<p>A patch version.</p>",
        "DeregisterPackageVersionRequest$UpdatedLatestPatchVersion": "<p>If the version was marked latest, the new version to maker as latest.</p>",
        "DescribeNodeResponse$PatchVersion": "<p>The node's patch version.</p>",
        "DescribePackageVersionRequest$PatchVersion": "<p>The version's patch version.</p>",
        "DescribePackageVersionResponse$PatchVersion": "<p>The version's patch version.</p>",
        "ListNodesRequest$PatchVersion": "<p>Search for nodes by patch version.</p>",
        "Node$PatchVersion": "<p>The node's patch version.</p>",
        "NodeInstance$PackagePatchVersion": "<p>The instance's package patch version.</p>",
        "PackageImportJobOutput$PatchVersion": "<p>The package's patch version.</p>",
        "PackageObject$PatchVersion": "<p>The object's patch version.</p>",
        "RegisterPackageVersionRequest$PatchVersion": "<p>A patch version.</p>"
      }
    },
    "NodePackageVersion": {
      "base": null,
      "refs": {
        "CreateNodeFromTemplateJobRequest$OutputPackageVersion": "<p>An output package version for the node.</p>",
        "DeregisterPackageVersionRequest$PackageVersion": "<p>A package version.</p>",
        "DescribeNodeFromTemplateJobResponse$OutputPackageVersion": "<p>The job's output package version.</p>",
        "DescribeNodeResponse$PackageVersion": "<p>The node's package version.</p>",
        "DescribePackageVersionRequest$PackageVersion": "<p>The version's version.</p>",
        "DescribePackageVersionResponse$PackageVersion": "<p>The version's version.</p>",
        "ListNodesRequest$PackageVersion": "<p>Search for nodes by version.</p>",
        "Node$PackageVersion": "<p>The node's package version.</p>",
        "NodeInstance$PackageVersion": "<p>The instance's package version.</p>",
        "PackageImportJobOutput$PackageVersion": "<p>The package's version.</p>",
        "PackageObject$PackageVersion": "<p>The object's package version.</p>",
        "PackageVersionOutputConfig$PackageVersion": "<p>The output's package version.</p>",
        "RegisterPackageVersionRequest$PackageVersion": "<p>A package version.</p>"
      }
    },
    "NodesList": {
      "base": null,
      "refs": {
        "ListNodesResponse$Nodes": "<p>A list of nodes.</p>"
      }
    },
    "OTAJobConfig": {
      "base": "<p>An over-the-air update (OTA) job configuration.</p>",
      "refs": {
        "DeviceJobConfig$OTAJobConfig": "<p>A configuration for an over-the-air (OTA) upgrade. Required for OTA jobs.</p>"
      }
    },
    "Object": {
      "base": null,
      "refs": {
        "StorageLocation$RepoPrefixLocation": "<p>The location's repo prefix.</p>",
        "StorageLocation$GeneratedPrefixLocation": "<p>The location's generated prefix.</p>",
        "StorageLocation$BinaryPrefixLocation": "<p>The location's binary prefix.</p>",
        "StorageLocation$ManifestPrefixLocation": "<p>The location's manifest prefix.</p>"
      }
    },
    "ObjectKey": {
      "base": null,
      "refs": {
        "OutPutS3Location$ObjectKey": "<p>The object's key.</p>",
        "S3Location$ObjectKey": "<p>An object key.</p>"
      }
    },
    "OutPutS3Location": {
      "base": "<p>The location of an output object in Amazon S3.</p>",
      "refs": {
        "PackageImportJobOutput$OutputS3Location": "<p>The package's output location.</p>"
      }
    },
    "OutputPortList": {
      "base": null,
      "refs": {
        "NodeInterface$Outputs": "<p>The node interface's outputs.</p>"
      }
    },
    "PackageImportJob": {
      "base": "<p>A job to import a package version.</p>",
      "refs": {
        "PackageImportJobList$member": null
      }
    },
    "PackageImportJobInputConfig": {
      "base": "<p>A configuration for a package import job.</p>",
      "refs": {
        "CreatePackageImportJobRequest$InputConfig": "<p>An input config for the package import job.</p>",
        "DescribePackageImportJobResponse$InputConfig": "<p>The job's input config.</p>"
      }
    },
    "PackageImportJobList": {
      "base": null,
      "refs": {
        "ListPackageImportJobsResponse$PackageImportJobs": "<p>A list of package import jobs.</p>"
      }
    },
    "PackageImportJobOutput": {
      "base": "<p>Results of a package import job.</p>",
      "refs": {
        "DescribePackageImportJobResponse$Output": "<p>The job's output.</p>"
      }
    },
    "PackageImportJobOutputConfig": {
      "base": "<p>An output configuration for a package import job.</p>",
      "refs": {
        "CreatePackageImportJobRequest$OutputConfig": "<p>An output config for the package import job.</p>",
        "DescribePackageImportJobResponse$OutputConfig": "<p>The job's output config.</p>"
      }
    },
    "PackageImportJobStatus": {
      "base": null,
      "refs": {
        "DescribePackageImportJobResponse$Status": "<p>The job's status.</p>",
        "PackageImportJob$Status": "<p>The job's status.</p>"
      }
    },
    "PackageImportJobStatusMessage": {
      "base": null,
      "refs": {
        "DescribePackageImportJobResponse$StatusMessage": "<p>The job's status message.</p>",
        "PackageImportJob$StatusMessage": "<p>The job's status message.</p>"
      }
    },
    "PackageImportJobType": {
      "base": null,
      "refs": {
        "CreatePackageImportJobRequest$JobType": "<p>A job type for the package import job.</p>",
        "DescribePackageImportJobResponse$JobType": "<p>The job's type.</p>",
        "PackageImportJob$JobType": "<p>The job's type.</p>"
      }
    },
    "PackageList": {
      "base": null,
      "refs": {
        "ListPackagesResponse$Packages": "<p>A list of packages.</p>"
      }
    },
    "PackageListItem": {
      "base": "<p>A package summary.</p>",
      "refs": {
        "PackageList$member": null
      }
    },
    "PackageObject": {
      "base": "<p>A package object.</p>",
      "refs": {
        "PackageObjects$member": null
      }
    },
    "PackageObjects": {
      "base": null,
      "refs": {
        "ListApplicationInstanceDependenciesResponse$PackageObjects": "<p>A list of package objects.</p>"
      }
    },
    "PackageOwnerAccount": {
      "base": null,
      "refs": {
        "DeregisterPackageVersionRequest$OwnerAccount": "<p>An owner account.</p>",
        "DescribeNodeRequest$OwnerAccount": "<p>The account ID of the node's owner.</p>",
        "DescribeNodeResponse$OwnerAccount": "<p>The account ID of the node's owner.</p>",
        "DescribePackageVersionRequest$OwnerAccount": "<p>The version's owner account.</p>",
        "DescribePackageVersionResponse$OwnerAccount": "<p>The account ID of the version's owner.</p>",
        "ListNodesRequest$OwnerAccount": "<p>Search for nodes by the account ID of the nodes' owner.</p>",
        "Node$OwnerAccount": "<p>The account ID of the node's owner.</p>",
        "RegisterPackageVersionRequest$OwnerAccount": "<p>An owner account.</p>"
      }
    },
    "PackageVersionInputConfig": {
      "base": "<p>A package version input configuration.</p>",
      "refs": {
        "PackageImportJobInputConfig$PackageVersionInputConfig": "<p>The package version's input configuration.</p>"
      }
    },
    "PackageVersionOutputConfig": {
      "base": "<p>A package version output configuration.</p>",
      "refs": {
        "PackageImportJobOutputConfig$PackageVersionOutputConfig": "<p>The package version's output configuration.</p>"
      }
    },
    "PackageVersionStatus": {
      "base": null,
      "refs": {
        "DescribePackageVersionResponse$Status": "<p>The version's status.</p>"
      }
    },
    "PackageVersionStatusDescription": {
      "base": null,
      "refs": {
        "DescribePackageVersionResponse$StatusDescription": "<p>The version's status description.</p>"
      }
    },
    "PortDefaultValue": {
      "base": null,
      "refs": {
        "NodeInputPort$DefaultValue": "<p>The input port's default value.</p>"
      }
    },
    "PortName": {
      "base": null,
      "refs": {
        "NodeInputPort$Name": "<p>The input port's name.</p>",
        "NodeOutputPort$Name": "<p>The output port's name.</p>"
      }
    },
    "PortType": {
      "base": null,
      "refs": {
        "NodeInputPort$Type": "<p>The input port's type.</p>",
        "NodeOutputPort$Type": "<p>The output port's type.</p>"
      }
    },
    "PrincipalArn": {
      "base": null,
      "refs": {
        "PrincipalArnsList$member": null
      }
    },
    "PrincipalArnsList": {
      "base": null,
      "refs": {
        "DescribePackageResponse$ReadAccessPrincipalArns": "<p>ARNs of accounts that have read access to the package.</p>",
        "DescribePackageResponse$WriteAccessPrincipalArns": "<p>ARNs of accounts that have write access to the package.</p>"
      }
    },
    "ProvisionDeviceRequest": {
      "base": null,
      "refs": {
      }
    },
    "ProvisionDeviceResponse": {
      "base": null,
      "refs": {
      }
    },
    "Region": {
      "base": null,
      "refs": {
        "S3Location$Region": "<p>The bucket's Region.</p>"
      }
    },
    "RegisterPackageVersionRequest": {
      "base": null,
      "refs": {
      }
    },
    "RegisterPackageVersionResponse": {
      "base": null,
      "refs": {
      }
    },
    "RemoveApplicationInstanceRequest": {
      "base": null,
      "refs": {
      }
    },
    "RemoveApplicationInstanceResponse": {
      "base": null,
      "refs": {
      }
    },
    "ResourceArn": {
      "base": null,
      "refs": {
        "ListTagsForResourceRequest$ResourceArn": "<p>The resource's ARN.</p>",
        "TagResourceRequest$ResourceArn": "<p>The resource's ARN.</p>",
        "UntagResourceRequest$ResourceArn": "<p>The resource's ARN.</p>"
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>The target resource was not found.</p>",
      "refs": {
      }
    },
    "RetryAfterSeconds": {
      "base": null,
      "refs": {
        "InternalServerException$RetryAfterSeconds": "<p>The number of seconds a client should wait before retrying the call.</p>"
      }
    },
    "RuntimeRoleArn": {
      "base": null,
      "refs": {
        "CreateApplicationInstanceRequest$RuntimeRoleArn": "<p>The ARN of a runtime role for the application instance.</p>",
        "DescribeApplicationInstanceResponse$RuntimeRoleArn": "<p>The application instance's runtime role ARN.</p>"
      }
    },
    "S3Location": {
      "base": "<p>A location in Amazon S3.</p>",
      "refs": {
        "PackageVersionInputConfig$S3Location": "<p>A location in Amazon S3.</p>"
      }
    },
    "ServiceQuotaExceededException": {
      "base": "<p>The request would cause a limit to be exceeded.</p>",
      "refs": {
      }
    },
    "StaticIpConnectionInfo": {
      "base": "<p>A static IP configuration.</p>",
      "refs": {
        "EthernetPayload$StaticIpConnectionInfo": "<p>Network configuration for a static IP connection.</p>"
      }
    },
    "StatusFilter": {
      "base": null,
      "refs": {
        "ListApplicationInstancesRequest$StatusFilter": "<p>Only include instances with a specific status.</p>"
      }
    },
    "StorageLocation": {
      "base": "<p>A storage location.</p>",
      "refs": {
        "CreatePackageResponse$StorageLocation": "<p>The package's storage location.</p>",
        "DescribePackageResponse$StorageLocation": "<p>The package's storage location.</p>"
      }
    },
    "String": {
      "base": null,
      "refs": {
        "AccessDeniedException$Message": null,
        "ConflictException$Message": null,
        "ConflictException$ResourceId": "<p>The resource's ID.</p>",
        "ConflictException$ResourceType": "<p>The resource's type.</p>",
        "ConflictException$ErrorId": "<p>A unique ID for the error.</p>",
        "ConflictExceptionErrorArgument$Name": "<p>The error argument's name.</p>",
        "ConflictExceptionErrorArgument$Value": "<p>The error argument's value.</p>",
        "InternalServerException$Message": null,
        "ResourceNotFoundException$Message": null,
        "ResourceNotFoundException$ResourceId": "<p>The resource's ID.</p>",
        "ResourceNotFoundException$ResourceType": "<p>The resource's type.</p>",
        "ServiceQuotaExceededException$Message": null,
        "ServiceQuotaExceededException$ResourceId": "<p>The target resource's ID.</p>",
        "ServiceQuotaExceededException$ResourceType": "<p>The target resource's type.</p>",
        "ServiceQuotaExceededException$QuotaCode": "<p>The name of the limit.</p>",
        "ServiceQuotaExceededException$ServiceCode": "<p>The name of the service.</p>",
        "ValidationException$Message": null,
        "ValidationException$ErrorId": "<p>A unique ID for the error.</p>",
        "ValidationExceptionErrorArgument$Name": "<p>The argument's name.</p>",
        "ValidationExceptionErrorArgument$Value": "<p>The argument's value.</p>",
        "ValidationExceptionField$Name": "<p>The field's name.</p>",
        "ValidationExceptionField$Message": "<p>The field's message.</p>"
      }
    },
    "TagKey": {
      "base": null,
      "refs": {
        "TagKeyList$member": null,
        "TagMap$key": null
      }
    },
    "TagKeyList": {
      "base": null,
      "refs": {
        "UntagResourceRequest$TagKeys": "<p>Tag keys to remove.</p>"
      }
    },
    "TagMap": {
      "base": null,
      "refs": {
        "ApplicationInstance$Tags": "<p>The application instance's tags.</p>",
        "CreateApplicationInstanceRequest$Tags": "<p>Tags for the application instance.</p>",
        "CreatePackageRequest$Tags": "<p>Tags for the package.</p>",
        "DescribeApplicationInstanceResponse$Tags": "<p>The application instance's tags.</p>",
        "DescribeDeviceResponse$Tags": "<p>The device's tags.</p>",
        "DescribePackageResponse$Tags": "<p>The package's tags.</p>",
        "JobResourceTags$Tags": "<p>The job's tags.</p>",
        "ListTagsForResourceResponse$Tags": "<p>A list of tags.</p>",
        "PackageListItem$Tags": "<p>The package's tags.</p>",
        "ProvisionDeviceRequest$Tags": "<p>Tags for the device.</p>",
        "TagResourceRequest$Tags": "<p>Tags for the resource.</p>"
      }
    },
    "TagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "TagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "TagValue": {
      "base": null,
      "refs": {
        "TagMap$value": null
      }
    },
    "TemplateKey": {
      "base": null,
      "refs": {
        "TemplateParametersMap$key": null
      }
    },
    "TemplateParametersMap": {
      "base": null,
      "refs": {
        "CreateNodeFromTemplateJobRequest$TemplateParameters": "<p>Template parameters for the node.</p>",
        "DescribeNodeFromTemplateJobResponse$TemplateParameters": "<p>The job's template parameters.</p>"
      }
    },
    "TemplateType": {
      "base": null,
      "refs": {
        "CreateNodeFromTemplateJobRequest$TemplateType": "<p>The type of node.</p>",
        "DescribeNodeFromTemplateJobResponse$TemplateType": "<p>The job's template type.</p>",
        "NodeFromTemplateJob$TemplateType": "<p>The job's template type.</p>"
      }
    },
    "TemplateValue": {
      "base": null,
      "refs": {
        "TemplateParametersMap$value": null
      }
    },
    "TimeStamp": {
      "base": null,
      "refs": {
        "ApplicationInstance$CreatedTime": "<p>When the application instance was created.</p>",
        "DescribeApplicationInstanceDetailsResponse$CreatedTime": "<p>When the application instance was created.</p>",
        "DescribeApplicationInstanceResponse$CreatedTime": "<p>When the application instance was created.</p>",
        "DescribeApplicationInstanceResponse$LastUpdatedTime": "<p>The application instance was updated.</p>",
        "DescribeNodeResponse$CreatedTime": "<p>When the node was created.</p>",
        "DescribeNodeResponse$LastUpdatedTime": "<p>When the node was updated.</p>",
        "DescribePackageResponse$CreatedTime": "<p>When the package was created.</p>",
        "DescribePackageVersionResponse$RegisteredTime": "<p>The version's registered time.</p>",
        "Node$CreatedTime": "<p>When the node was created.</p>",
        "PackageListItem$CreatedTime": "<p>When the package was created.</p>"
      }
    },
    "Token": {
      "base": null,
      "refs": {
        "ListNodesRequest$NextToken": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
        "ListNodesResponse$NextToken": "<p>A pagination token that's included if more results are available.</p>",
        "ListPackagesRequest$NextToken": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>"
      }
    },
    "UntagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "UntagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateCreatedTime": {
      "base": null,
      "refs": {
        "DescribeDeviceJobResponse$CreatedTime": "<p>When the job was created.</p>"
      }
    },
    "UpdateDeviceMetadataRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateDeviceMetadataResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateProgress": {
      "base": null,
      "refs": {
        "DescribeDeviceJobResponse$Status": "<p>The job's status.</p>"
      }
    },
    "ValidationException": {
      "base": "<p>The request contains an invalid parameter value.</p>",
      "refs": {
      }
    },
    "ValidationExceptionErrorArgument": {
      "base": "<p>A validation exception error argument.</p>",
      "refs": {
        "ValidationExceptionErrorArgumentList$member": null
      }
    },
    "ValidationExceptionErrorArgumentList": {
      "base": null,
      "refs": {
        "ValidationException$ErrorArguments": "<p>A list of attributes that led to the exception and their values.</p>"
      }
    },
    "ValidationExceptionField": {
      "base": "<p>A validation exception field.</p>",
      "refs": {
        "ValidationExceptionFieldList$member": null
      }
    },
    "ValidationExceptionFieldList": {
      "base": null,
      "refs": {
        "ValidationException$Fields": "<p>A list of request parameters that failed validation.</p>"
      }
    },
    "ValidationExceptionReason": {
      "base": null,
      "refs": {
        "ValidationException$Reason": "<p>The reason that validation failed.</p>"
      }
    }
  }
}
