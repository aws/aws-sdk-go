{
  "metadata": {
    "apiVersion": "2023-08-01",
    "endpointPrefix": "neptune-db",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "Amazon NeptuneData",
    "serviceId": "neptunedata",
    "signatureVersion": "v4",
    "signingName": "neptune-db",
    "uid": "neptunedata-2023-08-01"
  },
  "operations": {
    "CancelGremlinQuery": {
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "FailureByQueryException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ParsingException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "TimeLimitExceededException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "ConcurrentModificationException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/gremlin/status/{queryId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "CancelGremlinQueryInput"
      },
      "name": "CancelGremlinQuery",
      "output": {
        "shape": "CancelGremlinQueryOutput"
      }
    },
    "CancelLoaderJob": {
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "BulkLoadIdNotFoundException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "LoadUrlAccessDeniedException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/loader/{loadId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "CancelLoaderJobInput"
      },
      "name": "CancelLoaderJob",
      "output": {
        "shape": "CancelLoaderJobOutput"
      }
    },
    "CancelMLDataProcessingJob": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "MLResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/ml/dataprocessing/{id}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "CancelMLDataProcessingJobInput"
      },
      "name": "CancelMLDataProcessingJob",
      "output": {
        "shape": "CancelMLDataProcessingJobOutput"
      }
    },
    "CancelMLModelTrainingJob": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "MLResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/ml/modeltraining/{id}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "CancelMLModelTrainingJobInput"
      },
      "name": "CancelMLModelTrainingJob",
      "output": {
        "shape": "CancelMLModelTrainingJobOutput"
      }
    },
    "CancelMLModelTransformJob": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "MLResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/ml/modeltransform/{id}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "CancelMLModelTransformJobInput"
      },
      "name": "CancelMLModelTransformJob",
      "output": {
        "shape": "CancelMLModelTransformJobOutput"
      }
    },
    "CancelOpenCypherQuery": {
      "errors": [
        {
          "shape": "InvalidNumericDataException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "FailureByQueryException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ParsingException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "TimeLimitExceededException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "ConcurrentModificationException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/opencypher/status/{queryId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "CancelOpenCypherQueryInput"
      },
      "name": "CancelOpenCypherQuery",
      "output": {
        "shape": "CancelOpenCypherQueryOutput"
      }
    },
    "CreateMLEndpoint": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "MLResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ml/endpoints",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateMLEndpointInput"
      },
      "name": "CreateMLEndpoint",
      "output": {
        "shape": "CreateMLEndpointOutput"
      }
    },
    "DeleteMLEndpoint": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "MLResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/ml/endpoints/{id}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteMLEndpointInput"
      },
      "name": "DeleteMLEndpoint",
      "output": {
        "shape": "DeleteMLEndpointOutput"
      }
    },
    "DeletePropertygraphStatistics": {
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "StatisticsNotAvailableException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ReadOnlyViolationException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/propertygraph/statistics",
        "responseCode": 200
      },
      "idempotent": true,
      "name": "DeletePropertygraphStatistics",
      "output": {
        "shape": "DeletePropertygraphStatisticsOutput"
      }
    },
    "DeleteSparqlStatistics": {
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "StatisticsNotAvailableException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ReadOnlyViolationException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/sparql/statistics",
        "responseCode": 200
      },
      "idempotent": true,
      "name": "DeleteSparqlStatistics",
      "output": {
        "shape": "DeleteSparqlStatisticsOutput"
      }
    },
    "ExecuteFastReset": {
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "ServerShutdownException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "MethodNotAllowedException"
        },
        {
          "shape": "ReadOnlyViolationException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/system",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "ExecuteFastResetInput"
      },
      "name": "ExecuteFastReset",
      "output": {
        "shape": "ExecuteFastResetOutput"
      }
    },
    "ExecuteGremlinExplainQuery": {
      "errors": [
        {
          "shape": "QueryTooLargeException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "QueryLimitExceededException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "QueryLimitException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "CancelledByUserException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "FailureByQueryException"
        },
        {
          "shape": "MemoryLimitExceededException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "MalformedQueryException"
        },
        {
          "shape": "ParsingException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "TimeLimitExceededException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "ConcurrentModificationException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/gremlin/explain",
        "responseCode": 200
      },
      "input": {
        "shape": "ExecuteGremlinExplainQueryInput"
      },
      "name": "ExecuteGremlinExplainQuery",
      "output": {
        "shape": "ExecuteGremlinExplainQueryOutput"
      }
    },
    "ExecuteGremlinProfileQuery": {
      "errors": [
        {
          "shape": "QueryTooLargeException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "QueryLimitExceededException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "QueryLimitException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "CancelledByUserException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "FailureByQueryException"
        },
        {
          "shape": "MemoryLimitExceededException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "MalformedQueryException"
        },
        {
          "shape": "ParsingException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "TimeLimitExceededException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "ConcurrentModificationException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/gremlin/profile",
        "responseCode": 200
      },
      "input": {
        "shape": "ExecuteGremlinProfileQueryInput"
      },
      "name": "ExecuteGremlinProfileQuery",
      "output": {
        "shape": "ExecuteGremlinProfileQueryOutput"
      }
    },
    "ExecuteGremlinQuery": {
      "errors": [
        {
          "shape": "QueryTooLargeException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "QueryLimitExceededException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "QueryLimitException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "CancelledByUserException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "FailureByQueryException"
        },
        {
          "shape": "MemoryLimitExceededException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "MalformedQueryException"
        },
        {
          "shape": "ParsingException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "TimeLimitExceededException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "ConcurrentModificationException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/gremlin",
        "responseCode": 200
      },
      "input": {
        "shape": "ExecuteGremlinQueryInput"
      },
      "name": "ExecuteGremlinQuery",
      "output": {
        "shape": "ExecuteGremlinQueryOutput"
      }
    },
    "ExecuteOpenCypherExplainQuery": {
      "errors": [
        {
          "shape": "QueryTooLargeException"
        },
        {
          "shape": "InvalidNumericDataException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "QueryLimitExceededException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "QueryLimitException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "CancelledByUserException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "FailureByQueryException"
        },
        {
          "shape": "MemoryLimitExceededException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "MalformedQueryException"
        },
        {
          "shape": "ParsingException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "TimeLimitExceededException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "ConcurrentModificationException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/opencypher/explain",
        "responseCode": 200
      },
      "input": {
        "shape": "ExecuteOpenCypherExplainQueryInput"
      },
      "name": "ExecuteOpenCypherExplainQuery",
      "output": {
        "shape": "ExecuteOpenCypherExplainQueryOutput"
      }
    },
    "GetEngineStatus": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/status",
        "responseCode": 200
      },
      "name": "GetEngineStatus",
      "output": {
        "shape": "GetEngineStatusOutput"
      }
    },
    "GetGremlinQueryStatus": {
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "FailureByQueryException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ParsingException"
        },
        {
          "shape": "ReadOnlyViolationException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "TimeLimitExceededException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "ConcurrentModificationException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/gremlin/status/{queryId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetGremlinQueryStatusInput"
      },
      "name": "GetGremlinQueryStatus",
      "output": {
        "shape": "GetGremlinQueryStatusOutput"
      }
    },
    "GetMLDataProcessingJob": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "MLResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/ml/dataprocessing/{id}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetMLDataProcessingJobInput"
      },
      "name": "GetMLDataProcessingJob",
      "output": {
        "shape": "GetMLDataProcessingJobOutput"
      }
    },
    "GetMLEndpoint": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "MLResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/ml/endpoints/{id}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetMLEndpointInput"
      },
      "name": "GetMLEndpoint",
      "output": {
        "shape": "GetMLEndpointOutput"
      }
    },
    "GetMLModelTrainingJob": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "MLResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/ml/modeltraining/{id}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetMLModelTrainingJobInput"
      },
      "name": "GetMLModelTrainingJob",
      "output": {
        "shape": "GetMLModelTrainingJobOutput"
      }
    },
    "GetMLModelTransformJob": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "MLResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/ml/modeltransform/{id}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetMLModelTransformJobInput"
      },
      "name": "GetMLModelTransformJob",
      "output": {
        "shape": "GetMLModelTransformJobOutput"
      }
    },
    "GetOpenCypherQueryStatus": {
      "errors": [
        {
          "shape": "InvalidNumericDataException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "FailureByQueryException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ParsingException"
        },
        {
          "shape": "ReadOnlyViolationException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "TimeLimitExceededException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "ConcurrentModificationException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/opencypher/status/{queryId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetOpenCypherQueryStatusInput"
      },
      "name": "GetOpenCypherQueryStatus",
      "output": {
        "shape": "GetOpenCypherQueryStatusOutput"
      }
    },
    "GetPropertygraphStatistics": {
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "StatisticsNotAvailableException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ReadOnlyViolationException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/propertygraph/statistics",
        "responseCode": 200
      },
      "name": "GetPropertygraphStatistics",
      "output": {
        "shape": "GetPropertygraphStatisticsOutput"
      }
    },
    "GetPropertygraphSummary": {
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "StatisticsNotAvailableException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ReadOnlyViolationException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/propertygraph/statistics/summary",
        "responseCode": 200
      },
      "input": {
        "shape": "GetPropertygraphSummaryInput"
      },
      "name": "GetPropertygraphSummary",
      "output": {
        "shape": "GetPropertygraphSummaryOutput"
      }
    },
    "GetRDFGraphSummary": {
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "StatisticsNotAvailableException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ReadOnlyViolationException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/rdf/statistics/summary",
        "responseCode": 200
      },
      "input": {
        "shape": "GetRDFGraphSummaryInput"
      },
      "name": "GetRDFGraphSummary",
      "output": {
        "shape": "GetRDFGraphSummaryOutput"
      }
    },
    "GetSparqlStatistics": {
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "StatisticsNotAvailableException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ReadOnlyViolationException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sparql/statistics",
        "responseCode": 200
      },
      "name": "GetSparqlStatistics",
      "output": {
        "shape": "GetSparqlStatisticsOutput"
      }
    },
    "GetSparqlStream": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "ExpiredStreamException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "MemoryLimitExceededException"
        },
        {
          "shape": "StreamRecordsNotFoundException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sparql/stream",
        "responseCode": 200
      },
      "input": {
        "shape": "GetSparqlStreamInput"
      },
      "name": "GetSparqlStream",
      "output": {
        "shape": "GetSparqlStreamOutput"
      }
    },
    "ListGremlinQueries": {
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "FailureByQueryException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ParsingException"
        },
        {
          "shape": "ReadOnlyViolationException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "TimeLimitExceededException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "ConcurrentModificationException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/gremlin/status",
        "responseCode": 200
      },
      "input": {
        "shape": "ListGremlinQueriesInput"
      },
      "name": "ListGremlinQueries",
      "output": {
        "shape": "ListGremlinQueriesOutput"
      }
    },
    "ListLoaderJobs": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "BulkLoadIdNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "LoadUrlAccessDeniedException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/loader",
        "responseCode": 200
      },
      "input": {
        "shape": "ListLoaderJobsInput"
      },
      "name": "ListLoaderJobs",
      "output": {
        "shape": "ListLoaderJobsOutput"
      }
    },
    "ListMLDataProcessingJobs": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "MLResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/ml/dataprocessing",
        "responseCode": 200
      },
      "input": {
        "shape": "ListMLDataProcessingJobsInput"
      },
      "name": "ListMLDataProcessingJobs",
      "output": {
        "shape": "ListMLDataProcessingJobsOutput"
      }
    },
    "ListMLEndpoints": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "MLResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/ml/endpoints",
        "responseCode": 200
      },
      "input": {
        "shape": "ListMLEndpointsInput"
      },
      "name": "ListMLEndpoints",
      "output": {
        "shape": "ListMLEndpointsOutput"
      }
    },
    "ListMLModelTrainingJobs": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "MLResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/ml/modeltraining",
        "responseCode": 200
      },
      "input": {
        "shape": "ListMLModelTrainingJobsInput"
      },
      "name": "ListMLModelTrainingJobs",
      "output": {
        "shape": "ListMLModelTrainingJobsOutput"
      }
    },
    "ListMLModelTransformJobs": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "MLResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/ml/modeltransform",
        "responseCode": 200
      },
      "input": {
        "shape": "ListMLModelTransformJobsInput"
      },
      "name": "ListMLModelTransformJobs",
      "output": {
        "shape": "ListMLModelTransformJobsOutput"
      }
    },
    "ListOpenCypherQueries": {
      "errors": [
        {
          "shape": "InvalidNumericDataException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "FailureByQueryException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ParsingException"
        },
        {
          "shape": "ReadOnlyViolationException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "TimeLimitExceededException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "ConcurrentModificationException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/opencypher/status",
        "responseCode": 200
      },
      "input": {
        "shape": "ListOpenCypherQueriesInput"
      },
      "name": "ListOpenCypherQueries",
      "output": {
        "shape": "ListOpenCypherQueriesOutput"
      }
    },
    "ManagePropertygraphStatistics": {
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "StatisticsNotAvailableException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ReadOnlyViolationException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/propertygraph/statistics",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "ManagePropertygraphStatisticsInput"
      },
      "name": "ManagePropertygraphStatistics",
      "output": {
        "shape": "ManagePropertygraphStatisticsOutput"
      }
    },
    "ManageSparqlStatistics": {
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "StatisticsNotAvailableException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ReadOnlyViolationException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sparql/statistics",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "ManageSparqlStatisticsInput"
      },
      "name": "ManageSparqlStatistics",
      "output": {
        "shape": "ManageSparqlStatisticsOutput"
      }
    },
    "StartLoaderJob": {
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "BulkLoadIdNotFoundException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "LoadUrlAccessDeniedException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "S3Exception"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/loader",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "StartLoaderJobInput"
      },
      "name": "StartLoaderJob",
      "output": {
        "shape": "StartLoaderJobOutput"
      }
    },
    "StartMLDataProcessingJob": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "MLResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ml/dataprocessing",
        "responseCode": 200
      },
      "input": {
        "shape": "StartMLDataProcessingJobInput"
      },
      "name": "StartMLDataProcessingJob",
      "output": {
        "shape": "StartMLDataProcessingJobOutput"
      }
    },
    "StartMLModelTrainingJob": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "MLResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ml/modeltraining",
        "responseCode": 200
      },
      "input": {
        "shape": "StartMLModelTrainingJobInput"
      },
      "name": "StartMLModelTrainingJob",
      "output": {
        "shape": "StartMLModelTrainingJobOutput"
      }
    },
    "StartMLModelTransformJob": {
      "errors": [
        {
          "shape": "UnsupportedOperationException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "MLResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ClientTimeoutException"
        },
        {
          "shape": "PreconditionsFailedException"
        },
        {
          "shape": "ConstraintViolationException"
        },
        {
          "shape": "InvalidArgumentException"
        },
        {
          "shape": "MissingParameterException"
        },
        {
          "shape": "IllegalArgumentException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ml/modeltransform",
        "responseCode": 200
      },
      "input": {
        "shape": "StartMLModelTransformJobInput"
      },
      "name": "StartMLModelTransformJob",
      "output": {
        "shape": "StartMLModelTransformJobOutput"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "error": {
        "httpStatusCode": 403,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "Action": {
      "enum": [
        "initiateDatabaseReset",
        "performDatabaseReset"
      ],
      "type": "string"
    },
    "BadRequestException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "Blob": {
      "type": "blob"
    },
    "Boolean": {
      "box": true,
      "type": "boolean"
    },
    "BulkLoadIdNotFoundException": {
      "error": {
        "httpStatusCode": 404,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "CancelGremlinQueryInput": {
      "members": {
        "queryId": {
          "location": "uri",
          "locationName": "queryId",
          "shape": "String"
        }
      },
      "required": [
        "queryId"
      ],
      "type": "structure"
    },
    "CancelGremlinQueryOutput": {
      "members": {
        "status": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CancelLoaderJobInput": {
      "members": {
        "loadId": {
          "location": "uri",
          "locationName": "loadId",
          "shape": "String"
        }
      },
      "required": [
        "loadId"
      ],
      "type": "structure"
    },
    "CancelLoaderJobOutput": {
      "members": {
        "status": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CancelMLDataProcessingJobInput": {
      "members": {
        "clean": {
          "location": "querystring",
          "locationName": "clean",
          "shape": "Boolean"
        },
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "String"
        },
        "neptuneIamRoleArn": {
          "location": "querystring",
          "locationName": "neptuneIamRoleArn",
          "shape": "String"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "CancelMLDataProcessingJobOutput": {
      "members": {
        "status": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CancelMLModelTrainingJobInput": {
      "members": {
        "clean": {
          "location": "querystring",
          "locationName": "clean",
          "shape": "Boolean"
        },
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "String"
        },
        "neptuneIamRoleArn": {
          "location": "querystring",
          "locationName": "neptuneIamRoleArn",
          "shape": "String"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "CancelMLModelTrainingJobOutput": {
      "members": {
        "status": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CancelMLModelTransformJobInput": {
      "members": {
        "clean": {
          "location": "querystring",
          "locationName": "clean",
          "shape": "Boolean"
        },
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "String"
        },
        "neptuneIamRoleArn": {
          "location": "querystring",
          "locationName": "neptuneIamRoleArn",
          "shape": "String"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "CancelMLModelTransformJobOutput": {
      "members": {
        "status": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CancelOpenCypherQueryInput": {
      "members": {
        "queryId": {
          "location": "uri",
          "locationName": "queryId",
          "shape": "String"
        },
        "silent": {
          "location": "querystring",
          "locationName": "silent",
          "shape": "Boolean"
        }
      },
      "required": [
        "queryId"
      ],
      "type": "structure"
    },
    "CancelOpenCypherQueryOutput": {
      "members": {
        "payload": {
          "shape": "Boolean"
        },
        "status": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CancelledByUserException": {
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "Classes": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "ClientTimeoutException": {
      "error": {
        "httpStatusCode": 408,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "ConcurrentModificationException": {
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "ConstraintViolationException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "CreateMLEndpointInput": {
      "members": {
        "id": {
          "shape": "String"
        },
        "instanceCount": {
          "shape": "Integer"
        },
        "instanceType": {
          "shape": "String"
        },
        "mlModelTrainingJobId": {
          "shape": "String"
        },
        "mlModelTransformJobId": {
          "shape": "String"
        },
        "modelName": {
          "shape": "String"
        },
        "neptuneIamRoleArn": {
          "shape": "String"
        },
        "update": {
          "shape": "Boolean"
        },
        "volumeEncryptionKMSKey": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CreateMLEndpointOutput": {
      "members": {
        "arn": {
          "shape": "String"
        },
        "creationTimeInMillis": {
          "shape": "Long"
        },
        "id": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CustomModelTrainingParameters": {
      "members": {
        "sourceS3DirectoryPath": {
          "shape": "String"
        },
        "trainingEntryPointScript": {
          "shape": "String"
        },
        "transformEntryPointScript": {
          "shape": "String"
        }
      },
      "required": [
        "sourceS3DirectoryPath"
      ],
      "type": "structure"
    },
    "CustomModelTransformParameters": {
      "members": {
        "sourceS3DirectoryPath": {
          "shape": "String"
        },
        "transformEntryPointScript": {
          "shape": "String"
        }
      },
      "required": [
        "sourceS3DirectoryPath"
      ],
      "type": "structure"
    },
    "DeleteMLEndpointInput": {
      "members": {
        "clean": {
          "location": "querystring",
          "locationName": "clean",
          "shape": "Boolean"
        },
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "String"
        },
        "neptuneIamRoleArn": {
          "location": "querystring",
          "locationName": "neptuneIamRoleArn",
          "shape": "String"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "DeleteMLEndpointOutput": {
      "members": {
        "status": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "DeletePropertygraphStatisticsOutput": {
      "members": {
        "payload": {
          "shape": "DeleteStatisticsValueMap"
        },
        "status": {
          "shape": "String"
        },
        "statusCode": {
          "location": "statusCode",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "DeleteSparqlStatisticsOutput": {
      "members": {
        "payload": {
          "shape": "DeleteStatisticsValueMap"
        },
        "status": {
          "shape": "String"
        },
        "statusCode": {
          "location": "statusCode",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "DeleteStatisticsValueMap": {
      "members": {
        "active": {
          "shape": "Boolean"
        },
        "statisticsId": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "EdgeLabels": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "EdgeProperties": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "EdgeStructure": {
      "members": {
        "count": {
          "shape": "Long"
        },
        "edgeProperties": {
          "shape": "EdgeProperties"
        }
      },
      "type": "structure"
    },
    "EdgeStructures": {
      "member": {
        "shape": "EdgeStructure"
      },
      "type": "list"
    },
    "Encoding": {
      "enum": [
        "gzip"
      ],
      "type": "string"
    },
    "ExecuteFastResetInput": {
      "members": {
        "action": {
          "shape": "Action"
        },
        "token": {
          "shape": "String"
        }
      },
      "required": [
        "action"
      ],
      "type": "structure"
    },
    "ExecuteFastResetOutput": {
      "members": {
        "payload": {
          "shape": "FastResetToken"
        },
        "status": {
          "shape": "String"
        }
      },
      "required": [
        "status"
      ],
      "type": "structure"
    },
    "ExecuteGremlinExplainQueryInput": {
      "members": {
        "gremlinQuery": {
          "locationName": "gremlin",
          "shape": "String"
        }
      },
      "required": [
        "gremlinQuery"
      ],
      "type": "structure"
    },
    "ExecuteGremlinExplainQueryOutput": {
      "members": {
        "output": {
          "shape": "ReportAsText"
        }
      },
      "payload": "output",
      "type": "structure"
    },
    "ExecuteGremlinProfileQueryInput": {
      "members": {
        "chop": {
          "locationName": "profile.chop",
          "shape": "Integer"
        },
        "gremlinQuery": {
          "locationName": "gremlin",
          "shape": "String"
        },
        "indexOps": {
          "locationName": "profile.indexOps",
          "shape": "Boolean"
        },
        "results": {
          "locationName": "profile.results",
          "shape": "Boolean"
        },
        "serializer": {
          "locationName": "profile.serializer",
          "shape": "String"
        }
      },
      "required": [
        "gremlinQuery"
      ],
      "type": "structure"
    },
    "ExecuteGremlinProfileQueryOutput": {
      "members": {
        "output": {
          "shape": "ReportAsText"
        }
      },
      "payload": "output",
      "type": "structure"
    },
    "ExecuteGremlinQueryInput": {
      "members": {
        "gremlinQuery": {
          "locationName": "gremlin",
          "shape": "String"
        },
        "serializer": {
          "location": "header",
          "locationName": "accept",
          "shape": "String"
        }
      },
      "required": [
        "gremlinQuery"
      ],
      "type": "structure"
    },
    "ExecuteGremlinQueryOutput": {
      "members": {
        "requestId": {
          "shape": "String"
        },
        "status": {
          "shape": "GremlinQueryStatusAttributes"
        }
      },
      "type": "structure"
    },
    "ExecuteOpenCypherExplainQueryInput": {
      "members": {
        "explainMode": {
          "locationName": "explain",
          "shape": "OpenCypherExplainMode"
        },
        "openCypherQuery": {
          "locationName": "query",
          "shape": "String"
        },
        "parameters": {
          "shape": "String"
        }
      },
      "required": [
        "openCypherQuery",
        "explainMode"
      ],
      "type": "structure"
    },
    "ExecuteOpenCypherExplainQueryOutput": {
      "members": {
        "results": {
          "shape": "Blob"
        }
      },
      "payload": "results",
      "required": [
        "results"
      ],
      "type": "structure"
    },
    "ExecuteOpenCypherQueryInput": {
      "members": {
        "openCypherQuery": {
          "locationName": "query",
          "shape": "String"
        },
        "parameters": {
          "shape": "String"
        }
      },
      "required": [
        "openCypherQuery"
      ],
      "type": "structure"
    },
    "ExpiredStreamException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "FailureByQueryException": {
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "FastResetToken": {
      "members": {
        "token": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Format": {
      "enum": [
        "csv",
        "opencypher",
        "ntriples",
        "nquads",
        "rdfxml",
        "turtle"
      ],
      "type": "string"
    },
    "GetEngineStatusOutput": {
      "members": {
        "dbEngineVersion": {
          "shape": "String"
        },
        "dfeQueryEngine": {
          "shape": "String"
        },
        "gremlin": {
          "shape": "QueryLanguageVersion"
        },
        "labMode": {
          "shape": "StringValuedMap"
        },
        "opencypher": {
          "shape": "QueryLanguageVersion"
        },
        "role": {
          "shape": "String"
        },
        "rollingBackTrxCount": {
          "shape": "Integer"
        },
        "rollingBackTrxEarliestStartTime": {
          "shape": "String"
        },
        "settings": {
          "shape": "StringValuedMap"
        },
        "sparql": {
          "shape": "QueryLanguageVersion"
        },
        "startTime": {
          "shape": "String"
        },
        "status": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GetGremlinQueryStatusInput": {
      "members": {
        "queryId": {
          "location": "uri",
          "locationName": "queryId",
          "shape": "String"
        }
      },
      "required": [
        "queryId"
      ],
      "type": "structure"
    },
    "GetGremlinQueryStatusOutput": {
      "members": {
        "queryEvalStats": {
          "shape": "QueryEvalStats"
        },
        "queryId": {
          "shape": "String"
        },
        "queryString": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GetLoaderJobStatusInput": {
      "members": {
        "details": {
          "location": "querystring",
          "locationName": "details",
          "shape": "Boolean"
        },
        "errors": {
          "location": "querystring",
          "locationName": "errors",
          "shape": "Boolean"
        },
        "errorsPerPage": {
          "location": "querystring",
          "locationName": "errorsPerPage",
          "shape": "PositiveInteger"
        },
        "loadId": {
          "location": "uri",
          "locationName": "loadId",
          "shape": "String"
        },
        "page": {
          "location": "querystring",
          "locationName": "page",
          "shape": "PositiveInteger"
        }
      },
      "required": [
        "loadId"
      ],
      "type": "structure"
    },
    "GetMLDataProcessingJobInput": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "String"
        },
        "neptuneIamRoleArn": {
          "location": "querystring",
          "locationName": "neptuneIamRoleArn",
          "shape": "String"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "GetMLDataProcessingJobOutput": {
      "members": {
        "id": {
          "shape": "String"
        },
        "processingJob": {
          "shape": "MlResourceDefinition"
        },
        "status": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GetMLEndpointInput": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "String"
        },
        "neptuneIamRoleArn": {
          "location": "querystring",
          "locationName": "neptuneIamRoleArn",
          "shape": "String"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "GetMLEndpointOutput": {
      "members": {
        "endpoint": {
          "shape": "MlResourceDefinition"
        },
        "endpointConfig": {
          "shape": "MlConfigDefinition"
        },
        "id": {
          "shape": "String"
        },
        "status": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GetMLModelTrainingJobInput": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "String"
        },
        "neptuneIamRoleArn": {
          "location": "querystring",
          "locationName": "neptuneIamRoleArn",
          "shape": "String"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "GetMLModelTrainingJobOutput": {
      "members": {
        "hpoJob": {
          "shape": "MlResourceDefinition"
        },
        "id": {
          "shape": "String"
        },
        "mlModels": {
          "shape": "MlModels"
        },
        "modelTransformJob": {
          "shape": "MlResourceDefinition"
        },
        "processingJob": {
          "shape": "MlResourceDefinition"
        },
        "status": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GetMLModelTransformJobInput": {
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "String"
        },
        "neptuneIamRoleArn": {
          "location": "querystring",
          "locationName": "neptuneIamRoleArn",
          "shape": "String"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "GetMLModelTransformJobOutput": {
      "members": {
        "baseProcessingJob": {
          "shape": "MlResourceDefinition"
        },
        "id": {
          "shape": "String"
        },
        "models": {
          "shape": "Models"
        },
        "remoteModelTransformJob": {
          "shape": "MlResourceDefinition"
        },
        "status": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GetOpenCypherQueryStatusInput": {
      "members": {
        "queryId": {
          "location": "uri",
          "locationName": "queryId",
          "shape": "String"
        }
      },
      "required": [
        "queryId"
      ],
      "type": "structure"
    },
    "GetOpenCypherQueryStatusOutput": {
      "members": {
        "queryEvalStats": {
          "shape": "QueryEvalStats"
        },
        "queryId": {
          "shape": "String"
        },
        "queryString": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GetPropertygraphStatisticsOutput": {
      "members": {
        "payload": {
          "shape": "Statistics"
        },
        "status": {
          "shape": "String"
        }
      },
      "required": [
        "status",
        "payload"
      ],
      "type": "structure"
    },
    "GetPropertygraphStreamInput": {
      "members": {
        "commitNum": {
          "location": "querystring",
          "locationName": "commitNum",
          "shape": "Long"
        },
        "encoding": {
          "location": "header",
          "locationName": "Accept-Encoding",
          "shape": "Encoding"
        },
        "iteratorType": {
          "location": "querystring",
          "locationName": "iteratorType",
          "shape": "IteratorType"
        },
        "limit": {
          "location": "querystring",
          "locationName": "limit",
          "shape": "GetPropertygraphStreamInputLimitLong"
        },
        "opNum": {
          "location": "querystring",
          "locationName": "opNum",
          "shape": "Long"
        }
      },
      "type": "structure"
    },
    "GetPropertygraphStreamInputLimitLong": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "long"
    },
    "GetPropertygraphSummaryInput": {
      "members": {
        "mode": {
          "location": "querystring",
          "locationName": "mode",
          "shape": "GraphSummaryType"
        }
      },
      "type": "structure"
    },
    "GetPropertygraphSummaryOutput": {
      "members": {
        "payload": {
          "shape": "PropertygraphSummaryValueMap"
        },
        "statusCode": {
          "location": "statusCode",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "GetRDFGraphSummaryInput": {
      "members": {
        "mode": {
          "location": "querystring",
          "locationName": "mode",
          "shape": "GraphSummaryType"
        }
      },
      "type": "structure"
    },
    "GetRDFGraphSummaryOutput": {
      "members": {
        "payload": {
          "shape": "RDFGraphSummaryValueMap"
        },
        "statusCode": {
          "location": "statusCode",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "GetSparqlStatisticsOutput": {
      "members": {
        "payload": {
          "shape": "Statistics"
        },
        "status": {
          "shape": "String"
        }
      },
      "required": [
        "status",
        "payload"
      ],
      "type": "structure"
    },
    "GetSparqlStreamInput": {
      "members": {
        "commitNum": {
          "location": "querystring",
          "locationName": "commitNum",
          "shape": "Long"
        },
        "encoding": {
          "location": "header",
          "locationName": "Accept-Encoding",
          "shape": "Encoding"
        },
        "iteratorType": {
          "location": "querystring",
          "locationName": "iteratorType",
          "shape": "IteratorType"
        },
        "limit": {
          "location": "querystring",
          "locationName": "limit",
          "shape": "GetSparqlStreamInputLimitLong"
        },
        "opNum": {
          "location": "querystring",
          "locationName": "opNum",
          "shape": "Long"
        }
      },
      "type": "structure"
    },
    "GetSparqlStreamInputLimitLong": {
      "box": true,
      "max": 100000,
      "min": 1,
      "type": "long"
    },
    "GetSparqlStreamOutput": {
      "members": {
        "format": {
          "shape": "String"
        },
        "lastEventId": {
          "shape": "StringValuedMap"
        },
        "lastTrxTimestampInMillis": {
          "locationName": "lastTrxTimestamp",
          "shape": "Long"
        },
        "records": {
          "shape": "SparqlRecordsList"
        },
        "totalRecords": {
          "shape": "Integer"
        }
      },
      "required": [
        "lastEventId",
        "lastTrxTimestampInMillis",
        "format",
        "records",
        "totalRecords"
      ],
      "type": "structure"
    },
    "GraphSummaryType": {
      "enum": [
        "basic",
        "detailed"
      ],
      "type": "string"
    },
    "GremlinQueries": {
      "member": {
        "shape": "GremlinQueryStatus"
      },
      "type": "list"
    },
    "GremlinQueryStatus": {
      "members": {
        "queryEvalStats": {
          "shape": "QueryEvalStats"
        },
        "queryId": {
          "shape": "String"
        },
        "queryString": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GremlinQueryStatusAttributes": {
      "members": {
        "code": {
          "shape": "Integer"
        },
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "IllegalArgumentException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "Integer": {
      "box": true,
      "type": "integer"
    },
    "InternalFailureException": {
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "InvalidArgumentException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "InvalidNumericDataException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "InvalidParameterException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "IteratorType": {
      "enum": [
        "AT_SEQUENCE_NUMBER",
        "AFTER_SEQUENCE_NUMBER",
        "TRIM_HORIZON",
        "LATEST"
      ],
      "type": "string"
    },
    "ListGremlinQueriesInput": {
      "members": {
        "includeWaiting": {
          "location": "querystring",
          "locationName": "includeWaiting",
          "shape": "Boolean"
        }
      },
      "type": "structure"
    },
    "ListGremlinQueriesOutput": {
      "members": {
        "acceptedQueryCount": {
          "shape": "Integer"
        },
        "queries": {
          "shape": "GremlinQueries"
        },
        "runningQueryCount": {
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "ListLoaderJobsInput": {
      "members": {
        "includeQueuedLoads": {
          "location": "querystring",
          "locationName": "includeQueuedLoads",
          "shape": "Boolean"
        },
        "limit": {
          "location": "querystring",
          "locationName": "limit",
          "shape": "ListLoaderJobsInputLimitInteger"
        }
      },
      "type": "structure"
    },
    "ListLoaderJobsInputLimitInteger": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "ListLoaderJobsOutput": {
      "members": {
        "payload": {
          "shape": "LoaderIdResult"
        },
        "status": {
          "shape": "String"
        }
      },
      "required": [
        "status",
        "payload"
      ],
      "type": "structure"
    },
    "ListMLDataProcessingJobsInput": {
      "members": {
        "maxItems": {
          "location": "querystring",
          "locationName": "maxItems",
          "shape": "ListMLDataProcessingJobsInputMaxItemsInteger"
        },
        "neptuneIamRoleArn": {
          "location": "querystring",
          "locationName": "neptuneIamRoleArn",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListMLDataProcessingJobsInputMaxItemsInteger": {
      "box": true,
      "max": 1024,
      "min": 1,
      "type": "integer"
    },
    "ListMLDataProcessingJobsOutput": {
      "members": {
        "ids": {
          "shape": "StringList"
        }
      },
      "type": "structure"
    },
    "ListMLEndpointsInput": {
      "members": {
        "maxItems": {
          "location": "querystring",
          "locationName": "maxItems",
          "shape": "ListMLEndpointsInputMaxItemsInteger"
        },
        "neptuneIamRoleArn": {
          "location": "querystring",
          "locationName": "neptuneIamRoleArn",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListMLEndpointsInputMaxItemsInteger": {
      "box": true,
      "max": 1024,
      "min": 1,
      "type": "integer"
    },
    "ListMLEndpointsOutput": {
      "members": {
        "ids": {
          "shape": "StringList"
        }
      },
      "type": "structure"
    },
    "ListMLModelTrainingJobsInput": {
      "members": {
        "maxItems": {
          "location": "querystring",
          "locationName": "maxItems",
          "shape": "ListMLModelTrainingJobsInputMaxItemsInteger"
        },
        "neptuneIamRoleArn": {
          "location": "querystring",
          "locationName": "neptuneIamRoleArn",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListMLModelTrainingJobsInputMaxItemsInteger": {
      "box": true,
      "max": 1024,
      "min": 1,
      "type": "integer"
    },
    "ListMLModelTrainingJobsOutput": {
      "members": {
        "ids": {
          "shape": "StringList"
        }
      },
      "type": "structure"
    },
    "ListMLModelTransformJobsInput": {
      "members": {
        "maxItems": {
          "location": "querystring",
          "locationName": "maxItems",
          "shape": "ListMLModelTransformJobsInputMaxItemsInteger"
        },
        "neptuneIamRoleArn": {
          "location": "querystring",
          "locationName": "neptuneIamRoleArn",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListMLModelTransformJobsInputMaxItemsInteger": {
      "box": true,
      "max": 1024,
      "min": 1,
      "type": "integer"
    },
    "ListMLModelTransformJobsOutput": {
      "members": {
        "ids": {
          "shape": "StringList"
        }
      },
      "type": "structure"
    },
    "ListOpenCypherQueriesInput": {
      "members": {
        "includeWaiting": {
          "location": "querystring",
          "locationName": "includeWaiting",
          "shape": "Boolean"
        }
      },
      "type": "structure"
    },
    "ListOpenCypherQueriesOutput": {
      "members": {
        "acceptedQueryCount": {
          "shape": "Integer"
        },
        "queries": {
          "shape": "OpenCypherQueries"
        },
        "runningQueryCount": {
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "LoadUrlAccessDeniedException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "LoaderIdResult": {
      "members": {
        "loadIds": {
          "shape": "StringList"
        }
      },
      "type": "structure"
    },
    "Long": {
      "box": true,
      "type": "long"
    },
    "LongValuedMap": {
      "key": {
        "shape": "String"
      },
      "type": "map",
      "value": {
        "shape": "Long"
      }
    },
    "LongValuedMapList": {
      "member": {
        "shape": "LongValuedMap"
      },
      "type": "list"
    },
    "MLResourceNotFoundException": {
      "error": {
        "httpStatusCode": 404,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "MalformedQueryException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "ManagePropertygraphStatisticsInput": {
      "members": {
        "mode": {
          "shape": "StatisticsAutoGenerationMode"
        }
      },
      "type": "structure"
    },
    "ManagePropertygraphStatisticsOutput": {
      "members": {
        "payload": {
          "shape": "RefreshStatisticsIdMap"
        },
        "status": {
          "shape": "String"
        }
      },
      "required": [
        "status"
      ],
      "type": "structure"
    },
    "ManageSparqlStatisticsInput": {
      "members": {
        "mode": {
          "shape": "StatisticsAutoGenerationMode"
        }
      },
      "type": "structure"
    },
    "ManageSparqlStatisticsOutput": {
      "members": {
        "payload": {
          "shape": "RefreshStatisticsIdMap"
        },
        "status": {
          "shape": "String"
        }
      },
      "required": [
        "status"
      ],
      "type": "structure"
    },
    "MemoryLimitExceededException": {
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "MethodNotAllowedException": {
      "error": {
        "httpStatusCode": 405,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "MissingParameterException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "MlConfigDefinition": {
      "members": {
        "arn": {
          "shape": "String"
        },
        "name": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "MlModels": {
      "member": {
        "shape": "MlConfigDefinition"
      },
      "type": "list"
    },
    "MlResourceDefinition": {
      "members": {
        "arn": {
          "shape": "String"
        },
        "cloudwatchLogUrl": {
          "shape": "String"
        },
        "failureReason": {
          "shape": "String"
        },
        "name": {
          "shape": "String"
        },
        "outputLocation": {
          "shape": "String"
        },
        "status": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Mode": {
      "enum": [
        "RESUME",
        "NEW",
        "AUTO"
      ],
      "type": "string"
    },
    "Models": {
      "member": {
        "shape": "MlConfigDefinition"
      },
      "type": "list"
    },
    "NodeLabels": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "NodeProperties": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "NodeStructure": {
      "members": {
        "count": {
          "shape": "Long"
        },
        "distinctOutgoingEdgeLabels": {
          "shape": "OutgoingEdgeLabels"
        },
        "nodeProperties": {
          "shape": "NodeProperties"
        }
      },
      "type": "structure"
    },
    "NodeStructures": {
      "member": {
        "shape": "NodeStructure"
      },
      "type": "list"
    },
    "OpenCypherExplainMode": {
      "enum": [
        "static",
        "dynamic",
        "details"
      ],
      "type": "string"
    },
    "OpenCypherQueries": {
      "member": {
        "shape": "GremlinQueryStatus"
      },
      "type": "list"
    },
    "OutgoingEdgeLabels": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "Parallelism": {
      "enum": [
        "LOW",
        "MEDIUM",
        "HIGH",
        "OVERSUBSCRIBE"
      ],
      "type": "string"
    },
    "ParsingException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "PositiveInteger": {
      "box": true,
      "min": 1,
      "type": "integer"
    },
    "PreconditionsFailedException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "Predicates": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "PropertygraphSummary": {
      "members": {
        "edgeLabels": {
          "shape": "EdgeLabels"
        },
        "edgeProperties": {
          "shape": "LongValuedMapList"
        },
        "edgeStructures": {
          "shape": "EdgeStructures"
        },
        "nodeLabels": {
          "shape": "NodeLabels"
        },
        "nodeProperties": {
          "shape": "LongValuedMapList"
        },
        "nodeStructures": {
          "shape": "NodeStructures"
        },
        "numEdgeLabels": {
          "shape": "Long"
        },
        "numEdgeProperties": {
          "shape": "Long"
        },
        "numEdges": {
          "shape": "Long"
        },
        "numNodeLabels": {
          "shape": "Long"
        },
        "numNodeProperties": {
          "shape": "Long"
        },
        "numNodes": {
          "shape": "Long"
        },
        "totalEdgePropertyValues": {
          "shape": "Long"
        },
        "totalNodePropertyValues": {
          "shape": "Long"
        }
      },
      "type": "structure"
    },
    "PropertygraphSummaryValueMap": {
      "members": {
        "graphSummary": {
          "shape": "PropertygraphSummary"
        },
        "lastStatisticsComputationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "version": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "QueryEvalStats": {
      "members": {
        "cancelled": {
          "shape": "Boolean"
        },
        "elapsed": {
          "shape": "Integer"
        },
        "waited": {
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "QueryLanguageVersion": {
      "members": {
        "version": {
          "shape": "String"
        }
      },
      "required": [
        "version"
      ],
      "type": "structure"
    },
    "QueryLimitExceededException": {
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "QueryLimitException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "QueryTooLargeException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "RDFGraphSummary": {
      "members": {
        "classes": {
          "shape": "Classes"
        },
        "numClasses": {
          "shape": "Long"
        },
        "numDistinctPredicates": {
          "shape": "Long"
        },
        "numDistinctSubjects": {
          "shape": "Long"
        },
        "numQuads": {
          "shape": "Long"
        },
        "predicates": {
          "shape": "LongValuedMapList"
        },
        "subjectStructures": {
          "shape": "SubjectStructures"
        }
      },
      "type": "structure"
    },
    "RDFGraphSummaryValueMap": {
      "members": {
        "graphSummary": {
          "shape": "RDFGraphSummary"
        },
        "lastStatisticsComputationTime": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "version": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ReadOnlyViolationException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "RefreshStatisticsIdMap": {
      "members": {
        "statisticsId": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ReportAsText": {
      "type": "blob"
    },
    "S3BucketRegion": {
      "enum": [
        "us-east-1",
        "us-east-2",
        "us-west-1",
        "us-west-2",
        "ca-central-1",
        "sa-east-1",
        "eu-north-1",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "eu-central-1",
        "me-south-1",
        "af-south-1",
        "ap-east-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-southeast-1",
        "ap-southeast-2",
        "ap-south-1",
        "cn-north-1",
        "cn-northwest-1",
        "us-gov-west-1",
        "us-gov-east-1"
      ],
      "type": "string"
    },
    "S3Exception": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "ServerShutdownException": {
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "SparqlData": {
      "members": {
        "stmt": {
          "shape": "String"
        }
      },
      "required": [
        "stmt"
      ],
      "type": "structure"
    },
    "SparqlRecord": {
      "members": {
        "commitTimestampInMillis": {
          "locationName": "commitTimestamp",
          "shape": "Long"
        },
        "data": {
          "shape": "SparqlData"
        },
        "eventId": {
          "shape": "StringValuedMap"
        },
        "isLastOp": {
          "shape": "Boolean"
        },
        "op": {
          "shape": "String"
        }
      },
      "required": [
        "commitTimestampInMillis",
        "eventId",
        "data",
        "op"
      ],
      "type": "structure"
    },
    "SparqlRecordsList": {
      "member": {
        "shape": "SparqlRecord"
      },
      "type": "list"
    },
    "StartLoaderJobInput": {
      "members": {
        "dependencies": {
          "shape": "StringList"
        },
        "failOnError": {
          "shape": "Boolean"
        },
        "format": {
          "shape": "Format"
        },
        "iamRoleArn": {
          "shape": "String"
        },
        "mode": {
          "shape": "Mode"
        },
        "parallelism": {
          "shape": "Parallelism"
        },
        "parserConfiguration": {
          "shape": "StringValuedMap"
        },
        "queueRequest": {
          "shape": "Boolean"
        },
        "s3BucketRegion": {
          "locationName": "region",
          "shape": "S3BucketRegion"
        },
        "source": {
          "shape": "String"
        },
        "updateSingleCardinalityProperties": {
          "shape": "Boolean"
        },
        "userProvidedEdgeIds": {
          "shape": "Boolean"
        }
      },
      "required": [
        "source",
        "format",
        "s3BucketRegion",
        "iamRoleArn"
      ],
      "type": "structure"
    },
    "StartLoaderJobOutput": {
      "members": {
        "payload": {
          "shape": "StringValuedMap"
        },
        "status": {
          "shape": "String"
        }
      },
      "required": [
        "status",
        "payload"
      ],
      "type": "structure"
    },
    "StartMLDataProcessingJobInput": {
      "members": {
        "configFileName": {
          "shape": "String"
        },
        "id": {
          "shape": "String"
        },
        "inputDataS3Location": {
          "shape": "String"
        },
        "modelType": {
          "shape": "String"
        },
        "neptuneIamRoleArn": {
          "shape": "String"
        },
        "previousDataProcessingJobId": {
          "shape": "String"
        },
        "processedDataS3Location": {
          "shape": "String"
        },
        "processingInstanceType": {
          "shape": "String"
        },
        "processingInstanceVolumeSizeInGB": {
          "shape": "Integer"
        },
        "processingTimeOutInSeconds": {
          "shape": "Integer"
        },
        "s3OutputEncryptionKMSKey": {
          "shape": "String"
        },
        "sagemakerIamRoleArn": {
          "shape": "String"
        },
        "securityGroupIds": {
          "shape": "StringList"
        },
        "subnets": {
          "shape": "StringList"
        },
        "volumeEncryptionKMSKey": {
          "shape": "String"
        }
      },
      "required": [
        "inputDataS3Location",
        "processedDataS3Location"
      ],
      "type": "structure"
    },
    "StartMLDataProcessingJobOutput": {
      "members": {
        "arn": {
          "shape": "String"
        },
        "creationTimeInMillis": {
          "shape": "Long"
        },
        "id": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "StartMLModelTrainingJobInput": {
      "members": {
        "baseProcessingInstanceType": {
          "shape": "String"
        },
        "customModelTrainingParameters": {
          "shape": "CustomModelTrainingParameters"
        },
        "dataProcessingJobId": {
          "shape": "String"
        },
        "enableManagedSpotTraining": {
          "shape": "Boolean"
        },
        "id": {
          "shape": "String"
        },
        "maxHPONumberOfTrainingJobs": {
          "shape": "Integer"
        },
        "maxHPOParallelTrainingJobs": {
          "shape": "Integer"
        },
        "neptuneIamRoleArn": {
          "shape": "String"
        },
        "previousModelTrainingJobId": {
          "shape": "String"
        },
        "s3OutputEncryptionKMSKey": {
          "shape": "String"
        },
        "sagemakerIamRoleArn": {
          "shape": "String"
        },
        "securityGroupIds": {
          "shape": "StringList"
        },
        "subnets": {
          "shape": "StringList"
        },
        "trainModelS3Location": {
          "shape": "String"
        },
        "trainingInstanceType": {
          "shape": "String"
        },
        "trainingInstanceVolumeSizeInGB": {
          "shape": "Integer"
        },
        "trainingTimeOutInSeconds": {
          "shape": "Integer"
        },
        "volumeEncryptionKMSKey": {
          "shape": "String"
        }
      },
      "required": [
        "dataProcessingJobId",
        "trainModelS3Location"
      ],
      "type": "structure"
    },
    "StartMLModelTrainingJobOutput": {
      "members": {
        "arn": {
          "shape": "String"
        },
        "creationTimeInMillis": {
          "shape": "Long"
        },
        "id": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "StartMLModelTransformJobInput": {
      "members": {
        "baseProcessingInstanceType": {
          "shape": "String"
        },
        "baseProcessingInstanceVolumeSizeInGB": {
          "shape": "Integer"
        },
        "customModelTransformParameters": {
          "shape": "CustomModelTransformParameters"
        },
        "dataProcessingJobId": {
          "shape": "String"
        },
        "id": {
          "shape": "String"
        },
        "mlModelTrainingJobId": {
          "shape": "String"
        },
        "modelTransformOutputS3Location": {
          "shape": "String"
        },
        "neptuneIamRoleArn": {
          "shape": "String"
        },
        "s3OutputEncryptionKMSKey": {
          "shape": "String"
        },
        "sagemakerIamRoleArn": {
          "shape": "String"
        },
        "securityGroupIds": {
          "shape": "StringList"
        },
        "subnets": {
          "shape": "StringList"
        },
        "trainingJobName": {
          "shape": "String"
        },
        "volumeEncryptionKMSKey": {
          "shape": "String"
        }
      },
      "required": [
        "modelTransformOutputS3Location"
      ],
      "type": "structure"
    },
    "StartMLModelTransformJobOutput": {
      "members": {
        "arn": {
          "shape": "String"
        },
        "creationTimeInMillis": {
          "shape": "Long"
        },
        "id": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Statistics": {
      "members": {
        "active": {
          "shape": "Boolean"
        },
        "autoCompute": {
          "shape": "Boolean"
        },
        "date": {
          "shape": "SyntheticTimestamp_date_time"
        },
        "note": {
          "shape": "String"
        },
        "signatureInfo": {
          "shape": "StatisticsSummary"
        },
        "statisticsId": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "StatisticsAutoGenerationMode": {
      "enum": [
        "disableAutoCompute",
        "enableAutoCompute",
        "refresh"
      ],
      "type": "string"
    },
    "StatisticsNotAvailableException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "StatisticsSummary": {
      "members": {
        "instanceCount": {
          "shape": "Integer"
        },
        "predicateCount": {
          "shape": "Integer"
        },
        "signatureCount": {
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "StreamRecordsNotFoundException": {
      "error": {
        "httpStatusCode": 404,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    },
    "String": {
      "type": "string"
    },
    "StringList": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "StringValuedMap": {
      "key": {
        "shape": "String"
      },
      "type": "map",
      "value": {
        "shape": "String"
      }
    },
    "SubjectStructure": {
      "members": {
        "count": {
          "shape": "Long"
        },
        "predicates": {
          "shape": "Predicates"
        }
      },
      "type": "structure"
    },
    "SubjectStructures": {
      "member": {
        "shape": "SubjectStructure"
      },
      "type": "list"
    },
    "SyntheticTimestamp_date_time": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "ThrottlingException": {
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "TimeLimitExceededException": {
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "TooManyRequestsException": {
      "error": {
        "httpStatusCode": 429,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "UnsupportedOperationException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "String"
        },
        "detailedMessage": {
          "shape": "String"
        },
        "requestId": {
          "shape": "String"
        }
      },
      "required": [
        "detailedMessage",
        "requestId",
        "code"
      ],
      "type": "structure"
    }
  },
  "version": "2.0"
}