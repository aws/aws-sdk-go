{
  "version": "2.0",
  "service": "<p>Fault Injection Simulator is a managed service that enables you to perform fault injection experiments on your Amazon Web Services workloads. For more information, see the <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/\">Fault Injection Simulator User Guide</a>.</p>",
  "operations": {
    "CreateExperimentTemplate": "<p>Creates an experiment template. </p> <p>An experiment template includes the following components:</p> <ul> <li> <p> <b>Targets</b>: A target can be a specific resource in your Amazon Web Services environment, or one or more resources that match criteria that you specify, for example, resources that have specific tags.</p> </li> <li> <p> <b>Actions</b>: The actions to carry out on the target. You can specify multiple actions, the duration of each action, and when to start each action during an experiment.</p> </li> <li> <p> <b>Stop conditions</b>: If a stop condition is triggered while an experiment is running, the experiment is automatically stopped. You can define a stop condition as a CloudWatch alarm.</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/experiment-templates.html\">Experiment templates</a> in the <i>Fault Injection Simulator User Guide</i>.</p>",
    "DeleteExperimentTemplate": "<p>Deletes the specified experiment template.</p>",
    "GetAction": "<p>Gets information about the specified FIS action.</p>",
    "GetExperiment": "<p>Gets information about the specified experiment.</p>",
    "GetExperimentTemplate": "<p>Gets information about the specified experiment template.</p>",
    "GetTargetResourceType": "<p>Gets information about the specified resource type.</p>",
    "ListActions": "<p>Lists the available FIS actions.</p>",
    "ListExperimentTemplates": "<p>Lists your experiment templates.</p>",
    "ListExperiments": "<p>Lists your experiments.</p>",
    "ListTagsForResource": "<p>Lists the tags for the specified resource.</p>",
    "ListTargetResourceTypes": "<p>Lists the target resource types.</p>",
    "StartExperiment": "<p>Starts running an experiment from the specified experiment template.</p>",
    "StopExperiment": "<p>Stops the specified experiment.</p>",
    "TagResource": "<p>Applies the specified tags to the specified resource.</p>",
    "UntagResource": "<p>Removes the specified tags from the specified resource.</p>",
    "UpdateExperimentTemplate": "<p>Updates the specified experiment template.</p>"
  },
  "shapes": {
    "Action": {
      "base": "<p>Describes an action. For more information, see <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/fis-actions-reference.html\">FIS actions</a> in the <i>Fault Injection Simulator User Guide</i>.</p>",
      "refs": {
        "GetActionResponse$action": "<p>Information about the action.</p>"
      }
    },
    "ActionDescription": {
      "base": null,
      "refs": {
        "Action$description": "<p>The description for the action.</p>",
        "ActionSummary$description": "<p>The description for the action.</p>"
      }
    },
    "ActionId": {
      "base": null,
      "refs": {
        "Action$id": "<p>The ID of the action.</p>",
        "ActionSummary$id": "<p>The ID of the action.</p>",
        "CreateExperimentTemplateActionInput$actionId": "<p>The ID of the action. The format of the action ID is: aws:<i>service-name</i>:<i>action-type</i>.</p>",
        "ExperimentAction$actionId": "<p>The ID of the action.</p>",
        "ExperimentTemplateAction$actionId": "<p>The ID of the action.</p>",
        "GetActionRequest$id": "<p>The ID of the action.</p>",
        "UpdateExperimentTemplateActionInputItem$actionId": "<p>The ID of the action.</p>"
      }
    },
    "ActionParameter": {
      "base": "<p>Describes a parameter for an action.</p>",
      "refs": {
        "ActionParameterMap$value": null
      }
    },
    "ActionParameterDescription": {
      "base": null,
      "refs": {
        "ActionParameter$description": "<p>The parameter description.</p>"
      }
    },
    "ActionParameterMap": {
      "base": null,
      "refs": {
        "Action$parameters": "<p>The action parameters, if applicable.</p>"
      }
    },
    "ActionParameterName": {
      "base": null,
      "refs": {
        "ActionParameterMap$key": null
      }
    },
    "ActionParameterRequired": {
      "base": null,
      "refs": {
        "ActionParameter$required": "<p>Indicates whether the parameter is required.</p>"
      }
    },
    "ActionSummary": {
      "base": "<p>Provides a summary of an action.</p>",
      "refs": {
        "ActionSummaryList$member": null
      }
    },
    "ActionSummaryList": {
      "base": null,
      "refs": {
        "ListActionsResponse$actions": "<p>The actions.</p>"
      }
    },
    "ActionTarget": {
      "base": "<p>Describes a target for an action.</p>",
      "refs": {
        "ActionTargetMap$value": null
      }
    },
    "ActionTargetMap": {
      "base": null,
      "refs": {
        "Action$targets": "<p>The supported targets for the action.</p>",
        "ActionSummary$targets": "<p>The targets for the action.</p>"
      }
    },
    "ActionTargetName": {
      "base": null,
      "refs": {
        "ActionTargetMap$key": null
      }
    },
    "ClientToken": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateRequest$clientToken": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
        "StartExperimentRequest$clientToken": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>"
      }
    },
    "CloudWatchLogGroupArn": {
      "base": null,
      "refs": {
        "ExperimentCloudWatchLogsLogConfiguration$logGroupArn": "<p>The Amazon Resource Name (ARN) of the destination Amazon CloudWatch Logs log group.</p>",
        "ExperimentTemplateCloudWatchLogsLogConfiguration$logGroupArn": "<p>The Amazon Resource Name (ARN) of the destination Amazon CloudWatch Logs log group.</p>",
        "ExperimentTemplateCloudWatchLogsLogConfigurationInput$logGroupArn": "<p>The Amazon Resource Name (ARN) of the destination Amazon CloudWatch Logs log group.</p>"
      }
    },
    "ConflictException": {
      "base": "<p>The request could not be processed because of a conflict.</p>",
      "refs": {
      }
    },
    "CreateExperimentTemplateActionInput": {
      "base": "<p>Specifies an action for an experiment template.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/actions.html\">Actions</a> in the <i>Fault Injection Simulator User Guide</i>.</p>",
      "refs": {
        "CreateExperimentTemplateActionInputMap$value": null
      }
    },
    "CreateExperimentTemplateActionInputMap": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateRequest$actions": "<p>The actions for the experiment.</p>"
      }
    },
    "CreateExperimentTemplateLogConfigurationInput": {
      "base": "<p>Specifies the configuration for experiment logging.</p>",
      "refs": {
        "CreateExperimentTemplateRequest$logConfiguration": "<p>The configuration for experiment logging.</p>"
      }
    },
    "CreateExperimentTemplateRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateExperimentTemplateResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateExperimentTemplateStopConditionInput": {
      "base": "<p>Specifies a stop condition for an experiment template.</p>",
      "refs": {
        "CreateExperimentTemplateStopConditionInputList$member": null
      }
    },
    "CreateExperimentTemplateStopConditionInputList": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateRequest$stopConditions": "<p>The stop conditions.</p>"
      }
    },
    "CreateExperimentTemplateTargetInput": {
      "base": "<p>Specifies a target for an experiment. You must specify at least one Amazon Resource Name (ARN) or at least one resource tag. You cannot specify both ARNs and tags.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/targets.html\">Targets</a> in the <i>Fault Injection Simulator User Guide</i>.</p>",
      "refs": {
        "CreateExperimentTemplateTargetInputMap$value": null
      }
    },
    "CreateExperimentTemplateTargetInputMap": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateRequest$targets": "<p>The targets for the experiment.</p>"
      }
    },
    "CreationTime": {
      "base": null,
      "refs": {
        "Experiment$creationTime": "<p>The time that the experiment was created.</p>",
        "ExperimentSummary$creationTime": "<p>The time that the experiment was created.</p>",
        "ExperimentTemplate$creationTime": "<p>The time the experiment template was created.</p>",
        "ExperimentTemplateSummary$creationTime": "<p>The time that the experiment template was created.</p>"
      }
    },
    "DeleteExperimentTemplateRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteExperimentTemplateResponse": {
      "base": null,
      "refs": {
      }
    },
    "ExceptionMessage": {
      "base": null,
      "refs": {
        "ConflictException$message": null,
        "ResourceNotFoundException$message": null,
        "ServiceQuotaExceededException$message": null,
        "ValidationException$message": null
      }
    },
    "Experiment": {
      "base": "<p>Describes an experiment.</p>",
      "refs": {
        "GetExperimentResponse$experiment": "<p>Information about the experiment.</p>",
        "StartExperimentResponse$experiment": "<p>Information about the experiment.</p>",
        "StopExperimentResponse$experiment": "<p>Information about the experiment.</p>"
      }
    },
    "ExperimentAction": {
      "base": "<p>Describes the action for an experiment.</p>",
      "refs": {
        "ExperimentActionMap$value": null
      }
    },
    "ExperimentActionDescription": {
      "base": null,
      "refs": {
        "ExperimentAction$description": "<p>The description for the action.</p>"
      }
    },
    "ExperimentActionEndTime": {
      "base": null,
      "refs": {
        "ExperimentAction$endTime": "<p>The time that the action ended.</p>"
      }
    },
    "ExperimentActionMap": {
      "base": null,
      "refs": {
        "Experiment$actions": "<p>The actions for the experiment.</p>"
      }
    },
    "ExperimentActionName": {
      "base": null,
      "refs": {
        "ExperimentActionMap$key": null
      }
    },
    "ExperimentActionParameter": {
      "base": null,
      "refs": {
        "ExperimentActionParameterMap$value": null
      }
    },
    "ExperimentActionParameterMap": {
      "base": null,
      "refs": {
        "ExperimentAction$parameters": "<p>The parameters for the action.</p>"
      }
    },
    "ExperimentActionParameterName": {
      "base": null,
      "refs": {
        "ExperimentActionParameterMap$key": null
      }
    },
    "ExperimentActionStartAfter": {
      "base": null,
      "refs": {
        "ExperimentActionStartAfterList$member": null
      }
    },
    "ExperimentActionStartAfterList": {
      "base": null,
      "refs": {
        "ExperimentAction$startAfter": "<p>The name of the action that must be completed before this action starts.</p>"
      }
    },
    "ExperimentActionStartTime": {
      "base": null,
      "refs": {
        "ExperimentAction$startTime": "<p>The time that the action started.</p>"
      }
    },
    "ExperimentActionState": {
      "base": "<p>Describes the state of an action.</p>",
      "refs": {
        "ExperimentAction$state": "<p>The state of the action.</p>"
      }
    },
    "ExperimentActionStatus": {
      "base": null,
      "refs": {
        "ExperimentActionState$status": "<p>The state of the action.</p>"
      }
    },
    "ExperimentActionStatusReason": {
      "base": null,
      "refs": {
        "ExperimentActionState$reason": "<p>The reason for the state.</p>"
      }
    },
    "ExperimentActionTargetMap": {
      "base": null,
      "refs": {
        "ExperimentAction$targets": "<p>The targets for the action.</p>"
      }
    },
    "ExperimentActionTargetName": {
      "base": null,
      "refs": {
        "ExperimentActionTargetMap$key": null
      }
    },
    "ExperimentCloudWatchLogsLogConfiguration": {
      "base": "<p>Describes the configuration for experiment logging to Amazon CloudWatch Logs.</p>",
      "refs": {
        "ExperimentLogConfiguration$cloudWatchLogsConfiguration": "<p>The configuration for experiment logging to Amazon CloudWatch Logs.</p>"
      }
    },
    "ExperimentEndTime": {
      "base": null,
      "refs": {
        "Experiment$endTime": "<p>The time that the experiment ended.</p>"
      }
    },
    "ExperimentId": {
      "base": null,
      "refs": {
        "Experiment$id": "<p>The ID of the experiment.</p>",
        "ExperimentSummary$id": "<p>The ID of the experiment.</p>",
        "GetExperimentRequest$id": "<p>The ID of the experiment.</p>",
        "StopExperimentRequest$id": "<p>The ID of the experiment.</p>"
      }
    },
    "ExperimentLogConfiguration": {
      "base": "<p>Describes the configuration for experiment logging.</p>",
      "refs": {
        "Experiment$logConfiguration": "<p>The configuration for experiment logging.</p>"
      }
    },
    "ExperimentS3LogConfiguration": {
      "base": "<p>Describes the configuration for experiment logging to Amazon S3.</p>",
      "refs": {
        "ExperimentLogConfiguration$s3Configuration": "<p>The configuration for experiment logging to Amazon S3.</p>"
      }
    },
    "ExperimentStartTime": {
      "base": null,
      "refs": {
        "Experiment$startTime": "<p>The time that the experiment started.</p>"
      }
    },
    "ExperimentState": {
      "base": "<p>Describes the state of an experiment.</p>",
      "refs": {
        "Experiment$state": "<p>The state of the experiment.</p>",
        "ExperimentSummary$state": "<p>The state of the experiment.</p>"
      }
    },
    "ExperimentStatus": {
      "base": null,
      "refs": {
        "ExperimentState$status": "<p>The state of the experiment.</p>"
      }
    },
    "ExperimentStatusReason": {
      "base": null,
      "refs": {
        "ExperimentState$reason": "<p>The reason for the state.</p>"
      }
    },
    "ExperimentStopCondition": {
      "base": "<p>Describes the stop condition for an experiment.</p>",
      "refs": {
        "ExperimentStopConditionList$member": null
      }
    },
    "ExperimentStopConditionList": {
      "base": null,
      "refs": {
        "Experiment$stopConditions": "<p>The stop conditions for the experiment.</p>"
      }
    },
    "ExperimentSummary": {
      "base": "<p>Provides a summary of an experiment.</p>",
      "refs": {
        "ExperimentSummaryList$member": null
      }
    },
    "ExperimentSummaryList": {
      "base": null,
      "refs": {
        "ListExperimentsResponse$experiments": "<p>The experiments.</p>"
      }
    },
    "ExperimentTarget": {
      "base": "<p>Describes a target for an experiment.</p>",
      "refs": {
        "ExperimentTargetMap$value": null
      }
    },
    "ExperimentTargetFilter": {
      "base": "<p>Describes a filter used for the target resources in an experiment.</p>",
      "refs": {
        "ExperimentTargetFilterList$member": null
      }
    },
    "ExperimentTargetFilterList": {
      "base": null,
      "refs": {
        "ExperimentTarget$filters": "<p>The filters to apply to identify target resources using specific attributes.</p>"
      }
    },
    "ExperimentTargetFilterPath": {
      "base": null,
      "refs": {
        "ExperimentTargetFilter$path": "<p>The attribute path for the filter.</p>"
      }
    },
    "ExperimentTargetFilterValue": {
      "base": null,
      "refs": {
        "ExperimentTargetFilterValues$member": null
      }
    },
    "ExperimentTargetFilterValues": {
      "base": null,
      "refs": {
        "ExperimentTargetFilter$values": "<p>The attribute values for the filter.</p>"
      }
    },
    "ExperimentTargetMap": {
      "base": null,
      "refs": {
        "Experiment$targets": "<p>The targets for the experiment.</p>"
      }
    },
    "ExperimentTargetName": {
      "base": null,
      "refs": {
        "ExperimentActionTargetMap$value": null,
        "ExperimentTargetMap$key": null
      }
    },
    "ExperimentTargetParameterMap": {
      "base": null,
      "refs": {
        "ExperimentTarget$parameters": "<p>The resource type parameters.</p>"
      }
    },
    "ExperimentTargetParameterName": {
      "base": null,
      "refs": {
        "ExperimentTargetParameterMap$key": null
      }
    },
    "ExperimentTargetParameterValue": {
      "base": null,
      "refs": {
        "ExperimentTargetParameterMap$value": null
      }
    },
    "ExperimentTargetSelectionMode": {
      "base": null,
      "refs": {
        "ExperimentTarget$selectionMode": "<p>Scopes the identified resources to a specific count or percentage.</p>"
      }
    },
    "ExperimentTemplate": {
      "base": "<p>Describes an experiment template.</p>",
      "refs": {
        "CreateExperimentTemplateResponse$experimentTemplate": "<p>Information about the experiment template.</p>",
        "DeleteExperimentTemplateResponse$experimentTemplate": "<p>Information about the experiment template.</p>",
        "GetExperimentTemplateResponse$experimentTemplate": "<p>Information about the experiment template.</p>",
        "UpdateExperimentTemplateResponse$experimentTemplate": "<p>Information about the experiment template.</p>"
      }
    },
    "ExperimentTemplateAction": {
      "base": "<p>Describes an action for an experiment template.</p>",
      "refs": {
        "ExperimentTemplateActionMap$value": null
      }
    },
    "ExperimentTemplateActionDescription": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateActionInput$description": "<p>A description for the action.</p>",
        "ExperimentTemplateAction$description": "<p>A description for the action.</p>",
        "UpdateExperimentTemplateActionInputItem$description": "<p>A description for the action.</p>"
      }
    },
    "ExperimentTemplateActionMap": {
      "base": null,
      "refs": {
        "ExperimentTemplate$actions": "<p>The actions for the experiment.</p>"
      }
    },
    "ExperimentTemplateActionName": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateActionInputMap$key": null,
        "ExperimentTemplateActionMap$key": null,
        "UpdateExperimentTemplateActionInputMap$key": null
      }
    },
    "ExperimentTemplateActionParameter": {
      "base": null,
      "refs": {
        "ExperimentTemplateActionParameterMap$value": null
      }
    },
    "ExperimentTemplateActionParameterMap": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateActionInput$parameters": "<p>The parameters for the action, if applicable.</p>",
        "ExperimentTemplateAction$parameters": "<p>The parameters for the action.</p>",
        "UpdateExperimentTemplateActionInputItem$parameters": "<p>The parameters for the action, if applicable.</p>"
      }
    },
    "ExperimentTemplateActionParameterName": {
      "base": null,
      "refs": {
        "ExperimentTemplateActionParameterMap$key": null
      }
    },
    "ExperimentTemplateActionStartAfter": {
      "base": null,
      "refs": {
        "ExperimentTemplateActionStartAfterList$member": null
      }
    },
    "ExperimentTemplateActionStartAfterList": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateActionInput$startAfter": "<p>The name of the action that must be completed before the current action starts. Omit this parameter to run the action at the start of the experiment.</p>",
        "ExperimentTemplateAction$startAfter": "<p>The name of the action that must be completed before the current action starts.</p>",
        "UpdateExperimentTemplateActionInputItem$startAfter": "<p>The name of the action that must be completed before the current action starts. Omit this parameter to run the action at the start of the experiment.</p>"
      }
    },
    "ExperimentTemplateActionTargetMap": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateActionInput$targets": "<p>The targets for the action.</p>",
        "ExperimentTemplateAction$targets": "<p>The targets for the action.</p>",
        "UpdateExperimentTemplateActionInputItem$targets": "<p>The targets for the action.</p>"
      }
    },
    "ExperimentTemplateActionTargetName": {
      "base": null,
      "refs": {
        "ExperimentTemplateActionTargetMap$key": null
      }
    },
    "ExperimentTemplateCloudWatchLogsLogConfiguration": {
      "base": "<p>Describes the configuration for experiment logging to Amazon CloudWatch Logs.</p>",
      "refs": {
        "ExperimentTemplateLogConfiguration$cloudWatchLogsConfiguration": "<p>The configuration for experiment logging to Amazon CloudWatch Logs.</p>"
      }
    },
    "ExperimentTemplateCloudWatchLogsLogConfigurationInput": {
      "base": "<p>Specifies the configuration for experiment logging to Amazon CloudWatch Logs.</p>",
      "refs": {
        "CreateExperimentTemplateLogConfigurationInput$cloudWatchLogsConfiguration": "<p>The configuration for experiment logging to Amazon CloudWatch Logs.</p>",
        "UpdateExperimentTemplateLogConfigurationInput$cloudWatchLogsConfiguration": "<p>The configuration for experiment logging to Amazon CloudWatch Logs.</p>"
      }
    },
    "ExperimentTemplateDescription": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateRequest$description": "<p>A description for the experiment template.</p>",
        "ExperimentTemplate$description": "<p>The description for the experiment template.</p>",
        "ExperimentTemplateSummary$description": "<p>The description of the experiment template.</p>",
        "UpdateExperimentTemplateRequest$description": "<p>A description for the template.</p>"
      }
    },
    "ExperimentTemplateId": {
      "base": null,
      "refs": {
        "DeleteExperimentTemplateRequest$id": "<p>The ID of the experiment template.</p>",
        "Experiment$experimentTemplateId": "<p>The ID of the experiment template.</p>",
        "ExperimentSummary$experimentTemplateId": "<p>The ID of the experiment template.</p>",
        "ExperimentTemplate$id": "<p>The ID of the experiment template.</p>",
        "ExperimentTemplateSummary$id": "<p>The ID of the experiment template.</p>",
        "GetExperimentTemplateRequest$id": "<p>The ID of the experiment template.</p>",
        "StartExperimentRequest$experimentTemplateId": "<p>The ID of the experiment template.</p>",
        "UpdateExperimentTemplateRequest$id": "<p>The ID of the experiment template.</p>"
      }
    },
    "ExperimentTemplateLogConfiguration": {
      "base": "<p>Describes the configuration for experiment logging.</p>",
      "refs": {
        "ExperimentTemplate$logConfiguration": "<p>The configuration for experiment logging.</p>"
      }
    },
    "ExperimentTemplateS3LogConfiguration": {
      "base": "<p>Describes the configuration for experiment logging to Amazon S3.</p>",
      "refs": {
        "ExperimentTemplateLogConfiguration$s3Configuration": "<p>The configuration for experiment logging to Amazon S3.</p>"
      }
    },
    "ExperimentTemplateS3LogConfigurationInput": {
      "base": "<p>Specifies the configuration for experiment logging to Amazon S3.</p>",
      "refs": {
        "CreateExperimentTemplateLogConfigurationInput$s3Configuration": "<p>The configuration for experiment logging to Amazon S3.</p>",
        "UpdateExperimentTemplateLogConfigurationInput$s3Configuration": "<p>The configuration for experiment logging to Amazon S3.</p>"
      }
    },
    "ExperimentTemplateStopCondition": {
      "base": "<p>Describes a stop condition for an experiment template.</p>",
      "refs": {
        "ExperimentTemplateStopConditionList$member": null
      }
    },
    "ExperimentTemplateStopConditionList": {
      "base": null,
      "refs": {
        "ExperimentTemplate$stopConditions": "<p>The stop conditions for the experiment.</p>"
      }
    },
    "ExperimentTemplateSummary": {
      "base": "<p>Provides a summary of an experiment template.</p>",
      "refs": {
        "ExperimentTemplateSummaryList$member": null
      }
    },
    "ExperimentTemplateSummaryList": {
      "base": null,
      "refs": {
        "ListExperimentTemplatesResponse$experimentTemplates": "<p>The experiment templates.</p>"
      }
    },
    "ExperimentTemplateTarget": {
      "base": "<p>Describes a target for an experiment template.</p>",
      "refs": {
        "ExperimentTemplateTargetMap$value": null
      }
    },
    "ExperimentTemplateTargetFilter": {
      "base": "<p>Describes a filter used for the target resources in an experiment template.</p>",
      "refs": {
        "ExperimentTemplateTargetFilterList$member": null
      }
    },
    "ExperimentTemplateTargetFilterInputList": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateTargetInput$filters": "<p>The filters to apply to identify target resources using specific attributes.</p>",
        "UpdateExperimentTemplateTargetInput$filters": "<p>The filters to apply to identify target resources using specific attributes.</p>"
      }
    },
    "ExperimentTemplateTargetFilterList": {
      "base": null,
      "refs": {
        "ExperimentTemplateTarget$filters": "<p>The filters to apply to identify target resources using specific attributes.</p>"
      }
    },
    "ExperimentTemplateTargetFilterPath": {
      "base": null,
      "refs": {
        "ExperimentTemplateTargetFilter$path": "<p>The attribute path for the filter.</p>",
        "ExperimentTemplateTargetInputFilter$path": "<p>The attribute path for the filter.</p>"
      }
    },
    "ExperimentTemplateTargetFilterValue": {
      "base": null,
      "refs": {
        "ExperimentTemplateTargetFilterValues$member": null
      }
    },
    "ExperimentTemplateTargetFilterValues": {
      "base": null,
      "refs": {
        "ExperimentTemplateTargetFilter$values": "<p>The attribute values for the filter.</p>",
        "ExperimentTemplateTargetInputFilter$values": "<p>The attribute values for the filter.</p>"
      }
    },
    "ExperimentTemplateTargetInputFilter": {
      "base": "<p>Specifies a filter used for the target resource input in an experiment template.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/targets.html#target-filters\">Resource filters</a> in the <i>Fault Injection Simulator User Guide</i>.</p>",
      "refs": {
        "ExperimentTemplateTargetFilterInputList$member": null
      }
    },
    "ExperimentTemplateTargetMap": {
      "base": null,
      "refs": {
        "ExperimentTemplate$targets": "<p>The targets for the experiment.</p>"
      }
    },
    "ExperimentTemplateTargetName": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateTargetInputMap$key": null,
        "ExperimentTemplateActionTargetMap$value": null,
        "ExperimentTemplateTargetMap$key": null,
        "UpdateExperimentTemplateTargetInputMap$key": null
      }
    },
    "ExperimentTemplateTargetParameterMap": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateTargetInput$parameters": "<p>The resource type parameters.</p>",
        "ExperimentTemplateTarget$parameters": "<p>The resource type parameters.</p>",
        "UpdateExperimentTemplateTargetInput$parameters": "<p>The resource type parameters.</p>"
      }
    },
    "ExperimentTemplateTargetParameterName": {
      "base": null,
      "refs": {
        "ExperimentTemplateTargetParameterMap$key": null
      }
    },
    "ExperimentTemplateTargetParameterValue": {
      "base": null,
      "refs": {
        "ExperimentTemplateTargetParameterMap$value": null
      }
    },
    "ExperimentTemplateTargetSelectionMode": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateTargetInput$selectionMode": "<p>Scopes the identified resources to a specific count of the resources at random, or a percentage of the resources. All identified resources are included in the target.</p> <ul> <li> <p>ALL - Run the action on all identified targets. This is the default.</p> </li> <li> <p>COUNT(n) - Run the action on the specified number of targets, chosen from the identified targets at random. For example, COUNT(1) selects one of the targets.</p> </li> <li> <p>PERCENT(n) - Run the action on the specified percentage of targets, chosen from the identified targets at random. For example, PERCENT(25) selects 25% of the targets.</p> </li> </ul>",
        "ExperimentTemplateTarget$selectionMode": "<p>Scopes the identified resources to a specific count or percentage.</p>",
        "UpdateExperimentTemplateTargetInput$selectionMode": "<p>Scopes the identified resources to a specific count or percentage.</p>"
      }
    },
    "GetActionRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetActionResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetExperimentRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetExperimentResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetExperimentTemplateRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetExperimentTemplateResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetTargetResourceTypeRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetTargetResourceTypeResponse": {
      "base": null,
      "refs": {
      }
    },
    "LastUpdateTime": {
      "base": null,
      "refs": {
        "ExperimentTemplate$lastUpdateTime": "<p>The time the experiment template was last updated.</p>",
        "ExperimentTemplateSummary$lastUpdateTime": "<p>The time that the experiment template was last updated.</p>"
      }
    },
    "ListActionsMaxResults": {
      "base": null,
      "refs": {
        "ListActionsRequest$maxResults": "<p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>"
      }
    },
    "ListActionsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListActionsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListExperimentTemplatesMaxResults": {
      "base": null,
      "refs": {
        "ListExperimentTemplatesRequest$maxResults": "<p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>"
      }
    },
    "ListExperimentTemplatesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListExperimentTemplatesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListExperimentsMaxResults": {
      "base": null,
      "refs": {
        "ListExperimentsRequest$maxResults": "<p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>"
      }
    },
    "ListExperimentsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListExperimentsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListTargetResourceTypesMaxResults": {
      "base": null,
      "refs": {
        "ListTargetResourceTypesRequest$maxResults": "<p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>"
      }
    },
    "ListTargetResourceTypesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTargetResourceTypesResponse": {
      "base": null,
      "refs": {
      }
    },
    "LogSchemaVersion": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateLogConfigurationInput$logSchemaVersion": "<p>The schema version.</p>",
        "ExperimentLogConfiguration$logSchemaVersion": "<p>The schema version.</p>",
        "ExperimentTemplateLogConfiguration$logSchemaVersion": "<p>The schema version.</p>",
        "UpdateExperimentTemplateLogConfigurationInput$logSchemaVersion": "<p>The schema version.</p>"
      }
    },
    "NextToken": {
      "base": null,
      "refs": {
        "ListActionsRequest$nextToken": "<p>The token for the next page of results.</p>",
        "ListActionsResponse$nextToken": "<p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
        "ListExperimentTemplatesRequest$nextToken": "<p>The token for the next page of results.</p>",
        "ListExperimentTemplatesResponse$nextToken": "<p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
        "ListExperimentsRequest$nextToken": "<p>The token for the next page of results.</p>",
        "ListExperimentsResponse$nextToken": "<p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
        "ListTargetResourceTypesRequest$nextToken": "<p>The token for the next page of results.</p>",
        "ListTargetResourceTypesResponse$nextToken": "<p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>"
      }
    },
    "ResourceArn": {
      "base": null,
      "refs": {
        "ListTagsForResourceRequest$resourceArn": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
        "ResourceArnList$member": null,
        "TagResourceRequest$resourceArn": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
        "UntagResourceRequest$resourceArn": "<p>The Amazon Resource Name (ARN) of the resource.</p>"
      }
    },
    "ResourceArnList": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateTargetInput$resourceArns": "<p>The Amazon Resource Names (ARNs) of the resources.</p>",
        "ExperimentTarget$resourceArns": "<p>The Amazon Resource Names (ARNs) of the resources.</p>",
        "ExperimentTemplateTarget$resourceArns": "<p>The Amazon Resource Names (ARNs) of the targets.</p>",
        "UpdateExperimentTemplateTargetInput$resourceArns": "<p>The Amazon Resource Names (ARNs) of the targets.</p>"
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>The specified resource cannot be found.</p>",
      "refs": {
      }
    },
    "RoleArn": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateRequest$roleArn": "<p>The Amazon Resource Name (ARN) of an IAM role that grants the FIS service permission to perform service actions on your behalf.</p>",
        "Experiment$roleArn": "<p>The Amazon Resource Name (ARN) of an IAM role that grants the FIS service permission to perform service actions on your behalf.</p>",
        "ExperimentTemplate$roleArn": "<p>The Amazon Resource Name (ARN) of an IAM role.</p>",
        "UpdateExperimentTemplateRequest$roleArn": "<p>The Amazon Resource Name (ARN) of an IAM role that grants the FIS service permission to perform service actions on your behalf.</p>"
      }
    },
    "S3BucketName": {
      "base": null,
      "refs": {
        "ExperimentS3LogConfiguration$bucketName": "<p>The name of the destination bucket.</p>",
        "ExperimentTemplateS3LogConfiguration$bucketName": "<p>The name of the destination bucket.</p>",
        "ExperimentTemplateS3LogConfigurationInput$bucketName": "<p>The name of the destination bucket.</p>"
      }
    },
    "S3ObjectKey": {
      "base": null,
      "refs": {
        "ExperimentS3LogConfiguration$prefix": "<p>The bucket prefix.</p>",
        "ExperimentTemplateS3LogConfiguration$prefix": "<p>The bucket prefix.</p>",
        "ExperimentTemplateS3LogConfigurationInput$prefix": "<p>The bucket prefix.</p>"
      }
    },
    "ServiceQuotaExceededException": {
      "base": "<p>You have exceeded your service quota.</p>",
      "refs": {
      }
    },
    "StartExperimentRequest": {
      "base": null,
      "refs": {
      }
    },
    "StartExperimentResponse": {
      "base": null,
      "refs": {
      }
    },
    "StopConditionSource": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateStopConditionInput$source": "<p>The source for the stop condition. Specify <code>aws:cloudwatch:alarm</code> if the stop condition is defined by a CloudWatch alarm. Specify <code>none</code> if there is no stop condition.</p>",
        "ExperimentStopCondition$source": "<p>The source for the stop condition.</p>",
        "ExperimentTemplateStopCondition$source": "<p>The source for the stop condition.</p>",
        "UpdateExperimentTemplateStopConditionInput$source": "<p>The source for the stop condition. Specify <code>aws:cloudwatch:alarm</code> if the stop condition is defined by a CloudWatch alarm. Specify <code>none</code> if there is no stop condition.</p>"
      }
    },
    "StopConditionValue": {
      "base": null,
      "refs": {
        "CreateExperimentTemplateStopConditionInput$value": "<p>The Amazon Resource Name (ARN) of the CloudWatch alarm. This is required if the source is a CloudWatch alarm.</p>",
        "ExperimentStopCondition$value": "<p>The Amazon Resource Name (ARN) of the CloudWatch alarm, if applicable.</p>",
        "ExperimentTemplateStopCondition$value": "<p>The Amazon Resource Name (ARN) of the CloudWatch alarm, if applicable.</p>",
        "UpdateExperimentTemplateStopConditionInput$value": "<p>The Amazon Resource Name (ARN) of the CloudWatch alarm.</p>"
      }
    },
    "StopExperimentRequest": {
      "base": null,
      "refs": {
      }
    },
    "StopExperimentResponse": {
      "base": null,
      "refs": {
      }
    },
    "TagKey": {
      "base": null,
      "refs": {
        "TagKeyList$member": null,
        "TagMap$key": null
      }
    },
    "TagKeyList": {
      "base": null,
      "refs": {
        "UntagResourceRequest$tagKeys": "<p>The tag keys to remove.</p>"
      }
    },
    "TagMap": {
      "base": null,
      "refs": {
        "Action$tags": "<p>The tags for the action.</p>",
        "ActionSummary$tags": "<p>The tags for the action.</p>",
        "CreateExperimentTemplateRequest$tags": "<p>The tags to apply to the experiment template.</p>",
        "CreateExperimentTemplateTargetInput$resourceTags": "<p>The tags for the target resources.</p>",
        "Experiment$tags": "<p>The tags for the experiment.</p>",
        "ExperimentSummary$tags": "<p>The tags for the experiment.</p>",
        "ExperimentTarget$resourceTags": "<p>The tags for the target resources.</p>",
        "ExperimentTemplate$tags": "<p>The tags for the experiment template.</p>",
        "ExperimentTemplateSummary$tags": "<p>The tags for the experiment template.</p>",
        "ExperimentTemplateTarget$resourceTags": "<p>The tags for the target resources.</p>",
        "ListTagsForResourceResponse$tags": "<p>The tags for the resource.</p>",
        "StartExperimentRequest$tags": "<p>The tags to apply to the experiment.</p>",
        "TagResourceRequest$tags": "<p>The tags for the resource.</p>",
        "UpdateExperimentTemplateTargetInput$resourceTags": "<p>The tags for the target resources.</p>"
      }
    },
    "TagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "TagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "TagValue": {
      "base": null,
      "refs": {
        "TagMap$value": null
      }
    },
    "TargetResourceType": {
      "base": "<p>Describes a resource type.</p>",
      "refs": {
        "GetTargetResourceTypeResponse$targetResourceType": "<p>Information about the resource type.</p>"
      }
    },
    "TargetResourceTypeDescription": {
      "base": null,
      "refs": {
        "TargetResourceType$description": "<p>A description of the resource type.</p>",
        "TargetResourceTypeSummary$description": "<p>A description of the resource type.</p>"
      }
    },
    "TargetResourceTypeId": {
      "base": null,
      "refs": {
        "ActionTarget$resourceType": "<p>The resource type of the target.</p>",
        "CreateExperimentTemplateTargetInput$resourceType": "<p>The resource type. The resource type must be supported for the specified action.</p>",
        "ExperimentTarget$resourceType": "<p>The resource type.</p>",
        "ExperimentTemplateTarget$resourceType": "<p>The resource type.</p>",
        "GetTargetResourceTypeRequest$resourceType": "<p>The resource type.</p>",
        "TargetResourceType$resourceType": "<p>The resource type.</p>",
        "TargetResourceTypeSummary$resourceType": "<p>The resource type.</p>",
        "UpdateExperimentTemplateTargetInput$resourceType": "<p>The resource type. The resource type must be supported for the specified action.</p>"
      }
    },
    "TargetResourceTypeParameter": {
      "base": "<p>Describes the parameters for a resource type. Use parameters to determine which tasks are identified during target resolution.</p>",
      "refs": {
        "TargetResourceTypeParameterMap$value": null
      }
    },
    "TargetResourceTypeParameterDescription": {
      "base": null,
      "refs": {
        "TargetResourceTypeParameter$description": "<p>A description of the parameter.</p>"
      }
    },
    "TargetResourceTypeParameterMap": {
      "base": null,
      "refs": {
        "TargetResourceType$parameters": "<p>The parameters for the resource type.</p>"
      }
    },
    "TargetResourceTypeParameterName": {
      "base": null,
      "refs": {
        "TargetResourceTypeParameterMap$key": null
      }
    },
    "TargetResourceTypeParameterRequired": {
      "base": null,
      "refs": {
        "TargetResourceTypeParameter$required": "<p>Indicates whether the parameter is required.</p>"
      }
    },
    "TargetResourceTypeSummary": {
      "base": "<p>Describes a resource type.</p>",
      "refs": {
        "TargetResourceTypeSummaryList$member": null
      }
    },
    "TargetResourceTypeSummaryList": {
      "base": null,
      "refs": {
        "ListTargetResourceTypesResponse$targetResourceTypes": "<p>The target resource types.</p>"
      }
    },
    "UntagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "UntagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateExperimentTemplateActionInputItem": {
      "base": "<p>Specifies an action for an experiment template.</p>",
      "refs": {
        "UpdateExperimentTemplateActionInputMap$value": null
      }
    },
    "UpdateExperimentTemplateActionInputMap": {
      "base": null,
      "refs": {
        "UpdateExperimentTemplateRequest$actions": "<p>The actions for the experiment.</p>"
      }
    },
    "UpdateExperimentTemplateLogConfigurationInput": {
      "base": "<p>Specifies the configuration for experiment logging.</p>",
      "refs": {
        "UpdateExperimentTemplateRequest$logConfiguration": "<p>The configuration for experiment logging.</p>"
      }
    },
    "UpdateExperimentTemplateRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateExperimentTemplateResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateExperimentTemplateStopConditionInput": {
      "base": "<p>Specifies a stop condition for an experiment. You can define a stop condition as a CloudWatch alarm.</p>",
      "refs": {
        "UpdateExperimentTemplateStopConditionInputList$member": null
      }
    },
    "UpdateExperimentTemplateStopConditionInputList": {
      "base": null,
      "refs": {
        "UpdateExperimentTemplateRequest$stopConditions": "<p>The stop conditions for the experiment.</p>"
      }
    },
    "UpdateExperimentTemplateTargetInput": {
      "base": "<p>Specifies a target for an experiment. You must specify at least one Amazon Resource Name (ARN) or at least one resource tag. You cannot specify both.</p>",
      "refs": {
        "UpdateExperimentTemplateTargetInputMap$value": null
      }
    },
    "UpdateExperimentTemplateTargetInputMap": {
      "base": null,
      "refs": {
        "UpdateExperimentTemplateRequest$targets": "<p>The targets for the experiment.</p>"
      }
    },
    "ValidationException": {
      "base": "<p>The specified input is not valid, or fails to satisfy the constraints for the request.</p>",
      "refs": {
      }
    }
  }
}
