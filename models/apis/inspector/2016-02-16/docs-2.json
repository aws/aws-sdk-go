{
  "version": "2.0",
  "service": "<fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>",
  "operations": {
    "AddAttributesToFindings": "<p>Assigns attributes (key and value pair) to the findings specified by the findings' ARNs.</p>",
    "CreateAssessmentTarget": "<p>Creates a new assessment target using the resource group ARN generated by <a>CreateResourceGroup</a>. You can create up to 50 assessment targets per AWS account. You can run up to 500 concurrent agents per AWS account. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide//inspector_applications.html\"> Amazon Inspector Assessment Targets</a>.</p>",
    "CreateAssessmentTemplate": "<p>Creates an assessment template for the assessment target specified by the assessment target ARN.</p>",
    "CreateResourceGroup": "<p>Creates a resource group using the specified set of tags (key and value pairs) that are used to select the EC2 instances to be included in an Inspector assessment target. The created resource group is then used to create an Inspector assessment target.</p>",
    "DeleteAssessmentRun": "<p>Deletes the assessment run specified by the assessment run ARN.</p>",
    "DeleteAssessmentTarget": "<p>Deletes the assessment target specified by the assessment target ARN.</p>",
    "DeleteAssessmentTemplate": "<p>Deletes the assessment template specified by the assessment template ARN.</p>",
    "DescribeAssessmentRuns": "<p>Describes the assessment run(s) specified by the assessment run ARN(s).</p>",
    "DescribeAssessmentTargets": "<p>Describes the assessment target(s) specified by the assessment target ARN(s).</p>",
    "DescribeAssessmentTemplates": "<p>Describes the assessment template(s) specified by the assessment template(s) ARN(s).</p>",
    "DescribeCrossAccountAccessRole": "<p>Describes the IAM role that enables Inspector to access your AWS account.</p>",
    "DescribeFindings": "<p>Describes the finding(s) specified by the finding ARN(s).</p>",
    "DescribeResourceGroups": "<p>Describes resource group(s) specified by the resource group ARN(s).</p>",
    "DescribeRulesPackages": "<p>Describes the rules package(s) specified by the rules package ARN(s).</p>",
    "GetTelemetryMetadata": "<p>Information about the data collected for the specified assessment run.</p>",
    "ListAssessmentRunAgents": "<p>Lists the agents of the assessment run specified by the assessment run ARN.</p>",
    "ListAssessmentRuns": "<p>Lists the assessments run corresponding to assessment template(s) specified by the assessment template(s)' ARN(s).</p>",
    "ListAssessmentTargets": "<p>Lists the ARN(s) of the assessment target(s) within this AWS account. For more information about assessment targets, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide//inspector_applications.html\">Amazon Inspector Assessment Targets</a>.</p>",
    "ListAssessmentTemplates": "<p>Lists the assessment template(s) corresponding to the assessment target(s) specified by the assessment targets' ARN(s).</p>",
    "ListEventSubscriptions": "<p>Lists all the event subscriptions for the assessment template specified by the assessment template ARN. For more information, see <a>SubscribeToEvent</a> and <a>UnsubscribeFromEvent</a>.</p>",
    "ListFindings": "<p>Lists findings generated by the assessment run(s) specified by the assessment run ARN(s).</p>",
    "ListRulesPackages": "<p>Lists all available Inspector rules packages.</p>",
    "ListTagsForResource": "<p>Lists all tags associated with an assessment template.</p>",
    "PreviewAgents": "<p>Previews the agents installed on the EC2 instances that are part of the specified assessment target.</p>",
    "RegisterCrossAccountAccessRole": "<p>Registers the IAM role that Inspector uses to list your EC2 instances at the start of the assessment run or when you call the <a>PreviewAgents</a> action.</p>",
    "RemoveAttributesFromFindings": "<p>Removes entire attributes (key and value pairs) from the findings specified by the finding ARNs where an attribute with the specified key exists.</p>",
    "SetTagsForResource": "<p>Sets tags (key and value pairs) to the assessment template specified by the assessment template ARN.</p>",
    "StartAssessmentRun": "<p>Starts the assessment run specified by the assessment template ARN. For this API to function properly, you must not exceed the limit of running up to 500 concurrent agents per AWS account.</p>",
    "StopAssessmentRun": "<p>Stops the assessment run specified by the assessment run ARN. </p>",
    "SubscribeToEvent": "<p>Enables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a specified topic.</p>",
    "UnsubscribeFromEvent": "<p>Disables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a specified topic.</p>",
    "UpdateAssessmentTarget": "<p>Updates the assessment target specified by the assessment target ARN.</p>"
  },
  "shapes": {
    "AccessDeniedErrorCode": {
      "base": null,
      "refs": {
        "AccessDeniedException$errorCode": "<p>Code that indicates the type of error that is generated.</p>"
      }
    },
    "AccessDeniedException": {
      "base": "<p>You do not have required permissions to access the requested resource.</p>",
      "refs": {
      }
    },
    "AddAttributesToFindingsRequest": {
      "base": null,
      "refs": {
      }
    },
    "AddAttributesToFindingsResponse": {
      "base": null,
      "refs": {
      }
    },
    "AddRemoveAttributesFindingArnList": {
      "base": null,
      "refs": {
        "AddAttributesToFindingsRequest$findingArns": "<p>The ARNs specifying the findings that you want to assign attributes to.</p>",
        "RemoveAttributesFromFindingsRequest$findingArns": "<p>The ARNs specifying the findings that you want to remove attributes from.</p>"
      }
    },
    "AgentAlreadyRunningAssessment": {
      "base": "<p>This data type is used in the exception error that is thrown if you start an assessment run for an assessment target that includes an EC2 instance that is already participating in another started assessment run.</p>",
      "refs": {
        "AgentAlreadyRunningAssessmentList$member": null
      }
    },
    "AgentAlreadyRunningAssessmentList": {
      "base": null,
      "refs": {
        "AgentsAlreadyRunningAssessmentException$agents": "<p/>"
      }
    },
    "AgentFilter": {
      "base": "<p>Contains information about an Inspector agent. This data type is used as a request parameter in the <a>ListAssessmentRunAgents</a> action.</p>",
      "refs": {
        "ListAssessmentRunAgentsRequest$filter": "<p>You can use this parameter to specify a subset of data to be included in the action's response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>"
      }
    },
    "AgentHealth": {
      "base": null,
      "refs": {
        "AgentHealthList$member": null,
        "AssessmentRunAgent$agentHealth": "<p>The current health state of the agent.</p>"
      }
    },
    "AgentHealthCode": {
      "base": null,
      "refs": {
        "AgentHealthCodeList$member": null,
        "AssessmentRunAgent$agentHealthCode": "<p>The detailed health state of the agent.</p>"
      }
    },
    "AgentHealthCodeList": {
      "base": null,
      "refs": {
        "AgentFilter$agentHealthCodes": "<p>The detailed health state of the agent. Values can be set to <b>IDLE</b>, <b>RUNNING</b>, <b>SHUTDOWN</b>, <b>UNHEALTHY</b>, <b>THROTTLED</b>, and <b>UNKNOWN</b>. </p>"
      }
    },
    "AgentHealthList": {
      "base": null,
      "refs": {
        "AgentFilter$agentHealths": "<p>The current health state of the agent. Values can be set to <b>HEALTHY</b> or <b>UNHEALTHY</b>.</p>"
      }
    },
    "AgentId": {
      "base": null,
      "refs": {
        "AgentAlreadyRunningAssessment$agentId": "<p>ID of the agent that is running on an EC2 isntance that is already particiapting in another started assessment run.</p>",
        "AgentIdList$member": null,
        "AgentPreview$agentId": "<p>The id of the EC2 instance where the agent is intalled.</p>",
        "AssessmentRunAgent$agentId": "<p>AWS account of the EC2 instance where the agent is installed.</p>",
        "AssetAttributes$agentId": "<p>The id of the agent that is installed on the EC2 instance where the finding is generated.</p>"
      }
    },
    "AgentIdList": {
      "base": null,
      "refs": {
        "FindingFilter$agentIds": "<p>For a record to match a filter, one of the values specified for this data type property must be the exact match of the value of the <b>agentId</b> property of the <a>Finding</a> data type.</p>"
      }
    },
    "AgentPreview": {
      "base": "<p>This data type is used as a response element in the <a>PreviewAgents</a> action.</p>",
      "refs": {
        "AgentPreviewList$member": null
      }
    },
    "AgentPreviewList": {
      "base": null,
      "refs": {
        "PreviewAgentsResponse$agentPreviews": "<p>The resulting list of agents.</p>"
      }
    },
    "AgentsAlreadyRunningAssessmentException": {
      "base": "<p>You start an assessment run and one of the instances is already participating in another assessment run.</p>",
      "refs": {
      }
    },
    "AmiId": {
      "base": null,
      "refs": {
        "AssetAttributes$amiId": "<p>Amazon Machine Image(AMI) ID installed on the EC2 instance where the finding is generated.</p>"
      }
    },
    "Arn": {
      "base": null,
      "refs": {
        "AddRemoveAttributesFindingArnList$member": null,
        "AgentAlreadyRunningAssessment$assessmentRunArn": "<p>The ARN of the assessment that has already been started.</p>",
        "AssessmentRulesPackageArnList$member": null,
        "AssessmentRun$arn": "<p>The ARN of the assessment run.</p>",
        "AssessmentRun$assessmentTemplateArn": "<p>The ARN of the assessment template that is associated with the assessment run.</p>",
        "AssessmentRunAgent$assessmentRunArn": "<p>The ARN of the assessment run that is associated with the agent.</p>",
        "AssessmentRunInProgressArnList$member": null,
        "AssessmentRunNotification$snsTopicArn": "<p>The SNS topic to which the SNS notification is sent.</p>",
        "AssessmentTarget$arn": "<p>The ARN specifying the Inspector assessment target. </p>",
        "AssessmentTarget$resourceGroupArn": "<p>The ARN specifying the resource group that is associated with the assessment target. </p>",
        "AssessmentTemplate$arn": "<p>The ARN of the assessment template.</p>",
        "AssessmentTemplate$assessmentTargetArn": "<p>The ARN of the assessment target that corresponds to this assessment template.</p>",
        "AssessmentTemplateRulesPackageArnList$member": null,
        "BatchDescribeArnList$member": null,
        "CreateAssessmentTargetRequest$resourceGroupArn": "<p>The ARN specifying the resource group that is used to create the assessment target.</p>",
        "CreateAssessmentTargetResponse$assessmentTargetArn": "<p>The ARN specifying the assessment target that is created.</p>",
        "CreateAssessmentTemplateRequest$assessmentTargetArn": "<p>The ARN specifying the assessment target for which you want to create the assessment template.</p>",
        "CreateAssessmentTemplateResponse$assessmentTemplateArn": "<p>The ARN specifying the assessment template that is created.</p>",
        "CreateResourceGroupResponse$resourceGroupArn": "<p>The ARN specifying the resource group that is created.</p>",
        "DeleteAssessmentRunRequest$assessmentRunArn": "<p>The ARN specifying the assessment run that you want to delete.</p>",
        "DeleteAssessmentTargetRequest$assessmentTargetArn": "<p>The ARN specifying the assessment target that you want to delete.</p>",
        "DeleteAssessmentTemplateRequest$assessmentTemplateArn": "<p>The ARN specifying the assessment template that you want to delete.</p>",
        "DescribeCrossAccountAccessRoleResponse$roleArn": "<p>The ARN specifying the IAM role that Inspector uses to access your AWS account.</p>",
        "FailedItems$key": null,
        "FilterRulesPackageArnList$member": null,
        "Finding$arn": "<p>The ARN specifying the finding.</p>",
        "GetTelemetryMetadataRequest$assessmentRunArn": "<p>The ARN specifying the assessment run the telemetry of which you want to obtain.</p>",
        "InspectorServiceAttributes$assessmentRunArn": "<p>The ARN of the assessment run during which the fidning is generated.</p>",
        "InspectorServiceAttributes$rulesPackageArn": "<p>The ARN of the rules package used to generate the finding.</p>",
        "ListAssessmentRunAgentsRequest$assessmentRunArn": "<p>The ARN specifying the assessment run whose agents you want to list.</p>",
        "ListEventSubscriptionsRequest$resourceArn": "<p>The ARN of the assessment template for which you want to list the existing event subscriptions.</p>",
        "ListParentArnList$member": null,
        "ListReturnedArnList$member": null,
        "ListTagsForResourceRequest$resourceArn": "<p>The ARN specifying the assessment template whose tags you want to list.</p>",
        "PreviewAgentsRequest$previewAgentsArn": "<p>The ARN of the assessment target whose agents you want to preview.</p>",
        "RegisterCrossAccountAccessRoleRequest$roleArn": "<p>The ARN of the IAM role that Inspector uses to list your EC2 instances during the assessment run or when you call the <a>PreviewAgents</a> action. </p>",
        "ResourceGroup$arn": "<p>The ARN of the resource group. </p>",
        "RulesPackage$arn": "<p>The ARN of the rules package.</p>",
        "SetTagsForResourceRequest$resourceArn": "<p>The ARN of the assessment template that you want to set tags to.</p>",
        "StartAssessmentRunRequest$assessmentTemplateArn": "<p>The assessment template ARN of the assessment run that you want to start.</p>",
        "StartAssessmentRunResponse$assessmentRunArn": "<p>The ARN of the assessment run that has been started. </p>",
        "StopAssessmentRunRequest$assessmentRunArn": "<p>The ARN of the assessment run that you want to stop. </p>",
        "SubscribeToEventRequest$resourceArn": "<p>The ARN of the assessment template used during the event for which you want to recieve SNS notifications.</p>",
        "SubscribeToEventRequest$topicArn": "<p>The ARN of the SNS topic to which the SNS notifications are sent.</p>",
        "Subscription$resourceArn": "<p>The ARN of the assessment template that is used during the event for which the SNS notification is sent.</p>",
        "Subscription$topicArn": "<p>The ARN of the Amazon Simple Notification Service (SNS) topic to which the SNS notifications are sent.</p>",
        "UnsubscribeFromEventRequest$resourceArn": "<p>The ARN of the assessment template used during the event for which you want to stop recieving SNS notifications.</p>",
        "UnsubscribeFromEventRequest$topicArn": "<p>The ARN of the SNS topic to which SNS notifications are sent.</p>",
        "UpdateAssessmentTargetRequest$assessmentTargetArn": "<p>The ARN of the assessment target that you want to update.</p>",
        "UpdateAssessmentTargetRequest$resourceGroupArn": "<p>The resource group ARN that is used to specify the new resource group to associate with the assessment target.</p>"
      }
    },
    "AssessmentRulesPackageArnList": {
      "base": null,
      "refs": {
        "AssessmentRun$rulesPackageArns": "<p>Rules packages selected for the assessment run.</p>"
      }
    },
    "AssessmentRun": {
      "base": "<p>A snapshot of an Inspector assessment run that contains the assessment run's findings.</p> <p>This data type is used as the response element in the <a>DescribeAssessmentRuns</a> action.</p>",
      "refs": {
        "AssessmentRunList$member": null
      }
    },
    "AssessmentRunAgent": {
      "base": "<p>Contains information about an Inspector agent. This data type is used as a response element in the <a>ListAssessmentRunAgents</a> action.</p>",
      "refs": {
        "AssessmentRunAgentList$member": null
      }
    },
    "AssessmentRunAgentList": {
      "base": null,
      "refs": {
        "ListAssessmentRunAgentsResponse$assessmentRunAgents": "<p>A list of ARNs specifying the agents returned by the action.</p>"
      }
    },
    "AssessmentRunDuration": {
      "base": null,
      "refs": {
        "AssessmentRun$durationInSeconds": "<p>The duration of the assessment run.</p>",
        "AssessmentTemplate$durationInSeconds": "<p>The duration in seconds specified for this assessment tempate. The default value is 3600 seconds (one hour). The maximum value is 86400 seconds (one day).</p>",
        "CreateAssessmentTemplateRequest$durationInSeconds": "<p>The duration of the assessment run in seconds. The default value is 3600 seconds (one hour).</p>",
        "DurationRange$minSeconds": "<p>The minimum value of the duration range. Must be greater than zero.</p>",
        "DurationRange$maxSeconds": "<p>The maximum value of the duration range. Must be less than or equal to 604800 seconds (1 week).</p>"
      }
    },
    "AssessmentRunFilter": {
      "base": "<p>This data type is used as the request parameter in the <a>ListAssessmentRuns</a> action.</p>",
      "refs": {
        "ListAssessmentRunsRequest$filter": "<p>You can use this parameter to specify a subset of data to be included in the action's response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>"
      }
    },
    "AssessmentRunInProgressArnList": {
      "base": null,
      "refs": {
        "AssessmentRunInProgressException$assessmentRunArns": "<p>The ARN(s) of the assessment run(s) that are currently in progress.</p>"
      }
    },
    "AssessmentRunInProgressException": {
      "base": "<p>You cannot perform a specified action if an assessment run is currently in progress.</p>",
      "refs": {
      }
    },
    "AssessmentRunList": {
      "base": null,
      "refs": {
        "DescribeAssessmentRunsResponse$assessmentRuns": "<p>Information about the assessment run(s).</p>"
      }
    },
    "AssessmentRunName": {
      "base": null,
      "refs": {
        "AssessmentRun$name": "<p>The auto-generated name for the assessment run. </p>",
        "StartAssessmentRunRequest$assessmentRunName": "<p>You can specify the name for the assessment run, or it is auto-generated based on the assessment template name. Must be unique for the assessment template. </p>"
      }
    },
    "AssessmentRunNotification": {
      "base": "<p>This data type is used as one of the elements of the <a>AssessmentRun</a> data type.</p>",
      "refs": {
        "AssessmentRunNotificationList$member": null
      }
    },
    "AssessmentRunNotificationList": {
      "base": null,
      "refs": {
        "AssessmentRun$notifications": "<p>A list of notifications for the event subscriptions. A notification about a particular generated finding is only added to this list once.</p>"
      }
    },
    "AssessmentRunNotificationSnsStatusCode": {
      "base": null,
      "refs": {
        "AssessmentRunNotification$snsPublishStatusCode": "<p>The status code of the SNS notification.</p>"
      }
    },
    "AssessmentRunState": {
      "base": null,
      "refs": {
        "AssessmentRun$state": "<p>The state of the assessment run.</p>",
        "AssessmentRunStateChange$state": "<p>The assessment run state.</p>",
        "AssessmentRunStateList$member": null
      }
    },
    "AssessmentRunStateChange": {
      "base": "<p>This data type is used as one of the elements of the <a>AssessmentRun</a> data type.</p>",
      "refs": {
        "AssessmentRunStateChangeList$member": null
      }
    },
    "AssessmentRunStateChangeList": {
      "base": null,
      "refs": {
        "AssessmentRun$stateChanges": "<p>A list of the assessment run state changes.</p>"
      }
    },
    "AssessmentRunStateList": {
      "base": null,
      "refs": {
        "AssessmentRunFilter$states": "<p>For a record to match a filter, one of the values specified for this data type property must be the exact match of the value of the <b>assessmentRunState</b> property of the <a>AssessmentRun</a> data type.</p>"
      }
    },
    "AssessmentTarget": {
      "base": "<p>Contains information about an Inspector application. This data type is used as the response element in the <a>DescribeAssessmentTargets</a> action.</p>",
      "refs": {
        "AssessmentTargetList$member": null
      }
    },
    "AssessmentTargetFilter": {
      "base": "<p>This data type is used as the request parameter in the <a>ListAssessmentTargets</a> action.</p>",
      "refs": {
        "ListAssessmentTargetsRequest$filter": "<p>You can use this parameter to specify a subset of data to be included in the action's response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>"
      }
    },
    "AssessmentTargetList": {
      "base": null,
      "refs": {
        "DescribeAssessmentTargetsResponse$assessmentTargets": "<p>Information about the assessment target(s).</p>"
      }
    },
    "AssessmentTargetName": {
      "base": null,
      "refs": {
        "AssessmentTarget$name": "<p>The name of the Inspector assessment target. </p>",
        "CreateAssessmentTargetRequest$assessmentTargetName": "<p>The user-defined name identifying the assessment target that you want to create. The name must be unique within the AWS account.</p>",
        "UpdateAssessmentTargetRequest$assessmentTargetName": "<p>The name of the assessment target that you want to update.</p>"
      }
    },
    "AssessmentTemplate": {
      "base": "<p>Contains information about an Inspector assessment template. This data type is used as the response element in the <a>DescribeAssessmentTemplates</a> action.</p>",
      "refs": {
        "AssessmentTemplateList$member": null
      }
    },
    "AssessmentTemplateFilter": {
      "base": "<p>This data type is used as the request parameter in the <a>ListAssessmentTemplates</a> action.</p>",
      "refs": {
        "ListAssessmentTemplatesRequest$filter": "<p>You can use this parameter to specify a subset of data to be included in the action's response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>"
      }
    },
    "AssessmentTemplateList": {
      "base": null,
      "refs": {
        "DescribeAssessmentTemplatesResponse$assessmentTemplates": "<p>Information about the assessment template(s).</p>"
      }
    },
    "AssessmentTemplateName": {
      "base": null,
      "refs": {
        "AssessmentTemplate$name": "<p>The name of the assessment template.</p>",
        "CreateAssessmentTemplateRequest$assessmentTemplateName": "<p>The user-defined name identifying the assessment template that you want to create. You can create several assessment templates for an assessment target. The names of the assessment templates corresponding to a particular assessment target must be unique.</p>"
      }
    },
    "AssessmentTemplateRulesPackageArnList": {
      "base": null,
      "refs": {
        "AssessmentTemplate$rulesPackageArns": "<p>Rules packages specified for this assessment template.</p>",
        "CreateAssessmentTemplateRequest$rulesPackageArns": "<p>The ARNs specifying the rules packages that you want to attach to the assessment template.</p>"
      }
    },
    "AssetAttributes": {
      "base": "<p>A collection of attributes of the host from which the finding is generated.</p>",
      "refs": {
        "Finding$assetAttributes": "<p>A collection of attributes of the host from which the finding is generated.</p>"
      }
    },
    "AssetType": {
      "base": null,
      "refs": {
        "Finding$assetType": "<p>The type of the host from which the finding is generated.</p>"
      }
    },
    "Attribute": {
      "base": "<p>This data type is used as a request parameter in the <a>AddAttributesToFindings</a> and <a>CreateAssessmentTemplate</a> actions.</p>",
      "refs": {
        "AttributeList$member": null,
        "UserAttributeList$member": null
      }
    },
    "AttributeKey": {
      "base": null,
      "refs": {
        "Attribute$key": "<p>The attribute key.</p>",
        "UserAttributeKeyList$member": null
      }
    },
    "AttributeList": {
      "base": null,
      "refs": {
        "Finding$attributes": "<p>The system-defined attributes for the finding. </p>",
        "FindingFilter$attributes": "<p>For a record to match a filter, the list of values specified for this data type property must be contained in the list of values of the <b>attributes</b> property of the <a>Finding</a> data type.</p>",
        "FindingFilter$userAttributes": "<p>For a record to match a filter, the value specified for this data type property must be contained in the list of values of the <b>userAttributes</b> property of the <a>Finding</a> data type.</p>"
      }
    },
    "AttributeValue": {
      "base": null,
      "refs": {
        "Attribute$value": "<p>The value assigned to the attribute key.</p>"
      }
    },
    "AutoScalingGroup": {
      "base": null,
      "refs": {
        "AgentPreview$autoScalingGroup": "<p>The autoscaling group for the EC2 instance where the agent is installed.</p>",
        "AssessmentRunAgent$autoScalingGroup": "<p>The auto-scaling group of the EC2 instance specified by the agent ID.</p>",
        "AssetAttributes$autoScalingGroup": "<p>The auto-scaling group of the EC2 instance where the finding is generated. </p>",
        "AutoScalingGroupList$member": null
      }
    },
    "AutoScalingGroupList": {
      "base": null,
      "refs": {
        "FindingFilter$autoScalingGroups": "<p>For a record to match a filter, one of the values specified for this data type property must be the exact match of the value of the <b>autoScalingGroup</b> property of the <a>Finding</a> data type.</p>"
      }
    },
    "BatchDescribeArnList": {
      "base": null,
      "refs": {
        "DescribeAssessmentRunsRequest$assessmentRunArns": "<p>The ARN(s) specifying the assessment run(s) that you want to describe.</p>",
        "DescribeAssessmentTargetsRequest$assessmentTargetArns": "<p>The ARN(s) specifying the assessment target(s) that you want to describe.</p>",
        "DescribeAssessmentTemplatesRequest$assessmentTemplateArns": "<p>The ARN(s) specifying the assessment template(s) that you want to describe.</p>",
        "DescribeFindingsRequest$findingArns": "<p>The ARN(s) specifying the finding(s) that you want to describe.</p>",
        "DescribeResourceGroupsRequest$resourceGroupArns": "<p>The ARN(s) specifying the resource group(s) that you want to describe.</p>",
        "DescribeRulesPackagesRequest$rulesPackageArns": "<p>The ARN(s) specifying the rules package(s) that you want to describe.</p>"
      }
    },
    "Bool": {
      "base": null,
      "refs": {
        "AccessDeniedException$canRetry": "<p>You can immediately retry your request.</p>",
        "AgentsAlreadyRunningAssessmentException$agentsTruncated": "<p/>",
        "AgentsAlreadyRunningAssessmentException$canRetry": "<p>You can immediately retry your request.</p>",
        "AssessmentRun$dataCollected": "<p>Boolean value (true or false) specifying whether the process of collecting data from the agents is completed.</p>",
        "AssessmentRunInProgressException$assessmentRunArnsTruncated": "<p>Boolean value indicating whether the assessment runs ARN list is truncated.</p>",
        "AssessmentRunInProgressException$canRetry": "<p>You can immediately retry your request.</p>",
        "AssessmentRunNotification$error": "<p>The Boolean value that specifies whether the notification represents an error.</p>",
        "DescribeCrossAccountAccessRoleResponse$valid": "<p>A Boolean value that specifies whether the IAM role has the necessary policies attached to enable Inspector to access your AWS account.</p>",
        "FailedItemDetails$retryable": "<p>Indicates whether you can immediately retry a request for this item for a specified resource.</p>",
        "Finding$indicatorOfCompromise": "<p>This data element is currently not used.</p>",
        "InternalException$canRetry": "<p>You can immediately retry your request.</p>",
        "InvalidCrossAccountRoleException$canRetry": "<p>You can immediately retry your request.</p>",
        "InvalidInputException$canRetry": "<p>You can immediately retry your request.</p>",
        "LimitExceededException$canRetry": "<p>You can immediately retry your request.</p>",
        "NoSuchEntityException$canRetry": "<p>You can immediately retry your request.</p>"
      }
    },
    "CreateAssessmentTargetRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateAssessmentTargetResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateAssessmentTemplateRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateAssessmentTemplateResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateResourceGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateResourceGroupResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAssessmentRunRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAssessmentTargetRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAssessmentTemplateRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeAssessmentRunsRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeAssessmentRunsResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeAssessmentTargetsRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeAssessmentTargetsResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeAssessmentTemplatesRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeAssessmentTemplatesResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeCrossAccountAccessRoleResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeFindingsRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeFindingsResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeResourceGroupsRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeResourceGroupsResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeRulesPackagesRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeRulesPackagesResponse": {
      "base": null,
      "refs": {
      }
    },
    "DurationRange": {
      "base": "<p>This data type is used in the <a>AssessmentTemplateFilter</a> data type.</p>",
      "refs": {
        "AssessmentRunFilter$durationRange": "<p>For a record to match a filter, the value specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>durationInSeconds</b> property of the <a>AssessmentRun</a> data type.</p>",
        "AssessmentTemplateFilter$durationRange": "<p>For a record to match a filter, the value specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>durationInSeconds</b> property of the <a>AssessmentTemplate</a> data type.</p>"
      }
    },
    "ErrorMessage": {
      "base": null,
      "refs": {
        "AccessDeniedException$message": "<p>Details of the exception error.</p>",
        "AgentsAlreadyRunningAssessmentException$message": "<p>Details of the exception error.</p>",
        "AssessmentRunInProgressException$message": "<p>Details of the exception error.</p>",
        "InternalException$message": "<p>Details of the exception error.</p>",
        "InvalidCrossAccountRoleException$message": "<p>Details of the exception error.</p>",
        "InvalidInputException$message": "<p>Details of the exception error.</p>",
        "LimitExceededException$message": "<p>Details of the exception error.</p>",
        "NoSuchEntityException$message": "<p>Details of the exception error.</p>"
      }
    },
    "EventSubscription": {
      "base": "<p>This data type is used in the <a>Subscription</a> data type.</p>",
      "refs": {
        "EventSubscriptionList$member": null
      }
    },
    "EventSubscriptionList": {
      "base": null,
      "refs": {
        "Subscription$eventSubscriptions": "<p>The list of existing event subscriptions.</p>"
      }
    },
    "FailedItemDetails": {
      "base": "<p>Includes details about the failed items.</p>",
      "refs": {
        "FailedItems$value": null
      }
    },
    "FailedItemErrorCode": {
      "base": null,
      "refs": {
        "FailedItemDetails$failureCode": "<p>The status code of a failed item.</p>"
      }
    },
    "FailedItems": {
      "base": null,
      "refs": {
        "AddAttributesToFindingsResponse$failedItems": "<p>Attributes details that cannot be described. An error code is provided for each failed item. </p>",
        "DescribeAssessmentRunsResponse$failedItems": "<p>Assessment run details that cannot be described. An error code is provided for each failed item.</p>",
        "DescribeAssessmentTargetsResponse$failedItems": "<p>Assessment target details that cannot be described. An error code is provided for each failed item.</p>",
        "DescribeAssessmentTemplatesResponse$failedItems": "<p>Assessment template details that cannot be described. An error code is provided for each failed item.</p>",
        "DescribeFindingsResponse$failedItems": "<p>Finding details that cannot be described. An error code is provided for each failed item.</p>",
        "DescribeResourceGroupsResponse$failedItems": "<p>Resource group details that cannot be described. An error code is provided for each failed item.</p>",
        "DescribeRulesPackagesResponse$failedItems": "<p>Rules package details that cannot be described. An error code is provided for each failed item.</p>",
        "RemoveAttributesFromFindingsResponse$failedItems": "<p>Attributes details that cannot be described. An error code is provided for each failed item. </p>"
      }
    },
    "FilterRulesPackageArnList": {
      "base": null,
      "refs": {
        "AssessmentRunFilter$rulesPackageArns": "<p>For a record to match a filter, the value specified for this data type property must be contained in the list of values of the <b>rulesPackages</b> property of the <a>AssessmentRun</a> data type.</p>",
        "AssessmentTemplateFilter$rulesPackageArns": "<p>For a record to match a filter, the value(s) specified for this data type property must be contained in the list of values of the <b>rulesPackageArns</b> property of the <a>AssessmentTemplate</a> data type.</p>",
        "FindingFilter$rulesPackageArns": "<p>For a record to match a filter, one of the values specified for this data type property must be the exact match of the value of the <b>rulesPackageArn</b> property of the <a>Finding</a> data type.</p>"
      }
    },
    "Finding": {
      "base": "<p>Contains information about an Inspector finding. This data type is used as the response element in the <a>DescribeFindings</a> action.</p>",
      "refs": {
        "FindingList$member": null
      }
    },
    "FindingFilter": {
      "base": "<p>This data type is used as a request parameter in the <a>ListFindings</a> action.</p>",
      "refs": {
        "ListFindingsRequest$filter": "<p>You can use this parameter to specify a subset of data to be included in the action's response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>"
      }
    },
    "FindingId": {
      "base": null,
      "refs": {
        "Finding$id": "<p>The ID of the finding.</p>"
      }
    },
    "FindingList": {
      "base": null,
      "refs": {
        "DescribeFindingsResponse$findings": "<p>Information about the finding(s).</p>"
      }
    },
    "GetTelemetryMetadataRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetTelemetryMetadataResponse": {
      "base": null,
      "refs": {
      }
    },
    "Hostname": {
      "base": null,
      "refs": {
        "AssetAttributes$hostname": "<p>The hostname of the EC2 instance where the finding is generated.</p>"
      }
    },
    "InspectorEvent": {
      "base": null,
      "refs": {
        "AssessmentRunNotification$event": "<p>The event for which a notification is sent.</p>",
        "EventSubscription$event": "<p>The event for which Amazon Simple Notification Service (SNS) notifications are sent.</p>",
        "SubscribeToEventRequest$event": "<p>The event for which you want to receive SNS notifications.</p>",
        "UnsubscribeFromEventRequest$event": "<p>The event for which you want to stop receiving SNS notifications.</p>"
      }
    },
    "InspectorServiceAttributes": {
      "base": "<p>This data type is used in the <a>Finding</a> data type.</p>",
      "refs": {
        "Finding$serviceAttributes": null
      }
    },
    "InternalException": {
      "base": "<p>Internal server error.</p>",
      "refs": {
      }
    },
    "InvalidCrossAccountRoleErrorCode": {
      "base": null,
      "refs": {
        "InvalidCrossAccountRoleException$errorCode": "<p>Code that indicates the type of error that is generated.</p>"
      }
    },
    "InvalidCrossAccountRoleException": {
      "base": "<p>Inspector cannot assume the cross account role it needs to list your EC2 instances during the assessment run.</p>",
      "refs": {
      }
    },
    "InvalidInputErrorCode": {
      "base": null,
      "refs": {
        "InvalidInputException$errorCode": "<p>Code that indicates the type of error that is generated.</p>"
      }
    },
    "InvalidInputException": {
      "base": "<p>The request was rejected because an invalid or out-of-range value was supplied for an input parameter.</p>",
      "refs": {
      }
    },
    "IocConfidence": {
      "base": null,
      "refs": {
        "Finding$confidence": "<p>This data element is currently not used.</p>"
      }
    },
    "Ipv4Address": {
      "base": null,
      "refs": {
        "Ipv4AddressList$member": null
      }
    },
    "Ipv4AddressList": {
      "base": null,
      "refs": {
        "AssetAttributes$ipv4Addresses": "<p>The list of IP v4 addresses of the EC2 instance where the finding is generated.</p>"
      }
    },
    "LimitExceededErrorCode": {
      "base": null,
      "refs": {
        "LimitExceededException$errorCode": "<p>Code that indicates the type of error that is generated.</p>"
      }
    },
    "LimitExceededException": {
      "base": "<p>The request was rejected because it attempted to create resources beyond the current AWS account limits. The error code describes the limit exceeded. </p>",
      "refs": {
      }
    },
    "ListAssessmentRunAgentsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAssessmentRunAgentsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAssessmentRunsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAssessmentRunsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAssessmentTargetsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAssessmentTargetsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAssessmentTemplatesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAssessmentTemplatesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListEventSubscriptionsMaxResults": {
      "base": null,
      "refs": {
        "ListEventSubscriptionsRequest$maxResults": "<p>You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500.</p>"
      }
    },
    "ListEventSubscriptionsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListEventSubscriptionsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListFindingsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListFindingsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListMaxResults": {
      "base": null,
      "refs": {
        "ListAssessmentRunAgentsRequest$maxResults": "<p>You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500.</p>",
        "ListAssessmentRunsRequest$maxResults": "<p>You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500.</p>",
        "ListAssessmentTargetsRequest$maxResults": "<p>You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500.</p>",
        "ListAssessmentTemplatesRequest$maxResults": "<p>You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500.</p>",
        "ListFindingsRequest$maxResults": "<p>You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500.</p>",
        "ListRulesPackagesRequest$maxResults": "<p>You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500.</p>"
      }
    },
    "ListParentArnList": {
      "base": null,
      "refs": {
        "ListAssessmentRunsRequest$assessmentTemplateArns": "<p>ARN(s) specifying the assessment template(s) whose assessment run(s) you want to list.</p>",
        "ListAssessmentTemplatesRequest$assessmentTargetArns": "<p>A list of ARN(s) specifying the assessment target(s) whose assessment template(s) you want to list.</p>",
        "ListFindingsRequest$assessmentRunArns": "<p>The ARNs of the assessment run(s) that generate the findings that you want to list.</p>"
      }
    },
    "ListReturnedArnList": {
      "base": null,
      "refs": {
        "ListAssessmentRunsResponse$assessmentRunArns": "<p>A list of ARNs specifying the assessment run(s) returned by the action.</p>",
        "ListAssessmentTargetsResponse$assessmentTargetArns": "<p>A list of ARNs specifying the assessment targets returned by the action.</p>",
        "ListAssessmentTemplatesResponse$assessmentTemplateArns": "<p>A list of ARN(s) specifying the assessment template(s) returned by the action.</p>",
        "ListFindingsResponse$findingArns": "<p>A list of ARN(s) specifying the finding(s) returned by the action.</p>",
        "ListRulesPackagesResponse$rulesPackageArns": "<p>The list of ARNs specifying the rules packages returned by the action.</p>"
      }
    },
    "ListRulesPackagesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListRulesPackagesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "Locale": {
      "base": null,
      "refs": {
        "DescribeFindingsRequest$locale": "<p>The locale that you want to translate a finding description(s), recommendation(s), and the short description(s) that identify the finding(s) into.</p>",
        "DescribeRulesPackagesRequest$locale": "<p>The locale that you want to translate a rules package description(s) into.</p>"
      }
    },
    "Long": {
      "base": null,
      "refs": {
        "TelemetryMetadata$count": "<p>The count of messages that the agent sends to the Inspector service.</p>",
        "TelemetryMetadata$dataSize": "<p>The data size of messages that the agent sends to the Inspector service.</p>"
      }
    },
    "Message": {
      "base": null,
      "refs": {
        "AssessmentRunAgent$agentHealthDetails": "<p>The description for the agent health code.</p>",
        "AssessmentRunNotification$message": null
      }
    },
    "MessageType": {
      "base": null,
      "refs": {
        "TelemetryMetadata$messageType": "<p>A specific type of behavioral data that is collected by the agent.</p>"
      }
    },
    "NamePattern": {
      "base": null,
      "refs": {
        "AssessmentRunFilter$namePattern": "<p>For a record to match a filter, an explicit value or a string containing a wildcard specified for this data type property must match the value of the <b>assessmentRunName</b> property of the <a>AssessmentRun</a> data type.</p>",
        "AssessmentTargetFilter$assessmentTargetNamePattern": "<p>For a record to match a filter, an explicit value or a string containing a wildcard specified for this data type property must match the value of the <b>assessmentTargetName</b> property of the <a>AssessmentTarget</a> data type.</p>",
        "AssessmentTemplateFilter$namePattern": "<p>For a record to match a filter, an explicit value or a string containing a wildcard specified for this data type property must match the value of the <b>assessmentTemplateName</b> property of the <a>AssessmentTemplate</a> data type.</p>"
      }
    },
    "NoSuchEntityErrorCode": {
      "base": null,
      "refs": {
        "NoSuchEntityException$errorCode": "<p>Code that indicates the type of error that is generated.</p>"
      }
    },
    "NoSuchEntityException": {
      "base": "<p>The request was rejected because it referenced an entity that does not exist. The error code describes the entity. </p>",
      "refs": {
      }
    },
    "NumericSeverity": {
      "base": null,
      "refs": {
        "Finding$numericSeverity": "<p> <p>The numeric value of the finding severity.</p> </p>"
      }
    },
    "NumericVersion": {
      "base": null,
      "refs": {
        "AssetAttributes$schemaVersion": "<p>The schema version of this data type.</p>",
        "Finding$schemaVersion": "<p>The schema version of this data type.</p>",
        "InspectorServiceAttributes$schemaVersion": "<p>The schema version of this data type.</p>"
      }
    },
    "PaginationToken": {
      "base": null,
      "refs": {
        "ListAssessmentRunAgentsRequest$nextToken": "<p>You can use this parameter when paginating results. Set the value of this parameter to 'null' on your first call to the <b>ListAssessmentRunAgents</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from previous response to continue listing data.</p>",
        "ListAssessmentRunAgentsResponse$nextToken": "<p> When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to 'null'.</p>",
        "ListAssessmentRunsRequest$nextToken": "<p>You can use this parameter when paginating results. Set the value of this parameter to 'null' on your first call to the <b>ListAssessmentRuns</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from previous response to continue listing data.</p>",
        "ListAssessmentRunsResponse$nextToken": "<p> When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to 'null'.</p>",
        "ListAssessmentTargetsRequest$nextToken": "<p>You can use this parameter when paginating results. Set the value of this parameter to 'null' on your first call to the <b>ListAssessmentTargets</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from previous response to continue listing data.</p>",
        "ListAssessmentTargetsResponse$nextToken": "<p> When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to 'null'.</p>",
        "ListAssessmentTemplatesRequest$nextToken": "<p>You can use this parameter when paginating results. Set the value of this parameter to 'null' on your first call to the <b>ListAssessmentTemplates</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from previous response to continue listing data.</p>",
        "ListAssessmentTemplatesResponse$nextToken": "<p> When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to 'null'.</p>",
        "ListEventSubscriptionsRequest$nextToken": "<p>You can use this parameter when paginating results. Set the value of this parameter to 'null' on your first call to the <b>ListEventSubscriptions</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from previous response to continue listing data.</p>",
        "ListEventSubscriptionsResponse$nextToken": "<p> When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to 'null'.</p>",
        "ListFindingsRequest$nextToken": "<p>You can use this parameter when paginating results. Set the value of this parameter to 'null' on your first call to the <b>ListFindings</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from previous response to continue listing data.</p>",
        "ListFindingsResponse$nextToken": "<p> When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to 'null'.</p>",
        "ListRulesPackagesRequest$nextToken": "<p>You can use this parameter when paginating results. Set the value of this parameter to 'null' on your first call to the <b>ListRulesPackages</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from previous response to continue listing data.</p>",
        "ListRulesPackagesResponse$nextToken": "<p> When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to 'null'.</p>",
        "PreviewAgentsRequest$nextToken": "<p>You can use this parameter when paginating results. Set the value of this parameter to 'null' on your first call to the <b>PreviewAgents</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from previous response to continue listing data.</p>",
        "PreviewAgentsResponse$nextToken": "<p> When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to 'null'.</p>"
      }
    },
    "PreviewAgentsMaxResults": {
      "base": null,
      "refs": {
        "PreviewAgentsRequest$maxResults": "<p>You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500.</p>"
      }
    },
    "PreviewAgentsRequest": {
      "base": null,
      "refs": {
      }
    },
    "PreviewAgentsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ProviderName": {
      "base": null,
      "refs": {
        "RulesPackage$provider": "<p>The provider of the rules package.</p>"
      }
    },
    "RegisterCrossAccountAccessRoleRequest": {
      "base": null,
      "refs": {
      }
    },
    "RemoveAttributesFromFindingsRequest": {
      "base": null,
      "refs": {
      }
    },
    "RemoveAttributesFromFindingsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ResourceGroup": {
      "base": "<p>Contains information about a resource group. The resource group defines a set of tags that, when queried, identify the AWS resources that comprise the assessment target. This data type is used as the response element in the <a>DescribeResourceGroups</a> action.</p>",
      "refs": {
        "ResourceGroupList$member": null
      }
    },
    "ResourceGroupList": {
      "base": null,
      "refs": {
        "DescribeResourceGroupsResponse$resourceGroups": "<p>Information about the resource group(s).</p>"
      }
    },
    "ResourceGroupTag": {
      "base": "<p>This data type is used as one of the elements of the <a>ResourceGroup</a> data type.</p>",
      "refs": {
        "ResourceGroupTags$member": null
      }
    },
    "ResourceGroupTags": {
      "base": null,
      "refs": {
        "CreateResourceGroupRequest$resourceGroupTags": "<p>A collection of keys and an array of possible values, '[{\"key\":\"key1\",\"values\":[\"Value1\",\"Value2\"]},{\"key\":\"Key2\",\"values\":[\"Value3\"]}]'.</p> <p>For example,'[{\"key\":\"Name\",\"values\":[\"TestEC2Instance\"]}]'. </p>",
        "ResourceGroup$tags": "<p>The tags (key and value pairs) of the resource group. This data type property is used in the <a>CreateResourceGroup</a> action.</p>"
      }
    },
    "RuleName": {
      "base": null,
      "refs": {
        "RuleNameList$member": null
      }
    },
    "RuleNameList": {
      "base": null,
      "refs": {
        "FindingFilter$ruleNames": "<p>For a record to match a filter, one of the values specified for this data type property must be the exact match of the value of the <b>ruleName</b> property of the <a>Finding</a> data type.</p>"
      }
    },
    "RulesPackage": {
      "base": "<p>Contains information about an Inspector rules package. This data type is used as the response element in the <a>DescribeRulesPackages</a> action.</p>",
      "refs": {
        "RulesPackageList$member": null
      }
    },
    "RulesPackageList": {
      "base": null,
      "refs": {
        "DescribeRulesPackagesResponse$rulesPackages": "<p>Information about the rules package(s).</p>"
      }
    },
    "RulesPackageName": {
      "base": null,
      "refs": {
        "RulesPackage$name": "<p>The name of the rules package.</p>"
      }
    },
    "ServiceName": {
      "base": null,
      "refs": {
        "Finding$service": "<p>The data element is set to \"Inspector\".</p>"
      }
    },
    "SetTagsForResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "Severity": {
      "base": null,
      "refs": {
        "Finding$severity": "<p>The finding severity. Values can be set to High, Medium, Low, and Informational.</p>",
        "SeverityList$member": null
      }
    },
    "SeverityList": {
      "base": null,
      "refs": {
        "FindingFilter$severities": "<p>For a record to match a filter, one of the values specified for this data type property must be the exact match of the value of the <b>severity</b> property of the <a>Finding</a> data type.</p>"
      }
    },
    "StartAssessmentRunRequest": {
      "base": null,
      "refs": {
      }
    },
    "StartAssessmentRunResponse": {
      "base": null,
      "refs": {
      }
    },
    "StopAssessmentRunRequest": {
      "base": null,
      "refs": {
      }
    },
    "SubscribeToEventRequest": {
      "base": null,
      "refs": {
      }
    },
    "Subscription": {
      "base": "<p>This data type is used as a response element in the <a>ListEventSubscriptions</a> action.</p>",
      "refs": {
        "SubscriptionList$member": null
      }
    },
    "SubscriptionList": {
      "base": null,
      "refs": {
        "ListEventSubscriptionsResponse$subscriptions": "<p>Details of the returned event subscriptions.</p>"
      }
    },
    "Tag": {
      "base": "<p>A key and value pair. This data type is used as a request parameter in the <a>SetTagsForResource</a> action and a response element in the <a>ListTagsForResource</a> action.</p>",
      "refs": {
        "TagList$member": null
      }
    },
    "TagKey": {
      "base": null,
      "refs": {
        "ResourceGroupTag$key": "<p>A tag key.</p>",
        "Tag$key": "<p>A tag key.</p>"
      }
    },
    "TagList": {
      "base": null,
      "refs": {
        "ListTagsForResourceResponse$tags": "<p>A collection of key and value pairs.</p>",
        "SetTagsForResourceRequest$tags": "<p>A collection of key and value pairs that you want to set to the assessment template.</p>"
      }
    },
    "TagValue": {
      "base": null,
      "refs": {
        "ResourceGroupTag$value": "<p>The value assigned to a tag key.</p>",
        "Tag$value": "<p>A value assigned to a tag key.</p>"
      }
    },
    "TelemetryMetadata": {
      "base": "<p>The metadata about the Inspector application data metrics collected by the agent. This data type is used as the response element in the <a>GetTelemetryMetadata</a> action.</p>",
      "refs": {
        "TelemetryMetadataList$member": null
      }
    },
    "TelemetryMetadataList": {
      "base": null,
      "refs": {
        "AssessmentRunAgent$telemetryMetadata": "<p>The Inspector application data metrics collected by the agent. </p>",
        "GetTelemetryMetadataResponse$telemetryMetadata": "<p>Telemetry details.</p>"
      }
    },
    "Text": {
      "base": null,
      "refs": {
        "Finding$title": "<p>The name of the finding.</p>",
        "Finding$description": "<p>The description of the finding.</p>",
        "Finding$recommendation": "<p>The recommendation for the finding. </p>",
        "RulesPackage$description": "<p>The description of the rules package.</p>"
      }
    },
    "Timestamp": {
      "base": null,
      "refs": {
        "AssessmentRun$createdAt": "<p>The time when <a>StartAssessmentRun</a> API was called.</p>",
        "AssessmentRun$startedAt": "<p>The time when <a>StartAssessmentRun</a> API was called.</p>",
        "AssessmentRun$completedAt": "<p>Assessment run completion time that corresponds to the rules packages evaluation completion time or failure.</p>",
        "AssessmentRun$stateChangedAt": "<p>The last time when the assessment run's state changed.</p>",
        "AssessmentRunNotification$date": "<p>The date of the notification.</p>",
        "AssessmentRunStateChange$stateChangedAt": "<p>The last time the assessment run state changed.</p>",
        "AssessmentTarget$createdAt": "<p>The time at which the assessment target is created.</p>",
        "AssessmentTarget$updatedAt": "<p>The time at which <a>UpdateAssessmentTarget</a> API is called.</p>",
        "AssessmentTemplate$createdAt": "<p>The time at which the assessment template is created.</p>",
        "DescribeCrossAccountAccessRoleResponse$registeredAt": "<p>The date when the cross account access role was registered.</p>",
        "EventSubscription$subscribedAt": "<p>The time at which the <a>SubscribeToEvent</a> API is called.</p>",
        "Finding$createdAt": "<p>The time when the finding was generated.</p>",
        "Finding$updatedAt": "<p>The time when <a>AddAttributesToFindings</a> API is called.</p>",
        "ResourceGroup$createdAt": "<p>The time at which resource group is created.</p>",
        "TimestampRange$beginDate": "<p>The minimum value of the timestamp range.</p>",
        "TimestampRange$endDate": "<p>The maximum value of the timestamp range.</p>"
      }
    },
    "TimestampRange": {
      "base": "<p>This data type is used in the <a>AssessmentRunFilter</a> data type.</p>",
      "refs": {
        "AssessmentRunFilter$startTimeRange": "<p>For a record to match a filter, the value specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>startTime</b> property of the <a>AssessmentRun</a> data type.</p>",
        "AssessmentRunFilter$completionTimeRange": "<p>For a record to match a filter, the value specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>completedAt</b> property of the <a>AssessmentRun</a> data type.</p>",
        "AssessmentRunFilter$stateChangeTimeRange": "<p>For a record to match a filter, the value specified for this data type property must match the <b>stateChangedAt</b> property of the <a>AssessmentRun</a> data type.</p>",
        "FindingFilter$creationTimeRange": "<p>The time range during which the finding is generated.</p>"
      }
    },
    "UnsubscribeFromEventRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAssessmentTargetRequest": {
      "base": null,
      "refs": {
      }
    },
    "UserAttributeKeyList": {
      "base": null,
      "refs": {
        "RemoveAttributesFromFindingsRequest$attributeKeys": "<p>The array of attribute keys that you want to remove from specified findings.</p>"
      }
    },
    "UserAttributeList": {
      "base": null,
      "refs": {
        "AddAttributesToFindingsRequest$attributes": "<p>The array of attributes that you want to assign to specified findings.</p>",
        "AssessmentRun$userAttributesForFindings": "<p>The user-defined attributes that are assigned to every generated finding.</p>",
        "AssessmentTemplate$userAttributesForFindings": "<p>The user-defined attributes that are assigned to every generated finding from the assessment run that uses this assessment template.</p>",
        "CreateAssessmentTemplateRequest$userAttributesForFindings": "<p>The user-defined attributes that are assigned to every finding generated by the assessment run that uses this assessment template.</p>",
        "Finding$userAttributes": "<p>The user-defined attributes that are assigned to the finding.</p>"
      }
    },
    "Version": {
      "base": null,
      "refs": {
        "RulesPackage$version": "<p>The version id of the rules package.</p>"
      }
    }
  }
}
