{
  "version": "2.0",
  "service": "<p>The Amazon Braket API Reference provides information about the operations and structures supported in Amazon Braket.</p> <p>Additional Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/braket/latest/developerguide/what-is-braket.html\">Amazon Braket Developer Guide</a> </p> </li> </ul>",
  "operations": {
    "CancelJob": "<p>Cancels an Amazon Braket job.</p>",
    "CancelQuantumTask": "<p>Cancels the specified task.</p>",
    "CreateJob": "<p>Creates an Amazon Braket job.</p>",
    "CreateQuantumTask": "<p>Creates a quantum task.</p>",
    "GetDevice": "<p>Retrieves the devices available in Amazon Braket.</p> <note> <p>For backwards compatibility with older versions of BraketSchemas, OpenQASM information is omitted from GetDevice API calls. To get this information the user-agent needs to present a recent version of the BraketSchemas (1.8.0 or later). The Braket SDK automatically reports this for you. If you do not see OpenQASM results in the GetDevice response when using a Braket SDK, you may need to set AWS_EXECUTION_ENV environment variable to configure user-agent. See the code examples provided below for how to do this for the AWS CLI, Boto3, and the Go, Java, and JavaScript/TypeScript SDKs.</p> </note>",
    "GetJob": "<p>Retrieves the specified Amazon Braket job.</p>",
    "GetQuantumTask": "<p>Retrieves the specified quantum task.</p>",
    "ListTagsForResource": "<p>Shows the tags associated with this resource.</p>",
    "SearchDevices": "<p>Searches for devices using the specified filters.</p>",
    "SearchJobs": "<p>Searches for Amazon Braket jobs that match the specified filter values.</p>",
    "SearchQuantumTasks": "<p>Searches for tasks that match the specified filter values.</p>",
    "TagResource": "<p>Add a tag to the specified resource.</p>",
    "UntagResource": "<p>Remove tags from a resource.</p>"
  },
  "shapes": {
    "AccessDeniedException": {
      "base": "<p>You do not have sufficient access to perform this action.</p>",
      "refs": {
      }
    },
    "AlgorithmSpecification": {
      "base": "<p>Defines the Amazon Braket job to be created. Specifies the container image the job uses and the paths to the Python scripts used for entry and training.</p>",
      "refs": {
        "CreateJobRequest$algorithmSpecification": "<p>Definition of the Amazon Braket job to be created. Specifies the container image the job uses and information about the Python scripts used for entry and training.</p>",
        "GetJobResponse$algorithmSpecification": "<p>Definition of the Amazon Braket job created. Specifies the container image the job uses, information about the Python scripts used for entry and training, and the user-defined metrics used to evaluation the job.</p>"
      }
    },
    "CancelJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "CancelJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "CancelQuantumTaskRequest": {
      "base": null,
      "refs": {
      }
    },
    "CancelQuantumTaskResponse": {
      "base": null,
      "refs": {
      }
    },
    "CancellationStatus": {
      "base": null,
      "refs": {
        "CancelJobResponse$cancellationStatus": "<p>The status of the job cancellation request.</p>",
        "CancelQuantumTaskResponse$cancellationStatus": "<p>The status of the cancellation request.</p>"
      }
    },
    "CompressionType": {
      "base": null,
      "refs": {
        "ScriptModeConfig$compressionType": "<p>The type of compression used by the Python scripts for an Amazon Braket job.</p>"
      }
    },
    "ConflictException": {
      "base": "<p>An error occurred due to a conflict.</p>",
      "refs": {
      }
    },
    "ContainerImage": {
      "base": "<p>The container image used to create an Amazon Braket job.</p>",
      "refs": {
        "AlgorithmSpecification$containerImage": "<p>The container image used to create an Amazon Braket job.</p>"
      }
    },
    "CreateJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateJobRequestInputDataConfigList": {
      "base": null,
      "refs": {
        "CreateJobRequest$inputDataConfig": "<p>A list of parameters that specify the name and type of input data and where it is located.</p>"
      }
    },
    "CreateJobRequestJobNameString": {
      "base": null,
      "refs": {
        "CreateJobRequest$jobName": "<p>The name of the Amazon Braket job.</p>"
      }
    },
    "CreateJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateQuantumTaskRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateQuantumTaskRequestDeviceParametersString": {
      "base": null,
      "refs": {
        "CreateQuantumTaskRequest$deviceParameters": "<p>The parameters for the device to run the task on.</p>"
      }
    },
    "CreateQuantumTaskRequestOutputS3BucketString": {
      "base": null,
      "refs": {
        "CreateQuantumTaskRequest$outputS3Bucket": "<p>The S3 bucket to store task result files in.</p>"
      }
    },
    "CreateQuantumTaskRequestOutputS3KeyPrefixString": {
      "base": null,
      "refs": {
        "CreateQuantumTaskRequest$outputS3KeyPrefix": "<p>The key prefix for the location in the S3 bucket to store task results in.</p>"
      }
    },
    "CreateQuantumTaskRequestShotsLong": {
      "base": null,
      "refs": {
        "CreateQuantumTaskRequest$shots": "<p>The number of shots to use for the task.</p>"
      }
    },
    "CreateQuantumTaskResponse": {
      "base": null,
      "refs": {
      }
    },
    "DataSource": {
      "base": "<p>Information about the source of the data used by the Amazon Braket job.</p>",
      "refs": {
        "InputFileConfig$dataSource": "<p>The location of the channel data.</p>"
      }
    },
    "DeviceArn": {
      "base": null,
      "refs": {
        "CreateQuantumTaskRequest$deviceArn": "<p>The ARN of the device to run the task on.</p>",
        "DeviceSummary$deviceArn": "<p>The ARN of the device.</p>",
        "GetDeviceRequest$deviceArn": "<p>The ARN of the device to retrieve.</p>",
        "GetDeviceResponse$deviceArn": "<p>The ARN of the device.</p>",
        "GetQuantumTaskResponse$deviceArn": "<p>The ARN of the device the task was run on.</p>",
        "QuantumTaskSummary$deviceArn": "<p>The ARN of the device the task ran on.</p>"
      }
    },
    "DeviceConfig": {
      "base": "<p>Configures the quantum processing units (QPUs) or simulator used to create and run an Amazon Braket job.</p>",
      "refs": {
        "CreateJobRequest$deviceConfig": "<p>The quantum processing unit (QPU) or simulator used to create an Amazon Braket job.</p>",
        "GetJobResponse$deviceConfig": "<p>The quantum processing unit (QPU) or simulator used to run the Amazon Braket job.</p>"
      }
    },
    "DeviceOfflineException": {
      "base": "<p>The specified device is currently offline.</p>",
      "refs": {
      }
    },
    "DeviceRetiredException": {
      "base": "<p>The specified device has been retired.</p>",
      "refs": {
      }
    },
    "DeviceStatus": {
      "base": null,
      "refs": {
        "DeviceSummary$deviceStatus": "<p>The status of the device.</p>",
        "GetDeviceResponse$deviceStatus": "<p>The status of the device.</p>"
      }
    },
    "DeviceSummary": {
      "base": "<p>Includes information about the device.</p>",
      "refs": {
        "DeviceSummaryList$member": null
      }
    },
    "DeviceSummaryList": {
      "base": null,
      "refs": {
        "SearchDevicesResponse$devices": "<p>An array of <code>DeviceSummary</code> objects for devices that match the specified filter values.</p>"
      }
    },
    "DeviceType": {
      "base": null,
      "refs": {
        "DeviceSummary$deviceType": "<p>The type of the device.</p>",
        "GetDeviceResponse$deviceType": "<p>The type of the device.</p>"
      }
    },
    "GetDeviceRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetDeviceResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetJobResponseJobNameString": {
      "base": null,
      "refs": {
        "GetJobResponse$jobName": "<p>The name of the Amazon Braket job.</p>"
      }
    },
    "GetQuantumTaskRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetQuantumTaskResponse": {
      "base": null,
      "refs": {
      }
    },
    "HyperParameters": {
      "base": null,
      "refs": {
        "CreateJobRequest$hyperParameters": "<p>Algorithm-specific parameters used by an Amazon Braket job that influence the quality of the training job. The values are set with a string of JSON key:value pairs, where the key is the name of the hyperparameter and the value is the value of th hyperparameter.</p>",
        "GetJobResponse$hyperParameters": "<p>Algorithm-specific parameters used by an Amazon Braket job that influence the quality of the traiing job. The values are set with a string of JSON key:value pairs, where the key is the name of the hyperparameter and the value is the value of th hyperparameter.</p>"
      }
    },
    "HyperParametersValueString": {
      "base": null,
      "refs": {
        "HyperParameters$value": null
      }
    },
    "InputConfigList": {
      "base": null,
      "refs": {
        "GetJobResponse$inputDataConfig": "<p>A list of parameters that specify the name and type of input data and where it is located.</p>"
      }
    },
    "InputFileConfig": {
      "base": "<p>A list of parameters that specify the input channels, type of input data, and where it is located.</p>",
      "refs": {
        "CreateJobRequestInputDataConfigList$member": null,
        "InputConfigList$member": null
      }
    },
    "InputFileConfigChannelNameString": {
      "base": null,
      "refs": {
        "InputFileConfig$channelName": "<p>A named input source that an Amazon Braket job can consume.</p>"
      }
    },
    "InstanceConfig": {
      "base": "<p>Configures the resource instances to use while running the Amazon Braket hybrid job on Amazon Braket.</p>",
      "refs": {
        "CreateJobRequest$instanceConfig": "<p>Configuration of the resource instances to use while running the hybrid job on Amazon Braket.</p>",
        "GetJobResponse$instanceConfig": "<p>The resource instances to use while running the hybrid job on Amazon Braket.</p>"
      }
    },
    "InstanceConfigInstanceCountInteger": {
      "base": null,
      "refs": {
        "InstanceConfig$instanceCount": "<p>Configures the number of resource instances to use while running an Amazon Braket job on Amazon Braket. The default value is 1.</p>"
      }
    },
    "InstanceConfigVolumeSizeInGbInteger": {
      "base": null,
      "refs": {
        "InstanceConfig$volumeSizeInGb": "<p>The size of the storage volume, in GB, that user wants to provision.</p>"
      }
    },
    "InstanceType": {
      "base": null,
      "refs": {
        "InstanceConfig$instanceType": "<p>Configures the type resource instances to use while running an Amazon Braket hybrid job.</p>"
      }
    },
    "Integer": {
      "base": null,
      "refs": {
        "GetJobResponse$billableDuration": "<p>The billable time the Amazon Braket job used to complete.</p>"
      }
    },
    "InternalServiceException": {
      "base": "<p>The request processing has failed because of an unknown error, exception, or failure.</p>",
      "refs": {
      }
    },
    "JobArn": {
      "base": null,
      "refs": {
        "CancelJobRequest$jobArn": "<p>The ARN of the Amazon Braket job to cancel.</p>",
        "CancelJobResponse$jobArn": "<p>The ARN of the Amazon Braket job.</p>",
        "CreateJobResponse$jobArn": "<p>The ARN of the Amazon Braket job created.</p>",
        "GetJobRequest$jobArn": "<p>The ARN of the job to retrieve.</p>",
        "GetJobResponse$jobArn": "<p>The ARN of the Amazon Braket job.</p>",
        "GetQuantumTaskResponse$jobArn": "<p>The ARN of the Amazon Braket job associated with the quantum task.</p>",
        "JobSummary$jobArn": "<p>The ARN of the Amazon Braket job.</p>"
      }
    },
    "JobCheckpointConfig": {
      "base": "<p>Contains information about the output locations for job checkpoint data.</p>",
      "refs": {
        "CreateJobRequest$checkpointConfig": "<p>Information about the output locations for job checkpoint data.</p>",
        "GetJobResponse$checkpointConfig": "<p>Information about the output locations for job checkpoint data.</p>"
      }
    },
    "JobEventDetails": {
      "base": "<p>Details about the type and time events occurred related to the Amazon Braket job.</p>",
      "refs": {
        "JobEvents$member": null
      }
    },
    "JobEventDetailsMessageString": {
      "base": null,
      "refs": {
        "JobEventDetails$message": "<p>A message describing the event that occurred related to the Amazon Braket job.</p>"
      }
    },
    "JobEventType": {
      "base": null,
      "refs": {
        "JobEventDetails$eventType": "<p>The type of event that occurred related to the Amazon Braket job.</p>"
      }
    },
    "JobEvents": {
      "base": null,
      "refs": {
        "GetJobResponse$events": "<p>Details about the type and time events occurred related to the Amazon Braket job.</p>"
      }
    },
    "JobOutputDataConfig": {
      "base": "<p>Specifies the path to the S3 location where you want to store job artifacts and the encryption key used to store them.</p>",
      "refs": {
        "CreateJobRequest$outputDataConfig": "<p>The path to the S3 location where you want to store job artifacts and the encryption key used to store them.</p>",
        "GetJobResponse$outputDataConfig": "<p>The path to the S3 location where job artifacts are stored and the encryption key used to store them there.</p>"
      }
    },
    "JobPrimaryStatus": {
      "base": null,
      "refs": {
        "GetJobResponse$status": "<p>The status of the Amazon Braket job.</p>",
        "JobSummary$status": "<p>The status of the Amazon Braket job.</p>"
      }
    },
    "JobStoppingCondition": {
      "base": "<p>Specifies limits for how long an Amazon Braket job can run. </p>",
      "refs": {
        "CreateJobRequest$stoppingCondition": "<p> The user-defined criteria that specifies when a job stops running.</p>",
        "GetJobResponse$stoppingCondition": "<p>The user-defined criteria that specifies when to stop a job running.</p>"
      }
    },
    "JobStoppingConditionMaxRuntimeInSecondsInteger": {
      "base": null,
      "refs": {
        "JobStoppingCondition$maxRuntimeInSeconds": "<p>The maximum length of time, in seconds, that an Amazon Braket job can run.</p>"
      }
    },
    "JobSummary": {
      "base": "<p>Provides summary information about an Amazon Braket job.</p>",
      "refs": {
        "JobSummaryList$member": null
      }
    },
    "JobSummaryList": {
      "base": null,
      "refs": {
        "SearchJobsResponse$jobs": "<p>An array of <code>JobSummary</code> objects for devices that match the specified filter values.</p>"
      }
    },
    "JobToken": {
      "base": null,
      "refs": {
        "CreateQuantumTaskRequest$jobToken": "<p>The token for an Amazon Braket job that associates it with the quantum task.</p>"
      }
    },
    "JsonValue": {
      "base": null,
      "refs": {
        "CreateQuantumTaskRequest$action": "<p>The action associated with the task.</p>",
        "GetDeviceResponse$deviceCapabilities": "<p>Details about the capabilities of the device.</p>",
        "GetQuantumTaskResponse$deviceParameters": "<p>The parameters for the device on which the task ran.</p>"
      }
    },
    "ListTagsForResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "Long": {
      "base": null,
      "refs": {
        "GetQuantumTaskResponse$shots": "<p>The number of shots used in the task.</p>",
        "QuantumTaskSummary$shots": "<p>The shots used for the task.</p>"
      }
    },
    "QuantumTaskArn": {
      "base": null,
      "refs": {
        "CancelQuantumTaskRequest$quantumTaskArn": "<p>The ARN of the task to cancel.</p>",
        "CancelQuantumTaskResponse$quantumTaskArn": "<p>The ARN of the task.</p>",
        "CreateQuantumTaskResponse$quantumTaskArn": "<p>The ARN of the task created by the request.</p>",
        "GetQuantumTaskRequest$quantumTaskArn": "<p>the ARN of the task to retrieve.</p>",
        "GetQuantumTaskResponse$quantumTaskArn": "<p>The ARN of the task.</p>",
        "QuantumTaskSummary$quantumTaskArn": "<p>The ARN of the task.</p>"
      }
    },
    "QuantumTaskStatus": {
      "base": null,
      "refs": {
        "GetQuantumTaskResponse$status": "<p>The status of the task.</p>",
        "QuantumTaskSummary$status": "<p>The status of the task.</p>"
      }
    },
    "QuantumTaskSummary": {
      "base": "<p>Includes information about a quantum task.</p>",
      "refs": {
        "QuantumTaskSummaryList$member": null
      }
    },
    "QuantumTaskSummaryList": {
      "base": null,
      "refs": {
        "SearchQuantumTasksResponse$quantumTasks": "<p>An array of <code>QuantumTaskSummary</code> objects for tasks that match the specified filters.</p>"
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>The specified resource was not found.</p>",
      "refs": {
      }
    },
    "RoleArn": {
      "base": null,
      "refs": {
        "CreateJobRequest$roleArn": "<p>The Amazon Resource Name (ARN) of an IAM role that Amazon Braket can assume to perform tasks on behalf of a user. It can access user resources, run an Amazon Braket job container on behalf of user, and output resources to the users' s3 buckets.</p>",
        "GetJobResponse$roleArn": "<p>The Amazon Resource Name (ARN) of an IAM role that Amazon Braket can assume to perform tasks on behalf of a user. It can access user resources, run an Amazon Braket job container on behalf of user, and output resources to the s3 buckets of a user.</p>"
      }
    },
    "S3DataSource": {
      "base": "<p>Information about the data stored in Amazon S3 used by the Amazon Braket job.</p>",
      "refs": {
        "DataSource$s3DataSource": "<p>Information about the data stored in Amazon S3 used by the Amazon Braket job.</p>"
      }
    },
    "S3Path": {
      "base": null,
      "refs": {
        "JobCheckpointConfig$s3Uri": "<p>Identifies the S3 path where you want Amazon Braket to store checkpoints. For example, <code>s3://bucket-name/key-name-prefix</code>.</p>",
        "JobOutputDataConfig$s3Path": "<p>Identifies the S3 path where you want Amazon Braket to store the job training artifacts. For example, <code>s3://bucket-name/key-name-prefix</code>.</p>",
        "S3DataSource$s3Uri": "<p>Depending on the value specified for the <code>S3DataType</code>, identifies either a key name prefix or a manifest that locates the S3 data source.</p>",
        "ScriptModeConfig$s3Uri": "<p>The URI that specifies the S3 path to the Python script module that contains the training script used by an Amazon Braket job.</p>"
      }
    },
    "ScriptModeConfig": {
      "base": "<p>Contains information about the Python scripts used for entry and by an Amazon Braket job.</p>",
      "refs": {
        "AlgorithmSpecification$scriptModeConfig": "<p>Configures the paths to the Python scripts used for entry and training.</p>"
      }
    },
    "SearchDevicesFilter": {
      "base": "<p>The filter to use for searching devices.</p>",
      "refs": {
        "SearchDevicesRequestFiltersList$member": null
      }
    },
    "SearchDevicesFilterNameString": {
      "base": null,
      "refs": {
        "SearchDevicesFilter$name": "<p>The name to use to filter results.</p>"
      }
    },
    "SearchDevicesFilterValuesList": {
      "base": null,
      "refs": {
        "SearchDevicesFilter$values": "<p>The values to use to filter results.</p>"
      }
    },
    "SearchDevicesRequest": {
      "base": null,
      "refs": {
      }
    },
    "SearchDevicesRequestFiltersList": {
      "base": null,
      "refs": {
        "SearchDevicesRequest$filters": "<p>The filter values to use to search for a device.</p>"
      }
    },
    "SearchDevicesRequestMaxResultsInteger": {
      "base": null,
      "refs": {
        "SearchDevicesRequest$maxResults": "<p>The maximum number of results to return in the response.</p>"
      }
    },
    "SearchDevicesResponse": {
      "base": null,
      "refs": {
      }
    },
    "SearchJobsFilter": {
      "base": "<p>A filter used to search for Amazon Braket jobs.</p>",
      "refs": {
        "SearchJobsRequestFiltersList$member": null
      }
    },
    "SearchJobsFilterOperator": {
      "base": null,
      "refs": {
        "SearchJobsFilter$operator": "<p>An operator to use for the jobs filter.</p>"
      }
    },
    "SearchJobsFilterValuesList": {
      "base": null,
      "refs": {
        "SearchJobsFilter$values": "<p>The values to use for the jobs filter.</p>"
      }
    },
    "SearchJobsRequest": {
      "base": null,
      "refs": {
      }
    },
    "SearchJobsRequestFiltersList": {
      "base": null,
      "refs": {
        "SearchJobsRequest$filters": "<p>The filter values to use when searching for a job.</p>"
      }
    },
    "SearchJobsRequestMaxResultsInteger": {
      "base": null,
      "refs": {
        "SearchJobsRequest$maxResults": "<p>The maximum number of results to return in the response.</p>"
      }
    },
    "SearchJobsResponse": {
      "base": null,
      "refs": {
      }
    },
    "SearchQuantumTasksFilter": {
      "base": "<p>A filter to use to search for tasks.</p>",
      "refs": {
        "SearchQuantumTasksRequestFiltersList$member": null
      }
    },
    "SearchQuantumTasksFilterOperator": {
      "base": null,
      "refs": {
        "SearchQuantumTasksFilter$operator": "<p>An operator to use in the filter.</p>"
      }
    },
    "SearchQuantumTasksFilterValuesList": {
      "base": null,
      "refs": {
        "SearchQuantumTasksFilter$values": "<p>The values to use for the filter.</p>"
      }
    },
    "SearchQuantumTasksRequest": {
      "base": null,
      "refs": {
      }
    },
    "SearchQuantumTasksRequestFiltersList": {
      "base": null,
      "refs": {
        "SearchQuantumTasksRequest$filters": "<p>Array of <code>SearchQuantumTasksFilter</code> objects.</p>"
      }
    },
    "SearchQuantumTasksRequestMaxResultsInteger": {
      "base": null,
      "refs": {
        "SearchQuantumTasksRequest$maxResults": "<p>Maximum number of results to return in the response.</p>"
      }
    },
    "SearchQuantumTasksResponse": {
      "base": null,
      "refs": {
      }
    },
    "ServiceQuotaExceededException": {
      "base": "<p>The request failed because a service quota is exceeded.</p>",
      "refs": {
      }
    },
    "String": {
      "base": null,
      "refs": {
        "AccessDeniedException$message": null,
        "ConflictException$message": null,
        "DeviceOfflineException$message": null,
        "DeviceRetiredException$message": null,
        "DeviceSummary$deviceName": "<p>The name of the device.</p>",
        "DeviceSummary$providerName": "<p>The provider of the device.</p>",
        "GetDeviceResponse$deviceName": "<p>The name of the device.</p>",
        "GetDeviceResponse$providerName": "<p>The name of the partner company for the device.</p>",
        "GetQuantumTaskResponse$failureReason": "<p>The reason that a task failed.</p>",
        "GetQuantumTaskResponse$outputS3Bucket": "<p>The S3 bucket where task results are stored.</p>",
        "GetQuantumTaskResponse$outputS3Directory": "<p>The folder in the S3 bucket where task results are stored.</p>",
        "InternalServiceException$message": null,
        "JobSummary$jobName": "<p>The name of the Amazon Braket job.</p>",
        "ListTagsForResourceRequest$resourceArn": "<p>Specify the <code>resourceArn</code> for the resource whose tags to display.</p>",
        "QuantumTaskSummary$outputS3Bucket": "<p>The S3 bucket where the task result file is stored..</p>",
        "QuantumTaskSummary$outputS3Directory": "<p>The folder in the S3 bucket where the task result file is stored.</p>",
        "ResourceNotFoundException$message": null,
        "ScriptModeConfig$entryPoint": "<p>The path to the Python script that serves as the entry point for an Amazon Braket job.</p>",
        "SearchDevicesRequest$nextToken": "<p>A token used for pagination of results returned in the response. Use the token returned from the previous request continue results where the previous request ended.</p>",
        "SearchDevicesResponse$nextToken": "<p>A token used for pagination of results, or null if there are no additional results. Use the token value in a subsequent request to continue results where the previous request ended.</p>",
        "SearchJobsRequest$nextToken": "<p>A token used for pagination of results returned in the response. Use the token returned from the previous request to continue results where the previous request ended.</p>",
        "SearchJobsResponse$nextToken": "<p>A token used for pagination of results, or <code>null</code> if there are no additional results. Use the token value in a subsequent request to continue results where the previous request ended.</p>",
        "SearchQuantumTasksRequest$nextToken": "<p>A token used for pagination of results returned in the response. Use the token returned from the previous request continue results where the previous request ended.</p>",
        "SearchQuantumTasksResponse$nextToken": "<p>A token used for pagination of results, or null if there are no additional results. Use the token value in a subsequent request to continue results where the previous request ended.</p>",
        "ServiceQuotaExceededException$message": null,
        "TagKeys$member": null,
        "TagResourceRequest$resourceArn": "<p>Specify the <code>resourceArn</code> of the resource to which a tag will be added.</p>",
        "TagsMap$key": null,
        "TagsMap$value": null,
        "ThrottlingException$message": null,
        "UntagResourceRequest$resourceArn": "<p>Specify the <code>resourceArn</code> for the resource from which to remove the tags.</p>",
        "ValidationException$message": null
      }
    },
    "String1024": {
      "base": null,
      "refs": {
        "GetJobResponse$failureReason": "<p>A description of the reason why an Amazon Braket job failed, if it failed.</p>"
      }
    },
    "String2048": {
      "base": null,
      "refs": {
        "JobOutputDataConfig$kmsKeyId": "<p>The AWS Key Management Service (AWS KMS) key that Amazon Braket uses to encrypt the job training artifacts at rest using Amazon S3 server-side encryption.</p>"
      }
    },
    "String256": {
      "base": null,
      "refs": {
        "DeviceConfig$device": "<p>The primary quantum processing unit (QPU) or simulator used to create and run an Amazon Braket job.</p>",
        "HyperParameters$key": null,
        "InputFileConfig$contentType": "<p>The MIME type of the data.</p>",
        "JobSummary$device": "<p>Provides summary information about the primary device used by an Amazon Braket job.</p>",
        "SearchDevicesFilterValuesList$member": null,
        "SearchJobsFilterValuesList$member": null,
        "SearchQuantumTasksFilterValuesList$member": null
      }
    },
    "String4096": {
      "base": null,
      "refs": {
        "JobCheckpointConfig$localPath": "<p>(Optional) The local directory where checkpoints are written. The default directory is <code>/opt/braket/checkpoints/</code>.</p>"
      }
    },
    "String64": {
      "base": null,
      "refs": {
        "CancelQuantumTaskRequest$clientToken": "<p>The client token associated with the request.</p>",
        "CreateJobRequest$clientToken": "<p>A unique token that guarantees that the call to this API is idempotent.</p>",
        "CreateQuantumTaskRequest$clientToken": "<p>The client token associated with the request.</p>",
        "SearchJobsFilter$name": "<p>The name to use for the jobs filter.</p>",
        "SearchQuantumTasksFilter$name": "<p>The name of the device used for the task.</p>"
      }
    },
    "SyntheticTimestamp_date_time": {
      "base": null,
      "refs": {
        "GetJobResponse$createdAt": "<p>The date and time that the Amazon Braket job was created.</p>",
        "GetJobResponse$endedAt": "<p>The date and time that the Amazon Braket job ended.</p>",
        "GetJobResponse$startedAt": "<p>The date and time that the Amazon Braket job was started.</p>",
        "GetQuantumTaskResponse$createdAt": "<p>The time at which the task was created.</p>",
        "GetQuantumTaskResponse$endedAt": "<p>The time at which the task ended.</p>",
        "JobEventDetails$timeOfEvent": "<p>TThe type of event that occurred related to the Amazon Braket job.</p>",
        "JobSummary$createdAt": "<p>The date and time that the Amazon Braket job was created.</p>",
        "JobSummary$endedAt": "<p>The date and time that the Amazon Braket job ended.</p>",
        "JobSummary$startedAt": "<p>The date and time that the Amazon Braket job was started.</p>",
        "QuantumTaskSummary$createdAt": "<p>The time at which the task was created.</p>",
        "QuantumTaskSummary$endedAt": "<p>The time at which the task finished.</p>"
      }
    },
    "TagKeys": {
      "base": null,
      "refs": {
        "UntagResourceRequest$tagKeys": "<p>Specify the keys for the tags to remove from the resource.</p>"
      }
    },
    "TagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "TagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "TagsMap": {
      "base": null,
      "refs": {
        "CreateJobRequest$tags": "<p>A tag object that consists of a key and an optional value, used to manage metadata for Amazon Braket resources.</p>",
        "CreateQuantumTaskRequest$tags": "<p>Tags to be added to the quantum task you're creating.</p>",
        "GetJobResponse$tags": "<p>A tag object that consists of a key and an optional value, used to manage metadata for Amazon Braket resources.</p>",
        "GetQuantumTaskResponse$tags": "<p>The tags that belong to this task.</p>",
        "JobSummary$tags": "<p>A tag object that consists of a key and an optional value, used to manage metadata for Amazon Braket resources.</p>",
        "ListTagsForResourceResponse$tags": "<p>Displays the key, value pairs of tags associated with this resource.</p>",
        "QuantumTaskSummary$tags": "<p>Displays the key, value pairs of tags associated with this quantum task.</p>",
        "TagResourceRequest$tags": "<p>Specify the tags to add to the resource.</p>"
      }
    },
    "ThrottlingException": {
      "base": "<p>The throttling rate limit is met.</p>",
      "refs": {
      }
    },
    "UntagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "UntagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "Uri": {
      "base": null,
      "refs": {
        "ContainerImage$uri": "<p>The URI locating the container image.</p>"
      }
    },
    "ValidationException": {
      "base": "<p>The input fails to satisfy the constraints specified by an AWS service.</p>",
      "refs": {
      }
    }
  }
}
