{
  "version": "2.0",
  "service": "<p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses. </p>",
  "operations": {
    "DeleteResourcePermission": "<p>Removes permissions associated with the target database.</p>",
    "DeregisterApplication": "<p>Deregister an SAP application with AWS Systems Manager for SAP. This action does not aï¬€ect the existing setup of your SAP workloads on Amazon EC2.</p>",
    "GetApplication": "<p>Gets an application registered with AWS Systems Manager for SAP. It also returns the components of the application.</p>",
    "GetComponent": "<p>Gets the component of an application registered with AWS Systems Manager for SAP.</p>",
    "GetDatabase": "<p>Gets the SAP HANA database of an application registered with AWS Systems Manager for SAP.</p>",
    "GetOperation": "<p>Gets the details of an operation by specifying the operation ID.</p>",
    "GetResourcePermission": "<p>Gets permissions associated with the target database.</p>",
    "ListApplications": "<p>Lists all the applications registered with AWS Systems Manager for SAP.</p>",
    "ListComponents": "<p>Lists all the components registered with AWS Systems Manager for SAP.</p>",
    "ListDatabases": "<p>Lists the SAP HANA databases of an application registered with AWS Systems Manager for SAP.</p>",
    "ListOperations": "<p>Lists the operations performed by AWS Systems Manager for SAP.</p>",
    "ListTagsForResource": "<p>Lists all tags on an SAP HANA application and/or database registered with AWS Systems Manager for SAP.</p>",
    "PutResourcePermission": "<p>Adds permissions to the target database.</p>",
    "RegisterApplication": "<p>Register an SAP application with AWS Systems Manager for SAP. You must meet the following requirements before registering. </p> <p>The SAP application you want to register with AWS Systems Manager for SAP is running on Amazon EC2.</p> <p>AWS Systems Manager Agent must be setup on an Amazon EC2 instance along with the required IAM permissions.</p> <p>Amazon EC2 instance(s) must have access to the secrets created in AWS Secrets Manager to manage SAP applications and components.</p>",
    "TagResource": "<p>Creates tag for a resource by specifying the ARN.</p>",
    "UntagResource": "<p>Delete the tags for a resource.</p>",
    "UpdateApplicationSettings": "<p>Updates the settings of an application registered with AWS Systems Manager for SAP.</p>"
  },
  "shapes": {
    "AppRegistryArn": {
      "base": null,
      "refs": {
        "Application$AppRegistryArn": "<p>The Amazon Resource Name (ARN) of the Application Registry.</p>",
        "GetApplicationInput$AppRegistryArn": "<p>The Amazon Resource Name (ARN) of the application registry.</p>"
      }
    },
    "Application": {
      "base": "<p>An SAP application registered with AWS Systems Manager for SAP.</p>",
      "refs": {
        "GetApplicationOutput$Application": "<p>Returns all of the metadata of an application registered with AWS Systems Manager for SAP.</p>",
        "RegisterApplicationOutput$Application": "<p>The application registered with AWS Systems Manager for SAP.</p>"
      }
    },
    "ApplicationCredential": {
      "base": "<p>The credentials of your SAP application.</p>",
      "refs": {
        "ApplicationCredentialList$member": null
      }
    },
    "ApplicationCredentialList": {
      "base": null,
      "refs": {
        "Database$Credentials": "<p>The credentials of the database.</p>",
        "RegisterApplicationInput$Credentials": "<p>The credentials of the SAP application.</p>",
        "UpdateApplicationSettingsInput$CredentialsToAddOrUpdate": "<p>The credentials to be added or updated.</p>",
        "UpdateApplicationSettingsInput$CredentialsToRemove": "<p>The credentials to be removed.</p>"
      }
    },
    "ApplicationId": {
      "base": null,
      "refs": {
        "Application$Id": "<p>The ID of the application.</p>",
        "ApplicationSummary$Id": "<p>The ID of the application.</p>",
        "Component$ApplicationId": "<p>The ID of the application.</p>",
        "ComponentSummary$ApplicationId": "<p>The ID of the application.</p>",
        "Database$ApplicationId": "<p>The ID of the application.</p>",
        "DatabaseSummary$ApplicationId": "<p>The ID of the application.</p>",
        "DeregisterApplicationInput$ApplicationId": "<p>The ID of the application.</p>",
        "GetApplicationInput$ApplicationId": "<p>The ID of the application.</p>",
        "GetComponentInput$ApplicationId": "<p>The ID of the application.</p>",
        "GetDatabaseInput$ApplicationId": "<p>The ID of the application.</p>",
        "ListComponentsInput$ApplicationId": "<p>The ID of the application.</p>",
        "ListDatabasesInput$ApplicationId": "<p>The ID of the application.</p>",
        "ListOperationsInput$ApplicationId": "<p>The ID of the application.</p>",
        "RegisterApplicationInput$ApplicationId": "<p>The ID of the application.</p>",
        "UpdateApplicationSettingsInput$ApplicationId": "<p>The ID of the application.</p>"
      }
    },
    "ApplicationStatus": {
      "base": null,
      "refs": {
        "Application$Status": "<p>The status of the application.</p>"
      }
    },
    "ApplicationSummary": {
      "base": "<p>The summary of the SAP application registered with AWS Systems Manager for SAP. </p>",
      "refs": {
        "ApplicationSummaryList$member": null
      }
    },
    "ApplicationSummaryList": {
      "base": null,
      "refs": {
        "ListApplicationsOutput$Applications": "<p>The applications registered with AWS Systems Manager for SAP.</p>"
      }
    },
    "ApplicationType": {
      "base": null,
      "refs": {
        "Application$Type": "<p>The type of the application.</p>",
        "ApplicationSummary$Type": "<p>The type of the application.</p>",
        "RegisterApplicationInput$ApplicationType": "<p>The type of the application.</p>"
      }
    },
    "Arn": {
      "base": null,
      "refs": {
        "DeleteResourcePermissionInput$SourceResourceArn": "<p>The Amazon Resource Name (ARN) of the source resource.</p>",
        "DeleteResourcePermissionInput$ResourceArn": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
        "GetResourcePermissionInput$ResourceArn": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
        "Operation$ResourceArn": "<p>The Amazon Resource Name (ARN) of the operation.</p>",
        "PutResourcePermissionInput$SourceResourceArn": "<p/>",
        "PutResourcePermissionInput$ResourceArn": "<p/>"
      }
    },
    "Component": {
      "base": "<p>The SAP component of your application.</p>",
      "refs": {
        "GetComponentOutput$Component": "<p>The component of an application registered with AWS Systems Manager for SAP.</p>"
      }
    },
    "ComponentId": {
      "base": null,
      "refs": {
        "Component$ComponentId": "<p>The ID of the component.</p>",
        "ComponentIdList$member": null,
        "ComponentSummary$ComponentId": "<p>The ID of the component.</p>",
        "Database$ComponentId": "<p>The ID of the component.</p>",
        "DatabaseSummary$ComponentId": "<p>The ID of the component.</p>",
        "GetComponentInput$ComponentId": "<p>The ID of the component.</p>",
        "GetDatabaseInput$ComponentId": "<p>The ID of the component.</p>",
        "ListDatabasesInput$ComponentId": "<p>The ID of the component.</p>"
      }
    },
    "ComponentIdList": {
      "base": null,
      "refs": {
        "Application$Components": "<p>The components of the application.</p>"
      }
    },
    "ComponentStatus": {
      "base": null,
      "refs": {
        "Component$Status": "<p>The status of the component.</p>"
      }
    },
    "ComponentSummary": {
      "base": "<p>The summary of the component.</p>",
      "refs": {
        "ComponentSummaryList$member": null
      }
    },
    "ComponentSummaryList": {
      "base": null,
      "refs": {
        "ListComponentsOutput$Components": "<p>List of components registered with AWS System Manager for SAP.</p>"
      }
    },
    "ComponentType": {
      "base": null,
      "refs": {
        "Component$ComponentType": "<p>The type of the component.</p>",
        "ComponentSummary$ComponentType": "<p>The type of the component.</p>"
      }
    },
    "ConflictException": {
      "base": "<p>A conflict has occurred.</p>",
      "refs": {
      }
    },
    "CredentialType": {
      "base": null,
      "refs": {
        "ApplicationCredential$CredentialType": "<p>The type of the application credentials. </p>"
      }
    },
    "Database": {
      "base": "<p>The SAP HANA database of the application registered with AWS Systems Manager for SAP.</p>",
      "refs": {
        "GetDatabaseOutput$Database": "<p>The SAP HANA database of an application registered with AWS Systems Manager for SAP.</p>"
      }
    },
    "DatabaseId": {
      "base": null,
      "refs": {
        "Database$DatabaseId": "<p>The ID of the SAP HANA database.</p>",
        "DatabaseIdList$member": null,
        "DatabaseSummary$DatabaseId": "<p>The ID of the database.</p>",
        "GetDatabaseInput$DatabaseId": "<p>The ID of the database.</p>"
      }
    },
    "DatabaseIdList": {
      "base": null,
      "refs": {
        "Component$Databases": "<p>The SAP HANA databases of the component.</p>"
      }
    },
    "DatabaseName": {
      "base": null,
      "refs": {
        "ApplicationCredential$DatabaseName": "<p>The name of the SAP HANA database.</p>"
      }
    },
    "DatabaseStatus": {
      "base": null,
      "refs": {
        "Database$Status": "<p>The status of the database.</p>"
      }
    },
    "DatabaseSummary": {
      "base": "<p>The summary of the database.</p>",
      "refs": {
        "DatabaseSummaryList$member": null
      }
    },
    "DatabaseSummaryList": {
      "base": null,
      "refs": {
        "ListDatabasesOutput$Databases": "<p>The SAP HANA databases of an application.</p>"
      }
    },
    "DatabaseType": {
      "base": null,
      "refs": {
        "Database$DatabaseType": "<p>The type of the database.</p>",
        "DatabaseSummary$DatabaseType": "<p>The type of the database.</p>"
      }
    },
    "DeleteResourcePermissionInput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteResourcePermissionOutput": {
      "base": null,
      "refs": {
      }
    },
    "DeregisterApplicationInput": {
      "base": null,
      "refs": {
      }
    },
    "DeregisterApplicationOutput": {
      "base": null,
      "refs": {
      }
    },
    "Filter": {
      "base": "<p>A specific result obtained by specifying the name, value, and operator. </p>",
      "refs": {
        "FilterList$member": null
      }
    },
    "FilterList": {
      "base": null,
      "refs": {
        "ListOperationsInput$Filters": "<p>The filters of an operation.</p>"
      }
    },
    "FilterName": {
      "base": null,
      "refs": {
        "Filter$Name": "<p>The name of the filter. Filter names are case-sensitive. </p>"
      }
    },
    "FilterOperator": {
      "base": null,
      "refs": {
        "Filter$Operator": "<p>The operator for the filter. </p>"
      }
    },
    "FilterValue": {
      "base": null,
      "refs": {
        "Filter$Value": "<p>The filter values. Filter values are case-sensitive. If you specify multiple values for a filter, the values are joined with an OR, and the request returns all results that match any of the specified values</p>"
      }
    },
    "GetApplicationInput": {
      "base": null,
      "refs": {
      }
    },
    "GetApplicationOutput": {
      "base": null,
      "refs": {
      }
    },
    "GetComponentInput": {
      "base": null,
      "refs": {
      }
    },
    "GetComponentOutput": {
      "base": null,
      "refs": {
      }
    },
    "GetDatabaseInput": {
      "base": null,
      "refs": {
      }
    },
    "GetDatabaseOutput": {
      "base": null,
      "refs": {
      }
    },
    "GetOperationInput": {
      "base": null,
      "refs": {
      }
    },
    "GetOperationOutput": {
      "base": null,
      "refs": {
      }
    },
    "GetResourcePermissionInput": {
      "base": null,
      "refs": {
      }
    },
    "GetResourcePermissionOutput": {
      "base": null,
      "refs": {
      }
    },
    "Host": {
      "base": "<p>Describes the properties of the Dedicated Host. </p>",
      "refs": {
        "HostList$member": null
      }
    },
    "HostList": {
      "base": null,
      "refs": {
        "Component$Hosts": "<p>The hosts of the component.</p>"
      }
    },
    "HostRole": {
      "base": null,
      "refs": {
        "Host$HostRole": "<p>The role of the Dedicated Host.</p>"
      }
    },
    "InstanceId": {
      "base": null,
      "refs": {
        "InstanceList$member": null
      }
    },
    "InstanceList": {
      "base": null,
      "refs": {
        "RegisterApplicationInput$Instances": "<p>The Amazon EC2 instances on which your SAP application is running.</p>"
      }
    },
    "Integer": {
      "base": null,
      "refs": {
        "Database$SQLPort": "<p>The SQL port of the database.</p>"
      }
    },
    "InternalServerException": {
      "base": "<p>An internal error has occurred.</p>",
      "refs": {
      }
    },
    "ListApplicationsInput": {
      "base": null,
      "refs": {
      }
    },
    "ListApplicationsOutput": {
      "base": null,
      "refs": {
      }
    },
    "ListComponentsInput": {
      "base": null,
      "refs": {
      }
    },
    "ListComponentsOutput": {
      "base": null,
      "refs": {
      }
    },
    "ListDatabasesInput": {
      "base": null,
      "refs": {
      }
    },
    "ListDatabasesOutput": {
      "base": null,
      "refs": {
      }
    },
    "ListOperationsInput": {
      "base": null,
      "refs": {
      }
    },
    "ListOperationsOutput": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "MaxResults": {
      "base": null,
      "refs": {
        "ListApplicationsInput$MaxResults": "<p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value. </p>",
        "ListComponentsInput$MaxResults": "<p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.</p> <p>If you do not specify a value for MaxResults, the request returns 50 items per page by default.</p>",
        "ListDatabasesInput$MaxResults": "<p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value. If you do not specify a value for MaxResults, the request returns 50 items per page by default.</p>",
        "ListOperationsInput$MaxResults": "<p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value. If you do not specify a value for MaxResults, the request returns 50 items per page by default.</p>"
      }
    },
    "NextToken": {
      "base": null,
      "refs": {
        "ListApplicationsInput$NextToken": "<p>The token for the next page of results.</p>",
        "ListApplicationsOutput$NextToken": "<p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>",
        "ListComponentsInput$NextToken": "<p>The token for the next page of results.</p>",
        "ListComponentsOutput$NextToken": "<p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>",
        "ListDatabasesInput$NextToken": "<p>The token for the next page of results. </p>",
        "ListDatabasesOutput$NextToken": "<p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>",
        "ListOperationsInput$NextToken": "<p>The token for the next page of results. </p>",
        "ListOperationsOutput$NextToken": "<p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>"
      }
    },
    "Operation": {
      "base": "<p>The operations performed by AWS Systems Manager for SAP.</p>",
      "refs": {
        "GetOperationOutput$Operation": "<p>Returns the details of an operation.</p>",
        "OperationList$member": null
      }
    },
    "OperationId": {
      "base": null,
      "refs": {
        "GetOperationInput$OperationId": "<p>The ID of the operation.</p>",
        "Operation$Id": "<p>The ID of the operation.</p>",
        "OperationIdList$member": null,
        "RegisterApplicationOutput$OperationId": "<p>The ID of the operation.</p>"
      }
    },
    "OperationIdList": {
      "base": null,
      "refs": {
        "UpdateApplicationSettingsOutput$OperationIds": "<p>The IDs of the operations.</p>"
      }
    },
    "OperationList": {
      "base": null,
      "refs": {
        "ListOperationsOutput$Operations": "<p>List of operations performed by AWS Systems Manager for SAP.</p>"
      }
    },
    "OperationProperties": {
      "base": null,
      "refs": {
        "Operation$Properties": "<p>The properties of the operation.</p>"
      }
    },
    "OperationStatus": {
      "base": null,
      "refs": {
        "Operation$Status": "<p>The status of the operation.</p>"
      }
    },
    "OperationType": {
      "base": null,
      "refs": {
        "Operation$Type": "<p>The type of the operation.</p>"
      }
    },
    "PermissionActionType": {
      "base": null,
      "refs": {
        "DeleteResourcePermissionInput$ActionType": "<p>Delete or restore the permissions on the target database.</p>",
        "GetResourcePermissionInput$ActionType": "<p/>",
        "PutResourcePermissionInput$ActionType": "<p/>"
      }
    },
    "PutResourcePermissionInput": {
      "base": null,
      "refs": {
      }
    },
    "PutResourcePermissionOutput": {
      "base": null,
      "refs": {
      }
    },
    "RegisterApplicationInput": {
      "base": null,
      "refs": {
      }
    },
    "RegisterApplicationOutput": {
      "base": null,
      "refs": {
      }
    },
    "ResourceId": {
      "base": null,
      "refs": {
        "Operation$ResourceId": "<p>The resource ID of the operation.</p>"
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>The resource is not available.</p>",
      "refs": {
      }
    },
    "ResourceType": {
      "base": null,
      "refs": {
        "Operation$ResourceType": "<p>The resource type of the operation.</p>"
      }
    },
    "SAPInstanceNumber": {
      "base": null,
      "refs": {
        "RegisterApplicationInput$SapInstanceNumber": "<p>The SAP instance number of the application.</p>"
      }
    },
    "SID": {
      "base": null,
      "refs": {
        "RegisterApplicationInput$Sid": "<p>The System ID of the application.</p>"
      }
    },
    "SecretId": {
      "base": null,
      "refs": {
        "ApplicationCredential$SecretId": "<p>The secret ID created in AWS Secrets Manager to store the credentials of the SAP application. </p>"
      }
    },
    "SsmSapArn": {
      "base": null,
      "refs": {
        "Application$Arn": "<p>The Amazon Resource Name (ARN) of the application.</p>",
        "ApplicationSummary$Arn": "<p>The Amazon Resource Name (ARN) of the application.</p>",
        "Database$Arn": "<p>The Amazon Resource Name (ARN) of the database.</p>",
        "DatabaseSummary$Arn": "<p>The Amazon Resource Name (ARN) of the database.</p>",
        "GetApplicationInput$ApplicationArn": "<p>The Amazon Resource Name (ARN) of the application. </p>",
        "GetDatabaseInput$DatabaseArn": "<p>The Amazon Resource Name (ARN) of the database.</p>",
        "ListTagsForResourceRequest$resourceArn": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
        "TagResourceRequest$resourceArn": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
        "UntagResourceRequest$resourceArn": "<p>The Amazon Resource Name (ARN) of the resource.</p>"
      }
    },
    "String": {
      "base": null,
      "refs": {
        "Application$StatusMessage": "<p>The status message.</p>",
        "Component$PrimaryHost": "<p>The primary host of the component.</p>",
        "ConflictException$Message": null,
        "Database$DatabaseName": "<p>The name of the database.</p>",
        "Database$PrimaryHost": "<p>The primary host of the database.</p>",
        "DeleteResourcePermissionOutput$Policy": "<p>The policy that removes permissions on the target database.</p>",
        "GetResourcePermissionOutput$Policy": "<p/>",
        "Host$HostName": "<p>The name of the Dedicated Host.</p>",
        "Host$HostIp": "<p>The IP address of the Dedicated Host. </p>",
        "Host$InstanceId": "<p>The instance ID of the instance on the Dedicated Host.</p>",
        "InternalServerException$Message": null,
        "Operation$StatusMessage": "<p>The status message of the operation.</p>",
        "OperationProperties$key": null,
        "OperationProperties$value": null,
        "PutResourcePermissionOutput$Policy": "<p/>",
        "ResourceNotFoundException$Message": null,
        "UpdateApplicationSettingsOutput$Message": "<p>The update message.</p>",
        "ValidationException$Message": null
      }
    },
    "TagKey": {
      "base": null,
      "refs": {
        "TagKeyList$member": null,
        "TagMap$key": null
      }
    },
    "TagKeyList": {
      "base": null,
      "refs": {
        "UntagResourceRequest$tagKeys": "<p>Adds/updates or removes credentials for applications registered with AWS Systems Manager for SAP.</p>"
      }
    },
    "TagMap": {
      "base": null,
      "refs": {
        "ApplicationSummary$Tags": "<p>The tags on the application.</p>",
        "ComponentSummary$Tags": "<p>The tags of the component.</p>",
        "DatabaseSummary$Tags": "<p>The tags of the database.</p>",
        "GetApplicationOutput$Tags": "<p>The tags of a registered application.</p>",
        "GetDatabaseOutput$Tags": "<p>The tags of a database.</p>",
        "ListTagsForResourceResponse$tags": "<p/>",
        "RegisterApplicationInput$Tags": "<p>The tags to be attached to the SAP application.</p>",
        "TagResourceRequest$tags": "<p>The tags on a resource.</p>"
      }
    },
    "TagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "TagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "TagValue": {
      "base": null,
      "refs": {
        "TagMap$value": null
      }
    },
    "Timestamp": {
      "base": null,
      "refs": {
        "Application$LastUpdated": "<p>The time at which the application was last updated.</p>",
        "Component$LastUpdated": "<p>The time at which the component was last updated.</p>",
        "Database$LastUpdated": "<p>The time at which the database was last updated.</p>",
        "Operation$StartTime": "<p>The start time of the operation.</p>",
        "Operation$EndTime": "<p>The end time of the operation.</p>",
        "Operation$LastUpdatedTime": "<p>The time at which the operation was last updated.</p>"
      }
    },
    "UntagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "UntagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateApplicationSettingsInput": {
      "base": null,
      "refs": {
      }
    },
    "UpdateApplicationSettingsOutput": {
      "base": null,
      "refs": {
      }
    },
    "ValidationException": {
      "base": "<p>The input fails to satisfy the constraints specified by an AWS service. </p>",
      "refs": {
      }
    }
  }
}
