{
  "version": "2.0",
  "service": "<p>AWS re:Post Private is a private version of AWS re:Post for enterprises with Enterprise Support or Enterprise On-Ramp Support plans. It provides access to knowledge and experts to accelerate cloud adoption and increase developer productivity. With your organization-specific private re:Post, you can build an organization-specific developer community that drives efficiencies at scale and provides access to valuable knowledge resources. Additionally, re:Post Private centralizes trusted AWS technical content and offers private discussion forums to improve how your teams collaborate internally and with AWS to remove technical obstacles, accelerate innovation, and scale more efficiently in the cloud.</p>",
  "operations": {
    "CreateSpace": "<p>Creates an AWS re:Post Private private re:Post.</p>",
    "DeleteSpace": "<p>Deletes an AWS re:Post Private private re:Post.</p>",
    "DeregisterAdmin": "<p>Removes the user or group from the list of administrators of the private re:Post.</p>",
    "GetSpace": "<p>Displays information about the AWS re:Post Private private re:Post.</p>",
    "ListSpaces": "<p>Returns a list of AWS re:Post Private private re:Posts in the account with some information about each private re:Post.</p>",
    "ListTagsForResource": "<p>Returns the tags that are associated with the AWS re:Post Private resource specified by the resourceArn. The only resource that can be tagged is a private re:Post.</p>",
    "RegisterAdmin": "<p>Adds a user or group to the list of administrators of the private re:Post.</p>",
    "SendInvites": "<p>Sends an invitation email to selected users and groups.</p>",
    "TagResource": "<p>Associates tags with an AWS re:Post Private resource. Currently, the only resource that can be tagged is the private re:Post. If you specify a new tag key for the resource, the tag is appended to the list of tags that are associated with the resource. If you specify a tag key that’s already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p>",
    "UntagResource": "<p>Removes the association of the tag with the AWS re:Post Private resource.</p>",
    "UpdateSpace": "<p>Modifies an existing AWS re:Post Private private re:Post.</p>"
  },
  "shapes": {
    "AccessDeniedException": {
      "base": "<p>User does not have sufficient access to perform this action.</p>",
      "refs": {
      }
    },
    "AccessorId": {
      "base": null,
      "refs": {
        "AccessorIdList$member": null
      }
    },
    "AccessorIdList": {
      "base": null,
      "refs": {
        "SendInvitesInput$accessorIds": "<p>The array of identifiers for the users and groups.</p>"
      }
    },
    "AdminId": {
      "base": null,
      "refs": {
        "DeregisterAdminInput$adminId": "<p>The ID of the admin to remove.</p>",
        "GroupAdmins$member": null,
        "RegisterAdminInput$adminId": "<p>The ID of the administrator.</p>",
        "UserAdmins$member": null
      }
    },
    "Arn": {
      "base": null,
      "refs": {
        "CreateSpaceInput$roleArn": "<p>The IAM role that grants permissions to the private re:Post to convert unanswered questions into AWS support tickets.</p>",
        "GetSpaceOutput$arn": "<p>The ARN of the private re:Post.</p>",
        "GetSpaceOutput$customerRoleArn": "<p>The IAM role that grants permissions to the private re:Post to convert unanswered questions into AWS support tickets.</p>",
        "ListTagsForResourceRequest$resourceArn": "<p>The ARN of the resource that the tags are associated with.</p>",
        "SpaceData$arn": "<p>The ARN of the private re:Post.</p>",
        "TagResourceRequest$resourceArn": "<p>The ARN of the resource that the tag is associated with.</p>",
        "UntagResourceRequest$resourceArn": "<p>The ARN of the resource.</p>",
        "UpdateSpaceInput$roleArn": "<p>The IAM role that grants permissions to the private re:Post to convert unanswered questions into AWS support tickets.</p>"
      }
    },
    "ClientId": {
      "base": null,
      "refs": {
        "GetSpaceOutput$clientId": "<p>The Identity Center identifier for the Application Instance.</p>"
      }
    },
    "ConfigurationStatus": {
      "base": null,
      "refs": {
        "GetSpaceOutput$configurationStatus": "<p>The configuration status of the private re:Post.</p>",
        "SpaceData$configurationStatus": "<p>The configuration status of the private re:Post.</p>"
      }
    },
    "ConflictException": {
      "base": "<p>Updating or deleting a resource can cause an inconsistent state.</p>",
      "refs": {
      }
    },
    "ContentSize": {
      "base": null,
      "refs": {
        "GetSpaceOutput$contentSize": "<p>The content size of the private re:Post.</p>",
        "SpaceData$contentSize": "<p>The content size of the private re:Post.</p>"
      }
    },
    "CreateSpaceInput": {
      "base": null,
      "refs": {
      }
    },
    "CreateSpaceOutput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteSpaceInput": {
      "base": null,
      "refs": {
      }
    },
    "DeregisterAdminInput": {
      "base": null,
      "refs": {
      }
    },
    "GetSpaceInput": {
      "base": null,
      "refs": {
      }
    },
    "GetSpaceOutput": {
      "base": null,
      "refs": {
      }
    },
    "GroupAdmins": {
      "base": null,
      "refs": {
        "GetSpaceOutput$groupAdmins": "<p>The list of groups that are administrators of the private re:Post.</p>"
      }
    },
    "Integer": {
      "base": null,
      "refs": {
        "InternalServerException$retryAfterSeconds": "<p>Advice to clients on when the call can be safely retried.</p>",
        "ThrottlingException$retryAfterSeconds": "<p> Advice to clients on when the call can be safely retried.</p>"
      }
    },
    "InternalServerException": {
      "base": "<p>Unexpected error during processing of request.</p>",
      "refs": {
      }
    },
    "InviteBody": {
      "base": null,
      "refs": {
        "SendInvitesInput$body": "<p>The body of the invite.</p>"
      }
    },
    "InviteTitle": {
      "base": null,
      "refs": {
        "SendInvitesInput$title": "<p>The title of the invite.</p>"
      }
    },
    "KMSKey": {
      "base": null,
      "refs": {
        "CreateSpaceInput$userKMSKey": "<p>The AWS KMS key ARN that’s used for the AWS KMS encryption. If you don't provide a key, your data is encrypted by default with a key that AWS owns and manages for you.</p>",
        "GetSpaceOutput$userKMSKey": "<p>The custom AWS KMS key ARN that’s used for the AWS KMS encryption.</p>",
        "SpaceData$userKMSKey": "<p>The custom AWS KMS key ARN that’s used for the AWS KMS encryption.</p>"
      }
    },
    "ListSpacesInput": {
      "base": null,
      "refs": {
      }
    },
    "ListSpacesLimit": {
      "base": null,
      "refs": {
        "ListSpacesInput$maxResults": "<p>The maximum number of private re:Posts to include in the results.</p>"
      }
    },
    "ListSpacesOutput": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "ProvisioningStatus": {
      "base": null,
      "refs": {
        "GetSpaceOutput$status": "<p>The creation or deletion status of the private re:Post.</p>",
        "SpaceData$status": "<p>The creation/deletion status of the private re:Post.</p>"
      }
    },
    "RegisterAdminInput": {
      "base": null,
      "refs": {
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>Request references a resource which does not exist.</p>",
      "refs": {
      }
    },
    "SendInvitesInput": {
      "base": null,
      "refs": {
      }
    },
    "ServiceQuotaExceededException": {
      "base": "<p>Request would cause a service quota to be exceeded.</p>",
      "refs": {
      }
    },
    "SpaceData": {
      "base": "<p>A structure that contains some information about a private re:Post in the account.</p>",
      "refs": {
        "SpacesList$member": null
      }
    },
    "SpaceDescription": {
      "base": null,
      "refs": {
        "CreateSpaceInput$description": "<p>A description for the private re:Post. This is used only to help you identify this private re:Post.</p>",
        "GetSpaceOutput$description": "<p>The description of the private re:Post.</p>",
        "SpaceData$description": "<p>The description for the private re:Post. This is used only to help you identify this private re:Post.</p>",
        "UpdateSpaceInput$description": "<p>A description for the private re:Post. This is used only to help you identify this private re:Post.</p>"
      }
    },
    "SpaceId": {
      "base": null,
      "refs": {
        "CreateSpaceOutput$spaceId": "<p>The unique ID of the private re:Post.</p>",
        "DeleteSpaceInput$spaceId": "<p>The unique ID of the private re:Post.</p>",
        "DeregisterAdminInput$spaceId": "<p>The ID of the private re:Post to remove the admin from.</p>",
        "GetSpaceInput$spaceId": "<p>The ID of the private re:Post.</p>",
        "GetSpaceOutput$spaceId": "<p>The unique ID of the private re:Post.</p>",
        "RegisterAdminInput$spaceId": "<p>The ID of the private re:Post.</p>",
        "SendInvitesInput$spaceId": "<p>The ID of the private re:Post.</p>",
        "SpaceData$spaceId": "<p>The unique ID of the private re:Post.</p>",
        "UpdateSpaceInput$spaceId": "<p>The unique ID of this private re:Post.</p>"
      }
    },
    "SpaceName": {
      "base": null,
      "refs": {
        "CreateSpaceInput$name": "<p>The name for the private re:Post. This must be unique in your account.</p>",
        "GetSpaceOutput$name": "<p>The name of the private re:Post.</p>",
        "SpaceData$name": "<p>The name for the private re:Post.</p>"
      }
    },
    "SpaceSubdomain": {
      "base": null,
      "refs": {
        "CreateSpaceInput$subdomain": "<p>The subdomain that you use to access your AWS re:Post Private private re:Post. All custom subdomains must be approved by AWS before use. In addition to your custom subdomain, all private re:Posts are issued an AWS generated subdomain for immediate use.</p>"
      }
    },
    "SpacesList": {
      "base": null,
      "refs": {
        "ListSpacesOutput$spaces": "<p>An array of structures that contain some information about the private re:Posts in the account.</p>"
      }
    },
    "StorageLimit": {
      "base": null,
      "refs": {
        "GetSpaceOutput$storageLimit": "<p>The storage limit of the private re:Post.</p>",
        "SpaceData$storageLimit": "<p>The storage limit of the private re:Post.</p>"
      }
    },
    "String": {
      "base": null,
      "refs": {
        "AccessDeniedException$message": null,
        "ConflictException$message": null,
        "ConflictException$resourceId": "<p>The ID of the resource.</p>",
        "ConflictException$resourceType": "<p>The type of the resource.</p>",
        "InternalServerException$message": null,
        "ListSpacesInput$nextToken": "<p>The token for the next set of private re:Posts to return. You receive this token from a previous ListSpaces operation.</p>",
        "ListSpacesOutput$nextToken": "<p>The token that you use when you request the next set of private re:Posts.</p>",
        "ResourceNotFoundException$message": null,
        "ResourceNotFoundException$resourceId": "<p>The ID of the resource.</p>",
        "ResourceNotFoundException$resourceType": "<p>The type of the resource.</p>",
        "ServiceQuotaExceededException$message": null,
        "ServiceQuotaExceededException$quotaCode": "<p>The code to identify the quota.</p>",
        "ServiceQuotaExceededException$resourceId": "<p>The id of the resource.</p>",
        "ServiceQuotaExceededException$resourceType": "<p>The type of the resource.</p>",
        "ServiceQuotaExceededException$serviceCode": "<p>The code to identify the service.</p>",
        "ThrottlingException$message": null,
        "ThrottlingException$quotaCode": "<p>The code to identify the quota.</p>",
        "ThrottlingException$serviceCode": "<p>The code to identify the service.</p>",
        "ValidationException$message": null,
        "ValidationExceptionField$message": "<p>The name of the field.</p>",
        "ValidationExceptionField$name": "<p>Message describing why the field failed validation.</p>"
      }
    },
    "SyntheticTimestamp_date_time": {
      "base": null,
      "refs": {
        "GetSpaceOutput$createDateTime": "<p>The date when the private re:Post was created.</p>",
        "GetSpaceOutput$deleteDateTime": "<p>The date when the private re:Post was deleted.</p>",
        "SpaceData$createDateTime": "<p>The date when the private re:Post was created.</p>",
        "SpaceData$deleteDateTime": "<p>The date when the private re:Post was deleted.</p>"
      }
    },
    "TagKey": {
      "base": null,
      "refs": {
        "TagKeyList$member": null,
        "Tags$key": null
      }
    },
    "TagKeyList": {
      "base": null,
      "refs": {
        "UntagResourceRequest$tagKeys": "<p>The key values of the tag.</p>"
      }
    },
    "TagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "TagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "TagValue": {
      "base": null,
      "refs": {
        "Tags$value": null
      }
    },
    "Tags": {
      "base": null,
      "refs": {
        "CreateSpaceInput$tags": "<p>The list of tags associated with the private re:Post.</p>",
        "ListTagsForResourceResponse$tags": "<p>The list of tags that are associated with the resource.</p>",
        "TagResourceRequest$tags": "<p>The list of tag keys and values that must be associated with the resource. You can associate tag keys only, tags (key and values) only, or a combination of tag keys and tags.</p>"
      }
    },
    "ThrottlingException": {
      "base": "<p>Request was denied due to request throttling.</p>",
      "refs": {
      }
    },
    "TierLevel": {
      "base": null,
      "refs": {
        "CreateSpaceInput$tier": "<p>The pricing tier for the private re:Post.</p>",
        "GetSpaceOutput$tier": "<p>The pricing tier of the private re:Post.</p>",
        "SpaceData$tier": "<p>The pricing tier of the private re:Post.</p>",
        "UpdateSpaceInput$tier": "<p>The pricing tier of this private re:Post.</p>"
      }
    },
    "UntagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "UntagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateSpaceInput": {
      "base": null,
      "refs": {
      }
    },
    "Url": {
      "base": null,
      "refs": {
        "GetSpaceOutput$randomDomain": "<p>The AWS generated subdomain of the private re:Post</p>",
        "GetSpaceOutput$vanityDomain": "<p>The custom subdomain that you use to access your private re:Post. All custom subdomains must be approved by AWS before use.</p>",
        "SpaceData$randomDomain": "<p>The AWS generated subdomain of the private re:Post.</p>",
        "SpaceData$vanityDomain": "<p>This custom subdomain that you use to access your private re:Post. All custom subdomains must be approved by AWS before use.</p>"
      }
    },
    "UserAdmins": {
      "base": null,
      "refs": {
        "GetSpaceOutput$userAdmins": "<p>The list of users that are administrators of the private re:Post.</p>"
      }
    },
    "UserCount": {
      "base": null,
      "refs": {
        "GetSpaceOutput$userCount": "<p>The number of users that have onboarded to the private re:Post.</p>",
        "SpaceData$userCount": "<p>The number of onboarded users to the private re:Post.</p>"
      }
    },
    "ValidationException": {
      "base": "<p>The input fails to satisfy the constraints specified by an AWS service.</p>",
      "refs": {
      }
    },
    "ValidationExceptionField": {
      "base": "<p>Stores information about a field that’s passed inside a request that resulted in an exception.</p>",
      "refs": {
        "ValidationExceptionFieldList$member": null
      }
    },
    "ValidationExceptionFieldList": {
      "base": null,
      "refs": {
        "ValidationException$fieldList": "<p>The field that caused the error, if applicable.</p>"
      }
    },
    "ValidationExceptionReason": {
      "base": null,
      "refs": {
        "ValidationException$reason": "<p>The reason why the request failed validation.</p>"
      }
    },
    "VanityDomainStatus": {
      "base": null,
      "refs": {
        "GetSpaceOutput$vanityDomainStatus": "<p>The approval status of the custom subdomain.</p>",
        "SpaceData$vanityDomainStatus": "<p>This approval status of the custom subdomain.</p>"
      }
    }
  }
}
