{
  "version": "2.0",
  "service": "<p>Describes the API operations for creating and managing Amazon Bedrock agents.</p>",
  "operations": {
    "AssociateAgentKnowledgeBase": "<p>Associates a knowledge base with an agent. If a knowledge base is associated and its <code>indexState</code> is set to <code>Enabled</code>, the agent queries the knowledge base for information to augment its response to the user.</p>",
    "CreateAgent": "<p>Creates an agent that orchestrates interactions between foundation models, data sources, software applications, user conversations, and APIs to carry out tasks to help customers.</p> <ul> <li> <p>Specify the following fields for security purposes.</p> <ul> <li> <p> <code>agentResourceRoleArn</code> – The Amazon Resource Name (ARN) of the role with permissions to invoke API operations on an agent.</p> </li> <li> <p>(Optional) <code>customerEncryptionKeyArn</code> – The Amazon Resource Name (ARN) of a KMS key to encrypt the creation of the agent.</p> </li> <li> <p>(Optional) <code>idleSessionTTLinSeconds</code> – Specify the number of seconds for which the agent should maintain session information. After this time expires, the subsequent <code>InvokeAgent</code> request begins a new session.</p> </li> </ul> </li> <li> <p>To override the default prompt behavior for agent orchestration and to use advanced prompts, include a <code>promptOverrideConfiguration</code> object. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html\">Advanced prompts</a>.</p> </li> <li> <p>If you agent fails to be created, the response returns a list of <code>failureReasons</code> alongside a list of <code>recommendedActions</code> for you to troubleshoot.</p> </li> </ul>",
    "CreateAgentActionGroup": "<p>Creates an action group for an agent. An action group represents the actions that an agent can carry out for the customer by defining the APIs that an agent can call and the logic for calling them.</p> <p>To allow your agent to request the user for additional information when trying to complete a task, add an action group with the <code>parentActionGroupSignature</code> field set to <code>AMAZON.UserInput</code>. You must leave the <code>description</code>, <code>apiSchema</code>, and <code>actionGroupExecutor</code> fields blank for this action group. During orchestration, if your agent determines that it needs to invoke an API in an action group, but doesn't have enough information to complete the API request, it will invoke this action group instead and return an <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Observation.html\">Observation</a> reprompting the user for more information.</p>",
    "CreateAgentAlias": "<p>Creates an alias of an agent that can be used to deploy the agent.</p>",
    "CreateDataSource": "<p>Sets up a data source to be added to a knowledge base.</p> <important> <p>You can't change the <code>chunkingConfiguration</code> after you create the data source.</p> </important>",
    "CreateKnowledgeBase": "<p>Creates a knowledge base that contains data sources from which information can be queried and used by LLMs. To create a knowledge base, you must first set up your data sources and configure a supported vector store. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup.html\">Set up your data for ingestion</a>.</p> <note> <p>If you prefer to let Amazon Bedrock create and manage a vector store for you in Amazon OpenSearch Service, use the console. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-create\">Create a knowledge base</a>.</p> </note> <ul> <li> <p>Provide the <code>name</code> and an optional <code>description</code>.</p> </li> <li> <p>Provide the Amazon Resource Name (ARN) with permissions to create a knowledge base in the <code>roleArn</code> field.</p> </li> <li> <p>Provide the embedding model to use in the <code>embeddingModelArn</code> field in the <code>knowledgeBaseConfiguration</code> object.</p> </li> <li> <p>Provide the configuration for your vector store in the <code>storageConfiguration</code> object.</p> <ul> <li> <p>For an Amazon OpenSearch Service database, use the <code>opensearchServerlessConfiguration</code> object. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-oss.html\">Create a vector store in Amazon OpenSearch Service</a>.</p> </li> <li> <p>For an Amazon Aurora database, use the <code>RdsConfiguration</code> object. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-rds.html\">Create a vector store in Amazon Aurora</a>.</p> </li> <li> <p>For a Pinecone database, use the <code>pineconeConfiguration</code> object. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-pinecone.html\">Create a vector store in Pinecone</a>.</p> </li> <li> <p>For a Redis Enterprise Cloud database, use the <code>redisEnterpriseCloudConfiguration</code> object. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-redis.html\">Create a vector store in Redis Enterprise Cloud</a>.</p> </li> </ul> </li> </ul>",
    "DeleteAgent": "<p>Deletes an agent.</p>",
    "DeleteAgentActionGroup": "<p>Deletes an action group in an agent.</p>",
    "DeleteAgentAlias": "<p>Deletes an alias of an agent.</p>",
    "DeleteAgentVersion": "<p>Deletes a version of an agent.</p>",
    "DeleteDataSource": "<p>Deletes a data source from a knowledge base.</p>",
    "DeleteKnowledgeBase": "<p>Deletes a knowledge base. Before deleting a knowledge base, you should disassociate the knowledge base from any agents that it is associated with by making a <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_DisassociateAgentKnowledgeBase.html\">DisassociateAgentKnowledgeBase</a> request.</p>",
    "DisassociateAgentKnowledgeBase": "<p>Disassociates a knowledge base from an agent.</p>",
    "GetAgent": "<p>Gets information about an agent.</p>",
    "GetAgentActionGroup": "<p>Gets information about an action group for an agent.</p>",
    "GetAgentAlias": "<p>Gets information about an alias of an agent.</p>",
    "GetAgentKnowledgeBase": "<p>Gets information about a knowledge base associated with an agent.</p>",
    "GetAgentVersion": "<p>Gets details about a version of an agent.</p>",
    "GetDataSource": "<p>Gets information about a data source.</p>",
    "GetIngestionJob": "<p>Gets information about a ingestion job, in which a data source is added to a knowledge base.</p>",
    "GetKnowledgeBase": "<p>Gets information about a knoweldge base.</p>",
    "ListAgentActionGroups": "<p>Lists the action groups for an agent and information about each one.</p>",
    "ListAgentAliases": "<p>Lists the aliases of an agent and information about each one.</p>",
    "ListAgentKnowledgeBases": "<p>Lists knowledge bases associated with an agent and information about each one.</p>",
    "ListAgentVersions": "<p>Lists the versions of an agent and information about each version.</p>",
    "ListAgents": "<p>Lists the agents belonging to an account and information about each agent.</p>",
    "ListDataSources": "<p>Lists the data sources in a knowledge base and information about each one.</p>",
    "ListIngestionJobs": "<p>Lists the ingestion jobs for a data source and information about each of them.</p>",
    "ListKnowledgeBases": "<p>Lists the knowledge bases in an account and information about each of them.</p>",
    "ListTagsForResource": "<p>List all the tags for the resource you specify.</p>",
    "PrepareAgent": "<p>Creates a <code>DRAFT</code> version of the agent that can be used for internal testing.</p>",
    "StartIngestionJob": "<p>Begins an ingestion job, in which a data source is added to a knowledge base.</p>",
    "TagResource": "<p>Associate tags with a resource. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html\">Tagging resources</a> in the Amazon Bedrock User Guide.</p>",
    "UntagResource": "<p>Remove tags from a resource.</p>",
    "UpdateAgent": "<p>Updates the configuration of an agent.</p>",
    "UpdateAgentActionGroup": "<p>Updates the configuration for an action group for an agent.</p>",
    "UpdateAgentAlias": "<p>Updates configurations for an alias of an agent.</p>",
    "UpdateAgentKnowledgeBase": "<p>Updates the configuration for a knowledge base that has been associated with an agent.</p>",
    "UpdateDataSource": "<p>Updates configurations for a data source.</p> <important> <p>You can't change the <code>chunkingConfiguration</code> after you create the data source. Specify the existing <code>chunkingConfiguration</code>.</p> </important>",
    "UpdateKnowledgeBase": "<p>Updates the configuration of a knowledge base with the fields that you specify. Because all fields will be overwritten, you must include the same values for fields that you want to keep the same.</p> <p>You can change the following fields:</p> <ul> <li> <p> <code>name</code> </p> </li> <li> <p> <code>description</code> </p> </li> <li> <p> <code>roleArn</code> </p> </li> </ul> <p>You can't change the <code>knowledgeBaseConfiguration</code> or <code>storageConfiguration</code> fields, so you must specify the same configurations as when you created the knowledge base. You can send a <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_GetKnowledgeBase.html\">GetKnowledgeBase</a> request and copy the same configurations.</p>"
  },
  "shapes": {
    "APISchema": {
      "base": "<p>Contains details about the OpenAPI schema for the action group. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html\">Action group OpenAPI schemas</a>. You can either include the schema directly in the <code>payload</code> field or you can upload it to an S3 bucket and specify the S3 bucket location in the <code>s3</code> field.</p>",
      "refs": {
        "AgentActionGroup$apiSchema": "<p>Contains either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html\">Action group OpenAPI schemas</a>.</p>",
        "CreateAgentActionGroupRequest$apiSchema": "<p>Contains either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html\">Action group OpenAPI schemas</a>.</p>",
        "UpdateAgentActionGroupRequest$apiSchema": "<p>Contains either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html\">Action group OpenAPI schemas</a>.</p>"
      }
    },
    "AccessDeniedException": {
      "base": "<p>The request is denied because of missing access permissions.</p>",
      "refs": {
      }
    },
    "ActionGroupExecutor": {
      "base": "<p>Contains details about the Lambda function containing the business logic that is carried out upon invoking the action or the custom control method for handling the information elicited from the user.</p>",
      "refs": {
        "AgentActionGroup$actionGroupExecutor": "<p>The Amazon Resource Name (ARN) of the Lambda function containing the business logic that is carried out upon invoking the action or the custom control method for handling the information elicited from the user.</p>",
        "CreateAgentActionGroupRequest$actionGroupExecutor": "<p>The Amazon Resource Name (ARN) of the Lambda function containing the business logic that is carried out upon invoking the action or the custom control method for handling the information elicited from the user.</p>",
        "UpdateAgentActionGroupRequest$actionGroupExecutor": "<p>The Amazon Resource Name (ARN) of the Lambda function containing the business logic that is carried out upon invoking the action.</p>"
      }
    },
    "ActionGroupSignature": {
      "base": null,
      "refs": {
        "AgentActionGroup$parentActionSignature": "<p>If this field is set as <code>AMAZON.UserInput</code>, the agent can request the user for additional information when trying to complete a task. The <code>description</code>, <code>apiSchema</code>, and <code>actionGroupExecutor</code> fields must be blank for this action group.</p> <p>During orchestration, if the agent determines that it needs to invoke an API in an action group, but doesn't have enough information to complete the API request, it will invoke this action group instead and return an <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Observation.html\">Observation</a> reprompting the user for more information.</p>",
        "CreateAgentActionGroupRequest$parentActionGroupSignature": "<p>To allow your agent to request the user for additional information when trying to complete a task, set this field to <code>AMAZON.UserInput</code>. You must leave the <code>description</code>, <code>apiSchema</code>, and <code>actionGroupExecutor</code> fields blank for this action group.</p> <p>During orchestration, if your agent determines that it needs to invoke an API in an action group, but doesn't have enough information to complete the API request, it will invoke this action group instead and return an <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Observation.html\">Observation</a> reprompting the user for more information.</p>",
        "UpdateAgentActionGroupRequest$parentActionGroupSignature": "<p>To allow your agent to request the user for additional information when trying to complete a task, set this field to <code>AMAZON.UserInput</code>. You must leave the <code>description</code>, <code>apiSchema</code>, and <code>actionGroupExecutor</code> fields blank for this action group.</p> <p>During orchestration, if your agent determines that it needs to invoke an API in an action group, but doesn't have enough information to complete the API request, it will invoke this action group instead and return an <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Observation.html\">Observation</a> reprompting the user for more information.</p>"
      }
    },
    "ActionGroupState": {
      "base": null,
      "refs": {
        "ActionGroupSummary$actionGroupState": "<p>Specifies whether the action group is available for the agent to invoke or not when sending an <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html\">InvokeAgent</a> request.</p>",
        "AgentActionGroup$actionGroupState": "<p>Specifies whether the action group is available for the agent to invoke or not when sending an <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html\">InvokeAgent</a> request.</p>",
        "CreateAgentActionGroupRequest$actionGroupState": "<p>Specifies whether the action group is available for the agent to invoke or not when sending an <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html\">InvokeAgent</a> request.</p>",
        "UpdateAgentActionGroupRequest$actionGroupState": "<p>Specifies whether the action group is available for the agent to invoke or not when sending an <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html\">InvokeAgent</a> request.</p>"
      }
    },
    "ActionGroupSummaries": {
      "base": null,
      "refs": {
        "ListAgentActionGroupsResponse$actionGroupSummaries": "<p>A list of objects, each of which contains information about an action group.</p>"
      }
    },
    "ActionGroupSummary": {
      "base": "<p>Contains details about an action group.</p>",
      "refs": {
        "ActionGroupSummaries$member": null
      }
    },
    "Agent": {
      "base": "<p>Contains details about an agent.</p>",
      "refs": {
        "CreateAgentResponse$agent": "<p>Contains details about the agent created.</p>",
        "GetAgentResponse$agent": "<p>Contains details about the agent.</p>",
        "UpdateAgentResponse$agent": "<p>Contains details about the agent that was updated.</p>"
      }
    },
    "AgentActionGroup": {
      "base": "<p>Contains details about an action group.</p>",
      "refs": {
        "CreateAgentActionGroupResponse$agentActionGroup": "<p>Contains details about the action group that was created.</p>",
        "GetAgentActionGroupResponse$agentActionGroup": "<p>Contains details about the action group.</p>",
        "UpdateAgentActionGroupResponse$agentActionGroup": "<p>Contains details about the action group that was updated.</p>"
      }
    },
    "AgentAlias": {
      "base": "<p>Contains details about an alias of an agent.</p>",
      "refs": {
        "CreateAgentAliasResponse$agentAlias": "<p>Contains details about the alias that was created.</p>",
        "GetAgentAliasResponse$agentAlias": "<p>Contains information about the alias.</p>",
        "UpdateAgentAliasResponse$agentAlias": "<p>Contains details about the alias that was updated.</p>"
      }
    },
    "AgentAliasArn": {
      "base": null,
      "refs": {
        "AgentAlias$agentAliasArn": "<p>The Amazon Resource Name (ARN) of the alias of the agent.</p>"
      }
    },
    "AgentAliasHistoryEvent": {
      "base": "<p>Contains details about the history of the alias.</p>",
      "refs": {
        "AgentAliasHistoryEvents$member": null
      }
    },
    "AgentAliasHistoryEvents": {
      "base": null,
      "refs": {
        "AgentAlias$agentAliasHistoryEvents": "<p>Contains details about the history of the alias.</p>"
      }
    },
    "AgentAliasId": {
      "base": null,
      "refs": {
        "AgentAlias$agentAliasId": "<p>The unique identifier of the alias of the agent.</p>",
        "AgentAliasSummary$agentAliasId": "<p>Contains details about </p>",
        "DeleteAgentAliasRequest$agentAliasId": "<p>The unique identifier of the alias to delete.</p>",
        "DeleteAgentAliasResponse$agentAliasId": "<p>The unique identifier of the alias that was deleted.</p>",
        "GetAgentAliasRequest$agentAliasId": "<p>The unique identifier of the alias for which to get information.</p>",
        "UpdateAgentAliasRequest$agentAliasId": "<p>The unique identifier of the alias.</p>"
      }
    },
    "AgentAliasRoutingConfiguration": {
      "base": null,
      "refs": {
        "AgentAlias$routingConfiguration": "<p>Contains details about the routing configuration of the alias.</p>",
        "AgentAliasHistoryEvent$routingConfiguration": "<p>Contains details about the version of the agent with which the alias is associated.</p>",
        "AgentAliasSummary$routingConfiguration": "<p>Contains details about the version of the agent with which the alias is associated.</p>",
        "CreateAgentAliasRequest$routingConfiguration": "<p>Contains details about the routing configuration of the alias.</p>",
        "UpdateAgentAliasRequest$routingConfiguration": "<p>Contains details about the routing configuration of the alias.</p>"
      }
    },
    "AgentAliasRoutingConfigurationListItem": {
      "base": "<p>Contains details about the routing configuration of the alias.</p>",
      "refs": {
        "AgentAliasRoutingConfiguration$member": null
      }
    },
    "AgentAliasStatus": {
      "base": null,
      "refs": {
        "AgentAlias$agentAliasStatus": "<p>The status of the alias of the agent and whether it is ready for use. The following statuses are possible:</p> <ul> <li> <p>CREATING – The agent alias is being created.</p> </li> <li> <p>PREPARED – The agent alias is finished being created or updated and is ready to be invoked.</p> </li> <li> <p>FAILED – The agent alias API operation failed.</p> </li> <li> <p>UPDATING – The agent alias is being updated.</p> </li> <li> <p>DELETING – The agent alias is being deleted.</p> </li> </ul>",
        "AgentAliasSummary$agentAliasStatus": "<p>The status of the alias.</p>",
        "DeleteAgentAliasResponse$agentAliasStatus": "<p>The status of the alias.</p>"
      }
    },
    "AgentAliasSummaries": {
      "base": null,
      "refs": {
        "ListAgentAliasesResponse$agentAliasSummaries": "<p>A list of objects, each of which contains information about an alias of the agent.</p>"
      }
    },
    "AgentAliasSummary": {
      "base": "<p>Contains details about an alias of an agent.</p>",
      "refs": {
        "AgentAliasSummaries$member": null
      }
    },
    "AgentArn": {
      "base": null,
      "refs": {
        "Agent$agentArn": "<p>The Amazon Resource Name (ARN) of the agent.</p>",
        "AgentVersion$agentArn": "<p>The Amazon Resource Name (ARN) of the agent that the version belongs to.</p>"
      }
    },
    "AgentKnowledgeBase": {
      "base": "<p>Contains details about a knowledge base that is associated with an agent.</p>",
      "refs": {
        "AssociateAgentKnowledgeBaseResponse$agentKnowledgeBase": "<p>Contains details about the knowledge base that has been associated with the agent.</p>",
        "GetAgentKnowledgeBaseResponse$agentKnowledgeBase": "<p>Contains details about a knowledge base attached to an agent.</p>",
        "UpdateAgentKnowledgeBaseResponse$agentKnowledgeBase": "<p>Contains details about the knowledge base that has been associated with an agent.</p>"
      }
    },
    "AgentKnowledgeBaseSummaries": {
      "base": null,
      "refs": {
        "ListAgentKnowledgeBasesResponse$agentKnowledgeBaseSummaries": "<p>A list of objects, each of which contains information about a knowledge base associated with the agent.</p>"
      }
    },
    "AgentKnowledgeBaseSummary": {
      "base": "<p>Contains details about a knowledge base associated with an agent.</p>",
      "refs": {
        "AgentKnowledgeBaseSummaries$member": null
      }
    },
    "AgentRoleArn": {
      "base": null,
      "refs": {
        "Agent$agentResourceRoleArn": "<p>The Amazon Resource Name (ARN) of the IAM role with permissions to invoke API operations on the agent.</p>",
        "AgentVersion$agentResourceRoleArn": "<p>The Amazon Resource Name (ARN) of the IAM role with permissions to invoke API operations on the agent.</p>",
        "CreateAgentRequest$agentResourceRoleArn": "<p>The Amazon Resource Name (ARN) of the IAM role with permissions to invoke API operations on the agent.</p>",
        "UpdateAgentRequest$agentResourceRoleArn": "<p>The Amazon Resource Name (ARN) of the IAM role with permissions to invoke API operations on the agent.</p>"
      }
    },
    "AgentStatus": {
      "base": null,
      "refs": {
        "Agent$agentStatus": "<p>The status of the agent and whether it is ready for use. The following statuses are possible:</p> <ul> <li> <p>CREATING – The agent is being created.</p> </li> <li> <p>PREPARING – The agent is being prepared.</p> </li> <li> <p>PREPARED – The agent is prepared and ready to be invoked.</p> </li> <li> <p>NOT_PREPARED – The agent has been created but not yet prepared.</p> </li> <li> <p>FAILED – The agent API operation failed.</p> </li> <li> <p>UPDATING – The agent is being updated.</p> </li> <li> <p>DELETING – The agent is being deleted.</p> </li> </ul>",
        "AgentSummary$agentStatus": "<p>The status of the agent.</p>",
        "AgentVersion$agentStatus": "<p>The status of the agent that the version belongs to.</p>",
        "AgentVersionSummary$agentStatus": "<p>The status of the agent to which the version belongs.</p>",
        "DeleteAgentResponse$agentStatus": "<p>The status of the agent.</p>",
        "DeleteAgentVersionResponse$agentStatus": "<p>The status of the agent version.</p>",
        "PrepareAgentResponse$agentStatus": "<p>The status of the <code>DRAFT</code> version and whether it is ready for use.</p>"
      }
    },
    "AgentSummaries": {
      "base": null,
      "refs": {
        "ListAgentsResponse$agentSummaries": "<p>A list of objects, each of which contains information about an agent.</p>"
      }
    },
    "AgentSummary": {
      "base": "<p>Contains details about an agent.</p>",
      "refs": {
        "AgentSummaries$member": null
      }
    },
    "AgentVersion": {
      "base": "<p>Contains details about a version of an agent.</p>",
      "refs": {
        "GetAgentVersionResponse$agentVersion": "<p>Contains details about the version of the agent.</p>"
      }
    },
    "AgentVersionSummaries": {
      "base": null,
      "refs": {
        "ListAgentVersionsResponse$agentVersionSummaries": "<p>A list of objects, each of which contains information about a version of the agent.</p>"
      }
    },
    "AgentVersionSummary": {
      "base": "<p>Contains details about a version of an agent.</p>",
      "refs": {
        "AgentVersionSummaries$member": null
      }
    },
    "AssociateAgentKnowledgeBaseRequest": {
      "base": null,
      "refs": {
      }
    },
    "AssociateAgentKnowledgeBaseResponse": {
      "base": null,
      "refs": {
      }
    },
    "BasePromptTemplate": {
      "base": null,
      "refs": {
        "PromptConfiguration$basePromptTemplate": "<p>Defines the prompt template with which to replace the default prompt template. You can use placeholder variables in the base prompt template to customize the prompt. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-placeholders.html\">Prompt template placeholder variables</a>. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts-configure.html\">Configure the prompt templates</a>.</p>"
      }
    },
    "BedrockEmbeddingModelArn": {
      "base": null,
      "refs": {
        "VectorKnowledgeBaseConfiguration$embeddingModelArn": "<p>The Amazon Resource Name (ARN) of the model used to create vector embeddings for the knowledge base.</p>"
      }
    },
    "Boolean": {
      "base": null,
      "refs": {
        "DeleteAgentActionGroupRequest$skipResourceInUseCheck": "<p>By default, this value is <code>false</code> and deletion is stopped if the resource is in use. If you set it to <code>true</code>, the resource will be deleted even if the resource is in use.</p>",
        "DeleteAgentRequest$skipResourceInUseCheck": "<p>By default, this value is <code>false</code> and deletion is stopped if the resource is in use. If you set it to <code>true</code>, the resource will be deleted even if the resource is in use.</p>",
        "DeleteAgentVersionRequest$skipResourceInUseCheck": "<p>By default, this value is <code>false</code> and deletion is stopped if the resource is in use. If you set it to <code>true</code>, the resource will be deleted even if the resource is in use.</p>",
        "ParameterDetail$required": "<p>Whether the parameter is required for the agent to complete the function for action group invocation.</p>"
      }
    },
    "BucketOwnerAccountId": {
      "base": null,
      "refs": {
        "S3DataSourceConfiguration$bucketOwnerAccountId": "<p>The bucket account owner ID for the S3 bucket.</p>"
      }
    },
    "ChunkingConfiguration": {
      "base": "<p>Details about how to chunk the documents in the data source. A <i>chunk</i> refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.</p>",
      "refs": {
        "VectorIngestionConfiguration$chunkingConfiguration": "<p>Details about how to chunk the documents in the data source. A <i>chunk</i> refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.</p>"
      }
    },
    "ChunkingStrategy": {
      "base": null,
      "refs": {
        "ChunkingConfiguration$chunkingStrategy": "<p>Knowledge base can split your source data into chunks. A <i>chunk</i> refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. You have the following options for chunking your data. If you opt for <code>NONE</code>, then you may want to pre-process your files by splitting them up such that each file corresponds to a chunk.</p> <ul> <li> <p> <code>FIXED_SIZE</code> – Amazon Bedrock splits your source data into chunks of the approximate size that you set in the <code>fixedSizeChunkingConfiguration</code>.</p> </li> <li> <p> <code>NONE</code> – Amazon Bedrock treats each file as one chunk. If you choose this option, you may want to pre-process your documents by splitting them into separate files.</p> </li> </ul>"
      }
    },
    "ClientToken": {
      "base": null,
      "refs": {
        "Agent$clientToken": "<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
        "AgentActionGroup$clientToken": "<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
        "AgentAlias$clientToken": "<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
        "CreateAgentActionGroupRequest$clientToken": "<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
        "CreateAgentAliasRequest$clientToken": "<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
        "CreateAgentRequest$clientToken": "<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
        "CreateDataSourceRequest$clientToken": "<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
        "CreateKnowledgeBaseRequest$clientToken": "<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>",
        "StartIngestionJobRequest$clientToken": "<p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a>.</p>"
      }
    },
    "ColumnName": {
      "base": null,
      "refs": {
        "RdsFieldMapping$metadataField": "<p>The name of the field in which Amazon Bedrock stores metadata about the vector store.</p>",
        "RdsFieldMapping$primaryKeyField": "<p>The name of the field in which Amazon Bedrock stores the ID for each entry.</p>",
        "RdsFieldMapping$textField": "<p>The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.</p>",
        "RdsFieldMapping$vectorField": "<p>The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.</p>"
      }
    },
    "ConflictException": {
      "base": "<p>There was a conflict performing an operation.</p>",
      "refs": {
      }
    },
    "CreateAgentActionGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateAgentActionGroupResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateAgentAliasRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateAgentAliasResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateAgentRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateAgentResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateDataSourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateDataSourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateKnowledgeBaseRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateKnowledgeBaseResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreationMode": {
      "base": null,
      "refs": {
        "PromptConfiguration$parserMode": "<p>Specifies whether to override the default parser Lambda function when parsing the raw foundation model output in the part of the agent sequence defined by the <code>promptType</code>. If you set the field as <code>OVERRIDEN</code>, the <code>overrideLambda</code> field in the <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html\">PromptOverrideConfiguration</a> must be specified with the ARN of a Lambda function.</p>",
        "PromptConfiguration$promptCreationMode": "<p>Specifies whether to override the default prompt template for this <code>promptType</code>. Set this value to <code>OVERRIDDEN</code> to use the prompt that you provide in the <code>basePromptTemplate</code>. If you leave it as <code>DEFAULT</code>, the agent uses a default prompt template.</p>"
      }
    },
    "CustomControlMethod": {
      "base": null,
      "refs": {
        "ActionGroupExecutor$customControl": "<p>To return the action group invocation results directly in the <code>InvokeAgent</code> response, specify <code>RETURN_CONTROL</code>.</p>"
      }
    },
    "DataDeletionPolicy": {
      "base": null,
      "refs": {
        "CreateDataSourceRequest$dataDeletionPolicy": "<p>The data deletion policy assigned to the data source.</p>",
        "DataSource$dataDeletionPolicy": "<p>The data deletion policy for a data source.</p>",
        "UpdateDataSourceRequest$dataDeletionPolicy": "<p>The data deletion policy of the updated data source.</p>"
      }
    },
    "DataSource": {
      "base": "<p>Contains details about a data source.</p>",
      "refs": {
        "CreateDataSourceResponse$dataSource": "<p>Contains details about the data source.</p>",
        "GetDataSourceResponse$dataSource": "<p>Contains details about the data source.</p>",
        "UpdateDataSourceResponse$dataSource": "<p>Contains details about the data source.</p>"
      }
    },
    "DataSourceConfiguration": {
      "base": "<p>Contains details about how a data source is stored.</p>",
      "refs": {
        "CreateDataSourceRequest$dataSourceConfiguration": "<p>Contains metadata about where the data source is stored.</p>",
        "DataSource$dataSourceConfiguration": "<p>Contains details about how the data source is stored.</p>",
        "UpdateDataSourceRequest$dataSourceConfiguration": "<p>Contains details about the storage configuration of the data source.</p>"
      }
    },
    "DataSourceStatus": {
      "base": null,
      "refs": {
        "DataSource$status": "<p>The status of the data source. The following statuses are possible:</p> <ul> <li> <p>Available – The data source has been created and is ready for ingestion into the knowledge base.</p> </li> <li> <p>Deleting – The data source is being deleted.</p> </li> </ul>",
        "DataSourceSummary$status": "<p>The status of the data source.</p>",
        "DeleteDataSourceResponse$status": "<p>The status of the data source.</p>"
      }
    },
    "DataSourceSummaries": {
      "base": null,
      "refs": {
        "ListDataSourcesResponse$dataSourceSummaries": "<p>A list of objects, each of which contains information about a data source.</p>"
      }
    },
    "DataSourceSummary": {
      "base": "<p>Contains details about a data source.</p>",
      "refs": {
        "DataSourceSummaries$member": null
      }
    },
    "DataSourceType": {
      "base": null,
      "refs": {
        "DataSourceConfiguration$type": "<p>The type of storage for the data source.</p>"
      }
    },
    "DateTimestamp": {
      "base": null,
      "refs": {
        "ActionGroupSummary$updatedAt": "<p>The time at which the action group was last updated.</p>",
        "Agent$createdAt": "<p>The time at which the agent was created.</p>",
        "Agent$preparedAt": "<p>The time at which the agent was last prepared.</p>",
        "Agent$updatedAt": "<p>The time at which the agent was last updated.</p>",
        "AgentActionGroup$createdAt": "<p>The time at which the action group was created.</p>",
        "AgentActionGroup$updatedAt": "<p>The time at which the action group was last updated.</p>",
        "AgentAlias$createdAt": "<p>The time at which the alias of the agent was created.</p>",
        "AgentAlias$updatedAt": "<p>The time at which the alias was last updated.</p>",
        "AgentAliasHistoryEvent$endDate": "<p>The date that the alias stopped being associated to the version in the <code>routingConfiguration</code> object</p>",
        "AgentAliasHistoryEvent$startDate": "<p>The date that the alias began being associated to the version in the <code>routingConfiguration</code> object.</p>",
        "AgentAliasSummary$createdAt": "<p>The time at which the alias of the agent was created.</p>",
        "AgentAliasSummary$updatedAt": "<p>The time at which the alias was last updated.</p>",
        "AgentKnowledgeBase$createdAt": "<p>The time at which the association between the agent and the knowledge base was created.</p>",
        "AgentKnowledgeBase$updatedAt": "<p>The time at which the association between the agent and the knowledge base was last updated.</p>",
        "AgentKnowledgeBaseSummary$updatedAt": "<p>The time at which the knowledge base associated with an agent was last updated.</p>",
        "AgentSummary$updatedAt": "<p>The time at which the agent was last updated.</p>",
        "AgentVersion$createdAt": "<p>The time at which the version was created.</p>",
        "AgentVersion$updatedAt": "<p>The time at which the version was last updated.</p>",
        "AgentVersionSummary$createdAt": "<p>The time at which the version was created.</p>",
        "AgentVersionSummary$updatedAt": "<p>The time at which the version was last updated.</p>",
        "DataSource$createdAt": "<p>The time at which the data source was created.</p>",
        "DataSource$updatedAt": "<p>The time at which the data source was last updated.</p>",
        "DataSourceSummary$updatedAt": "<p>The time at which the data source was last updated.</p>",
        "IngestionJob$startedAt": "<p>The time at which the ingestion job started.</p>",
        "IngestionJob$updatedAt": "<p>The time at which the ingestion job was last updated.</p>",
        "IngestionJobSummary$startedAt": "<p>The time at which the ingestion job was started.</p>",
        "IngestionJobSummary$updatedAt": "<p>The time at which the ingestion job was last updated.</p>",
        "KnowledgeBase$createdAt": "<p>The time at which the knowledge base was created.</p>",
        "KnowledgeBase$updatedAt": "<p>The time at which the knowledge base was last updated.</p>",
        "KnowledgeBaseSummary$updatedAt": "<p>The time at which the knowledge base was last updated.</p>",
        "PrepareAgentResponse$preparedAt": "<p>The time at which the <code>DRAFT</code> version of the agent was last prepared.</p>"
      }
    },
    "DeleteAgentActionGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAgentActionGroupResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAgentAliasRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAgentAliasResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAgentRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAgentResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAgentVersionRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAgentVersionResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteDataSourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteDataSourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteKnowledgeBaseRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteKnowledgeBaseResponse": {
      "base": null,
      "refs": {
      }
    },
    "Description": {
      "base": null,
      "refs": {
        "ActionGroupSummary$description": "<p>The description of the action group.</p>",
        "Agent$description": "<p>The description of the agent.</p>",
        "AgentActionGroup$description": "<p>The description of the action group.</p>",
        "AgentAlias$description": "<p>The description of the alias of the agent.</p>",
        "AgentAliasSummary$description": "<p>The description of the alias.</p>",
        "AgentKnowledgeBase$description": "<p>The description of the association between the agent and the knowledge base.</p>",
        "AgentKnowledgeBaseSummary$description": "<p>The description of the knowledge base associated with an agent.</p>",
        "AgentSummary$description": "<p>The description of the agent.</p>",
        "AgentVersion$description": "<p>The description of the version.</p>",
        "AgentVersionSummary$description": "<p>The description of the version of the agent.</p>",
        "AssociateAgentKnowledgeBaseRequest$description": "<p>A description of what the agent should use the knowledge base for.</p>",
        "CreateAgentActionGroupRequest$description": "<p>A description of the action group.</p>",
        "CreateAgentAliasRequest$description": "<p>A description of the alias of the agent.</p>",
        "CreateAgentRequest$description": "<p>A description of the agent.</p>",
        "CreateDataSourceRequest$description": "<p>A description of the data source.</p>",
        "CreateKnowledgeBaseRequest$description": "<p>A description of the knowledge base.</p>",
        "DataSource$description": "<p>The description of the data source.</p>",
        "DataSourceSummary$description": "<p>The description of the data source.</p>",
        "IngestionJob$description": "<p>The description of the ingestion job.</p>",
        "IngestionJobSummary$description": "<p>The description of the ingestion job.</p>",
        "KnowledgeBase$description": "<p>The description of the knowledge base.</p>",
        "KnowledgeBaseSummary$description": "<p>The description of the knowledge base.</p>",
        "StartIngestionJobRequest$description": "<p>A description of the ingestion job.</p>",
        "UpdateAgentActionGroupRequest$description": "<p>Specifies a new name for the action group.</p>",
        "UpdateAgentAliasRequest$description": "<p>Specifies a new description for the alias.</p>",
        "UpdateAgentKnowledgeBaseRequest$description": "<p>Specifies a new description for the knowledge base associated with an agent.</p>",
        "UpdateAgentRequest$description": "<p>Specifies a new description of the agent.</p>",
        "UpdateDataSourceRequest$description": "<p>Specifies a new description for the data source.</p>",
        "UpdateKnowledgeBaseRequest$description": "<p>Specifies a new description for the knowledge base.</p>"
      }
    },
    "DisassociateAgentKnowledgeBaseRequest": {
      "base": null,
      "refs": {
      }
    },
    "DisassociateAgentKnowledgeBaseResponse": {
      "base": null,
      "refs": {
      }
    },
    "DraftVersion": {
      "base": null,
      "refs": {
        "Agent$agentVersion": "<p>The version of the agent.</p>",
        "AssociateAgentKnowledgeBaseRequest$agentVersion": "<p>The version of the agent with which you want to associate the knowledge base.</p>",
        "CreateAgentActionGroupRequest$agentVersion": "<p>The version of the agent for which to create the action group.</p>",
        "DeleteAgentActionGroupRequest$agentVersion": "<p>The version of the agent that the action group belongs to.</p>",
        "DisassociateAgentKnowledgeBaseRequest$agentVersion": "<p>The version of the agent from which to disassociate the knowledge base.</p>",
        "UpdateAgentActionGroupRequest$agentVersion": "<p>The unique identifier of the agent version for which to update the action group.</p>",
        "UpdateAgentKnowledgeBaseRequest$agentVersion": "<p>The version of the agent associated with the knowledge base that you want to update.</p>"
      }
    },
    "FailureReason": {
      "base": null,
      "refs": {
        "FailureReasons$member": null
      }
    },
    "FailureReasons": {
      "base": null,
      "refs": {
        "Agent$failureReasons": "<p>Contains reasons that the agent-related API that you invoked failed.</p>",
        "AgentAlias$failureReasons": "<p>Information on the failure of Provisioned Throughput assigned to an agent alias.</p>",
        "AgentVersion$failureReasons": "<p>A list of reasons that the API operation on the version failed.</p>",
        "DataSource$failureReasons": "<p>The detailed reasons on the failure to delete a data source.</p>",
        "IngestionJob$failureReasons": "<p>A list of reasons that the ingestion job failed.</p>",
        "KnowledgeBase$failureReasons": "<p>A list of reasons that the API operation on the knowledge base failed.</p>"
      }
    },
    "FieldName": {
      "base": null,
      "refs": {
        "MongoDbAtlasFieldMapping$metadataField": "<p>The name of the field in which Amazon Bedrock stores metadata about the vector store.</p>",
        "MongoDbAtlasFieldMapping$textField": "<p>The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.</p>",
        "MongoDbAtlasFieldMapping$vectorField": "<p>The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.</p>",
        "OpenSearchServerlessFieldMapping$metadataField": "<p>The name of the field in which Amazon Bedrock stores metadata about the vector store.</p>",
        "OpenSearchServerlessFieldMapping$textField": "<p>The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.</p>",
        "OpenSearchServerlessFieldMapping$vectorField": "<p>The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.</p>",
        "PineconeFieldMapping$metadataField": "<p>The name of the field in which Amazon Bedrock stores metadata about the vector store.</p>",
        "PineconeFieldMapping$textField": "<p>The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.</p>",
        "RedisEnterpriseCloudFieldMapping$metadataField": "<p>The name of the field in which Amazon Bedrock stores metadata about the vector store.</p>",
        "RedisEnterpriseCloudFieldMapping$textField": "<p>The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.</p>",
        "RedisEnterpriseCloudFieldMapping$vectorField": "<p>The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.</p>"
      }
    },
    "FixedSizeChunkingConfiguration": {
      "base": "<p>Configurations for when you choose fixed-size chunking. If you set the <code>chunkingStrategy</code> as <code>NONE</code>, exclude this field.</p>",
      "refs": {
        "ChunkingConfiguration$fixedSizeChunkingConfiguration": "<p>Configurations for when you choose fixed-size chunking. If you set the <code>chunkingStrategy</code> as <code>NONE</code>, exclude this field.</p>"
      }
    },
    "FixedSizeChunkingConfigurationMaxTokensInteger": {
      "base": null,
      "refs": {
        "FixedSizeChunkingConfiguration$maxTokens": "<p>The maximum number of tokens to include in a chunk.</p>"
      }
    },
    "FixedSizeChunkingConfigurationOverlapPercentageInteger": {
      "base": null,
      "refs": {
        "FixedSizeChunkingConfiguration$overlapPercentage": "<p>The percentage of overlap between adjacent chunks of a data source.</p>"
      }
    },
    "Function": {
      "base": "<p>Defines parameters that the agent needs to invoke from the user to complete the function. Corresponds to an action in an action group.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_CreateAgentActionGroup.html#API_agent_CreateAgentActionGroup_RequestSyntax\">CreateAgentActionGroup request</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_CreateAgentActionGroup.html#API_agent_CreateAgentActionGroup_ResponseSyntax\">CreateAgentActionGroup response</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_UpdateAgentActionGroup.html#API_agent_UpdateAgentActionGroup_RequestSyntax\">UpdateAgentActionGroup request</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_UpdateAgentActionGroup.html#API_agent_UpdateAgentActionGroup_ResponseSyntax\">UpdateAgentActionGroup response</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_GetAgentActionGroup.html#API_agent_GetAgentActionGroup_ResponseSyntax\">GetAgentActionGroup response</a> </p> </li> </ul>",
      "refs": {
        "Functions$member": null
      }
    },
    "FunctionDescription": {
      "base": null,
      "refs": {
        "Function$description": "<p>A description of the function and its purpose.</p>"
      }
    },
    "FunctionSchema": {
      "base": "<p>Defines functions that each define parameters that the agent needs to invoke from the user. Each function represents an action in an action group.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_CreateAgentActionGroup.html#API_agent_CreateAgentActionGroup_RequestSyntax\">CreateAgentActionGroup request</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_CreateAgentActionGroup.html#API_agent_CreateAgentActionGroup_ResponseSyntax\">CreateAgentActionGroup response</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_UpdateAgentActionGroup.html#API_agent_UpdateAgentActionGroup_RequestSyntax\">UpdateAgentActionGroup request</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_UpdateAgentActionGroup.html#API_agent_UpdateAgentActionGroup_ResponseSyntax\">UpdateAgentActionGroup response</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_GetAgentActionGroup.html#API_agent_GetAgentActionGroup_ResponseSyntax\">GetAgentActionGroup response</a> </p> </li> </ul>",
      "refs": {
        "AgentActionGroup$functionSchema": "<p>Defines functions that each define parameters that the agent needs to invoke from the user. Each function represents an action in an action group.</p>",
        "CreateAgentActionGroupRequest$functionSchema": "<p>Contains details about the function schema for the action group or the JSON or YAML-formatted payload defining the schema.</p>",
        "UpdateAgentActionGroupRequest$functionSchema": "<p>Contains details about the function schema for the action group or the JSON or YAML-formatted payload defining the schema.</p>"
      }
    },
    "Functions": {
      "base": null,
      "refs": {
        "FunctionSchema$functions": "<p>A list of functions that each define an action in the action group.</p>"
      }
    },
    "GetAgentActionGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetAgentActionGroupResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetAgentAliasRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetAgentAliasResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetAgentKnowledgeBaseRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetAgentKnowledgeBaseResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetAgentRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetAgentResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetAgentVersionRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetAgentVersionResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetDataSourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetDataSourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetIngestionJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetIngestionJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetKnowledgeBaseRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetKnowledgeBaseResponse": {
      "base": null,
      "refs": {
      }
    },
    "GuardrailConfiguration": {
      "base": "<p>The details of the guardrails configuration.</p>",
      "refs": {
        "Agent$guardrailConfiguration": "<p>The guardrails configuration assigned to the agent.</p>",
        "AgentSummary$guardrailConfiguration": "<p>The details of the guardrails configuration in the agent summary.</p>",
        "AgentVersion$guardrailConfiguration": "<p>The guardrails configuration assigned to the agent version.</p>",
        "AgentVersionSummary$guardrailConfiguration": "<p>The details of the guardrails configuration in the agent version summary.</p>",
        "CreateAgentRequest$guardrailConfiguration": "<p>The unique Guardrail configuration assigned to the agent when it is created.</p>",
        "UpdateAgentRequest$guardrailConfiguration": "<p>The unique Guardrail configuration assigned to the agent when it is updated.</p>"
      }
    },
    "GuardrailIdentifier": {
      "base": null,
      "refs": {
        "GuardrailConfiguration$guardrailIdentifier": "<p>The guardrails identifier assigned to the guardrails configuration.</p>"
      }
    },
    "GuardrailVersion": {
      "base": null,
      "refs": {
        "GuardrailConfiguration$guardrailVersion": "<p>The guardrails version assigned to the guardrails configuration.</p>"
      }
    },
    "Id": {
      "base": null,
      "refs": {
        "ActionGroupSummary$actionGroupId": "<p>The unique identifier of the action group.</p>",
        "Agent$agentId": "<p>The unique identifier of the agent.</p>",
        "AgentActionGroup$actionGroupId": "<p>The unique identifier of the action group.</p>",
        "AgentActionGroup$agentId": "<p>The unique identifier of the agent to which the action group belongs.</p>",
        "AgentAlias$agentId": "<p>The unique identifier of the agent.</p>",
        "AgentKnowledgeBase$agentId": "<p>The unique identifier of the agent with which the knowledge base is associated.</p>",
        "AgentKnowledgeBase$knowledgeBaseId": "<p>The unique identifier of the association between the agent and the knowledge base.</p>",
        "AgentKnowledgeBaseSummary$knowledgeBaseId": "<p>The unique identifier of the knowledge base associated with an agent.</p>",
        "AgentSummary$agentId": "<p>The unique identifier of the agent.</p>",
        "AgentVersion$agentId": "<p>The unique identifier of the agent that the version belongs to.</p>",
        "AssociateAgentKnowledgeBaseRequest$agentId": "<p>The unique identifier of the agent with which you want to associate the knowledge base.</p>",
        "AssociateAgentKnowledgeBaseRequest$knowledgeBaseId": "<p>The unique identifier of the knowledge base to associate with the agent.</p>",
        "CreateAgentActionGroupRequest$agentId": "<p>The unique identifier of the agent for which to create the action group.</p>",
        "CreateAgentAliasRequest$agentId": "<p>The unique identifier of the agent.</p>",
        "CreateDataSourceRequest$knowledgeBaseId": "<p>The unique identifier of the knowledge base to which to add the data source.</p>",
        "DataSource$dataSourceId": "<p>The unique identifier of the data source.</p>",
        "DataSource$knowledgeBaseId": "<p>The unique identifier of the knowledge base to which the data source belongs.</p>",
        "DataSourceSummary$dataSourceId": "<p>The unique identifier of the data source.</p>",
        "DataSourceSummary$knowledgeBaseId": "<p>The unique identifier of the knowledge base to which the data source belongs.</p>",
        "DeleteAgentActionGroupRequest$actionGroupId": "<p>The unique identifier of the action group to delete.</p>",
        "DeleteAgentActionGroupRequest$agentId": "<p>The unique identifier of the agent that the action group belongs to.</p>",
        "DeleteAgentAliasRequest$agentId": "<p>The unique identifier of the agent that the alias belongs to.</p>",
        "DeleteAgentAliasResponse$agentId": "<p>The unique identifier of the agent that the alias belongs to.</p>",
        "DeleteAgentRequest$agentId": "<p>The unique identifier of the agent to delete.</p>",
        "DeleteAgentResponse$agentId": "<p>The unique identifier of the agent that was deleted.</p>",
        "DeleteAgentVersionRequest$agentId": "<p>The unique identifier of the agent that the version belongs to.</p>",
        "DeleteAgentVersionResponse$agentId": "<p>The unique identifier of the agent that the version belongs to.</p>",
        "DeleteDataSourceRequest$dataSourceId": "<p>The unique identifier of the data source to delete.</p>",
        "DeleteDataSourceRequest$knowledgeBaseId": "<p>The unique identifier of the knowledge base from which to delete the data source.</p>",
        "DeleteDataSourceResponse$dataSourceId": "<p>The unique identifier of the data source that was deleted.</p>",
        "DeleteDataSourceResponse$knowledgeBaseId": "<p>The unique identifier of the knowledge base to which the data source that was deleted belonged.</p>",
        "DeleteKnowledgeBaseRequest$knowledgeBaseId": "<p>The unique identifier of the knowledge base to delete.</p>",
        "DeleteKnowledgeBaseResponse$knowledgeBaseId": "<p>The unique identifier of the knowledge base that was deleted.</p>",
        "DisassociateAgentKnowledgeBaseRequest$agentId": "<p>The unique identifier of the agent from which to disassociate the knowledge base.</p>",
        "DisassociateAgentKnowledgeBaseRequest$knowledgeBaseId": "<p>The unique identifier of the knowledge base to disassociate.</p>",
        "GetAgentActionGroupRequest$actionGroupId": "<p>The unique identifier of the action group for which to get information.</p>",
        "GetAgentActionGroupRequest$agentId": "<p>The unique identifier of the agent that the action group belongs to.</p>",
        "GetAgentAliasRequest$agentId": "<p>The unique identifier of the agent to which the alias to get information belongs.</p>",
        "GetAgentKnowledgeBaseRequest$agentId": "<p>The unique identifier of the agent with which the knowledge base is associated.</p>",
        "GetAgentKnowledgeBaseRequest$knowledgeBaseId": "<p>The unique identifier of the knowledge base associated with the agent.</p>",
        "GetAgentRequest$agentId": "<p>The unique identifier of the agent.</p>",
        "GetAgentVersionRequest$agentId": "<p>The unique identifier of the agent.</p>",
        "GetDataSourceRequest$dataSourceId": "<p>The unique identifier of the data source.</p>",
        "GetDataSourceRequest$knowledgeBaseId": "<p>The unique identifier of the knowledge base that the data source was added to.</p>",
        "GetIngestionJobRequest$dataSourceId": "<p>The unique identifier of the data source in the ingestion job.</p>",
        "GetIngestionJobRequest$ingestionJobId": "<p>The unique identifier of the ingestion job.</p>",
        "GetIngestionJobRequest$knowledgeBaseId": "<p>The unique identifier of the knowledge base for which the ingestion job applies.</p>",
        "GetKnowledgeBaseRequest$knowledgeBaseId": "<p>The unique identifier of the knowledge base for which to get information.</p>",
        "IngestionJob$dataSourceId": "<p>The unique identifier of the ingested data source.</p>",
        "IngestionJob$ingestionJobId": "<p>The unique identifier of the ingestion job.</p>",
        "IngestionJob$knowledgeBaseId": "<p>The unique identifier of the knowledge base to which the data source is being added.</p>",
        "IngestionJobSummary$dataSourceId": "<p>The unique identifier of the data source in the ingestion job.</p>",
        "IngestionJobSummary$ingestionJobId": "<p>The unique identifier of the ingestion job.</p>",
        "IngestionJobSummary$knowledgeBaseId": "<p>The unique identifier of the knowledge base to which the data source is added.</p>",
        "KnowledgeBase$knowledgeBaseId": "<p>The unique identifier of the knowledge base.</p>",
        "KnowledgeBaseSummary$knowledgeBaseId": "<p>The unique identifier of the knowledge base.</p>",
        "ListAgentActionGroupsRequest$agentId": "<p>The unique identifier of the agent.</p>",
        "ListAgentAliasesRequest$agentId": "<p>The unique identifier of the agent.</p>",
        "ListAgentKnowledgeBasesRequest$agentId": "<p>The unique identifier of the agent for which to return information about knowledge bases associated with it.</p>",
        "ListAgentVersionsRequest$agentId": "<p>The unique identifier of the agent.</p>",
        "ListDataSourcesRequest$knowledgeBaseId": "<p>The unique identifier of the knowledge base for which to return a list of information.</p>",
        "ListIngestionJobsRequest$dataSourceId": "<p>The unique identifier of the data source for which to return ingestion jobs.</p>",
        "ListIngestionJobsRequest$knowledgeBaseId": "<p>The unique identifier of the knowledge base for which to return ingestion jobs.</p>",
        "PrepareAgentRequest$agentId": "<p>The unique identifier of the agent for which to create a <code>DRAFT</code> version.</p>",
        "PrepareAgentResponse$agentId": "<p>The unique identifier of the agent for which the <code>DRAFT</code> version was created.</p>",
        "StartIngestionJobRequest$dataSourceId": "<p>The unique identifier of the data source to ingest.</p>",
        "StartIngestionJobRequest$knowledgeBaseId": "<p>The unique identifier of the knowledge base to which to add the data source.</p>",
        "UpdateAgentActionGroupRequest$actionGroupId": "<p>The unique identifier of the action group.</p>",
        "UpdateAgentActionGroupRequest$agentId": "<p>The unique identifier of the agent for which to update the action group.</p>",
        "UpdateAgentAliasRequest$agentId": "<p>The unique identifier of the agent.</p>",
        "UpdateAgentKnowledgeBaseRequest$agentId": "<p>The unique identifier of the agent associated with the knowledge base that you want to update.</p>",
        "UpdateAgentKnowledgeBaseRequest$knowledgeBaseId": "<p>The unique identifier of the knowledge base that has been associated with an agent.</p>",
        "UpdateAgentRequest$agentId": "<p>The unique identifier of the agent.</p>",
        "UpdateDataSourceRequest$dataSourceId": "<p>The unique identifier of the data source.</p>",
        "UpdateDataSourceRequest$knowledgeBaseId": "<p>The unique identifier of the knowledge base to which the data source belongs.</p>",
        "UpdateKnowledgeBaseRequest$knowledgeBaseId": "<p>The unique identifier of the knowledge base to update.</p>"
      }
    },
    "InferenceConfiguration": {
      "base": "<p>Contains inference parameters to use when the agent invokes a foundation model in the part of the agent sequence defined by the <code>promptType</code>. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html\">Inference parameters for foundation models</a>.</p>",
      "refs": {
        "PromptConfiguration$inferenceConfiguration": "<p>Contains inference parameters to use when the agent invokes a foundation model in the part of the agent sequence defined by the <code>promptType</code>. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html\">Inference parameters for foundation models</a>.</p>"
      }
    },
    "IngestionJob": {
      "base": "<p>Contains details about an ingestion job, which converts a data source to embeddings for a vector store in knowledge base.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_StartIngestionJob.html#API_agent_StartIngestionJob_ResponseSyntax\">StartIngestionJob response</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_GetIngestionJob.html#API_agent_GetIngestionJob_ResponseSyntax\">GetIngestionJob response</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_ListIngestionJobs.html#API_agent_ListIngestionJobs_ResponseSyntax\">ListIngestionJob response</a> </p> </li> </ul>",
      "refs": {
        "GetIngestionJobResponse$ingestionJob": "<p>Contains details about the ingestion job.</p>",
        "StartIngestionJobResponse$ingestionJob": "<p>An object containing information about the ingestion job.</p>"
      }
    },
    "IngestionJobFilter": {
      "base": "<p>Defines a filter by which to filter the results.</p>",
      "refs": {
        "IngestionJobFilters$member": null
      }
    },
    "IngestionJobFilterAttribute": {
      "base": null,
      "refs": {
        "IngestionJobFilter$attribute": "<p>The attribute by which to filter the results.</p>"
      }
    },
    "IngestionJobFilterOperator": {
      "base": null,
      "refs": {
        "IngestionJobFilter$operator": "<p>The operation to carry out between the attribute and the values.</p>"
      }
    },
    "IngestionJobFilterValue": {
      "base": null,
      "refs": {
        "IngestionJobFilterValues$member": null
      }
    },
    "IngestionJobFilterValues": {
      "base": null,
      "refs": {
        "IngestionJobFilter$values": "<p>A list of values for the attribute.</p>"
      }
    },
    "IngestionJobFilters": {
      "base": null,
      "refs": {
        "ListIngestionJobsRequest$filters": "<p>Contains a definition of a filter for which to filter the results.</p>"
      }
    },
    "IngestionJobSortBy": {
      "base": "<p>Parameters by which to sort the results.</p>",
      "refs": {
        "ListIngestionJobsRequest$sortBy": "<p>Contains details about how to sort the results.</p>"
      }
    },
    "IngestionJobSortByAttribute": {
      "base": null,
      "refs": {
        "IngestionJobSortBy$attribute": "<p>The attribute by which to sort the results.</p>"
      }
    },
    "IngestionJobStatistics": {
      "base": "<p>Contains the statistics for the ingestion job.</p>",
      "refs": {
        "IngestionJob$statistics": "<p>Contains statistics about the ingestion job.</p>",
        "IngestionJobSummary$statistics": "<p>Contains statistics for the ingestion job.</p>"
      }
    },
    "IngestionJobStatus": {
      "base": null,
      "refs": {
        "IngestionJob$status": "<p>The status of the ingestion job.</p>",
        "IngestionJobSummary$status": "<p>The status of the ingestion job.</p>"
      }
    },
    "IngestionJobSummaries": {
      "base": null,
      "refs": {
        "ListIngestionJobsResponse$ingestionJobSummaries": "<p>A list of objects, each of which contains information about an ingestion job.</p>"
      }
    },
    "IngestionJobSummary": {
      "base": "<p>Contains details about an ingestion job.</p>",
      "refs": {
        "IngestionJobSummaries$member": null
      }
    },
    "Instruction": {
      "base": null,
      "refs": {
        "Agent$instruction": "<p>Instructions that tell the agent what it should do and how it should interact with users.</p>",
        "AgentVersion$instruction": "<p>The instructions provided to the agent.</p>",
        "CreateAgentRequest$instruction": "<p>Instructions that tell the agent what it should do and how it should interact with users.</p>",
        "UpdateAgentRequest$instruction": "<p>Specifies new instructions that tell the agent what it should do and how it should interact with users.</p>"
      }
    },
    "InternalServerException": {
      "base": "<p>An internal server error occurred. Retry your request.</p>",
      "refs": {
      }
    },
    "KmsKeyArn": {
      "base": null,
      "refs": {
        "Agent$customerEncryptionKeyArn": "<p>The Amazon Resource Name (ARN) of the KMS key that encrypts the agent.</p>",
        "AgentVersion$customerEncryptionKeyArn": "<p>The Amazon Resource Name (ARN) of the KMS key that encrypts the agent.</p>",
        "CreateAgentRequest$customerEncryptionKeyArn": "<p>The Amazon Resource Name (ARN) of the KMS key with which to encrypt the agent.</p>",
        "ServerSideEncryptionConfiguration$kmsKeyArn": "<p>The Amazon Resource Name (ARN) of the KMS key used to encrypt the resource.</p>",
        "UpdateAgentRequest$customerEncryptionKeyArn": "<p>The Amazon Resource Name (ARN) of the KMS key with which to encrypt the agent.</p>"
      }
    },
    "KnowledgeBase": {
      "base": "<p>Contains information about a knowledge base.</p>",
      "refs": {
        "CreateKnowledgeBaseResponse$knowledgeBase": "<p>Contains details about the knowledge base.</p>",
        "GetKnowledgeBaseResponse$knowledgeBase": "<p>Contains details about the knowledge base.</p>",
        "UpdateKnowledgeBaseResponse$knowledgeBase": "<p>Contains details about the knowledge base.</p>"
      }
    },
    "KnowledgeBaseArn": {
      "base": null,
      "refs": {
        "KnowledgeBase$knowledgeBaseArn": "<p>The Amazon Resource Name (ARN) of the knowledge base.</p>"
      }
    },
    "KnowledgeBaseConfiguration": {
      "base": "<p>Contains details about the embeddings configuration of the knowledge base.</p>",
      "refs": {
        "CreateKnowledgeBaseRequest$knowledgeBaseConfiguration": "<p>Contains details about the embeddings model used for the knowledge base.</p>",
        "KnowledgeBase$knowledgeBaseConfiguration": "<p>Contains details about the embeddings configuration of the knowledge base.</p>",
        "UpdateKnowledgeBaseRequest$knowledgeBaseConfiguration": "<p>Specifies the configuration for the embeddings model used for the knowledge base. You must use the same configuration as when the knowledge base was created.</p>"
      }
    },
    "KnowledgeBaseRoleArn": {
      "base": null,
      "refs": {
        "CreateKnowledgeBaseRequest$roleArn": "<p>The Amazon Resource Name (ARN) of the IAM role with permissions to invoke API operations on the knowledge base.</p>",
        "KnowledgeBase$roleArn": "<p>The Amazon Resource Name (ARN) of the IAM role with permissions to invoke API operations on the knowledge base.</p>",
        "UpdateKnowledgeBaseRequest$roleArn": "<p>Specifies a different Amazon Resource Name (ARN) of the IAM role with permissions to invoke API operations on the knowledge base.</p>"
      }
    },
    "KnowledgeBaseState": {
      "base": null,
      "refs": {
        "AgentKnowledgeBase$knowledgeBaseState": "<p>Specifies whether to use the knowledge base or not when sending an <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html\">InvokeAgent</a> request.</p>",
        "AgentKnowledgeBaseSummary$knowledgeBaseState": "<p>Specifies whether the agent uses the knowledge base or not when sending an <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html\">InvokeAgent</a> request.</p>",
        "AssociateAgentKnowledgeBaseRequest$knowledgeBaseState": "<p>Specifies whether to use the knowledge base or not when sending an <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html\">InvokeAgent</a> request.</p>",
        "UpdateAgentKnowledgeBaseRequest$knowledgeBaseState": "<p>Specifies whether the agent uses the knowledge base or not when sending an <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html\">InvokeAgent</a> request.</p>"
      }
    },
    "KnowledgeBaseStatus": {
      "base": null,
      "refs": {
        "DeleteKnowledgeBaseResponse$status": "<p>The status of the knowledge base and whether it has been successfully deleted.</p>",
        "KnowledgeBase$status": "<p>The status of the knowledge base. The following statuses are possible:</p> <ul> <li> <p>CREATING – The knowledge base is being created.</p> </li> <li> <p>ACTIVE – The knowledge base is ready to be queried.</p> </li> <li> <p>DELETING – The knowledge base is being deleted.</p> </li> <li> <p>UPDATING – The knowledge base is being updated.</p> </li> <li> <p>FAILED – The knowledge base API operation failed.</p> </li> </ul>",
        "KnowledgeBaseSummary$status": "<p>The status of the knowledge base.</p>"
      }
    },
    "KnowledgeBaseStorageType": {
      "base": null,
      "refs": {
        "StorageConfiguration$type": "<p>The vector store service in which the knowledge base is stored.</p>"
      }
    },
    "KnowledgeBaseSummaries": {
      "base": null,
      "refs": {
        "ListKnowledgeBasesResponse$knowledgeBaseSummaries": "<p>A list of objects, each of which contains information about a knowledge base.</p>"
      }
    },
    "KnowledgeBaseSummary": {
      "base": "<p>Contains details about a knowledge base.</p>",
      "refs": {
        "KnowledgeBaseSummaries$member": null
      }
    },
    "KnowledgeBaseType": {
      "base": null,
      "refs": {
        "KnowledgeBaseConfiguration$type": "<p>The type of data that the data source is converted into for the knowledge base.</p>"
      }
    },
    "LambdaArn": {
      "base": null,
      "refs": {
        "ActionGroupExecutor$lambda": "<p>The Amazon Resource Name (ARN) of the Lambda function containing the business logic that is carried out upon invoking the action.</p>",
        "PromptOverrideConfiguration$overrideLambda": "<p>The ARN of the Lambda function to use when parsing the raw foundation model output in parts of the agent sequence. If you specify this field, at least one of the <code>promptConfigurations</code> must contain a <code>parserMode</code> value that is set to <code>OVERRIDDEN</code>. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/lambda-parser.html\">Parser Lambda function in Agents for Amazon Bedrock</a>.</p>"
      }
    },
    "ListAgentActionGroupsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAgentActionGroupsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAgentAliasesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAgentAliasesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAgentKnowledgeBasesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAgentKnowledgeBasesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAgentVersionsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAgentVersionsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAgentsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAgentsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListDataSourcesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListDataSourcesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListIngestionJobsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListIngestionJobsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListKnowledgeBasesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListKnowledgeBasesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "MaxResults": {
      "base": null,
      "refs": {
        "ListAgentActionGroupsRequest$maxResults": "<p>The maximum number of results to return in the response. If the total number of results is greater than this value, use the token returned in the response in the <code>nextToken</code> field when making another request to return the next batch of results.</p>",
        "ListAgentAliasesRequest$maxResults": "<p>The maximum number of results to return in the response. If the total number of results is greater than this value, use the token returned in the response in the <code>nextToken</code> field when making another request to return the next batch of results.</p>",
        "ListAgentKnowledgeBasesRequest$maxResults": "<p>The maximum number of results to return in the response. If the total number of results is greater than this value, use the token returned in the response in the <code>nextToken</code> field when making another request to return the next batch of results.</p>",
        "ListAgentVersionsRequest$maxResults": "<p>The maximum number of results to return in the response. If the total number of results is greater than this value, use the token returned in the response in the <code>nextToken</code> field when making another request to return the next batch of results.</p>",
        "ListAgentsRequest$maxResults": "<p>The maximum number of results to return in the response. If the total number of results is greater than this value, use the token returned in the response in the <code>nextToken</code> field when making another request to return the next batch of results.</p>",
        "ListDataSourcesRequest$maxResults": "<p>The maximum number of results to return in the response. If the total number of results is greater than this value, use the token returned in the response in the <code>nextToken</code> field when making another request to return the next batch of results.</p>",
        "ListIngestionJobsRequest$maxResults": "<p>The maximum number of results to return in the response. If the total number of results is greater than this value, use the token returned in the response in the <code>nextToken</code> field when making another request to return the next batch of results.</p>",
        "ListKnowledgeBasesRequest$maxResults": "<p>The maximum number of results to return in the response. If the total number of results is greater than this value, use the token returned in the response in the <code>nextToken</code> field when making another request to return the next batch of results.</p>"
      }
    },
    "MaximumLength": {
      "base": null,
      "refs": {
        "InferenceConfiguration$maximumLength": "<p>The maximum number of tokens to allow in the generated response.</p>"
      }
    },
    "ModelIdentifier": {
      "base": null,
      "refs": {
        "Agent$foundationModel": "<p>The foundation model used for orchestration by the agent.</p>",
        "AgentVersion$foundationModel": "<p>The foundation model that the version invokes.</p>",
        "CreateAgentRequest$foundationModel": "<p>The foundation model to be used for orchestration by the agent you create.</p>",
        "UpdateAgentRequest$foundationModel": "<p>Specifies a new foundation model to be used for orchestration by the agent.</p>"
      }
    },
    "MongoDbAtlasCollectionName": {
      "base": null,
      "refs": {
        "MongoDbAtlasConfiguration$collectionName": "<p>The collection name of the knowledge base in MongoDB Atlas.</p>"
      }
    },
    "MongoDbAtlasConfiguration": {
      "base": "<p>Contains details about the storage configuration of the knowledge base in MongoDB Atlas. </p>",
      "refs": {
        "StorageConfiguration$mongoDbAtlasConfiguration": "<p>Contains the storage configuration of the knowledge base in MongoDB Atlas.</p>"
      }
    },
    "MongoDbAtlasDatabaseName": {
      "base": null,
      "refs": {
        "MongoDbAtlasConfiguration$databaseName": "<p>The database name in your MongoDB Atlas cluster for your knowledge base.</p>"
      }
    },
    "MongoDbAtlasEndpoint": {
      "base": null,
      "refs": {
        "MongoDbAtlasConfiguration$endpoint": "<p>The endpoint URL of your MongoDB Atlas cluster for your knowledge base.</p>"
      }
    },
    "MongoDbAtlasEndpointServiceName": {
      "base": null,
      "refs": {
        "MongoDbAtlasConfiguration$endpointServiceName": "<p>The name of the VPC endpoint service in your account that is connected to your MongoDB Atlas cluster.</p>"
      }
    },
    "MongoDbAtlasFieldMapping": {
      "base": "<p>Contains the names of the fields to which to map information about the vector store.</p>",
      "refs": {
        "MongoDbAtlasConfiguration$fieldMapping": "<p>Contains the names of the fields to which to map information about the vector store.</p>"
      }
    },
    "MongoDbAtlasIndexName": {
      "base": null,
      "refs": {
        "MongoDbAtlasConfiguration$vectorIndexName": "<p>The name of the MongoDB Atlas vector search index.</p>"
      }
    },
    "Name": {
      "base": null,
      "refs": {
        "ActionGroupSummary$actionGroupName": "<p>The name of the action group.</p>",
        "Agent$agentName": "<p>The name of the agent.</p>",
        "AgentActionGroup$actionGroupName": "<p>The name of the action group.</p>",
        "AgentAlias$agentAliasName": "<p>The name of the alias of the agent.</p>",
        "AgentAliasSummary$agentAliasName": "<p>The name of the alias.</p>",
        "AgentSummary$agentName": "<p>The name of the agent.</p>",
        "AgentVersion$agentName": "<p>The name of the agent that the version belongs to.</p>",
        "AgentVersionSummary$agentName": "<p>The name of the agent to which the version belongs.</p>",
        "CreateAgentActionGroupRequest$actionGroupName": "<p>The name to give the action group.</p>",
        "CreateAgentAliasRequest$agentAliasName": "<p>The name of the alias.</p>",
        "CreateAgentRequest$agentName": "<p>A name for the agent that you create.</p>",
        "CreateDataSourceRequest$name": "<p>The name of the data source.</p>",
        "CreateKnowledgeBaseRequest$name": "<p>A name for the knowledge base.</p>",
        "DataSource$name": "<p>The name of the data source.</p>",
        "DataSourceSummary$name": "<p>The name of the data source.</p>",
        "Function$name": "<p>A name for the function.</p>",
        "KnowledgeBase$name": "<p>The name of the knowledge base.</p>",
        "KnowledgeBaseSummary$name": "<p>The name of the knowledge base.</p>",
        "ParameterMap$key": null,
        "UpdateAgentActionGroupRequest$actionGroupName": "<p>Specifies a new name for the action group.</p>",
        "UpdateAgentAliasRequest$agentAliasName": "<p>Specifies a new name for the alias.</p>",
        "UpdateAgentRequest$agentName": "<p>Specifies a new name for the agent.</p>",
        "UpdateDataSourceRequest$name": "<p>Specifies a new name for the data source.</p>",
        "UpdateKnowledgeBaseRequest$name": "<p>Specifies a new name for the knowledge base.</p>"
      }
    },
    "NextToken": {
      "base": null,
      "refs": {
        "ListAgentActionGroupsRequest$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, enter the token returned in the <code>nextToken</code> field in the response in this field to return the next batch of results.</p>",
        "ListAgentActionGroupsResponse$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, use this token when making another request in the <code>nextToken</code> field to return the next batch of results.</p>",
        "ListAgentAliasesRequest$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, enter the token returned in the <code>nextToken</code> field in the response in this field to return the next batch of results.</p>",
        "ListAgentAliasesResponse$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, use this token when making another request in the <code>nextToken</code> field to return the next batch of results.</p>",
        "ListAgentKnowledgeBasesRequest$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, enter the token returned in the <code>nextToken</code> field in the response in this field to return the next batch of results.</p>",
        "ListAgentKnowledgeBasesResponse$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, use this token when making another request in the <code>nextToken</code> field to return the next batch of results.</p>",
        "ListAgentVersionsRequest$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, enter the token returned in the <code>nextToken</code> field in the response in this field to return the next batch of results.</p>",
        "ListAgentVersionsResponse$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, use this token when making another request in the <code>nextToken</code> field to return the next batch of results.</p>",
        "ListAgentsRequest$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, enter the token returned in the <code>nextToken</code> field in the response in this field to return the next batch of results.</p>",
        "ListAgentsResponse$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, use this token when making another request in the <code>nextToken</code> field to return the next batch of results.</p>",
        "ListDataSourcesRequest$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, enter the token returned in the <code>nextToken</code> field in the response in this field to return the next batch of results.</p>",
        "ListDataSourcesResponse$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, use this token when making another request in the <code>nextToken</code> field to return the next batch of results.</p>",
        "ListIngestionJobsRequest$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, enter the token returned in the <code>nextToken</code> field in the response in this field to return the next batch of results.</p>",
        "ListIngestionJobsResponse$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, use this token when making another request in the <code>nextToken</code> field to return the next batch of results.</p>",
        "ListKnowledgeBasesRequest$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, enter the token returned in the <code>nextToken</code> field in the response in this field to return the next batch of results.</p>",
        "ListKnowledgeBasesResponse$nextToken": "<p>If the total number of results is greater than the <code>maxResults</code> value provided in the request, use this token when making another request in the <code>nextToken</code> field to return the next batch of results.</p>"
      }
    },
    "NonBlankString": {
      "base": null,
      "refs": {
        "AccessDeniedException$message": null,
        "ConflictException$message": null,
        "InternalServerException$message": null,
        "ResourceNotFoundException$message": null,
        "ServiceQuotaExceededException$message": null,
        "ThrottlingException$message": null,
        "ValidationException$message": null,
        "ValidationExceptionField$message": "<p>A message describing why this field failed validation.</p>",
        "ValidationExceptionField$name": "<p>The name of the field.</p>"
      }
    },
    "NumericalVersion": {
      "base": null,
      "refs": {
        "AgentVersion$version": "<p>The version number.</p>",
        "DeleteAgentVersionRequest$agentVersion": "<p>The version of the agent to delete.</p>",
        "DeleteAgentVersionResponse$agentVersion": "<p>The version that was deleted.</p>",
        "GetAgentVersionRequest$agentVersion": "<p>The version of the agent.</p>"
      }
    },
    "OpenSearchServerlessCollectionArn": {
      "base": null,
      "refs": {
        "OpenSearchServerlessConfiguration$collectionArn": "<p>The Amazon Resource Name (ARN) of the OpenSearch Service vector store.</p>"
      }
    },
    "OpenSearchServerlessConfiguration": {
      "base": "<p>Contains details about the storage configuration of the knowledge base in Amazon OpenSearch Service. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-oss.html\">Create a vector index in Amazon OpenSearch Service</a>.</p>",
      "refs": {
        "StorageConfiguration$opensearchServerlessConfiguration": "<p>Contains the storage configuration of the knowledge base in Amazon OpenSearch Service.</p>"
      }
    },
    "OpenSearchServerlessFieldMapping": {
      "base": "<p>Contains the names of the fields to which to map information about the vector store.</p>",
      "refs": {
        "OpenSearchServerlessConfiguration$fieldMapping": "<p>Contains the names of the fields to which to map information about the vector store.</p>"
      }
    },
    "OpenSearchServerlessIndexName": {
      "base": null,
      "refs": {
        "OpenSearchServerlessConfiguration$vectorIndexName": "<p>The name of the vector store.</p>"
      }
    },
    "ParameterDescription": {
      "base": null,
      "refs": {
        "ParameterDetail$description": "<p>A description of the parameter. Helps the foundation model determine how to elicit the parameters from the user.</p>"
      }
    },
    "ParameterDetail": {
      "base": "<p>Contains details about a parameter in a function for an action group.</p> <p>This data type is used in the following API operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_CreateAgentActionGroup.html#API_agent_CreateAgentActionGroup_RequestSyntax\">CreateAgentActionGroup request</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_CreateAgentActionGroup.html#API_agent_CreateAgentActionGroup_ResponseSyntax\">CreateAgentActionGroup response</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_UpdateAgentActionGroup.html#API_agent_UpdateAgentActionGroup_RequestSyntax\">UpdateAgentActionGroup request</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_UpdateAgentActionGroup.html#API_agent_UpdateAgentActionGroup_ResponseSyntax\">UpdateAgentActionGroup response</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_GetAgentActionGroup.html#API_agent_GetAgentActionGroup_ResponseSyntax\">GetAgentActionGroup response</a> </p> </li> </ul>",
      "refs": {
        "ParameterMap$value": null
      }
    },
    "ParameterMap": {
      "base": null,
      "refs": {
        "Function$parameters": "<p>The parameters that the agent elicits from the user to fulfill the function.</p>"
      }
    },
    "Payload": {
      "base": null,
      "refs": {
        "APISchema$payload": "<p>The JSON or YAML-formatted payload defining the OpenAPI schema for the action group. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html\">Action group OpenAPI schemas</a>.</p>"
      }
    },
    "PineconeConfiguration": {
      "base": "<p>Contains details about the storage configuration of the knowledge base in Pinecone. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-pinecone.html\">Create a vector index in Pinecone</a>.</p>",
      "refs": {
        "StorageConfiguration$pineconeConfiguration": "<p>Contains the storage configuration of the knowledge base in Pinecone.</p>"
      }
    },
    "PineconeConnectionString": {
      "base": null,
      "refs": {
        "PineconeConfiguration$connectionString": "<p>The endpoint URL for your index management page.</p>"
      }
    },
    "PineconeFieldMapping": {
      "base": "<p>Contains the names of the fields to which to map information about the vector store.</p>",
      "refs": {
        "PineconeConfiguration$fieldMapping": "<p>Contains the names of the fields to which to map information about the vector store.</p>"
      }
    },
    "PineconeNamespace": {
      "base": null,
      "refs": {
        "PineconeConfiguration$namespace": "<p>The namespace to be used to write new data to your database.</p>"
      }
    },
    "PrepareAgentRequest": {
      "base": null,
      "refs": {
      }
    },
    "PrepareAgentResponse": {
      "base": null,
      "refs": {
      }
    },
    "PrimitiveLong": {
      "base": null,
      "refs": {
        "IngestionJobStatistics$numberOfDocumentsDeleted": "<p>The number of source documents that was deleted.</p>",
        "IngestionJobStatistics$numberOfDocumentsFailed": "<p>The number of source documents that failed to be ingested.</p>",
        "IngestionJobStatistics$numberOfDocumentsScanned": "<p>The total number of source documents that were scanned. Includes new, updated, and unchanged documents.</p>",
        "IngestionJobStatistics$numberOfMetadataDocumentsModified": "<p>The number of metadata files that were updated or deleted.</p>",
        "IngestionJobStatistics$numberOfMetadataDocumentsScanned": "<p>The total number of metadata files that were scanned. Includes new, updated, and unchanged files.</p>",
        "IngestionJobStatistics$numberOfModifiedDocumentsIndexed": "<p>The number of modified source documents in the data source that were successfully indexed.</p>",
        "IngestionJobStatistics$numberOfNewDocumentsIndexed": "<p>The number of new source documents in the data source that were successfully indexed.</p>"
      }
    },
    "PromptConfiguration": {
      "base": "<p>Contains configurations to override a prompt template in one part of an agent sequence. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html\">Advanced prompts</a>.</p>",
      "refs": {
        "PromptConfigurations$member": null
      }
    },
    "PromptConfigurations": {
      "base": null,
      "refs": {
        "PromptOverrideConfiguration$promptConfigurations": "<p>Contains configurations to override a prompt template in one part of an agent sequence. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html\">Advanced prompts</a>.</p>"
      }
    },
    "PromptOverrideConfiguration": {
      "base": "<p>Contains configurations to override prompts in different parts of an agent sequence. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html\">Advanced prompts</a>.</p>",
      "refs": {
        "Agent$promptOverrideConfiguration": "<p>Contains configurations to override prompt templates in different parts of an agent sequence. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html\">Advanced prompts</a>.</p>",
        "AgentVersion$promptOverrideConfiguration": "<p>Contains configurations to override prompt templates in different parts of an agent sequence. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html\">Advanced prompts</a>.</p>",
        "CreateAgentRequest$promptOverrideConfiguration": "<p>Contains configurations to override prompts in different parts of an agent sequence. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html\">Advanced prompts</a>.</p>",
        "UpdateAgentRequest$promptOverrideConfiguration": "<p>Contains configurations to override prompts in different parts of an agent sequence. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html\">Advanced prompts</a>.</p>"
      }
    },
    "PromptState": {
      "base": null,
      "refs": {
        "PromptConfiguration$promptState": "<p>Specifies whether to allow the agent to carry out the step specified in the <code>promptType</code>. If you set this value to <code>DISABLED</code>, the agent skips that step. The default state for each <code>promptType</code> is as follows.</p> <ul> <li> <p> <code>PRE_PROCESSING</code> – <code>ENABLED</code> </p> </li> <li> <p> <code>ORCHESTRATION</code> – <code>ENABLED</code> </p> </li> <li> <p> <code>KNOWLEDGE_BASE_RESPONSE_GENERATION</code> – <code>ENABLED</code> </p> </li> <li> <p> <code>POST_PROCESSING</code> – <code>DISABLED</code> </p> </li> </ul>"
      }
    },
    "PromptType": {
      "base": null,
      "refs": {
        "PromptConfiguration$promptType": "<p>The step in the agent sequence that this prompt configuration applies to.</p>"
      }
    },
    "ProvisionedModelIdentifier": {
      "base": null,
      "refs": {
        "AgentAliasRoutingConfigurationListItem$provisionedThroughput": "<p>Information on the Provisioned Throughput assigned to an agent alias.</p>"
      }
    },
    "RdsArn": {
      "base": null,
      "refs": {
        "RdsConfiguration$resourceArn": "<p>The Amazon Resource Name (ARN) of the vector store.</p>"
      }
    },
    "RdsConfiguration": {
      "base": "<p>Contains details about the storage configuration of the knowledge base in Amazon RDS. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-rds.html\">Create a vector index in Amazon RDS</a>.</p>",
      "refs": {
        "StorageConfiguration$rdsConfiguration": "<p>Contains details about the storage configuration of the knowledge base in Amazon RDS. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-rds.html\">Create a vector index in Amazon RDS</a>.</p>"
      }
    },
    "RdsDatabaseName": {
      "base": null,
      "refs": {
        "RdsConfiguration$databaseName": "<p>The name of your Amazon RDS database.</p>"
      }
    },
    "RdsFieldMapping": {
      "base": "<p>Contains the names of the fields to which to map information about the vector store.</p>",
      "refs": {
        "RdsConfiguration$fieldMapping": "<p>Contains the names of the fields to which to map information about the vector store.</p>"
      }
    },
    "RdsTableName": {
      "base": null,
      "refs": {
        "RdsConfiguration$tableName": "<p>The name of the table in the database.</p>"
      }
    },
    "RecommendedAction": {
      "base": null,
      "refs": {
        "RecommendedActions$member": null
      }
    },
    "RecommendedActions": {
      "base": null,
      "refs": {
        "Agent$recommendedActions": "<p>Contains recommended actions to take for the agent-related API that you invoked to succeed.</p>",
        "AgentVersion$recommendedActions": "<p>A list of recommended actions to take for the failed API operation on the version to succeed.</p>"
      }
    },
    "RedisEnterpriseCloudConfiguration": {
      "base": "<p>Contains details about the storage configuration of the knowledge base in Redis Enterprise Cloud. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-oss.html\">Create a vector index in Redis Enterprise Cloud</a>.</p>",
      "refs": {
        "StorageConfiguration$redisEnterpriseCloudConfiguration": "<p>Contains the storage configuration of the knowledge base in Redis Enterprise Cloud.</p>"
      }
    },
    "RedisEnterpriseCloudEndpoint": {
      "base": null,
      "refs": {
        "RedisEnterpriseCloudConfiguration$endpoint": "<p>The endpoint URL of the Redis Enterprise Cloud database.</p>"
      }
    },
    "RedisEnterpriseCloudFieldMapping": {
      "base": "<p>Contains the names of the fields to which to map information about the vector store.</p>",
      "refs": {
        "RedisEnterpriseCloudConfiguration$fieldMapping": "<p>Contains the names of the fields to which to map information about the vector store.</p>"
      }
    },
    "RedisEnterpriseCloudIndexName": {
      "base": null,
      "refs": {
        "RedisEnterpriseCloudConfiguration$vectorIndexName": "<p>The name of the vector index.</p>"
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.</p>",
      "refs": {
      }
    },
    "S3BucketArn": {
      "base": null,
      "refs": {
        "S3DataSourceConfiguration$bucketArn": "<p>The Amazon Resource Name (ARN) of the bucket that contains the data source.</p>"
      }
    },
    "S3BucketName": {
      "base": null,
      "refs": {
        "S3Identifier$s3BucketName": "<p>The name of the S3 bucket.</p>"
      }
    },
    "S3DataSourceConfiguration": {
      "base": "<p>Contains information about the S3 configuration of the data source.</p>",
      "refs": {
        "DataSourceConfiguration$s3Configuration": "<p>Contains details about the configuration of the S3 object containing the data source.</p>"
      }
    },
    "S3Identifier": {
      "base": "<p>Contains information about the S3 object containing the resource.</p>",
      "refs": {
        "APISchema$s3": "<p>Contains details about the S3 object containing the OpenAPI schema for the action group. For more information, see <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html\">Action group OpenAPI schemas</a>.</p>"
      }
    },
    "S3ObjectKey": {
      "base": null,
      "refs": {
        "S3Identifier$s3ObjectKey": "<p>The S3 object key containing the resource.</p>"
      }
    },
    "S3Prefix": {
      "base": null,
      "refs": {
        "S3Prefixes$member": null
      }
    },
    "S3Prefixes": {
      "base": null,
      "refs": {
        "S3DataSourceConfiguration$inclusionPrefixes": "<p>A list of S3 prefixes that define the object containing the data sources. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-prefixes.html\">Organizing objects using prefixes</a>.</p>"
      }
    },
    "SecretArn": {
      "base": null,
      "refs": {
        "MongoDbAtlasConfiguration$credentialsSecretArn": "<p>The Amazon Resource Name (ARN) of the secret that you created in Secrets Manager that contains user credentials for your MongoDB Atlas cluster.</p>",
        "PineconeConfiguration$credentialsSecretArn": "<p>The Amazon Resource Name (ARN) of the secret that you created in Secrets Manager that is linked to your Pinecone API key.</p>",
        "RdsConfiguration$credentialsSecretArn": "<p>The Amazon Resource Name (ARN) of the secret that you created in Secrets Manager that is linked to your Amazon RDS database.</p>",
        "RedisEnterpriseCloudConfiguration$credentialsSecretArn": "<p>The Amazon Resource Name (ARN) of the secret that you created in Secrets Manager that is linked to your Redis Enterprise Cloud database.</p>"
      }
    },
    "ServerSideEncryptionConfiguration": {
      "base": "<p>Contains the configuration for server-side encryption.</p>",
      "refs": {
        "CreateDataSourceRequest$serverSideEncryptionConfiguration": "<p>Contains details about the server-side encryption for the data source.</p>",
        "DataSource$serverSideEncryptionConfiguration": "<p>Contains details about the configuration of the server-side encryption.</p>",
        "UpdateDataSourceRequest$serverSideEncryptionConfiguration": "<p>Contains details about server-side encryption of the data source.</p>"
      }
    },
    "ServiceQuotaExceededException": {
      "base": "<p>The number of requests exceeds the service quota. Resubmit your request later.</p>",
      "refs": {
      }
    },
    "SessionTTL": {
      "base": null,
      "refs": {
        "Agent$idleSessionTTLInSeconds": "<p>The number of seconds for which Amazon Bedrock keeps information about a user's conversation with the agent.</p> <p>A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Bedrock deletes any data provided before the timeout.</p>",
        "AgentVersion$idleSessionTTLInSeconds": "<p>The number of seconds for which Amazon Bedrock keeps information about a user's conversation with the agent.</p> <p>A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Bedrock deletes any data provided before the timeout.</p>",
        "CreateAgentRequest$idleSessionTTLInSeconds": "<p>The number of seconds for which Amazon Bedrock keeps information about a user's conversation with the agent.</p> <p>A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Bedrock deletes any data provided before the timeout.</p>",
        "UpdateAgentRequest$idleSessionTTLInSeconds": "<p>The number of seconds for which Amazon Bedrock keeps information about a user's conversation with the agent.</p> <p>A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Bedrock deletes any data provided before the timeout.</p>"
      }
    },
    "SortOrder": {
      "base": null,
      "refs": {
        "IngestionJobSortBy$order": "<p>The order by which to sort the results.</p>"
      }
    },
    "StartIngestionJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "StartIngestionJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "StopSequences": {
      "base": null,
      "refs": {
        "InferenceConfiguration$stopSequences": "<p>A list of stop sequences. A stop sequence is a sequence of characters that causes the model to stop generating the response.</p>"
      }
    },
    "StorageConfiguration": {
      "base": "<p>Contains the storage configuration of the knowledge base.</p>",
      "refs": {
        "CreateKnowledgeBaseRequest$storageConfiguration": "<p>Contains details about the configuration of the vector database used for the knowledge base.</p>",
        "KnowledgeBase$storageConfiguration": "<p>Contains details about the storage configuration of the knowledge base.</p>",
        "UpdateKnowledgeBaseRequest$storageConfiguration": "<p>Specifies the configuration for the vector store used for the knowledge base. You must use the same configuration as when the knowledge base was created.</p>"
      }
    },
    "String": {
      "base": null,
      "refs": {
        "StopSequences$member": null
      }
    },
    "TagKey": {
      "base": null,
      "refs": {
        "TagKeyList$member": null,
        "TagsMap$key": null
      }
    },
    "TagKeyList": {
      "base": null,
      "refs": {
        "UntagResourceRequest$tagKeys": "<p>A list of keys of the tags to remove from the resource.</p>"
      }
    },
    "TagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "TagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "TagValue": {
      "base": null,
      "refs": {
        "TagsMap$value": null
      }
    },
    "TaggableResourcesArn": {
      "base": null,
      "refs": {
        "ListTagsForResourceRequest$resourceArn": "<p>The Amazon Resource Name (ARN) of the resource for which to list tags.</p>",
        "TagResourceRequest$resourceArn": "<p>The Amazon Resource Name (ARN) of the resource to tag.</p>",
        "UntagResourceRequest$resourceArn": "<p>The Amazon Resource Name (ARN) of the resource from which to remove tags.</p>"
      }
    },
    "TagsMap": {
      "base": null,
      "refs": {
        "CreateAgentAliasRequest$tags": "<p>Any tags that you want to attach to the alias of the agent.</p>",
        "CreateAgentRequest$tags": "<p>Any tags that you want to attach to the agent.</p>",
        "CreateKnowledgeBaseRequest$tags": "<p>Specify the key-value pairs for the tags that you want to attach to your knowledge base in this object.</p>",
        "ListTagsForResourceResponse$tags": "<p>The key-value pairs for the tags associated with the resource.</p>",
        "TagResourceRequest$tags": "<p>An object containing key-value pairs that define the tags to attach to the resource.</p>"
      }
    },
    "Temperature": {
      "base": null,
      "refs": {
        "InferenceConfiguration$temperature": "<p>The likelihood of the model selecting higher-probability options while generating a response. A lower value makes the model more likely to choose higher-probability options, while a higher value makes the model more likely to choose lower-probability options.</p>"
      }
    },
    "ThrottlingException": {
      "base": "<p>The number of requests exceeds the limit. Resubmit your request later.</p>",
      "refs": {
      }
    },
    "TopK": {
      "base": null,
      "refs": {
        "InferenceConfiguration$topK": "<p>While generating a response, the model determines the probability of the following token at each point of generation. The value that you set for <code>topK</code> is the number of most-likely candidates from which the model chooses the next token in the sequence. For example, if you set <code>topK</code> to 50, the model selects the next token from among the top 50 most likely choices.</p>"
      }
    },
    "TopP": {
      "base": null,
      "refs": {
        "InferenceConfiguration$topP": "<p>While generating a response, the model determines the probability of the following token at each point of generation. The value that you set for <code>Top P</code> determines the number of most-likely candidates from which the model chooses the next token in the sequence. For example, if you set <code>topP</code> to 80, the model only selects the next token from the top 80% of the probability distribution of next tokens.</p>"
      }
    },
    "Type": {
      "base": null,
      "refs": {
        "ParameterDetail$type": "<p>The data type of the parameter.</p>"
      }
    },
    "UntagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "UntagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAgentActionGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAgentActionGroupResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAgentAliasRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAgentAliasResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAgentKnowledgeBaseRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAgentKnowledgeBaseResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAgentRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAgentResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateDataSourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateDataSourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateKnowledgeBaseRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateKnowledgeBaseResponse": {
      "base": null,
      "refs": {
      }
    },
    "ValidationException": {
      "base": "<p>Input validation failed. Check your request parameters and retry the request.</p>",
      "refs": {
      }
    },
    "ValidationExceptionField": {
      "base": "<p>Stores information about a field passed inside a request that resulted in an validation error.</p>",
      "refs": {
        "ValidationExceptionFieldList$member": null
      }
    },
    "ValidationExceptionFieldList": {
      "base": null,
      "refs": {
        "ValidationException$fieldList": "<p>A list of objects containing fields that caused validation errors and their corresponding validation error messages.</p>"
      }
    },
    "VectorIngestionConfiguration": {
      "base": "<p>Contains details about how to ingest the documents in a data source.</p>",
      "refs": {
        "CreateDataSourceRequest$vectorIngestionConfiguration": "<p>Contains details about how to ingest the documents in the data source.</p>",
        "DataSource$vectorIngestionConfiguration": "<p>Contains details about how to ingest the documents in the data source.</p>",
        "UpdateDataSourceRequest$vectorIngestionConfiguration": "<p>Contains details about how to ingest the documents in the data source.</p>"
      }
    },
    "VectorKnowledgeBaseConfiguration": {
      "base": "<p>Contains details about the model used to create vector embeddings for the knowledge base.</p>",
      "refs": {
        "KnowledgeBaseConfiguration$vectorKnowledgeBaseConfiguration": "<p>Contains details about the embeddings model that'sused to convert the data source.</p>"
      }
    },
    "Version": {
      "base": null,
      "refs": {
        "AgentActionGroup$agentVersion": "<p>The version of the agent to which the action group belongs.</p>",
        "AgentAliasRoutingConfigurationListItem$agentVersion": "<p>The version of the agent with which the alias is associated.</p>",
        "AgentKnowledgeBase$agentVersion": "<p>The version of the agent with which the knowledge base is associated.</p>",
        "AgentSummary$latestAgentVersion": "<p>The latest version of the agent.</p>",
        "AgentVersionSummary$agentVersion": "<p>The version of the agent.</p>",
        "GetAgentActionGroupRequest$agentVersion": "<p>The version of the agent that the action group belongs to.</p>",
        "GetAgentKnowledgeBaseRequest$agentVersion": "<p>The version of the agent with which the knowledge base is associated.</p>",
        "ListAgentActionGroupsRequest$agentVersion": "<p>The version of the agent.</p>",
        "ListAgentKnowledgeBasesRequest$agentVersion": "<p>The version of the agent for which to return information about knowledge bases associated with it.</p>",
        "PrepareAgentResponse$agentVersion": "<p>The version of the agent.</p>"
      }
    }
  }
}
