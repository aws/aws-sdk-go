{
  "version": "2.0",
  "service": "<p> Amazon Web Services Service Catalog AppRegistry enables organizations to understand the application context of their Amazon Web Services resources. AppRegistry provides a repository of your applications, their resources, and the application metadata that you use within your enterprise.</p>",
  "operations": {
    "AssociateAttributeGroup": "<p>Associates an attribute group with an application to augment the application's metadata with the group's attributes. This feature enables applications to be described with user-defined details that are machine-readable, such as third-party integrations.</p>",
    "AssociateResource": "<p> Associates a resource with an application. The resource can be specified by its ARN or name. The application can be specified by ARN, ID, or name. </p>",
    "CreateApplication": "<p>Creates a new application that is the top-level node in a hierarchy of related cloud resource abstractions.</p>",
    "CreateAttributeGroup": "<p>Creates a new attribute group as a container for user-defined attributes. This feature enables users to have full control over their cloud application's metadata in a rich machine-readable format to facilitate integration with automated workflows and third-party tools.</p>",
    "DeleteApplication": "<p>Deletes an application that is specified either by its application ID, name, or ARN. All associated attribute groups and resources must be disassociated from it before deleting an application.</p>",
    "DeleteAttributeGroup": "<p>Deletes an attribute group, specified either by its attribute group ID, name, or ARN.</p>",
    "DisassociateAttributeGroup": "<p>Disassociates an attribute group from an application to remove the extra attributes contained in the attribute group from the application's metadata. This operation reverts <code>AssociateAttributeGroup</code>.</p>",
    "DisassociateResource": "<p>Disassociates a resource from application. Both the resource and the application can be specified either by ID or name.</p>",
    "GetApplication": "<p> Retrieves metadata information about one of your applications. The application can be specified by its ARN, ID, or name (which is unique within one account in one region at a given point in time). Specify by ARN or ID in automated workflows if you want to make sure that the exact same application is returned or a <code>ResourceNotFoundException</code> is thrown, avoiding the ABA addressing problem. </p>",
    "GetAssociatedResource": "<p>Gets the resource associated with the application.</p>",
    "GetAttributeGroup": "<p> Retrieves an attribute group by its ARN, ID, or name. The attribute group can be specified by its ARN, ID, or name. </p>",
    "GetConfiguration": "<p> Retrieves a <code>TagKey</code> configuration from an account. </p>",
    "ListApplications": "<p>Retrieves a list of all of your applications. Results are paginated.</p>",
    "ListAssociatedAttributeGroups": "<p>Lists all attribute groups that are associated with specified application. Results are paginated.</p>",
    "ListAssociatedResources": "<p> Lists all of the resources that are associated with the specified application. Results are paginated. </p> <note> <p> If you share an application, and a consumer account associates a tag query to the application, all of the users who can access the application can also view the tag values in all accounts that are associated with it using this API. </p> </note>",
    "ListAttributeGroups": "<p>Lists all attribute groups which you have access to. Results are paginated.</p>",
    "ListAttributeGroupsForApplication": "<p>Lists the details of all attribute groups associated with a specific application. The results display in pages.</p>",
    "ListTagsForResource": "<p>Lists all of the tags on the resource.</p>",
    "PutConfiguration": "<p> Associates a <code>TagKey</code> configuration to an account. </p>",
    "SyncResource": "<p>Syncs the resource with current AppRegistry records.</p> <p>Specifically, the resourceâ€™s AppRegistry system tags sync with its associated application. We remove the resource's AppRegistry system tags if it does not associate with the application. The caller must have permissions to read and update the resource.</p>",
    "TagResource": "<p>Assigns one or more tags (key-value pairs) to the specified resource.</p> <p>Each tag consists of a key and an optional value. If a tag with the same key is already associated with the resource, this action updates its value.</p> <p>This operation returns an empty response if the call was successful.</p>",
    "UntagResource": "<p>Removes tags from a resource.</p> <p>This operation returns an empty response if the call was successful.</p>",
    "UpdateApplication": "<p>Updates an existing application with new attributes.</p>",
    "UpdateAttributeGroup": "<p>Updates an existing attribute group with new details. </p>"
  },
  "shapes": {
    "AppRegistryConfiguration": {
      "base": "<p> Includes all of the AppRegistry settings. </p>",
      "refs": {
        "GetConfigurationResponse$configuration": "<p> Retrieves <code>TagKey</code> configuration from an account. </p>",
        "PutConfigurationRequest$configuration": "<p> Associates a <code>TagKey</code> configuration to an account. </p>"
      }
    },
    "Application": {
      "base": "<p>Represents a Amazon Web Services Service Catalog AppRegistry application that is the top-level node in a hierarchy of related cloud resource abstractions.</p>",
      "refs": {
        "CreateApplicationResponse$application": "<p>Information about the application.</p>",
        "UpdateApplicationResponse$application": "<p>The updated information of the application.</p>"
      }
    },
    "ApplicationArn": {
      "base": null,
      "refs": {
        "Application$arn": "<p>The Amazon resource name (ARN) that specifies the application across services.</p>",
        "ApplicationSummary$arn": "<p>The Amazon resource name (ARN) that specifies the application across services.</p>",
        "AssociateAttributeGroupResponse$applicationArn": "<p>The Amazon resource name (ARN) of the application that was augmented with attributes.</p>",
        "AssociateResourceResponse$applicationArn": "<p>The Amazon resource name (ARN) of the application that was augmented with attributes.</p>",
        "DisassociateAttributeGroupResponse$applicationArn": "<p>The Amazon resource name (ARN) that specifies the application.</p>",
        "DisassociateResourceResponse$applicationArn": "<p>The Amazon resource name (ARN) that specifies the application.</p>",
        "GetApplicationResponse$arn": "<p>The Amazon resource name (ARN) that specifies the application across services.</p>",
        "SyncResourceResponse$applicationArn": "<p>The Amazon resource name (ARN) that specifies the application.</p>"
      }
    },
    "ApplicationId": {
      "base": null,
      "refs": {
        "Application$id": "<p>The identifier of the application.</p>",
        "ApplicationSummary$id": "<p>The identifier of the application.</p>",
        "GetApplicationResponse$id": "<p>The identifier of the application.</p>"
      }
    },
    "ApplicationSpecifier": {
      "base": null,
      "refs": {
        "AssociateAttributeGroupRequest$application": "<p> The name, ID, or ARN of the application. </p>",
        "AssociateResourceRequest$application": "<p> The name, ID, or ARN of the application. </p>",
        "DeleteApplicationRequest$application": "<p> The name, ID, or ARN of the application. </p>",
        "DisassociateAttributeGroupRequest$application": "<p> The name, ID, or ARN of the application. </p>",
        "DisassociateResourceRequest$application": "<p>The name or ID of the application.</p>",
        "GetApplicationRequest$application": "<p> The name, ID, or ARN of the application. </p>",
        "GetAssociatedResourceRequest$application": "<p> The name, ID, or ARN of the application. </p>",
        "ListAssociatedAttributeGroupsRequest$application": "<p>The name or ID of the application.</p>",
        "ListAssociatedResourcesRequest$application": "<p> The name, ID, or ARN of the application. </p>",
        "ListAttributeGroupsForApplicationRequest$application": "<p>The name or ID of the application.</p>",
        "UpdateApplicationRequest$application": "<p> The name, ID, or ARN of the application that will be updated. </p>"
      }
    },
    "ApplicationSummaries": {
      "base": null,
      "refs": {
        "ListApplicationsResponse$applications": "<p>This list of applications.</p>"
      }
    },
    "ApplicationSummary": {
      "base": "<p>Summary of a Amazon Web Services Service Catalog AppRegistry application.</p>",
      "refs": {
        "ApplicationSummaries$member": null,
        "DeleteApplicationResponse$application": "<p>Information about the deleted application.</p>"
      }
    },
    "Arn": {
      "base": null,
      "refs": {
        "AssociateResourceResponse$resourceArn": "<p>The Amazon resource name (ARN) that specifies the resource.</p>",
        "DisassociateResourceResponse$resourceArn": "<p>The Amazon resource name (ARN) that specifies the resource.</p>",
        "ListTagsForResourceRequest$resourceArn": "<p>The Amazon resource name (ARN) that specifies the resource.</p>",
        "ResourceGroup$arn": "<p>The Amazon resource name (ARN) of the resource group.</p>",
        "ResourceInfo$arn": "<p>The Amazon resource name (ARN) that specifies the resource across services.</p>",
        "SyncResourceResponse$resourceArn": "<p>The Amazon resource name (ARN) that specifies the resource.</p>",
        "TagResourceRequest$resourceArn": "<p>The Amazon resource name (ARN) that specifies the resource.</p>",
        "UntagResourceRequest$resourceArn": "<p>The Amazon resource name (ARN) that specifies the resource.</p>"
      }
    },
    "AssociateAttributeGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "AssociateAttributeGroupResponse": {
      "base": null,
      "refs": {
      }
    },
    "AssociateResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "AssociateResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "AssociationCount": {
      "base": null,
      "refs": {
        "GetApplicationResponse$associatedResourceCount": "<p>The number of top-level resources that were registered as part of this application.</p>"
      }
    },
    "AttributeGroup": {
      "base": "<p>Represents a Amazon Web Services Service Catalog AppRegistry attribute group that is rich metadata which describes an application and its components.</p>",
      "refs": {
        "CreateAttributeGroupResponse$attributeGroup": "<p>Information about the attribute group.</p>",
        "UpdateAttributeGroupResponse$attributeGroup": "<p>The updated information of the attribute group.</p>"
      }
    },
    "AttributeGroupArn": {
      "base": null,
      "refs": {
        "AssociateAttributeGroupResponse$attributeGroupArn": "<p>The Amazon resource name (ARN) of the attribute group that contains the application's new attributes.</p>",
        "AttributeGroup$arn": "<p>The Amazon resource name (ARN) that specifies the attribute group across services.</p>",
        "AttributeGroupDetails$arn": "<p>The Amazon resource name (ARN) that specifies the attribute group.</p>",
        "AttributeGroupSummary$arn": "<p>The Amazon resource name (ARN) that specifies the attribute group across services.</p>",
        "DisassociateAttributeGroupResponse$attributeGroupArn": "<p>The Amazon resource name (ARN) that specifies the attribute group.</p>",
        "GetAttributeGroupResponse$arn": "<p>The Amazon resource name (ARN) that specifies the attribute group across services.</p>"
      }
    },
    "AttributeGroupDetails": {
      "base": "<p> The details related to a specific AttributeGroup. </p>",
      "refs": {
        "AttributeGroupDetailsList$member": null
      }
    },
    "AttributeGroupDetailsList": {
      "base": null,
      "refs": {
        "ListAttributeGroupsForApplicationResponse$attributeGroupsDetails": "<p> The details related to a specific attribute group. </p>"
      }
    },
    "AttributeGroupId": {
      "base": null,
      "refs": {
        "AttributeGroup$id": "<p>The globally unique attribute group identifier of the attribute group.</p>",
        "AttributeGroupDetails$id": "<p>The unique identifier of the attribute group.</p>",
        "AttributeGroupIds$member": null,
        "AttributeGroupSummary$id": "<p>The globally unique attribute group identifier of the attribute group.</p>",
        "GetAttributeGroupResponse$id": "<p>The identifier of the attribute group.</p>"
      }
    },
    "AttributeGroupIds": {
      "base": null,
      "refs": {
        "ListAssociatedAttributeGroupsResponse$attributeGroups": "<p>A list of attribute group IDs.</p>"
      }
    },
    "AttributeGroupSpecifier": {
      "base": null,
      "refs": {
        "AssociateAttributeGroupRequest$attributeGroup": "<p> The name, ID, or ARN of the attribute group that holds the attributes to describe the application. </p>",
        "DeleteAttributeGroupRequest$attributeGroup": "<p> The name, ID, or ARN of the attribute group that holds the attributes to describe the application. </p>",
        "DisassociateAttributeGroupRequest$attributeGroup": "<p> The name, ID, or ARN of the attribute group that holds the attributes to describe the application. </p>",
        "GetAttributeGroupRequest$attributeGroup": "<p> The name, ID, or ARN of the attribute group that holds the attributes to describe the application. </p>",
        "UpdateAttributeGroupRequest$attributeGroup": "<p> The name, ID, or ARN of the attribute group that holds the attributes to describe the application. </p>"
      }
    },
    "AttributeGroupSummaries": {
      "base": null,
      "refs": {
        "ListAttributeGroupsResponse$attributeGroups": "<p>This list of attribute groups.</p>"
      }
    },
    "AttributeGroupSummary": {
      "base": "<p>Summary of a Amazon Web Services Service Catalog AppRegistry attribute group.</p>",
      "refs": {
        "AttributeGroupSummaries$member": null,
        "DeleteAttributeGroupResponse$attributeGroup": "<p>Information about the deleted attribute group.</p>"
      }
    },
    "Attributes": {
      "base": null,
      "refs": {
        "CreateAttributeGroupRequest$attributes": "<p>A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.</p>",
        "GetAttributeGroupResponse$attributes": "<p>A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.</p>",
        "UpdateAttributeGroupRequest$attributes": "<p>A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.</p>"
      }
    },
    "ClientToken": {
      "base": null,
      "refs": {
        "CreateApplicationRequest$clientToken": "<p>A unique identifier that you provide to ensure idempotency. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails.</p>",
        "CreateAttributeGroupRequest$clientToken": "<p>A unique identifier that you provide to ensure idempotency. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails.</p>"
      }
    },
    "ConflictException": {
      "base": "<p>There was a conflict when processing the request (for example, a resource with the given name already exists within the account).</p>",
      "refs": {
      }
    },
    "CreateApplicationRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateApplicationResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateAttributeGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateAttributeGroupResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreatedBy": {
      "base": null,
      "refs": {
        "AttributeGroupDetails$createdBy": "<p>The service principal that created the attribute group.</p>",
        "AttributeGroupSummary$createdBy": "<p>The service principal that created the attribute group.</p>",
        "GetAttributeGroupResponse$createdBy": "<p>The service principal that created the attribute group.</p>"
      }
    },
    "DeleteApplicationRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteApplicationResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAttributeGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteAttributeGroupResponse": {
      "base": null,
      "refs": {
      }
    },
    "Description": {
      "base": null,
      "refs": {
        "Application$description": "<p>The description of the application.</p>",
        "ApplicationSummary$description": "<p>The description of the application.</p>",
        "AttributeGroup$description": "<p>The description of the attribute group that the user provides.</p>",
        "AttributeGroupSummary$description": "<p>The description of the attribute group that the user provides.</p>",
        "CreateApplicationRequest$description": "<p>The description of the application.</p>",
        "CreateAttributeGroupRequest$description": "<p>The description of the attribute group that the user provides.</p>",
        "GetApplicationResponse$description": "<p>The description of the application.</p>",
        "GetAttributeGroupResponse$description": "<p>The description of the attribute group that the user provides.</p>",
        "UpdateApplicationRequest$description": "<p>The new description of the application.</p>",
        "UpdateAttributeGroupRequest$description": "<p>The description of the attribute group that the user provides.</p>"
      }
    },
    "DisassociateAttributeGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "DisassociateAttributeGroupResponse": {
      "base": null,
      "refs": {
      }
    },
    "DisassociateResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "DisassociateResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetApplicationRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetApplicationResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetAssociatedResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetAssociatedResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetAttributeGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetAttributeGroupResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetConfigurationResponse": {
      "base": null,
      "refs": {
      }
    },
    "Integrations": {
      "base": "<p> The information about the service integration.</p>",
      "refs": {
        "GetApplicationResponse$integrations": "<p> The information about the integration of the application with other services, such as Resource Groups. </p>"
      }
    },
    "InternalServerException": {
      "base": "<p>The service is experiencing internal problems.</p>",
      "refs": {
      }
    },
    "ListApplicationsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListApplicationsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAssociatedAttributeGroupsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAssociatedAttributeGroupsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAssociatedResourcesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAssociatedResourcesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAttributeGroupsForApplicationRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAttributeGroupsForApplicationResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAttributeGroupsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAttributeGroupsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "MaxResults": {
      "base": null,
      "refs": {
        "ListApplicationsRequest$maxResults": "<p>The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.</p>",
        "ListAssociatedAttributeGroupsRequest$maxResults": "<p>The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.</p>",
        "ListAssociatedResourcesRequest$maxResults": "<p>The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.</p>",
        "ListAttributeGroupsForApplicationRequest$maxResults": "<p>The upper bound of the number of results to return. The value cannot exceed 25. If you omit this parameter, it defaults to 25. This value is optional.</p>",
        "ListAttributeGroupsRequest$maxResults": "<p>The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.</p>"
      }
    },
    "Name": {
      "base": null,
      "refs": {
        "Application$name": "<p>The name of the application. The name must be unique in the region in which you are creating the application.</p>",
        "ApplicationSummary$name": "<p>The name of the application. The name must be unique in the region in which you are creating the application.</p>",
        "AttributeGroup$name": "<p>The name of the attribute group.</p>",
        "AttributeGroupDetails$name": "<important> <p> This field is no longer supported. We recommend you don't use the field when using <code>ListAttributeGroupsForApplication</code>. </p> </important> <p> The name of the attribute group. </p>",
        "AttributeGroupSummary$name": "<p>The name of the attribute group.</p>",
        "CreateApplicationRequest$name": "<p>The name of the application. The name must be unique in the region in which you are creating the application.</p>",
        "CreateAttributeGroupRequest$name": "<p>The name of the attribute group.</p>",
        "GetApplicationResponse$name": "<p>The name of the application. The name must be unique in the region in which you are creating the application.</p>",
        "GetAttributeGroupResponse$name": "<p>The name of the attribute group.</p>",
        "UpdateApplicationRequest$name": "<p>Deprecated: The new name of the application. The name must be unique in the region in which you are updating the application. Please do not use this field as we have stopped supporting name updates.</p>",
        "UpdateAttributeGroupRequest$name": "<p>Deprecated: The new name of the attribute group. The name must be unique in the region in which you are updating the attribute group. Please do not use this field as we have stopped supporting name updates.</p>"
      }
    },
    "NextToken": {
      "base": null,
      "refs": {
        "ListApplicationsRequest$nextToken": "<p>The token to use to get the next page of results after a previous API call. </p>",
        "ListApplicationsResponse$nextToken": "<p>The token to use to get the next page of results after a previous API call. </p>",
        "ListAssociatedAttributeGroupsRequest$nextToken": "<p>The token to use to get the next page of results after a previous API call. </p>",
        "ListAssociatedAttributeGroupsResponse$nextToken": "<p>The token to use to get the next page of results after a previous API call. </p>",
        "ListAssociatedResourcesRequest$nextToken": "<p>The token to use to get the next page of results after a previous API call. </p>",
        "ListAssociatedResourcesResponse$nextToken": "<p>The token to use to get the next page of results after a previous API call. </p>",
        "ListAttributeGroupsForApplicationRequest$nextToken": "<p>This token retrieves the next page of results after a previous API call.</p>",
        "ListAttributeGroupsForApplicationResponse$nextToken": "<p>The token to use to get the next page of results after a previous API call.</p>",
        "ListAttributeGroupsRequest$nextToken": "<p>The token to use to get the next page of results after a previous API call. </p>",
        "ListAttributeGroupsResponse$nextToken": "<p>The token to use to get the next page of results after a previous API call. </p>"
      }
    },
    "PutConfigurationRequest": {
      "base": null,
      "refs": {
      }
    },
    "Resource": {
      "base": "<p> The information about the resource.</p>",
      "refs": {
        "GetAssociatedResourceResponse$resource": "<p>The resource associated with the application.</p>"
      }
    },
    "ResourceDetails": {
      "base": "<p> The details related to the resource. </p>",
      "refs": {
        "ResourceInfo$resourceDetails": "<p> The details related to the resource. </p>"
      }
    },
    "ResourceGroup": {
      "base": "<p>The information about the resource group integration.</p>",
      "refs": {
        "Integrations$resourceGroup": "<p> The information about the resource group integration.</p>",
        "ResourceIntegrations$resourceGroup": "<p>The information about the integration of Resource Groups.</p>"
      }
    },
    "ResourceGroupState": {
      "base": null,
      "refs": {
        "ResourceGroup$state": "<p>The state of the propagation process for the resource group. The states includes:</p> <p> <code>CREATING </code>if the resource group is in the process of being created.</p> <p> <code>CREATE_COMPLETE</code> if the resource group was created successfully.</p> <p> <code>CREATE_FAILED</code> if the resource group failed to be created.</p> <p> <code>UPDATING</code> if the resource group is in the process of being updated.</p> <p> <code>UPDATE_COMPLETE</code> if the resource group updated successfully.</p> <p> <code>UPDATE_FAILED</code> if the resource group could not update successfully.</p>"
      }
    },
    "ResourceInfo": {
      "base": "<p>The information about the resource.</p>",
      "refs": {
        "Resources$member": null
      }
    },
    "ResourceIntegrations": {
      "base": "<p>The service integration information about the resource.</p>",
      "refs": {
        "Resource$integrations": "<p>The service integration information about the resource. </p>"
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>The specified resource does not exist.</p>",
      "refs": {
      }
    },
    "ResourceSpecifier": {
      "base": null,
      "refs": {
        "AssociateResourceRequest$resource": "<p>The name or ID of the resource of which the application will be associated.</p>",
        "DisassociateResourceRequest$resource": "<p>The name or ID of the resource.</p>",
        "GetAssociatedResourceRequest$resource": "<p>The name or ID of the resource associated with the application.</p>",
        "Resource$name": "<p>The name of the resource.</p>",
        "ResourceInfo$name": "<p>The name of the resource.</p>",
        "SyncResourceRequest$resource": "<p>An entity you can work with and specify with a name or ID. Examples include an Amazon EC2 instance, an Amazon Web Services CloudFormation stack, or an Amazon S3 bucket.</p>"
      }
    },
    "ResourceType": {
      "base": null,
      "refs": {
        "AssociateResourceRequest$resourceType": "<p>The type of resource of which the application will be associated.</p>",
        "DisassociateResourceRequest$resourceType": "<p>The type of the resource that is being disassociated.</p>",
        "GetAssociatedResourceRequest$resourceType": "<p>The type of resource associated with the application.</p>",
        "ResourceInfo$resourceType": "<p> Provides information about the Service Catalog App Registry resource type. </p>",
        "SyncResourceRequest$resourceType": "<p>The type of resource of which the application will be associated.</p>"
      }
    },
    "Resources": {
      "base": null,
      "refs": {
        "ListAssociatedResourcesResponse$resources": "<p>Information about the resources.</p>"
      }
    },
    "ServiceQuotaExceededException": {
      "base": "<p> The maximum number of resources per account has been reached.</p>",
      "refs": {
      }
    },
    "StackArn": {
      "base": null,
      "refs": {
        "Resource$arn": "<p>The Amazon resource name (ARN) of the resource.</p>"
      }
    },
    "String": {
      "base": null,
      "refs": {
        "ConflictException$message": null,
        "InternalServerException$message": null,
        "ResourceGroup$errorMessage": "<p>The error message that generates when the propagation process for the resource group fails.</p>",
        "ResourceNotFoundException$message": null,
        "ServiceQuotaExceededException$message": null,
        "ThrottlingException$message": "<p>A message associated with the Throttling exception.</p>",
        "ThrottlingException$serviceCode": "<p>The originating service code.</p>",
        "ValidationException$message": null
      }
    },
    "SyncAction": {
      "base": null,
      "refs": {
        "SyncResourceResponse$actionTaken": "<p>The results of the output if an application is associated with an ARN value, which could be <code>syncStarted</code> or None.</p>"
      }
    },
    "SyncResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "SyncResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "TagKey": {
      "base": null,
      "refs": {
        "TagKeys$member": null,
        "Tags$key": null
      }
    },
    "TagKeyConfig": {
      "base": null,
      "refs": {
        "TagQueryConfiguration$tagKey": "<p> Condition in the IAM policy that associates resources to an application. </p>"
      }
    },
    "TagKeys": {
      "base": null,
      "refs": {
        "UntagResourceRequest$tagKeys": "<p>A list of the tag keys to remove from the specified resource.</p>"
      }
    },
    "TagQueryConfiguration": {
      "base": "<p> The definition of <code>tagQuery</code>. Specifies which resources are associated with an application. </p>",
      "refs": {
        "AppRegistryConfiguration$tagQueryConfiguration": "<p> Includes the definition of a <code>tagQuery</code>. </p>"
      }
    },
    "TagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "TagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "TagValue": {
      "base": null,
      "refs": {
        "ResourceDetails$tagValue": "<p>The value of the tag.</p>",
        "Tags$value": null
      }
    },
    "Tags": {
      "base": null,
      "refs": {
        "Application$tags": "<p>Key-value pairs you can use to associate with the application.</p>",
        "AttributeGroup$tags": "<p>Key-value pairs you can use to associate with the attribute group.</p>",
        "CreateApplicationRequest$tags": "<p>Key-value pairs you can use to associate with the application.</p>",
        "CreateAttributeGroupRequest$tags": "<p>Key-value pairs you can use to associate with the attribute group.</p>",
        "GetApplicationResponse$tags": "<p>Key-value pairs associated with the application.</p>",
        "GetAttributeGroupResponse$tags": "<p>Key-value pairs associated with the attribute group.</p>",
        "ListTagsForResourceResponse$tags": "<p>The tags on the resource.</p>",
        "TagResourceRequest$tags": "<p>The new or modified tags for the resource.</p>"
      }
    },
    "ThrottlingException": {
      "base": "<p> The maximum number of API requests has been exceeded. </p>",
      "refs": {
      }
    },
    "Timestamp": {
      "base": null,
      "refs": {
        "Application$creationTime": "<p>The ISO-8601 formatted timestamp of the moment when the application was created.</p>",
        "Application$lastUpdateTime": "<p> The ISO-8601 formatted timestamp of the moment when the application was last updated.</p>",
        "ApplicationSummary$creationTime": "<p>The ISO-8601 formatted timestamp of the moment when the application was created.</p>",
        "ApplicationSummary$lastUpdateTime": "<p> The ISO-8601 formatted timestamp of the moment when the application was last updated.</p>",
        "AttributeGroup$creationTime": "<p>The ISO-8601 formatted timestamp of the moment the attribute group was created.</p>",
        "AttributeGroup$lastUpdateTime": "<p>The ISO-8601 formatted timestamp of the moment the attribute group was last updated. This time is the same as the creationTime for a newly created attribute group.</p>",
        "AttributeGroupSummary$creationTime": "<p>The ISO-8601 formatted timestamp of the moment the attribute group was created.</p>",
        "AttributeGroupSummary$lastUpdateTime": "<p>The ISO-8601 formatted timestamp of the moment the attribute group was last updated. This time is the same as the creationTime for a newly created attribute group.</p>",
        "GetApplicationResponse$creationTime": "<p>The ISO-8601 formatted timestamp of the moment when the application was created.</p>",
        "GetApplicationResponse$lastUpdateTime": "<p>The ISO-8601 formatted timestamp of the moment when the application was last updated.</p>",
        "GetAttributeGroupResponse$creationTime": "<p>The ISO-8601 formatted timestamp of the moment the attribute group was created.</p>",
        "GetAttributeGroupResponse$lastUpdateTime": "<p>The ISO-8601 formatted timestamp of the moment the attribute group was last updated. This time is the same as the creationTime for a newly created attribute group.</p>",
        "Resource$associationTime": "<p>The time the resource was associated with the application.</p>"
      }
    },
    "UntagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "UntagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateApplicationRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateApplicationResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAttributeGroupRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateAttributeGroupResponse": {
      "base": null,
      "refs": {
      }
    },
    "ValidationException": {
      "base": "<p>The request has invalid or missing parameters.</p>",
      "refs": {
      }
    }
  }
}
