{
  "version": "2.0",
  "service": "<p>Recovery Control Configuration API Reference for Amazon Route 53 Application Recovery Controller</p>",
  "operations": {
    "CreateCluster": "<p>Create a new cluster. A cluster is a set of redundant Regional endpoints against which you can run API calls to update or get the state of one or more routing controls. Each cluster has a name, status, Amazon Resource Name (ARN), and an array of the five cluster endpoints (one for each supported Amazon Web Services Region) that you can use with API calls to the Amazon Route 53 Application Recovery Controller cluster data plane.</p>",
    "CreateControlPanel": "<p>Creates a new control panel. A control panel represents a group of routing controls that can be changed together in a single transaction. You can use a control panel to centrally view the operational status of applications across your organization, and trigger multi-app failovers in a single transaction, for example, to fail over an Availability Zone or AWS Region.</p>",
    "CreateRoutingControl": "<p>Creates a new routing control.</p> <p>A routing control has one of two states: ON and OFF. You can map the routing control state to the state of an Amazon Route 53 health check, which can be used to control traffic routing.</p> <p>To get or update the routing control state, see the Recovery Cluster (data plane) API actions for Amazon Route 53 Application Recovery Controller.</p>",
    "CreateSafetyRule": "<p>Creates a safety rule in a control panel. Safety rules let you add safeguards around enabling and disabling routing controls, to help prevent unexpected outcomes.</p> <p>There are two types of safety rules: assertion rules and gating rules.</p> <p>Assertion rule: An assertion rule enforces that, when a routing control state is changed, the criteria set by the rule configuration is met. Otherwise, the change to the routing control is not accepted.</p> <p>Gating rule: A gating rule verifies that a set of gating controls evaluates as true, based on a rule configuration that you specify. If the gating rule evaluates to true, Amazon Route 53 Application Recovery Controller allows a set of routing control state changes to run and complete against the set of target controls.</p>",
    "DeleteCluster": "<p>Delete a cluster.</p>",
    "DeleteControlPanel": "<p>Deletes a control panel.</p>",
    "DeleteRoutingControl": "<p>Deletes a routing control.</p>",
    "DeleteSafetyRule": "<p>Deletes a safety rule.</p>/&gt;",
    "DescribeCluster": "<p>Display the details about a cluster. The response includes the cluster name, endpoints, status, and Amazon Resource Name (ARN).</p>",
    "DescribeControlPanel": "<p>Displays details about a control panel.</p>",
    "DescribeRoutingControl": "<p>Displays details about a routing control. A routing control has one of two states: ON and OFF. You can map the routing control state to the state of an Amazon Route 53 health check, which can be used to control routing.</p> <p>To get or update the routing control state, see the Recovery Cluster (data plane) API actions for Amazon Route 53 Application Recovery Controller.</p>",
    "DescribeSafetyRule": "<p>Describes the safety rules (that is, the assertion rules and gating rules) for the routing controls in a control panel.</p>",
    "ListAssociatedRoute53HealthChecks": "<p>Returns an array of all Amazon Route 53 health checks associated with a specific routing control.</p>",
    "ListClusters": "<p>Returns an array of all the clusters in an account.</p>",
    "ListControlPanels": "<p>Returns an array of control panels for a cluster.</p>",
    "ListRoutingControls": "<p>Returns an array of routing controls for a control panel. A routing control is an Amazon Route 53 Application Recovery Controller construct that has one of two states: ON and OFF. You can map the routing control state to the state of an Amazon Route 53 health check, which can be used to control routing.</p>",
    "ListSafetyRules": "<p>List the safety rules (the assertion rules and gating rules) that you've defined for the routing controls in a control panel.</p>",
    "UpdateControlPanel": "<p>Updates a control panel. The only update you can make to a control panel is to change the name of the control panel.</p>",
    "UpdateRoutingControl": "<p>Updates a routing control. You can only update the name of the routing control. To get or update the routing control state, see the Recovery Cluster (data plane) API actions for Amazon Route 53 Application Recovery Controller.</p>",
    "UpdateSafetyRule": "<p>Update a safety rule (an assertion rule or gating rule) for the routing controls in a control panel. You can only update the name and the waiting period for a safety rule. To make other updates, delete the safety rule and create a new safety rule.</p>"
  },
  "shapes": {
    "AccessDeniedException": {
      "base": "<p>403 response - AccessDeniedException. You do not have sufficient access to perform this action.</p>",
      "refs": {
      }
    },
    "AssertionRule": {
      "base": "<p>An assertion rule enforces that, when a routing control state is changed, the criteria set by the rule configuration is met. Otherwise, the change to the routing control is not accepted.</p>",
      "refs": {
        "CreateSafetyRuleResponse$AssertionRule": null,
        "DescribeSafetyRuleResponse$AssertionRule": null,
        "Rule$ASSERTION": "<p>An assertion rule enforces that, when a routing control state is changed, the criteria set by the rule configuration is met. Otherwise, the change to the routing control is not accepted.</p>",
        "UpdateSafetyRuleResponse$AssertionRule": null
      }
    },
    "AssertionRuleUpdate": {
      "base": "<p>An update to an assertion rule. You can update the name or the evaluation period (wait period). If you don't specify one of the items to update, the item is unchanged.</p>",
      "refs": {
        "UpdateSafetyRuleRequest$AssertionRuleUpdate": null
      }
    },
    "Cluster": {
      "base": "<p>A cluster is a set of five consensus-forming Regional endpoints that represent the infrastructure that hosts your routing controls. Typically, you host together on one cluster all of the routing controls for your applications.</p>",
      "refs": {
        "CreateClusterResponse$Cluster": "<p>The cluster that was created.</p>",
        "DescribeClusterResponse$Cluster": "<p>The cluster for the DescribeCluster request.</p>",
        "__listOfCluster$member": null
      }
    },
    "ClusterEndpoint": {
      "base": "<p>A cluster endpoint. Specify an endpoint when you want to set or retrieve a routing control state in the cluster.</p>",
      "refs": {
        "__listOfClusterEndpoint$member": null
      }
    },
    "ConflictException": {
      "base": "<p>409 response - ConflictException.</p>",
      "refs": {
      }
    },
    "ControlPanel": {
      "base": "<p>A control panel represents a group of routing controls that can be changed together in a single transaction.</p>",
      "refs": {
        "CreateControlPanelResponse$ControlPanel": "<p>Information about a control panel.</p>",
        "DescribeControlPanelResponse$ControlPanel": "<p>Information about the control panel.</p>",
        "UpdateControlPanelResponse$ControlPanel": "<p>The control panel to update.</p>",
        "__listOfControlPanel$member": null
      }
    },
    "CreateClusterRequest": {
      "base": "<p>The properties of a request to create a cluster.</p>",
      "refs": {
      }
    },
    "CreateClusterResponse": {
      "base": "<p>The result of a successful CreateCluster request.</p>",
      "refs": {
      }
    },
    "CreateControlPanelRequest": {
      "base": "<p>A request to create a control panel.</p>",
      "refs": {
      }
    },
    "CreateControlPanelResponse": {
      "base": "<p>The result of a successful CreateControlPanel request.</p>",
      "refs": {
      }
    },
    "CreateRoutingControlRequest": {
      "base": "<p>A request to create a routing control. If you don't specify ControlPanelArn, Amazon Route 53 Application Recovery Controller creates the routing control in DefaultControlPanel.</p>",
      "refs": {
      }
    },
    "CreateRoutingControlResponse": {
      "base": "<p>The result of a successful CreateRoutingControl request.</p>",
      "refs": {
      }
    },
    "CreateSafetyRuleRequest": {
      "base": "<p>Request to create a safety rule. You can create either an assertion rule or a gating rule with a CreateSafetyRuleRequest call.</p>",
      "refs": {
      }
    },
    "CreateSafetyRuleResponse": {
      "base": "<p>The result of a successful CreateSafetyRule request.</p>",
      "refs": {
      }
    },
    "DeleteClusterResponse": {
      "base": "<p>A successful DeleteCluster request returns no response.</p>",
      "refs": {
      }
    },
    "DeleteControlPanelResponse": {
      "base": "<p>A successful DeleteControlPanel request returns no response.</p>",
      "refs": {
      }
    },
    "DeleteRoutingControlResponse": {
      "base": "<p>A successful DeleteRoutingControl request returns no response.</p>",
      "refs": {
      }
    },
    "DeleteSafetyRuleResponse": {
      "base": "<p>There is an empty response when you delete a safety rule.</p>/&gt;",
      "refs": {
      }
    },
    "DescribeClusterResponse": {
      "base": "<p>The result of a successful DescribeCluster request.</p>",
      "refs": {
      }
    },
    "DescribeControlPanelResponse": {
      "base": "<p>The result of a successful DescribeControlPanel request.</p>",
      "refs": {
      }
    },
    "DescribeRoutingControlResponse": {
      "base": "<p>The result of a successful DescribeRoutingControl request.</p>",
      "refs": {
      }
    },
    "DescribeSafetyRuleResponse": {
      "base": "<p>The response when you send a DescribeSafetyRuleResponse request.</p>",
      "refs": {
      }
    },
    "GatingRule": {
      "base": "<p>A gating rule verifies that a set of gating controls evaluates as true, based on a rule configuration that you specify. If the gating rule evaluates to true, Amazon Route 53 Application Recovery Controller allows a set of routing control state changes to run and complete against the set of target controls.</p>",
      "refs": {
        "CreateSafetyRuleResponse$GatingRule": null,
        "DescribeSafetyRuleResponse$GatingRule": null,
        "Rule$GATING": "<p>A gating rule verifies that a set of gating controls evaluates as true, based on a rule configuration that you specify. If the gating rule evaluates to true, Amazon Route 53 Application Recovery Controller allows a set of routing control state changes to run and complete against the set of target controls.</p>",
        "UpdateSafetyRuleResponse$GatingRule": null
      }
    },
    "GatingRuleUpdate": {
      "base": "<p>Update to a gating rule. You can update the name or the evaluation period (wait period). If you don't specify one of the items to update, the item is unchanged.</p>",
      "refs": {
        "UpdateSafetyRuleRequest$GatingRuleUpdate": null
      }
    },
    "InternalServerException": {
      "base": "<p>500 response - InternalServiceError. Temporary service error. Retry the request.</p>",
      "refs": {
      }
    },
    "ListAssociatedRoute53HealthChecksResponse": {
      "base": "<p>The result of a successful ListAssociatedRoute53HealthChecks request.</p>",
      "refs": {
      }
    },
    "ListClustersResponse": {
      "base": "<p>The result of a successful ListClusters request.</p>",
      "refs": {
      }
    },
    "ListControlPanelsResponse": {
      "base": "<p>The result of a successful ListControlPanel request.</p>",
      "refs": {
      }
    },
    "ListRoutingControlsResponse": {
      "base": "<p>The result of a successful ListRoutingControl request.</p>",
      "refs": {
      }
    },
    "ListSafetyRulesResponse": {
      "base": "<p>The response to a ListSafetyRulesRequest.</p>",
      "refs": {
      }
    },
    "NewAssertionRule": {
      "base": "<p>A new assertion rule for a control panel.</p>",
      "refs": {
        "CreateSafetyRuleRequest$AssertionRule": null
      }
    },
    "NewGatingRule": {
      "base": "<p>A new gating rule for a control panel.</p>",
      "refs": {
        "CreateSafetyRuleRequest$GatingRule": null
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>404 response - The query string contains a syntax error or resource not found.</p>",
      "refs": {
      }
    },
    "RoutingControl": {
      "base": "<p>A routing control has one of two states: ON and OFF. You can map the routing control state to the state of an Amazon Route 53 health check, which can be used to control traffic routing.</p>",
      "refs": {
        "CreateRoutingControlResponse$RoutingControl": "<p>The routing control that is created.</p>",
        "DescribeRoutingControlResponse$RoutingControl": "<p>Information about the routing control.</p>",
        "UpdateRoutingControlResponse$RoutingControl": "<p>The routing control that was updated.</p>",
        "__listOfRoutingControl$member": null
      }
    },
    "Rule": {
      "base": "<p>A safety rule. A safety rule can be an assertion rule or a gating rule.</p>",
      "refs": {
        "__listOfRule$member": null
      }
    },
    "RuleConfig": {
      "base": "<p>The rule configuration for an assertion rule. That is, the criteria that you set for specific assertion controls (routing controls) that specify how many controls must be enabled after a transaction completes.</p>",
      "refs": {
        "AssertionRule$RuleConfig": "<p>The criteria that you set for specific assertion controls (routing controls) that designate how many controls must be enabled as the result of a transaction. For example, if you have three assertion controls, you might specify atleast 2 for your rule configuration. This means that at least two assertion controls must be enabled, so that at least two Amazon Web Services Regions are enabled.</p>",
        "GatingRule$RuleConfig": "<p>The criteria that you set for specific gating controls (routing controls) that designates how many controls must be enabled to allow you to change (set or unset) the target controls.</p>",
        "NewAssertionRule$RuleConfig": "<p>The criteria that you set for specific assertion controls (routing controls) that designate how many controls must be enabled as the result of a transaction. For example, if you have three assertion controls, you might specify atleast 2 for your rule configuration. This means that at least two assertion controls must be enabled, so that at least two Amazon Web Services Regions are enabled.</p>",
        "NewGatingRule$RuleConfig": "<p>The criteria that you set for specific gating controls (routing controls) that designates how many controls must be enabled to allow you to change (set or unset) the target controls.</p>"
      }
    },
    "RuleType": {
      "base": "<p>An enumerated type that determines how the evaluated rules are processed. RuleType can be one of the following:</p> <p>ATLEAST - At least N routing controls must be set. You specify N as the Threshold in the rule configuration.</p> <p>AND - All routing controls must be set. This is a shortcut for \"At least N,\" where N is the total number of controls in the rule.</p> <p>OR - Any control must be set. This is a shortcut for \"At least N,\" where N is 1.</p>",
      "refs": {
        "RuleConfig$Type": "<p>A rule can be one of the following: ATLEAST, AND, or OR.</p>"
      }
    },
    "ServiceQuotaExceededException": {
      "base": "<p>402 response</p>",
      "refs": {
      }
    },
    "Status": {
      "base": "<p>The deployment status of a resource. Status can be one of the following:</p> <p>PENDING: Amazon Route 53 Application Recovery Controller is creating the resource.</p> <p>DEPLOYED: The resource is deployed and ready to use.</p> <p>PENDING_DELETION: Amazon Route 53 Application Recovery Controller is deleting the resource.</p>",
      "refs": {
        "AssertionRule$Status": "<p>The deployment status of an assertion rule. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.</p>",
        "Cluster$Status": "<p>Deployment status of a resource. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.</p>",
        "ControlPanel$Status": "<p>The deployment status of control panel. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.</p>",
        "GatingRule$Status": "<p>The deployment status of a gating rule. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.</p>",
        "RoutingControl$Status": "<p>The deployment status of a routing control. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.</p>"
      }
    },
    "ThrottlingException": {
      "base": "<p>429 response - ThrottlingException.</p>",
      "refs": {
      }
    },
    "UpdateControlPanelRequest": {
      "base": "<p>Updates an existing control panel.</p>",
      "refs": {
      }
    },
    "UpdateControlPanelResponse": {
      "base": "<p>The result of a successful UpdateControlPanel request.</p>",
      "refs": {
      }
    },
    "UpdateRoutingControlRequest": {
      "base": "<p>A request to update a routing control.</p>",
      "refs": {
      }
    },
    "UpdateRoutingControlResponse": {
      "base": "<p>The result of a successful UpdateRoutingControl request.</p>",
      "refs": {
      }
    },
    "UpdateSafetyRuleRequest": {
      "base": "<p>Request to update a safety rule. A safety rule can be an assertion rule or a gating rule.</p>",
      "refs": {
      }
    },
    "UpdateSafetyRuleResponse": {
      "base": "<p>The result of a successful UpdateSafetyRule request.</p>",
      "refs": {
      }
    },
    "ValidationException": {
      "base": "<p>400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you used parameters together incorrectly.</p>",
      "refs": {
      }
    },
    "__boolean": {
      "base": null,
      "refs": {
        "ControlPanel$DefaultControlPanel": "<p>A flag that Amazon Route 53 Application Recovery Controller sets to true to designate the default control panel for a cluster. When you create a cluster, Amazon Route 53 Application Recovery Controller creates a control panel, and sets this flag for that control panel. If you create a control panel yourself, this flag is set to false.</p>",
        "RuleConfig$Inverted": "<p>Logical negation of the rule. If the rule would usually evaluate true, it's evaluated as false, and vice versa.</p>"
      }
    },
    "__integer": {
      "base": null,
      "refs": {
        "AssertionRule$WaitPeriodMs": "<p>An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent \"flapping\" of state. The wait period is 5000 ms by default, but you can choose a custom value.</p>",
        "AssertionRuleUpdate$WaitPeriodMs": "<p>An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent \"flapping\" of state. The wait period is 5000 ms by default, but you can choose a custom value.</p>",
        "ControlPanel$RoutingControlCount": "<p>The number of routing controls in the control panel.</p>",
        "GatingRule$WaitPeriodMs": "<p>An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent \"flapping\" of state. The wait period is 5000 ms by default, but you can choose a custom value.</p>",
        "GatingRuleUpdate$WaitPeriodMs": "<p>An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent \"flapping\" of state. The wait period is 5000 ms by default, but you can choose a custom value.</p>",
        "NewAssertionRule$WaitPeriodMs": "<p>An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent \"flapping\" of state. The wait period is 5000 ms by default, but you can choose a custom value.</p>",
        "NewGatingRule$WaitPeriodMs": "<p>An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent \"flapping\" of state. The wait period is 5000 ms by default, but you can choose a custom value.</p>",
        "RuleConfig$Threshold": "<p>The value of N, when you specify an ATLEAST rule type. That is, Threshold is the number of controls that must be set when you specify an ATLEAST type.</p>"
      }
    },
    "__listOfCluster": {
      "base": null,
      "refs": {
        "ListClustersResponse$Clusters": "<p>An array of the clusters in an account.</p>"
      }
    },
    "__listOfClusterEndpoint": {
      "base": null,
      "refs": {
        "Cluster$ClusterEndpoints": "<p>Endpoints for a cluster. Specify one of these endpoints when you want to set or retrieve a routing control state in the cluster.</p> <p>To get or update the routing control state, see the Amazon Route 53 Application Recovery Controller Cluster (Data Plane) Actions.</p>"
      }
    },
    "__listOfControlPanel": {
      "base": null,
      "refs": {
        "ListControlPanelsResponse$ControlPanels": "<p>The result of a successful ListControlPanel request.</p>"
      }
    },
    "__listOfRoutingControl": {
      "base": null,
      "refs": {
        "ListRoutingControlsResponse$RoutingControls": "<p>An array of routing controls.</p>"
      }
    },
    "__listOfRule": {
      "base": null,
      "refs": {
        "ListSafetyRulesResponse$SafetyRules": "<p>The list of safety rules in a control panel.</p>"
      }
    },
    "__listOf__string": {
      "base": null,
      "refs": {
        "AssertionRule$AssertedControls": "<p>The routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three Amazon Web Services Regions.</p>",
        "GatingRule$GatingControls": "<p>The gating controls for the gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.</p>",
        "GatingRule$TargetControls": "<p>Routing controls that can only be set or unset if the specified RuleConfig evaluates to true for the specified GatingControls. For example, say you have three gating controls, one for each of three Amazon Web Services Regions. Now you specify ATLEAST 2 as your RuleConfig. With these settings, you can only change (set or unset) the routing controls that you have specified as TargetControls if that rule evaluates to true.</p> <p>In other words, your ability to change the routing controls that you have specified as TargetControls is gated by the rule that you set for the routing controls in GatingControls.</p>",
        "ListAssociatedRoute53HealthChecksResponse$HealthCheckIds": "<p>Identifiers for the health checks.</p>",
        "NewAssertionRule$AssertedControls": "<p>The routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three Amazon Web Services Regions.</p>",
        "NewGatingRule$GatingControls": "<p>The gating controls for the new gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.</p>",
        "NewGatingRule$TargetControls": "<p>Routing controls that can only be set or unset if the specified RuleConfig evaluates to true for the specified GatingControls. For example, say you have three gating controls, one for each of three Amazon Web Services Regions. Now you specify AtLeast 2 as your RuleConfig. With these settings, you can only change (set or unset) the routing controls that you have specified as TargetControls if that rule evaluates to true.</p> <p>In other words, your ability to change the routing controls that you have specified as TargetControls is gated by the rule that you set for the routing controls in GatingControls.</p>"
      }
    },
    "__string": {
      "base": null,
      "refs": {
        "AccessDeniedException$Message": null,
        "AssertionRule$ControlPanelArn": "<p>The Amazon Resource Name (ARN) of the control panel.</p>",
        "AssertionRule$SafetyRuleArn": "<p>The Amazon Resource Name (ARN) of the assertion rule.</p>",
        "AssertionRuleUpdate$SafetyRuleArn": "<p>The Amazon Resource Name (ARN) of the assertion rule.</p>",
        "Cluster$ClusterArn": "<p>The Amazon Resource Name (ARN) of the cluster.</p>",
        "ConflictException$Message": null,
        "ControlPanel$ClusterArn": "<p>The Amazon Resource Name (ARN) of the cluster that includes the control panel.</p>",
        "ControlPanel$ControlPanelArn": "<p>The Amazon Resource Name (ARN) of the control panel.</p>",
        "CreateControlPanelRequest$ClusterArn": "<p>The Amazon Resource Name (ARN) of the cluster for the control panel.</p>",
        "CreateRoutingControlRequest$ClusterArn": "<p>The Amazon Resource Name (ARN) of the cluster that includes the routing control.</p>",
        "CreateRoutingControlRequest$ControlPanelArn": "<p>The Amazon Resource Name (ARN) of the control panel that includes the routing control.</p>",
        "GatingRule$ControlPanelArn": "<p>The Amazon Resource Name (ARN) of the control panel.</p>",
        "GatingRule$SafetyRuleArn": "<p>The Amazon Resource Name (ARN) of the gating rule.</p>",
        "GatingRuleUpdate$SafetyRuleArn": "<p>The Amazon Resource Name (ARN) of the gating rule.</p>",
        "InternalServerException$Message": null,
        "NewAssertionRule$ControlPanelArn": "<p>The Amazon Resource Name (ARN) for the control panel.</p>",
        "NewGatingRule$ControlPanelArn": "<p>The Amazon Resource Name (ARN) of the control panel.</p>",
        "ResourceNotFoundException$Message": null,
        "RoutingControl$ControlPanelArn": "<p>The Amazon Resource Name (ARN) of the control panel that includes the routing control.</p>",
        "RoutingControl$RoutingControlArn": "<p>The Amazon Resource Name (ARN) of the routing control.</p>",
        "ServiceQuotaExceededException$Message": null,
        "ThrottlingException$Message": null,
        "UpdateControlPanelRequest$ControlPanelArn": "<p>The Amazon Resource Name (ARN) of the control panel.</p>",
        "UpdateRoutingControlRequest$RoutingControlArn": "<p>The Amazon Resource Name (ARN) of the routing control.</p>",
        "ValidationException$Message": null,
        "__listOf__string$member": null
      }
    },
    "__stringMax64": {
      "base": null,
      "refs": {
        "CreateClusterRequest$ClientToken": "<p>Unique client idempotency token.</p>",
        "CreateControlPanelRequest$ClientToken": "<p>Unique client idempotency token.</p>",
        "CreateRoutingControlRequest$ClientToken": "<p>Unique client idempotency token.</p>",
        "CreateSafetyRuleRequest$ClientToken": "<p>Unique client idempotency token.</p>"
      }
    },
    "__stringMax8096": {
      "base": null,
      "refs": {
        "ListAssociatedRoute53HealthChecksResponse$NextToken": "<p>The token that identifies which batch of results you want to see.</p>",
        "ListClustersResponse$NextToken": "<p>The token that identifies which batch of results you want to see.</p>",
        "ListControlPanelsResponse$NextToken": "<p>The token that identifies which batch of results you want to see.</p>",
        "ListRoutingControlsResponse$NextToken": "<p>The token that identifies which batch of results you want to see.</p>",
        "ListSafetyRulesResponse$NextToken": "<p>The token that identifies which batch of results you want to see.</p>"
      }
    },
    "__stringMin1Max128": {
      "base": null,
      "refs": {
        "ClusterEndpoint$Endpoint": "<p>A cluster endpoint. Specify an endpoint and Amazon Web Services Region when you want to set or retrieve a routing control state in the cluster.</p> <p>To get or update the routing control state, see the Amazon Route 53 Application Recovery Controller Cluster (Data Plane) Actions.</p>"
      }
    },
    "__stringMin1Max32": {
      "base": null,
      "refs": {
        "ClusterEndpoint$Region": "<p>The Amazon Web Services Region for a cluster endpoint.</p>"
      }
    },
    "__stringMin1Max64PatternS": {
      "base": null,
      "refs": {
        "AssertionRule$Name": "<p>Name of the assertion rule. You can use any non-white space character in the name.</p>",
        "AssertionRuleUpdate$Name": "<p>The name of the assertion rule. You can use any non-white space character in the name.</p>",
        "Cluster$Name": "<p>The name of the cluster.</p>",
        "ControlPanel$Name": "<p>The name of the control panel. You can use any non-white space character in the name.</p>",
        "CreateClusterRequest$ClusterName": "<p>The name of the cluster.</p>",
        "CreateControlPanelRequest$ControlPanelName": "<p>The name of the control panel.</p>",
        "CreateRoutingControlRequest$RoutingControlName": "<p>The name of the routing control.</p>",
        "GatingRule$Name": "<p>The name for the gating rule.</p>",
        "GatingRuleUpdate$Name": "<p>The name for the gating rule.</p>",
        "NewAssertionRule$Name": "<p>The name of the assertion rule. You can use any non-white space character in the name.</p>",
        "NewGatingRule$Name": "<p>The name for the new gating rule.</p>",
        "RoutingControl$Name": "<p>The name of the routing control.</p>",
        "UpdateControlPanelRequest$ControlPanelName": "<p>The name of the control panel.</p>",
        "UpdateRoutingControlRequest$RoutingControlName": "<p>The name of the routing control.</p>"
      }
    }
  }
}
