{
  "metadata": {
    "apiVersion": "2021-11-29",
    "endpointPrefix": "iottwinmaker",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "AWS IoT TwinMaker",
    "serviceId": "IoTTwinMaker",
    "signatureVersion": "v4",
    "signingName": "iottwinmaker",
    "uid": "iottwinmaker-2021-11-29"
  },
  "operations": {
    "BatchPutPropertyValues": {
      "endpoint": {
        "hostPrefix": "data."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/entity-properties",
        "responseCode": 200
      },
      "input": {
        "shape": "BatchPutPropertyValuesRequest"
      },
      "name": "BatchPutPropertyValues",
      "output": {
        "shape": "BatchPutPropertyValuesResponse"
      }
    },
    "CreateComponentType": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/component-types/{componentTypeId}",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateComponentTypeRequest"
      },
      "name": "CreateComponentType",
      "output": {
        "shape": "CreateComponentTypeResponse"
      }
    },
    "CreateEntity": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/entities",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateEntityRequest"
      },
      "name": "CreateEntity",
      "output": {
        "shape": "CreateEntityResponse"
      }
    },
    "CreateScene": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/scenes",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateSceneRequest"
      },
      "name": "CreateScene",
      "output": {
        "shape": "CreateSceneResponse"
      }
    },
    "CreateSyncJob": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/sync-jobs/{syncSource}",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateSyncJobRequest"
      },
      "name": "CreateSyncJob",
      "output": {
        "shape": "CreateSyncJobResponse"
      }
    },
    "CreateWorkspace": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateWorkspaceRequest"
      },
      "name": "CreateWorkspace",
      "output": {
        "shape": "CreateWorkspaceResponse"
      }
    },
    "DeleteComponentType": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/workspaces/{workspaceId}/component-types/{componentTypeId}",
        "responseCode": 200
      },
      "input": {
        "shape": "DeleteComponentTypeRequest"
      },
      "name": "DeleteComponentType",
      "output": {
        "shape": "DeleteComponentTypeResponse"
      }
    },
    "DeleteEntity": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/workspaces/{workspaceId}/entities/{entityId}",
        "responseCode": 200
      },
      "input": {
        "shape": "DeleteEntityRequest"
      },
      "name": "DeleteEntity",
      "output": {
        "shape": "DeleteEntityResponse"
      }
    },
    "DeleteScene": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/workspaces/{workspaceId}/scenes/{sceneId}",
        "responseCode": 200
      },
      "input": {
        "shape": "DeleteSceneRequest"
      },
      "name": "DeleteScene",
      "output": {
        "shape": "DeleteSceneResponse"
      }
    },
    "DeleteSyncJob": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/workspaces/{workspaceId}/sync-jobs/{syncSource}",
        "responseCode": 200
      },
      "input": {
        "shape": "DeleteSyncJobRequest"
      },
      "name": "DeleteSyncJob",
      "output": {
        "shape": "DeleteSyncJobResponse"
      }
    },
    "DeleteWorkspace": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/workspaces/{workspaceId}",
        "responseCode": 200
      },
      "input": {
        "shape": "DeleteWorkspaceRequest"
      },
      "name": "DeleteWorkspace",
      "output": {
        "shape": "DeleteWorkspaceResponse"
      }
    },
    "ExecuteQuery": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "QueryTimeoutException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/queries/execution",
        "responseCode": 200
      },
      "input": {
        "shape": "ExecuteQueryRequest"
      },
      "name": "ExecuteQuery",
      "output": {
        "shape": "ExecuteQueryResponse"
      }
    },
    "GetComponentType": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/workspaces/{workspaceId}/component-types/{componentTypeId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetComponentTypeRequest"
      },
      "name": "GetComponentType",
      "output": {
        "shape": "GetComponentTypeResponse"
      }
    },
    "GetEntity": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/workspaces/{workspaceId}/entities/{entityId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetEntityRequest"
      },
      "name": "GetEntity",
      "output": {
        "shape": "GetEntityResponse"
      }
    },
    "GetPricingPlan": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/pricingplan",
        "responseCode": 200
      },
      "input": {
        "shape": "GetPricingPlanRequest"
      },
      "name": "GetPricingPlan",
      "output": {
        "shape": "GetPricingPlanResponse"
      }
    },
    "GetPropertyValue": {
      "endpoint": {
        "hostPrefix": "data."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ConnectorFailureException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConnectorTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/entity-properties/value",
        "responseCode": 200
      },
      "input": {
        "shape": "GetPropertyValueRequest"
      },
      "name": "GetPropertyValue",
      "output": {
        "shape": "GetPropertyValueResponse"
      }
    },
    "GetPropertyValueHistory": {
      "endpoint": {
        "hostPrefix": "data."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ConnectorFailureException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConnectorTimeoutException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/entity-properties/history",
        "responseCode": 200
      },
      "input": {
        "shape": "GetPropertyValueHistoryRequest"
      },
      "name": "GetPropertyValueHistory",
      "output": {
        "shape": "GetPropertyValueHistoryResponse"
      }
    },
    "GetScene": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/workspaces/{workspaceId}/scenes/{sceneId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetSceneRequest"
      },
      "name": "GetScene",
      "output": {
        "shape": "GetSceneResponse"
      }
    },
    "GetSyncJob": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sync-jobs/{syncSource}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetSyncJobRequest"
      },
      "name": "GetSyncJob",
      "output": {
        "shape": "GetSyncJobResponse"
      }
    },
    "GetWorkspace": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/workspaces/{workspaceId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetWorkspaceRequest"
      },
      "name": "GetWorkspace",
      "output": {
        "shape": "GetWorkspaceResponse"
      }
    },
    "ListComponentTypes": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/component-types-list",
        "responseCode": 200
      },
      "input": {
        "shape": "ListComponentTypesRequest"
      },
      "name": "ListComponentTypes",
      "output": {
        "shape": "ListComponentTypesResponse"
      }
    },
    "ListEntities": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/entities-list",
        "responseCode": 200
      },
      "input": {
        "shape": "ListEntitiesRequest"
      },
      "name": "ListEntities",
      "output": {
        "shape": "ListEntitiesResponse"
      }
    },
    "ListScenes": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/scenes-list",
        "responseCode": 200
      },
      "input": {
        "shape": "ListScenesRequest"
      },
      "name": "ListScenes",
      "output": {
        "shape": "ListScenesResponse"
      }
    },
    "ListSyncJobs": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/sync-jobs-list",
        "responseCode": 200
      },
      "input": {
        "shape": "ListSyncJobsRequest"
      },
      "name": "ListSyncJobs",
      "output": {
        "shape": "ListSyncJobsResponse"
      }
    },
    "ListSyncResources": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/sync-jobs/{syncSource}/resources-list",
        "responseCode": 200
      },
      "input": {
        "shape": "ListSyncResourcesRequest"
      },
      "name": "ListSyncResources",
      "output": {
        "shape": "ListSyncResourcesResponse"
      }
    },
    "ListTagsForResource": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags-list",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "ListWorkspaces": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces-list",
        "responseCode": 200
      },
      "input": {
        "shape": "ListWorkspacesRequest"
      },
      "name": "ListWorkspaces",
      "output": {
        "shape": "ListWorkspacesResponse"
      }
    },
    "TagResource": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "TooManyTagsException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags",
        "responseCode": 200
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags",
        "responseCode": 200
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateComponentType": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/workspaces/{workspaceId}/component-types/{componentTypeId}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateComponentTypeRequest"
      },
      "name": "UpdateComponentType",
      "output": {
        "shape": "UpdateComponentTypeResponse"
      }
    },
    "UpdateEntity": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/workspaces/{workspaceId}/entities/{entityId}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateEntityRequest"
      },
      "name": "UpdateEntity",
      "output": {
        "shape": "UpdateEntityResponse"
      }
    },
    "UpdatePricingPlan": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/pricingplan",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdatePricingPlanRequest"
      },
      "name": "UpdatePricingPlan",
      "output": {
        "shape": "UpdatePricingPlanResponse"
      }
    },
    "UpdateScene": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/workspaces/{workspaceId}/scenes/{sceneId}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateSceneRequest"
      },
      "name": "UpdateScene",
      "output": {
        "shape": "UpdateSceneResponse"
      }
    },
    "UpdateWorkspace": {
      "endpoint": {
        "hostPrefix": "api."
      },
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/workspaces/{workspaceId}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateWorkspaceRequest"
      },
      "name": "UpdateWorkspace",
      "output": {
        "shape": "UpdateWorkspaceResponse"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "error": {
        "httpStatusCode": 403,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "BatchPutPropertyError": {
      "members": {
        "entry": {
          "shape": "PropertyValueEntry"
        },
        "errorCode": {
          "shape": "String"
        },
        "errorMessage": {
          "shape": "String"
        }
      },
      "required": [
        "errorCode",
        "errorMessage",
        "entry"
      ],
      "type": "structure"
    },
    "BatchPutPropertyErrorEntry": {
      "members": {
        "errors": {
          "shape": "Errors"
        }
      },
      "required": [
        "errors"
      ],
      "type": "structure"
    },
    "BatchPutPropertyValuesRequest": {
      "members": {
        "entries": {
          "shape": "Entries"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "entries"
      ],
      "type": "structure"
    },
    "BatchPutPropertyValuesResponse": {
      "members": {
        "errorEntries": {
          "shape": "ErrorEntries"
        }
      },
      "required": [
        "errorEntries"
      ],
      "type": "structure"
    },
    "Boolean": {
      "box": true,
      "type": "boolean"
    },
    "BundleInformation": {
      "members": {
        "bundleNames": {
          "shape": "PricingBundles"
        },
        "pricingTier": {
          "shape": "PricingTier"
        }
      },
      "required": [
        "bundleNames"
      ],
      "type": "structure"
    },
    "BundleName": {
      "max": 256,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "ColumnDescription": {
      "members": {
        "name": {
          "shape": "ColumnName"
        },
        "type": {
          "shape": "ColumnType"
        }
      },
      "type": "structure"
    },
    "ColumnDescriptions": {
      "member": {
        "shape": "ColumnDescription"
      },
      "type": "list"
    },
    "ColumnName": {
      "pattern": ".*",
      "type": "string"
    },
    "ColumnType": {
      "enum": [
        "NODE",
        "EDGE",
        "VALUE"
      ],
      "type": "string"
    },
    "ComponentPropertyGroupRequest": {
      "members": {
        "groupType": {
          "shape": "GroupType"
        },
        "propertyNames": {
          "shape": "PropertyNames"
        },
        "updateType": {
          "shape": "PropertyGroupUpdateType"
        }
      },
      "type": "structure"
    },
    "ComponentPropertyGroupRequests": {
      "key": {
        "shape": "Name"
      },
      "type": "map",
      "value": {
        "shape": "ComponentPropertyGroupRequest"
      }
    },
    "ComponentPropertyGroupResponse": {
      "members": {
        "groupType": {
          "shape": "GroupType"
        },
        "isInherited": {
          "shape": "Boolean"
        },
        "propertyNames": {
          "shape": "PropertyNames"
        }
      },
      "required": [
        "groupType",
        "propertyNames",
        "isInherited"
      ],
      "type": "structure"
    },
    "ComponentPropertyGroupResponses": {
      "key": {
        "shape": "Name"
      },
      "type": "map",
      "value": {
        "shape": "ComponentPropertyGroupResponse"
      }
    },
    "ComponentRequest": {
      "members": {
        "componentTypeId": {
          "shape": "ComponentTypeId"
        },
        "description": {
          "shape": "Description"
        },
        "properties": {
          "shape": "PropertyRequests"
        },
        "propertyGroups": {
          "shape": "ComponentPropertyGroupRequests"
        }
      },
      "type": "structure"
    },
    "ComponentResponse": {
      "members": {
        "componentName": {
          "shape": "Name"
        },
        "componentTypeId": {
          "shape": "ComponentTypeId"
        },
        "definedIn": {
          "shape": "String"
        },
        "description": {
          "shape": "Description"
        },
        "properties": {
          "shape": "PropertyResponses"
        },
        "propertyGroups": {
          "shape": "ComponentPropertyGroupResponses"
        },
        "status": {
          "shape": "Status"
        },
        "syncSource": {
          "shape": "SyncSource"
        }
      },
      "type": "structure"
    },
    "ComponentTypeId": {
      "max": 256,
      "min": 1,
      "pattern": "[a-zA-Z_\\.\\-0-9:]+",
      "type": "string"
    },
    "ComponentTypeName": {
      "max": 256,
      "min": 0,
      "pattern": ".*[^\\u0000-\\u001F\\u007F]*.*",
      "type": "string"
    },
    "ComponentTypeSummaries": {
      "member": {
        "shape": "ComponentTypeSummary"
      },
      "type": "list"
    },
    "ComponentTypeSummary": {
      "members": {
        "arn": {
          "shape": "TwinMakerArn"
        },
        "componentTypeId": {
          "shape": "ComponentTypeId"
        },
        "componentTypeName": {
          "shape": "ComponentTypeName"
        },
        "creationDateTime": {
          "shape": "Timestamp"
        },
        "description": {
          "shape": "Description"
        },
        "status": {
          "shape": "Status"
        },
        "updateDateTime": {
          "shape": "Timestamp"
        }
      },
      "required": [
        "arn",
        "componentTypeId",
        "creationDateTime",
        "updateDateTime"
      ],
      "type": "structure"
    },
    "ComponentUpdateRequest": {
      "members": {
        "componentTypeId": {
          "shape": "ComponentTypeId"
        },
        "description": {
          "shape": "Description"
        },
        "propertyGroupUpdates": {
          "shape": "ComponentPropertyGroupRequests"
        },
        "propertyUpdates": {
          "shape": "PropertyRequests"
        },
        "updateType": {
          "shape": "ComponentUpdateType"
        }
      },
      "type": "structure"
    },
    "ComponentUpdateType": {
      "enum": [
        "CREATE",
        "UPDATE",
        "DELETE"
      ],
      "type": "string"
    },
    "ComponentUpdatesMapRequest": {
      "key": {
        "shape": "Name"
      },
      "type": "map",
      "value": {
        "shape": "ComponentUpdateRequest"
      }
    },
    "ComponentsMap": {
      "key": {
        "shape": "Name"
      },
      "type": "map",
      "value": {
        "shape": "ComponentResponse"
      }
    },
    "ComponentsMapRequest": {
      "key": {
        "shape": "Name"
      },
      "type": "map",
      "value": {
        "shape": "ComponentRequest"
      }
    },
    "Configuration": {
      "key": {
        "shape": "Name"
      },
      "type": "map",
      "value": {
        "shape": "Value"
      }
    },
    "ConflictException": {
      "error": {
        "httpStatusCode": 409,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "ConnectorFailureException": {
      "error": {
        "httpStatusCode": 424,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "ConnectorTimeoutException": {
      "error": {
        "httpStatusCode": 424,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "CreateComponentTypeRequest": {
      "members": {
        "componentTypeId": {
          "location": "uri",
          "locationName": "componentTypeId",
          "shape": "ComponentTypeId"
        },
        "componentTypeName": {
          "shape": "ComponentTypeName"
        },
        "description": {
          "shape": "Description"
        },
        "extendsFrom": {
          "shape": "ExtendsFrom"
        },
        "functions": {
          "shape": "FunctionsRequest"
        },
        "isSingleton": {
          "shape": "Boolean"
        },
        "propertyDefinitions": {
          "shape": "PropertyDefinitionsRequest"
        },
        "propertyGroups": {
          "shape": "PropertyGroupsRequest"
        },
        "tags": {
          "shape": "TagMap"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "componentTypeId"
      ],
      "type": "structure"
    },
    "CreateComponentTypeResponse": {
      "members": {
        "arn": {
          "shape": "TwinMakerArn"
        },
        "creationDateTime": {
          "shape": "Timestamp"
        },
        "state": {
          "shape": "State"
        }
      },
      "required": [
        "arn",
        "creationDateTime",
        "state"
      ],
      "type": "structure"
    },
    "CreateEntityRequest": {
      "members": {
        "components": {
          "shape": "ComponentsMapRequest"
        },
        "description": {
          "shape": "Description"
        },
        "entityId": {
          "shape": "EntityId"
        },
        "entityName": {
          "shape": "EntityName"
        },
        "parentEntityId": {
          "shape": "ParentEntityId"
        },
        "tags": {
          "shape": "TagMap"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "entityName"
      ],
      "type": "structure"
    },
    "CreateEntityResponse": {
      "members": {
        "arn": {
          "shape": "TwinMakerArn"
        },
        "creationDateTime": {
          "shape": "Timestamp"
        },
        "entityId": {
          "shape": "EntityId"
        },
        "state": {
          "shape": "State"
        }
      },
      "required": [
        "entityId",
        "arn",
        "creationDateTime",
        "state"
      ],
      "type": "structure"
    },
    "CreateSceneRequest": {
      "members": {
        "capabilities": {
          "shape": "SceneCapabilities"
        },
        "contentLocation": {
          "shape": "S3Url"
        },
        "description": {
          "shape": "Description"
        },
        "sceneId": {
          "shape": "Id"
        },
        "sceneMetadata": {
          "shape": "SceneMetadataMap"
        },
        "tags": {
          "shape": "TagMap"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "sceneId",
        "contentLocation"
      ],
      "type": "structure"
    },
    "CreateSceneResponse": {
      "members": {
        "arn": {
          "shape": "TwinMakerArn"
        },
        "creationDateTime": {
          "shape": "Timestamp"
        }
      },
      "required": [
        "arn",
        "creationDateTime"
      ],
      "type": "structure"
    },
    "CreateSyncJobRequest": {
      "members": {
        "syncRole": {
          "shape": "RoleArn"
        },
        "syncSource": {
          "location": "uri",
          "locationName": "syncSource",
          "shape": "SyncSource"
        },
        "tags": {
          "shape": "TagMap"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "syncSource",
        "syncRole"
      ],
      "type": "structure"
    },
    "CreateSyncJobResponse": {
      "members": {
        "arn": {
          "shape": "TwinMakerArn"
        },
        "creationDateTime": {
          "shape": "Timestamp"
        },
        "state": {
          "shape": "SyncJobState"
        }
      },
      "required": [
        "arn",
        "creationDateTime",
        "state"
      ],
      "type": "structure"
    },
    "CreateWorkspaceRequest": {
      "members": {
        "description": {
          "shape": "Description"
        },
        "role": {
          "shape": "RoleArn"
        },
        "s3Location": {
          "shape": "S3Location"
        },
        "tags": {
          "shape": "TagMap"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "s3Location",
        "role"
      ],
      "type": "structure"
    },
    "CreateWorkspaceResponse": {
      "members": {
        "arn": {
          "shape": "TwinMakerArn"
        },
        "creationDateTime": {
          "shape": "Timestamp"
        }
      },
      "required": [
        "arn",
        "creationDateTime"
      ],
      "type": "structure"
    },
    "DataConnector": {
      "members": {
        "isNative": {
          "shape": "Boolean"
        },
        "lambda": {
          "shape": "LambdaFunction"
        }
      },
      "type": "structure"
    },
    "DataType": {
      "members": {
        "allowedValues": {
          "shape": "DataValueList"
        },
        "nestedType": {
          "shape": "DataType"
        },
        "relationship": {
          "shape": "Relationship"
        },
        "type": {
          "shape": "Type"
        },
        "unitOfMeasure": {
          "shape": "String"
        }
      },
      "required": [
        "type"
      ],
      "type": "structure"
    },
    "DataValue": {
      "members": {
        "booleanValue": {
          "shape": "Boolean"
        },
        "doubleValue": {
          "shape": "Double"
        },
        "expression": {
          "shape": "Expression"
        },
        "integerValue": {
          "shape": "Integer"
        },
        "listValue": {
          "shape": "DataValueList"
        },
        "longValue": {
          "shape": "Long"
        },
        "mapValue": {
          "shape": "DataValueMap"
        },
        "relationshipValue": {
          "shape": "RelationshipValue"
        },
        "stringValue": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "DataValueList": {
      "max": 50,
      "member": {
        "shape": "DataValue"
      },
      "min": 0,
      "type": "list"
    },
    "DataValueMap": {
      "key": {
        "shape": "String"
      },
      "max": 50,
      "min": 0,
      "type": "map",
      "value": {
        "shape": "DataValue"
      }
    },
    "DeleteComponentTypeRequest": {
      "members": {
        "componentTypeId": {
          "location": "uri",
          "locationName": "componentTypeId",
          "shape": "ComponentTypeId"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "componentTypeId"
      ],
      "type": "structure"
    },
    "DeleteComponentTypeResponse": {
      "members": {
        "state": {
          "shape": "State"
        }
      },
      "required": [
        "state"
      ],
      "type": "structure"
    },
    "DeleteEntityRequest": {
      "members": {
        "entityId": {
          "location": "uri",
          "locationName": "entityId",
          "shape": "EntityId"
        },
        "isRecursive": {
          "location": "querystring",
          "locationName": "isRecursive",
          "shape": "Boolean"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "entityId"
      ],
      "type": "structure"
    },
    "DeleteEntityResponse": {
      "members": {
        "state": {
          "shape": "State"
        }
      },
      "required": [
        "state"
      ],
      "type": "structure"
    },
    "DeleteSceneRequest": {
      "members": {
        "sceneId": {
          "location": "uri",
          "locationName": "sceneId",
          "shape": "Id"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "sceneId"
      ],
      "type": "structure"
    },
    "DeleteSceneResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteSyncJobRequest": {
      "members": {
        "syncSource": {
          "location": "uri",
          "locationName": "syncSource",
          "shape": "SyncSource"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "syncSource"
      ],
      "type": "structure"
    },
    "DeleteSyncJobResponse": {
      "members": {
        "state": {
          "shape": "SyncJobState"
        }
      },
      "required": [
        "state"
      ],
      "type": "structure"
    },
    "DeleteWorkspaceRequest": {
      "members": {
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId"
      ],
      "type": "structure"
    },
    "DeleteWorkspaceResponse": {
      "members": {},
      "type": "structure"
    },
    "Description": {
      "max": 2048,
      "min": 0,
      "pattern": ".*",
      "type": "string"
    },
    "Double": {
      "box": true,
      "type": "double"
    },
    "EntityId": {
      "max": 128,
      "min": 1,
      "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|^[a-zA-Z0-9][a-zA-Z_\\-0-9.:]*[a-zA-Z0-9]+",
      "type": "string"
    },
    "EntityName": {
      "max": 256,
      "min": 1,
      "pattern": "[^\\u0000-\\u001F\\u007F]+",
      "type": "string"
    },
    "EntityPropertyReference": {
      "members": {
        "componentName": {
          "shape": "Name"
        },
        "entityId": {
          "shape": "EntityId"
        },
        "externalIdProperty": {
          "shape": "ExternalIdProperty"
        },
        "propertyName": {
          "shape": "Name"
        }
      },
      "required": [
        "propertyName"
      ],
      "type": "structure"
    },
    "EntitySummaries": {
      "member": {
        "shape": "EntitySummary"
      },
      "type": "list"
    },
    "EntitySummary": {
      "members": {
        "arn": {
          "shape": "TwinMakerArn"
        },
        "creationDateTime": {
          "shape": "Timestamp"
        },
        "description": {
          "shape": "Description"
        },
        "entityId": {
          "shape": "EntityId"
        },
        "entityName": {
          "shape": "EntityName"
        },
        "hasChildEntities": {
          "shape": "Boolean"
        },
        "parentEntityId": {
          "shape": "ParentEntityId"
        },
        "status": {
          "shape": "Status"
        },
        "updateDateTime": {
          "shape": "Timestamp"
        }
      },
      "required": [
        "entityId",
        "entityName",
        "arn",
        "status",
        "creationDateTime",
        "updateDateTime"
      ],
      "type": "structure"
    },
    "Entries": {
      "max": 10,
      "member": {
        "shape": "PropertyValueEntry"
      },
      "min": 1,
      "type": "list"
    },
    "ErrorCode": {
      "enum": [
        "VALIDATION_ERROR",
        "INTERNAL_FAILURE",
        "SYNC_INITIALIZING_ERROR",
        "SYNC_CREATING_ERROR",
        "SYNC_PROCESSING_ERROR"
      ],
      "type": "string"
    },
    "ErrorDetails": {
      "members": {
        "code": {
          "shape": "ErrorCode"
        },
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "ErrorEntries": {
      "max": 10,
      "member": {
        "shape": "BatchPutPropertyErrorEntry"
      },
      "min": 1,
      "type": "list"
    },
    "ErrorMessage": {
      "max": 2048,
      "min": 0,
      "type": "string"
    },
    "Errors": {
      "max": 10,
      "member": {
        "shape": "BatchPutPropertyError"
      },
      "min": 1,
      "type": "list"
    },
    "ExceptionMessage": {
      "type": "string"
    },
    "ExecuteQueryRequest": {
      "members": {
        "maxResults": {
          "shape": "QueryServiceMaxResults"
        },
        "nextToken": {
          "shape": "NextToken"
        },
        "queryStatement": {
          "shape": "QueryStatement"
        },
        "workspaceId": {
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "queryStatement"
      ],
      "type": "structure"
    },
    "ExecuteQueryResponse": {
      "members": {
        "columnDescriptions": {
          "shape": "ColumnDescriptions"
        },
        "nextToken": {
          "shape": "NextToken"
        },
        "rows": {
          "shape": "Rows"
        }
      },
      "type": "structure"
    },
    "Expression": {
      "max": 316,
      "min": 1,
      "pattern": "(^\\$\\{Parameters\\.[a-zA-z]+([a-zA-z_0-9]*)}$)",
      "type": "string"
    },
    "ExtendsFrom": {
      "member": {
        "shape": "ComponentTypeId"
      },
      "type": "list"
    },
    "ExternalIdProperty": {
      "key": {
        "shape": "String"
      },
      "type": "map",
      "value": {
        "shape": "String"
      }
    },
    "FunctionRequest": {
      "members": {
        "implementedBy": {
          "shape": "DataConnector"
        },
        "requiredProperties": {
          "shape": "RequiredProperties"
        },
        "scope": {
          "shape": "Scope"
        }
      },
      "type": "structure"
    },
    "FunctionResponse": {
      "members": {
        "implementedBy": {
          "shape": "DataConnector"
        },
        "isInherited": {
          "shape": "Boolean"
        },
        "requiredProperties": {
          "shape": "RequiredProperties"
        },
        "scope": {
          "shape": "Scope"
        }
      },
      "type": "structure"
    },
    "FunctionsRequest": {
      "key": {
        "shape": "Name"
      },
      "type": "map",
      "value": {
        "shape": "FunctionRequest"
      }
    },
    "FunctionsResponse": {
      "key": {
        "shape": "Name"
      },
      "type": "map",
      "value": {
        "shape": "FunctionResponse"
      }
    },
    "GeneratedSceneMetadataMap": {
      "key": {
        "shape": "Name"
      },
      "max": 50,
      "min": 0,
      "type": "map",
      "value": {
        "shape": "SceneMetadataValue"
      }
    },
    "GetComponentTypeRequest": {
      "members": {
        "componentTypeId": {
          "location": "uri",
          "locationName": "componentTypeId",
          "shape": "ComponentTypeId"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "componentTypeId"
      ],
      "type": "structure"
    },
    "GetComponentTypeResponse": {
      "members": {
        "arn": {
          "shape": "TwinMakerArn"
        },
        "componentTypeId": {
          "shape": "ComponentTypeId"
        },
        "componentTypeName": {
          "shape": "ComponentTypeName"
        },
        "creationDateTime": {
          "shape": "Timestamp"
        },
        "description": {
          "shape": "Description"
        },
        "extendsFrom": {
          "shape": "ExtendsFrom"
        },
        "functions": {
          "shape": "FunctionsResponse"
        },
        "isAbstract": {
          "shape": "Boolean"
        },
        "isSchemaInitialized": {
          "shape": "Boolean"
        },
        "isSingleton": {
          "shape": "Boolean"
        },
        "propertyDefinitions": {
          "shape": "PropertyDefinitionsResponse"
        },
        "propertyGroups": {
          "shape": "PropertyGroupsResponse"
        },
        "status": {
          "shape": "Status"
        },
        "syncSource": {
          "shape": "SyncSource"
        },
        "updateDateTime": {
          "shape": "Timestamp"
        },
        "workspaceId": {
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "componentTypeId",
        "creationDateTime",
        "updateDateTime",
        "arn"
      ],
      "type": "structure"
    },
    "GetEntityRequest": {
      "members": {
        "entityId": {
          "location": "uri",
          "locationName": "entityId",
          "shape": "EntityId"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "entityId"
      ],
      "type": "structure"
    },
    "GetEntityResponse": {
      "members": {
        "arn": {
          "shape": "TwinMakerArn"
        },
        "components": {
          "shape": "ComponentsMap"
        },
        "creationDateTime": {
          "shape": "Timestamp"
        },
        "description": {
          "shape": "Description"
        },
        "entityId": {
          "shape": "EntityId"
        },
        "entityName": {
          "shape": "EntityName"
        },
        "hasChildEntities": {
          "shape": "Boolean"
        },
        "parentEntityId": {
          "shape": "ParentEntityId"
        },
        "status": {
          "shape": "Status"
        },
        "syncSource": {
          "shape": "SyncSource"
        },
        "updateDateTime": {
          "shape": "Timestamp"
        },
        "workspaceId": {
          "shape": "Id"
        }
      },
      "required": [
        "entityId",
        "entityName",
        "arn",
        "status",
        "workspaceId",
        "parentEntityId",
        "hasChildEntities",
        "creationDateTime",
        "updateDateTime"
      ],
      "type": "structure"
    },
    "GetPricingPlanRequest": {
      "members": {},
      "type": "structure"
    },
    "GetPricingPlanResponse": {
      "members": {
        "currentPricingPlan": {
          "shape": "PricingPlan"
        },
        "pendingPricingPlan": {
          "shape": "PricingPlan"
        }
      },
      "required": [
        "currentPricingPlan"
      ],
      "type": "structure"
    },
    "GetPropertyValueHistoryRequest": {
      "members": {
        "componentName": {
          "shape": "Name"
        },
        "componentTypeId": {
          "shape": "ComponentTypeId"
        },
        "endDateTime": {
          "deprecated": true,
          "deprecatedMessage": "This field is deprecated and will throw an error in the future. Use endTime instead.",
          "shape": "Timestamp"
        },
        "endTime": {
          "shape": "Time"
        },
        "entityId": {
          "shape": "EntityId"
        },
        "interpolation": {
          "shape": "InterpolationParameters"
        },
        "maxResults": {
          "shape": "MaxResults"
        },
        "nextToken": {
          "shape": "NextToken"
        },
        "orderByTime": {
          "shape": "OrderByTime"
        },
        "propertyFilters": {
          "shape": "PropertyFilters"
        },
        "selectedProperties": {
          "shape": "SelectedPropertyList"
        },
        "startDateTime": {
          "deprecated": true,
          "deprecatedMessage": "This field is deprecated and will throw an error in the future. Use startTime instead.",
          "shape": "Timestamp"
        },
        "startTime": {
          "shape": "Time"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "selectedProperties"
      ],
      "type": "structure"
    },
    "GetPropertyValueHistoryResponse": {
      "members": {
        "nextToken": {
          "shape": "NextToken"
        },
        "propertyValues": {
          "shape": "PropertyValueList"
        }
      },
      "required": [
        "propertyValues"
      ],
      "type": "structure"
    },
    "GetPropertyValueRequest": {
      "members": {
        "componentName": {
          "shape": "Name"
        },
        "componentTypeId": {
          "shape": "ComponentTypeId"
        },
        "entityId": {
          "shape": "EntityId"
        },
        "maxResults": {
          "shape": "MaxResults"
        },
        "nextToken": {
          "shape": "NextToken"
        },
        "propertyGroupName": {
          "shape": "Name"
        },
        "selectedProperties": {
          "shape": "SelectedPropertyList"
        },
        "tabularConditions": {
          "shape": "TabularConditions"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "selectedProperties",
        "workspaceId"
      ],
      "type": "structure"
    },
    "GetPropertyValueResponse": {
      "members": {
        "nextToken": {
          "shape": "NextToken"
        },
        "propertyValues": {
          "shape": "PropertyLatestValueMap"
        },
        "tabularPropertyValues": {
          "shape": "TabularPropertyValues"
        }
      },
      "type": "structure"
    },
    "GetSceneRequest": {
      "members": {
        "sceneId": {
          "location": "uri",
          "locationName": "sceneId",
          "shape": "Id"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "sceneId"
      ],
      "type": "structure"
    },
    "GetSceneResponse": {
      "members": {
        "arn": {
          "shape": "TwinMakerArn"
        },
        "capabilities": {
          "shape": "SceneCapabilities"
        },
        "contentLocation": {
          "shape": "S3Url"
        },
        "creationDateTime": {
          "shape": "Timestamp"
        },
        "description": {
          "shape": "Description"
        },
        "error": {
          "shape": "SceneError"
        },
        "generatedSceneMetadata": {
          "shape": "GeneratedSceneMetadataMap"
        },
        "sceneId": {
          "shape": "Id"
        },
        "sceneMetadata": {
          "shape": "SceneMetadataMap"
        },
        "updateDateTime": {
          "shape": "Timestamp"
        },
        "workspaceId": {
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "sceneId",
        "contentLocation",
        "arn",
        "creationDateTime",
        "updateDateTime"
      ],
      "type": "structure"
    },
    "GetSyncJobRequest": {
      "members": {
        "syncSource": {
          "location": "uri",
          "locationName": "syncSource",
          "shape": "SyncSource"
        },
        "workspaceId": {
          "location": "querystring",
          "locationName": "workspace",
          "shape": "Id"
        }
      },
      "required": [
        "syncSource"
      ],
      "type": "structure"
    },
    "GetSyncJobResponse": {
      "members": {
        "arn": {
          "shape": "TwinMakerArn"
        },
        "creationDateTime": {
          "shape": "Timestamp"
        },
        "status": {
          "shape": "SyncJobStatus"
        },
        "syncRole": {
          "shape": "RoleArn"
        },
        "syncSource": {
          "shape": "SyncSource"
        },
        "updateDateTime": {
          "shape": "Timestamp"
        },
        "workspaceId": {
          "shape": "Id"
        }
      },
      "required": [
        "arn",
        "workspaceId",
        "syncSource",
        "syncRole",
        "status",
        "creationDateTime",
        "updateDateTime"
      ],
      "type": "structure"
    },
    "GetWorkspaceRequest": {
      "members": {
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "IdOrArn"
        }
      },
      "required": [
        "workspaceId"
      ],
      "type": "structure"
    },
    "GetWorkspaceResponse": {
      "members": {
        "arn": {
          "shape": "TwinMakerArn"
        },
        "creationDateTime": {
          "shape": "Timestamp"
        },
        "description": {
          "shape": "Description"
        },
        "role": {
          "shape": "RoleArn"
        },
        "s3Location": {
          "shape": "S3Location"
        },
        "updateDateTime": {
          "shape": "Timestamp"
        },
        "workspaceId": {
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "arn",
        "s3Location",
        "role",
        "creationDateTime",
        "updateDateTime"
      ],
      "type": "structure"
    },
    "GroupType": {
      "enum": [
        "TABULAR"
      ],
      "type": "string"
    },
    "Id": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z_0-9][a-zA-Z_\\-0-9]*[a-zA-Z0-9]+",
      "type": "string"
    },
    "IdOrArn": {
      "max": 2048,
      "min": 1,
      "pattern": "[a-zA-Z_0-9][a-zA-Z_\\-0-9]*[a-zA-Z0-9]+$|^arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\\/a-zA-Z0-9_-]+",
      "type": "string"
    },
    "Integer": {
      "box": true,
      "type": "integer"
    },
    "InternalServerException": {
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "InterpolationParameters": {
      "members": {
        "interpolationType": {
          "shape": "InterpolationType"
        },
        "intervalInSeconds": {
          "shape": "IntervalInSeconds"
        }
      },
      "type": "structure"
    },
    "InterpolationType": {
      "enum": [
        "LINEAR"
      ],
      "type": "string"
    },
    "IntervalInSeconds": {
      "box": true,
      "type": "long"
    },
    "LambdaArn": {
      "max": 2048,
      "min": 20,
      "pattern": "arn:((aws)|(aws-cn)|(aws-us-gov)):lambda:[a-z0-9-]+:[0-9]{12}:function:[\\/a-zA-Z0-9_-]+",
      "type": "string"
    },
    "LambdaFunction": {
      "members": {
        "arn": {
          "shape": "LambdaArn"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "ListComponentTypesFilter": {
      "members": {
        "extendsFrom": {
          "shape": "ComponentTypeId"
        },
        "isAbstract": {
          "shape": "Boolean"
        },
        "namespace": {
          "shape": "String"
        }
      },
      "type": "structure",
      "union": true
    },
    "ListComponentTypesFilters": {
      "member": {
        "shape": "ListComponentTypesFilter"
      },
      "type": "list"
    },
    "ListComponentTypesRequest": {
      "members": {
        "filters": {
          "shape": "ListComponentTypesFilters"
        },
        "maxResults": {
          "shape": "MaxResults"
        },
        "nextToken": {
          "shape": "NextToken"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId"
      ],
      "type": "structure"
    },
    "ListComponentTypesResponse": {
      "members": {
        "componentTypeSummaries": {
          "shape": "ComponentTypeSummaries"
        },
        "maxResults": {
          "shape": "MaxResults"
        },
        "nextToken": {
          "shape": "NextToken"
        },
        "workspaceId": {
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "componentTypeSummaries"
      ],
      "type": "structure"
    },
    "ListEntitiesFilter": {
      "members": {
        "componentTypeId": {
          "shape": "ComponentTypeId"
        },
        "externalId": {
          "shape": "String"
        },
        "parentEntityId": {
          "shape": "ParentEntityId"
        }
      },
      "type": "structure",
      "union": true
    },
    "ListEntitiesFilters": {
      "member": {
        "shape": "ListEntitiesFilter"
      },
      "type": "list"
    },
    "ListEntitiesRequest": {
      "members": {
        "filters": {
          "shape": "ListEntitiesFilters"
        },
        "maxResults": {
          "shape": "MaxResults"
        },
        "nextToken": {
          "shape": "NextToken"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId"
      ],
      "type": "structure"
    },
    "ListEntitiesResponse": {
      "members": {
        "entitySummaries": {
          "shape": "EntitySummaries"
        },
        "nextToken": {
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListScenesRequest": {
      "members": {
        "maxResults": {
          "shape": "MaxResults"
        },
        "nextToken": {
          "shape": "NextToken"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId"
      ],
      "type": "structure"
    },
    "ListScenesResponse": {
      "members": {
        "nextToken": {
          "shape": "NextToken"
        },
        "sceneSummaries": {
          "shape": "SceneSummaries"
        }
      },
      "type": "structure"
    },
    "ListSyncJobsRequest": {
      "members": {
        "maxResults": {
          "shape": "MaxResults"
        },
        "nextToken": {
          "shape": "NextToken"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId"
      ],
      "type": "structure"
    },
    "ListSyncJobsResponse": {
      "members": {
        "nextToken": {
          "shape": "NextToken"
        },
        "syncJobSummaries": {
          "shape": "SyncJobSummaries"
        }
      },
      "type": "structure"
    },
    "ListSyncResourcesRequest": {
      "members": {
        "filters": {
          "shape": "SyncResourceFilters"
        },
        "maxResults": {
          "shape": "MaxResults"
        },
        "nextToken": {
          "shape": "NextToken"
        },
        "syncSource": {
          "location": "uri",
          "locationName": "syncSource",
          "shape": "SyncSource"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "syncSource"
      ],
      "type": "structure"
    },
    "ListSyncResourcesResponse": {
      "members": {
        "nextToken": {
          "shape": "NextToken"
        },
        "syncResources": {
          "shape": "SyncResourceSummaries"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "maxResults": {
          "shape": "MaxResults"
        },
        "nextToken": {
          "shape": "NextToken"
        },
        "resourceARN": {
          "shape": "TwinMakerArn"
        }
      },
      "required": [
        "resourceARN"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "nextToken": {
          "shape": "NextToken"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "ListWorkspacesRequest": {
      "members": {
        "maxResults": {
          "shape": "MaxResults"
        },
        "nextToken": {
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListWorkspacesResponse": {
      "members": {
        "nextToken": {
          "shape": "NextToken"
        },
        "workspaceSummaries": {
          "shape": "WorkspaceSummaries"
        }
      },
      "type": "structure"
    },
    "Long": {
      "box": true,
      "type": "long"
    },
    "MaxResults": {
      "box": true,
      "max": 200,
      "min": 0,
      "type": "integer"
    },
    "Name": {
      "max": 256,
      "min": 1,
      "pattern": "[a-zA-Z_\\-0-9]+",
      "type": "string"
    },
    "NextToken": {
      "max": 17880,
      "min": 0,
      "pattern": ".*",
      "type": "string"
    },
    "Order": {
      "enum": [
        "ASCENDING",
        "DESCENDING"
      ],
      "type": "string"
    },
    "OrderBy": {
      "members": {
        "order": {
          "shape": "Order"
        },
        "propertyName": {
          "shape": "String"
        }
      },
      "required": [
        "propertyName"
      ],
      "type": "structure"
    },
    "OrderByList": {
      "max": 10,
      "member": {
        "shape": "OrderBy"
      },
      "min": 1,
      "type": "list"
    },
    "OrderByTime": {
      "enum": [
        "ASCENDING",
        "DESCENDING"
      ],
      "type": "string"
    },
    "ParentEntityId": {
      "max": 128,
      "min": 1,
      "pattern": "\\$ROOT|^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|^[a-zA-Z0-9][a-zA-Z_\\-0-9.:]*[a-zA-Z0-9]+",
      "type": "string"
    },
    "ParentEntityUpdateRequest": {
      "members": {
        "parentEntityId": {
          "shape": "ParentEntityId"
        },
        "updateType": {
          "shape": "ParentEntityUpdateType"
        }
      },
      "required": [
        "updateType"
      ],
      "type": "structure"
    },
    "ParentEntityUpdateType": {
      "enum": [
        "UPDATE",
        "DELETE"
      ],
      "type": "string"
    },
    "PricingBundles": {
      "max": 10,
      "member": {
        "shape": "BundleName"
      },
      "min": 1,
      "type": "list"
    },
    "PricingMode": {
      "enum": [
        "BASIC",
        "STANDARD",
        "TIERED_BUNDLE"
      ],
      "type": "string"
    },
    "PricingPlan": {
      "members": {
        "billableEntityCount": {
          "shape": "Long"
        },
        "bundleInformation": {
          "shape": "BundleInformation"
        },
        "effectiveDateTime": {
          "shape": "Timestamp"
        },
        "pricingMode": {
          "shape": "PricingMode"
        },
        "updateDateTime": {
          "shape": "Timestamp"
        },
        "updateReason": {
          "shape": "UpdateReason"
        }
      },
      "required": [
        "effectiveDateTime",
        "pricingMode",
        "updateDateTime",
        "updateReason"
      ],
      "type": "structure"
    },
    "PricingTier": {
      "enum": [
        "TIER_1",
        "TIER_2",
        "TIER_3",
        "TIER_4"
      ],
      "type": "string"
    },
    "PropertyDefinitionRequest": {
      "members": {
        "configuration": {
          "shape": "Configuration"
        },
        "dataType": {
          "shape": "DataType"
        },
        "defaultValue": {
          "shape": "DataValue"
        },
        "displayName": {
          "shape": "PropertyDisplayName"
        },
        "isExternalId": {
          "shape": "Boolean"
        },
        "isRequiredInEntity": {
          "shape": "Boolean"
        },
        "isStoredExternally": {
          "shape": "Boolean"
        },
        "isTimeSeries": {
          "shape": "Boolean"
        }
      },
      "type": "structure"
    },
    "PropertyDefinitionResponse": {
      "members": {
        "configuration": {
          "shape": "Configuration"
        },
        "dataType": {
          "shape": "DataType"
        },
        "defaultValue": {
          "shape": "DataValue"
        },
        "displayName": {
          "shape": "PropertyDisplayName"
        },
        "isExternalId": {
          "shape": "Boolean"
        },
        "isFinal": {
          "shape": "Boolean"
        },
        "isImported": {
          "shape": "Boolean"
        },
        "isInherited": {
          "shape": "Boolean"
        },
        "isRequiredInEntity": {
          "shape": "Boolean"
        },
        "isStoredExternally": {
          "shape": "Boolean"
        },
        "isTimeSeries": {
          "shape": "Boolean"
        }
      },
      "required": [
        "dataType",
        "isTimeSeries",
        "isRequiredInEntity",
        "isExternalId",
        "isStoredExternally",
        "isImported",
        "isFinal",
        "isInherited"
      ],
      "type": "structure"
    },
    "PropertyDefinitionsRequest": {
      "key": {
        "shape": "Name"
      },
      "type": "map",
      "value": {
        "shape": "PropertyDefinitionRequest"
      }
    },
    "PropertyDefinitionsResponse": {
      "key": {
        "shape": "Name"
      },
      "type": "map",
      "value": {
        "shape": "PropertyDefinitionResponse"
      }
    },
    "PropertyDisplayName": {
      "max": 256,
      "min": 0,
      "pattern": ".*[^\\u0000-\\u001F\\u007F]*.*",
      "type": "string"
    },
    "PropertyFilter": {
      "members": {
        "operator": {
          "shape": "String"
        },
        "propertyName": {
          "shape": "String"
        },
        "value": {
          "shape": "DataValue"
        }
      },
      "type": "structure"
    },
    "PropertyFilters": {
      "max": 10,
      "member": {
        "shape": "PropertyFilter"
      },
      "min": 1,
      "type": "list"
    },
    "PropertyGroupRequest": {
      "members": {
        "groupType": {
          "shape": "GroupType"
        },
        "propertyNames": {
          "shape": "PropertyNames"
        }
      },
      "type": "structure"
    },
    "PropertyGroupResponse": {
      "members": {
        "groupType": {
          "shape": "GroupType"
        },
        "isInherited": {
          "shape": "Boolean"
        },
        "propertyNames": {
          "shape": "PropertyNames"
        }
      },
      "required": [
        "groupType",
        "propertyNames",
        "isInherited"
      ],
      "type": "structure"
    },
    "PropertyGroupUpdateType": {
      "enum": [
        "UPDATE",
        "DELETE",
        "CREATE"
      ],
      "type": "string"
    },
    "PropertyGroupsRequest": {
      "key": {
        "shape": "Name"
      },
      "type": "map",
      "value": {
        "shape": "PropertyGroupRequest"
      }
    },
    "PropertyGroupsResponse": {
      "key": {
        "shape": "Name"
      },
      "type": "map",
      "value": {
        "shape": "PropertyGroupResponse"
      }
    },
    "PropertyLatestValue": {
      "members": {
        "propertyReference": {
          "shape": "EntityPropertyReference"
        },
        "propertyValue": {
          "shape": "DataValue"
        }
      },
      "required": [
        "propertyReference"
      ],
      "type": "structure"
    },
    "PropertyLatestValueMap": {
      "key": {
        "shape": "Name"
      },
      "type": "map",
      "value": {
        "shape": "PropertyLatestValue"
      }
    },
    "PropertyNames": {
      "member": {
        "shape": "Name"
      },
      "type": "list"
    },
    "PropertyRequest": {
      "members": {
        "definition": {
          "shape": "PropertyDefinitionRequest"
        },
        "updateType": {
          "shape": "PropertyUpdateType"
        },
        "value": {
          "shape": "DataValue"
        }
      },
      "type": "structure"
    },
    "PropertyRequests": {
      "key": {
        "shape": "Name"
      },
      "type": "map",
      "value": {
        "shape": "PropertyRequest"
      }
    },
    "PropertyResponse": {
      "members": {
        "definition": {
          "shape": "PropertyDefinitionResponse"
        },
        "value": {
          "shape": "DataValue"
        }
      },
      "type": "structure"
    },
    "PropertyResponses": {
      "key": {
        "shape": "Name"
      },
      "type": "map",
      "value": {
        "shape": "PropertyResponse"
      }
    },
    "PropertyTableValue": {
      "key": {
        "shape": "Name"
      },
      "type": "map",
      "value": {
        "shape": "DataValue"
      }
    },
    "PropertyUpdateType": {
      "enum": [
        "UPDATE",
        "DELETE",
        "CREATE"
      ],
      "type": "string"
    },
    "PropertyValue": {
      "members": {
        "time": {
          "shape": "Time"
        },
        "timestamp": {
          "deprecated": true,
          "deprecatedMessage": "This field is deprecated and will throw an error in the future. Use time instead.",
          "shape": "Timestamp"
        },
        "value": {
          "shape": "DataValue"
        }
      },
      "required": [
        "value"
      ],
      "type": "structure"
    },
    "PropertyValueEntry": {
      "members": {
        "entityPropertyReference": {
          "shape": "EntityPropertyReference"
        },
        "propertyValues": {
          "shape": "PropertyValues"
        }
      },
      "required": [
        "entityPropertyReference"
      ],
      "type": "structure"
    },
    "PropertyValueHistory": {
      "members": {
        "entityPropertyReference": {
          "shape": "EntityPropertyReference"
        },
        "values": {
          "shape": "Values"
        }
      },
      "required": [
        "entityPropertyReference"
      ],
      "type": "structure"
    },
    "PropertyValueList": {
      "member": {
        "shape": "PropertyValueHistory"
      },
      "type": "list"
    },
    "PropertyValues": {
      "max": 10,
      "member": {
        "shape": "PropertyValue"
      },
      "min": 1,
      "type": "list"
    },
    "QueryServiceMaxResults": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "QueryStatement": {
      "max": 1000,
      "min": 1,
      "pattern": "[\\s\\S]+",
      "type": "string"
    },
    "QueryTimeoutException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "Relationship": {
      "members": {
        "relationshipType": {
          "shape": "String"
        },
        "targetComponentTypeId": {
          "shape": "ComponentTypeId"
        }
      },
      "type": "structure"
    },
    "RelationshipValue": {
      "members": {
        "targetComponentName": {
          "shape": "Name"
        },
        "targetEntityId": {
          "shape": "EntityId"
        }
      },
      "type": "structure"
    },
    "RequiredProperties": {
      "member": {
        "shape": "Name"
      },
      "type": "list"
    },
    "ResourceNotFoundException": {
      "error": {
        "httpStatusCode": 404,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "RoleArn": {
      "max": 2048,
      "min": 20,
      "pattern": "arn:((aws)|(aws-cn)|(aws-us-gov)):iam::[0-9]{12}:role/.*",
      "type": "string"
    },
    "Row": {
      "members": {},
      "type": "structure"
    },
    "Rows": {
      "member": {
        "shape": "Row"
      },
      "type": "list"
    },
    "S3Location": {
      "max": 1024,
      "min": 0,
      "pattern": ".*(^arn:((aws)|(aws-cn)|(aws-us-gov)):s3:::)([a-zA-Z0-9_-]+$).*",
      "type": "string"
    },
    "S3Url": {
      "max": 256,
      "min": 0,
      "pattern": "[sS]3://[A-Za-z0-9._/-]+",
      "type": "string"
    },
    "SceneCapabilities": {
      "max": 50,
      "member": {
        "shape": "SceneCapability"
      },
      "min": 0,
      "type": "list"
    },
    "SceneCapability": {
      "max": 256,
      "min": 0,
      "pattern": ".*",
      "type": "string"
    },
    "SceneError": {
      "members": {
        "code": {
          "shape": "SceneErrorCode"
        },
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "SceneErrorCode": {
      "enum": [
        "MATTERPORT_ERROR"
      ],
      "type": "string"
    },
    "SceneMetadataMap": {
      "key": {
        "shape": "Name"
      },
      "max": 50,
      "min": 0,
      "type": "map",
      "value": {
        "shape": "SceneMetadataValue"
      }
    },
    "SceneMetadataValue": {
      "max": 2048,
      "min": 0,
      "pattern": ".*",
      "type": "string"
    },
    "SceneSummaries": {
      "member": {
        "shape": "SceneSummary"
      },
      "type": "list"
    },
    "SceneSummary": {
      "members": {
        "arn": {
          "shape": "TwinMakerArn"
        },
        "contentLocation": {
          "shape": "S3Url"
        },
        "creationDateTime": {
          "shape": "Timestamp"
        },
        "description": {
          "shape": "Description"
        },
        "sceneId": {
          "shape": "Id"
        },
        "updateDateTime": {
          "shape": "Timestamp"
        }
      },
      "required": [
        "sceneId",
        "contentLocation",
        "arn",
        "creationDateTime",
        "updateDateTime"
      ],
      "type": "structure"
    },
    "Scope": {
      "enum": [
        "ENTITY",
        "WORKSPACE"
      ],
      "type": "string"
    },
    "SelectedPropertyList": {
      "max": 10,
      "member": {
        "shape": "String"
      },
      "min": 1,
      "type": "list"
    },
    "ServiceQuotaExceededException": {
      "error": {
        "httpStatusCode": 402,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "State": {
      "enum": [
        "CREATING",
        "UPDATING",
        "DELETING",
        "ACTIVE",
        "ERROR"
      ],
      "type": "string"
    },
    "Status": {
      "members": {
        "error": {
          "shape": "ErrorDetails"
        },
        "state": {
          "shape": "State"
        }
      },
      "type": "structure"
    },
    "String": {
      "max": 256,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "SyncJobState": {
      "enum": [
        "CREATING",
        "INITIALIZING",
        "ACTIVE",
        "DELETING",
        "ERROR"
      ],
      "type": "string"
    },
    "SyncJobStatus": {
      "members": {
        "error": {
          "shape": "ErrorDetails"
        },
        "state": {
          "shape": "SyncJobState"
        }
      },
      "type": "structure"
    },
    "SyncJobSummaries": {
      "member": {
        "shape": "SyncJobSummary"
      },
      "type": "list"
    },
    "SyncJobSummary": {
      "members": {
        "arn": {
          "shape": "TwinMakerArn"
        },
        "creationDateTime": {
          "shape": "Timestamp"
        },
        "status": {
          "shape": "SyncJobStatus"
        },
        "syncSource": {
          "shape": "SyncSource"
        },
        "updateDateTime": {
          "shape": "Timestamp"
        },
        "workspaceId": {
          "shape": "Id"
        }
      },
      "type": "structure"
    },
    "SyncResourceFilter": {
      "members": {
        "externalId": {
          "shape": "Id"
        },
        "resourceId": {
          "shape": "Id"
        },
        "resourceType": {
          "shape": "SyncResourceType"
        },
        "state": {
          "shape": "SyncResourceState"
        }
      },
      "type": "structure",
      "union": true
    },
    "SyncResourceFilters": {
      "member": {
        "shape": "SyncResourceFilter"
      },
      "type": "list"
    },
    "SyncResourceState": {
      "enum": [
        "INITIALIZING",
        "PROCESSING",
        "DELETED",
        "IN_SYNC",
        "ERROR"
      ],
      "type": "string"
    },
    "SyncResourceStatus": {
      "members": {
        "error": {
          "shape": "ErrorDetails"
        },
        "state": {
          "shape": "SyncResourceState"
        }
      },
      "type": "structure"
    },
    "SyncResourceSummaries": {
      "member": {
        "shape": "SyncResourceSummary"
      },
      "type": "list"
    },
    "SyncResourceSummary": {
      "members": {
        "externalId": {
          "shape": "Id"
        },
        "resourceId": {
          "shape": "Id"
        },
        "resourceType": {
          "shape": "SyncResourceType"
        },
        "status": {
          "shape": "SyncResourceStatus"
        },
        "updateDateTime": {
          "shape": "Timestamp"
        }
      },
      "type": "structure"
    },
    "SyncResourceType": {
      "enum": [
        "ENTITY",
        "COMPONENT_TYPE"
      ],
      "type": "string"
    },
    "SyncSource": {
      "pattern": "[a-zA-Z_0-9]+",
      "type": "string"
    },
    "TabularConditions": {
      "members": {
        "orderBy": {
          "shape": "OrderByList"
        },
        "propertyFilters": {
          "shape": "PropertyFilters"
        }
      },
      "type": "structure"
    },
    "TabularPropertyValue": {
      "member": {
        "shape": "PropertyTableValue"
      },
      "type": "list"
    },
    "TabularPropertyValues": {
      "member": {
        "shape": "TabularPropertyValue"
      },
      "type": "list"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)",
      "type": "string"
    },
    "TagKeyList": {
      "max": 50,
      "member": {
        "shape": "TagKey"
      },
      "min": 0,
      "type": "list"
    },
    "TagMap": {
      "key": {
        "shape": "TagKey"
      },
      "max": 50,
      "min": 0,
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "TagResourceRequest": {
      "members": {
        "resourceARN": {
          "shape": "TwinMakerArn"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "required": [
        "resourceARN",
        "tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "ThrottlingException": {
      "error": {
        "httpStatusCode": 429,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "Time": {
      "max": 35,
      "min": 20,
      "type": "string"
    },
    "Timestamp": {
      "type": "timestamp"
    },
    "TooManyTagsException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ExceptionMessage"
        }
      },
      "type": "structure"
    },
    "TwinMakerArn": {
      "max": 2048,
      "min": 20,
      "pattern": "arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\\/a-zA-Z0-9_\\-\\.:]+",
      "type": "string"
    },
    "Type": {
      "enum": [
        "RELATIONSHIP",
        "STRING",
        "LONG",
        "BOOLEAN",
        "INTEGER",
        "DOUBLE",
        "LIST",
        "MAP"
      ],
      "type": "string"
    },
    "UntagResourceRequest": {
      "members": {
        "resourceARN": {
          "location": "querystring",
          "locationName": "resourceARN",
          "shape": "TwinMakerArn"
        },
        "tagKeys": {
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "resourceARN",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateComponentTypeRequest": {
      "members": {
        "componentTypeId": {
          "location": "uri",
          "locationName": "componentTypeId",
          "shape": "ComponentTypeId"
        },
        "componentTypeName": {
          "shape": "ComponentTypeName"
        },
        "description": {
          "shape": "Description"
        },
        "extendsFrom": {
          "shape": "ExtendsFrom"
        },
        "functions": {
          "shape": "FunctionsRequest"
        },
        "isSingleton": {
          "shape": "Boolean"
        },
        "propertyDefinitions": {
          "shape": "PropertyDefinitionsRequest"
        },
        "propertyGroups": {
          "shape": "PropertyGroupsRequest"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "componentTypeId"
      ],
      "type": "structure"
    },
    "UpdateComponentTypeResponse": {
      "members": {
        "arn": {
          "shape": "TwinMakerArn"
        },
        "componentTypeId": {
          "shape": "ComponentTypeId"
        },
        "state": {
          "shape": "State"
        },
        "workspaceId": {
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "arn",
        "componentTypeId",
        "state"
      ],
      "type": "structure"
    },
    "UpdateEntityRequest": {
      "members": {
        "componentUpdates": {
          "shape": "ComponentUpdatesMapRequest"
        },
        "description": {
          "shape": "Description"
        },
        "entityId": {
          "location": "uri",
          "locationName": "entityId",
          "shape": "EntityId"
        },
        "entityName": {
          "shape": "EntityName"
        },
        "parentEntityUpdate": {
          "shape": "ParentEntityUpdateRequest"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "entityId"
      ],
      "type": "structure"
    },
    "UpdateEntityResponse": {
      "members": {
        "state": {
          "shape": "State"
        },
        "updateDateTime": {
          "shape": "Timestamp"
        }
      },
      "required": [
        "updateDateTime",
        "state"
      ],
      "type": "structure"
    },
    "UpdatePricingPlanRequest": {
      "members": {
        "bundleNames": {
          "shape": "PricingBundles"
        },
        "pricingMode": {
          "shape": "PricingMode"
        }
      },
      "required": [
        "pricingMode"
      ],
      "type": "structure"
    },
    "UpdatePricingPlanResponse": {
      "members": {
        "currentPricingPlan": {
          "shape": "PricingPlan"
        },
        "pendingPricingPlan": {
          "shape": "PricingPlan"
        }
      },
      "required": [
        "currentPricingPlan"
      ],
      "type": "structure"
    },
    "UpdateReason": {
      "enum": [
        "DEFAULT",
        "PRICING_TIER_UPDATE",
        "ENTITY_COUNT_UPDATE",
        "PRICING_MODE_UPDATE",
        "OVERWRITTEN"
      ],
      "type": "string"
    },
    "UpdateSceneRequest": {
      "members": {
        "capabilities": {
          "shape": "SceneCapabilities"
        },
        "contentLocation": {
          "shape": "S3Url"
        },
        "description": {
          "shape": "Description"
        },
        "sceneId": {
          "location": "uri",
          "locationName": "sceneId",
          "shape": "Id"
        },
        "sceneMetadata": {
          "shape": "SceneMetadataMap"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "sceneId"
      ],
      "type": "structure"
    },
    "UpdateSceneResponse": {
      "members": {
        "updateDateTime": {
          "shape": "Timestamp"
        }
      },
      "required": [
        "updateDateTime"
      ],
      "type": "structure"
    },
    "UpdateWorkspaceRequest": {
      "members": {
        "description": {
          "shape": "Description"
        },
        "role": {
          "shape": "RoleArn"
        },
        "workspaceId": {
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId"
      ],
      "type": "structure"
    },
    "UpdateWorkspaceResponse": {
      "members": {
        "updateDateTime": {
          "shape": "Timestamp"
        }
      },
      "required": [
        "updateDateTime"
      ],
      "type": "structure"
    },
    "ValidationException": {
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "Value": {
      "pattern": ".*",
      "type": "string"
    },
    "Values": {
      "member": {
        "shape": "PropertyValue"
      },
      "type": "list"
    },
    "WorkspaceSummaries": {
      "member": {
        "shape": "WorkspaceSummary"
      },
      "type": "list"
    },
    "WorkspaceSummary": {
      "members": {
        "arn": {
          "shape": "TwinMakerArn"
        },
        "creationDateTime": {
          "shape": "Timestamp"
        },
        "description": {
          "shape": "Description"
        },
        "updateDateTime": {
          "shape": "Timestamp"
        },
        "workspaceId": {
          "shape": "Id"
        }
      },
      "required": [
        "workspaceId",
        "arn",
        "creationDateTime",
        "updateDateTime"
      ],
      "type": "structure"
    }
  },
  "version": "2.0"
}