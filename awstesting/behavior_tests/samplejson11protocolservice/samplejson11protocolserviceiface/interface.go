// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package samplejson11protocolserviceiface provides an interface to enable mocking the Sample Json 1.1 Protocol Service service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package samplejson11protocolserviceiface

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/awstesting/behavior_tests/samplejson11protocolservice"
)

// SampleJson11ProtocolServiceAPI provides an interface to enable mocking the
// samplejson11protocolservice.SampleJson11ProtocolService service client's API operation,
// paginators, and waiters. This make unit testing your code that calls out
// to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // Sample Json 1.1 Protocol Service.
//    func myFunc(svc samplejson11protocolserviceiface.SampleJson11ProtocolServiceAPI) bool {
//        // Make svc.EmptyOperation request
//    }
//
//    func main() {
//        sess := session.New()
//        svc := samplejson11protocolservice.New(sess)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockSampleJson11ProtocolServiceClient struct {
//        samplejson11protocolserviceiface.SampleJson11ProtocolServiceAPI
//    }
//    func (m *mockSampleJson11ProtocolServiceClient) EmptyOperation(input *samplejson11protocolservice.EmptyOperationInput) (*samplejson11protocolservice.EmptyOperationOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockSampleJson11ProtocolServiceClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type SampleJson11ProtocolServiceAPI interface {
	EmptyOperation(*samplejson11protocolservice.EmptyOperationInput) (*samplejson11protocolservice.EmptyOperationOutput, error)
	EmptyOperationWithContext(aws.Context, *samplejson11protocolservice.EmptyOperationInput, ...request.Option) (*samplejson11protocolservice.EmptyOperationOutput, error)
	EmptyOperationRequest(*samplejson11protocolservice.EmptyOperationInput) (*request.Request, *samplejson11protocolservice.EmptyOperationOutput)
}

var _ SampleJson11ProtocolServiceAPI = (*samplejson11protocolservice.SampleJson11ProtocolService)(nil)
