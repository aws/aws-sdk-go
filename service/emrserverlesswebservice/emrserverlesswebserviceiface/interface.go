// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package emrserverlesswebserviceiface provides an interface to enable mocking the EMR Serverless Web Service service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package emrserverlesswebserviceiface

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/emrserverlesswebservice"
)

// EMRServerlessWebServiceAPI provides an interface to enable mocking the
// emrserverlesswebservice.EMRServerlessWebService service client's API operation,
// paginators, and waiters. This make unit testing your code that calls out
// to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // EMR Serverless Web Service.
//    func myFunc(svc emrserverlesswebserviceiface.EMRServerlessWebServiceAPI) bool {
//        // Make svc.CancelJobRun request
//    }
//
//    func main() {
//        sess := session.New()
//        svc := emrserverlesswebservice.New(sess)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockEMRServerlessWebServiceClient struct {
//        emrserverlesswebserviceiface.EMRServerlessWebServiceAPI
//    }
//    func (m *mockEMRServerlessWebServiceClient) CancelJobRun(input *emrserverlesswebservice.CancelJobRunInput) (*emrserverlesswebservice.CancelJobRunOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockEMRServerlessWebServiceClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type EMRServerlessWebServiceAPI interface {
	CancelJobRun(*emrserverlesswebservice.CancelJobRunInput) (*emrserverlesswebservice.CancelJobRunOutput, error)
	CancelJobRunWithContext(aws.Context, *emrserverlesswebservice.CancelJobRunInput, ...request.Option) (*emrserverlesswebservice.CancelJobRunOutput, error)
	CancelJobRunRequest(*emrserverlesswebservice.CancelJobRunInput) (*request.Request, *emrserverlesswebservice.CancelJobRunOutput)

	CreateApplication(*emrserverlesswebservice.CreateApplicationInput) (*emrserverlesswebservice.CreateApplicationOutput, error)
	CreateApplicationWithContext(aws.Context, *emrserverlesswebservice.CreateApplicationInput, ...request.Option) (*emrserverlesswebservice.CreateApplicationOutput, error)
	CreateApplicationRequest(*emrserverlesswebservice.CreateApplicationInput) (*request.Request, *emrserverlesswebservice.CreateApplicationOutput)

	DeleteApplication(*emrserverlesswebservice.DeleteApplicationInput) (*emrserverlesswebservice.DeleteApplicationOutput, error)
	DeleteApplicationWithContext(aws.Context, *emrserverlesswebservice.DeleteApplicationInput, ...request.Option) (*emrserverlesswebservice.DeleteApplicationOutput, error)
	DeleteApplicationRequest(*emrserverlesswebservice.DeleteApplicationInput) (*request.Request, *emrserverlesswebservice.DeleteApplicationOutput)

	GetApplication(*emrserverlesswebservice.GetApplicationInput) (*emrserverlesswebservice.GetApplicationOutput, error)
	GetApplicationWithContext(aws.Context, *emrserverlesswebservice.GetApplicationInput, ...request.Option) (*emrserverlesswebservice.GetApplicationOutput, error)
	GetApplicationRequest(*emrserverlesswebservice.GetApplicationInput) (*request.Request, *emrserverlesswebservice.GetApplicationOutput)

	GetJobRun(*emrserverlesswebservice.GetJobRunInput) (*emrserverlesswebservice.GetJobRunOutput, error)
	GetJobRunWithContext(aws.Context, *emrserverlesswebservice.GetJobRunInput, ...request.Option) (*emrserverlesswebservice.GetJobRunOutput, error)
	GetJobRunRequest(*emrserverlesswebservice.GetJobRunInput) (*request.Request, *emrserverlesswebservice.GetJobRunOutput)

	ListApplications(*emrserverlesswebservice.ListApplicationsInput) (*emrserverlesswebservice.ListApplicationsOutput, error)
	ListApplicationsWithContext(aws.Context, *emrserverlesswebservice.ListApplicationsInput, ...request.Option) (*emrserverlesswebservice.ListApplicationsOutput, error)
	ListApplicationsRequest(*emrserverlesswebservice.ListApplicationsInput) (*request.Request, *emrserverlesswebservice.ListApplicationsOutput)

	ListApplicationsPages(*emrserverlesswebservice.ListApplicationsInput, func(*emrserverlesswebservice.ListApplicationsOutput, bool) bool) error
	ListApplicationsPagesWithContext(aws.Context, *emrserverlesswebservice.ListApplicationsInput, func(*emrserverlesswebservice.ListApplicationsOutput, bool) bool, ...request.Option) error

	ListJobRuns(*emrserverlesswebservice.ListJobRunsInput) (*emrserverlesswebservice.ListJobRunsOutput, error)
	ListJobRunsWithContext(aws.Context, *emrserverlesswebservice.ListJobRunsInput, ...request.Option) (*emrserverlesswebservice.ListJobRunsOutput, error)
	ListJobRunsRequest(*emrserverlesswebservice.ListJobRunsInput) (*request.Request, *emrserverlesswebservice.ListJobRunsOutput)

	ListJobRunsPages(*emrserverlesswebservice.ListJobRunsInput, func(*emrserverlesswebservice.ListJobRunsOutput, bool) bool) error
	ListJobRunsPagesWithContext(aws.Context, *emrserverlesswebservice.ListJobRunsInput, func(*emrserverlesswebservice.ListJobRunsOutput, bool) bool, ...request.Option) error

	ListTagsForResource(*emrserverlesswebservice.ListTagsForResourceInput) (*emrserverlesswebservice.ListTagsForResourceOutput, error)
	ListTagsForResourceWithContext(aws.Context, *emrserverlesswebservice.ListTagsForResourceInput, ...request.Option) (*emrserverlesswebservice.ListTagsForResourceOutput, error)
	ListTagsForResourceRequest(*emrserverlesswebservice.ListTagsForResourceInput) (*request.Request, *emrserverlesswebservice.ListTagsForResourceOutput)

	StartApplication(*emrserverlesswebservice.StartApplicationInput) (*emrserverlesswebservice.StartApplicationOutput, error)
	StartApplicationWithContext(aws.Context, *emrserverlesswebservice.StartApplicationInput, ...request.Option) (*emrserverlesswebservice.StartApplicationOutput, error)
	StartApplicationRequest(*emrserverlesswebservice.StartApplicationInput) (*request.Request, *emrserverlesswebservice.StartApplicationOutput)

	StartJobRun(*emrserverlesswebservice.StartJobRunInput) (*emrserverlesswebservice.StartJobRunOutput, error)
	StartJobRunWithContext(aws.Context, *emrserverlesswebservice.StartJobRunInput, ...request.Option) (*emrserverlesswebservice.StartJobRunOutput, error)
	StartJobRunRequest(*emrserverlesswebservice.StartJobRunInput) (*request.Request, *emrserverlesswebservice.StartJobRunOutput)

	StopApplication(*emrserverlesswebservice.StopApplicationInput) (*emrserverlesswebservice.StopApplicationOutput, error)
	StopApplicationWithContext(aws.Context, *emrserverlesswebservice.StopApplicationInput, ...request.Option) (*emrserverlesswebservice.StopApplicationOutput, error)
	StopApplicationRequest(*emrserverlesswebservice.StopApplicationInput) (*request.Request, *emrserverlesswebservice.StopApplicationOutput)

	TagResource(*emrserverlesswebservice.TagResourceInput) (*emrserverlesswebservice.TagResourceOutput, error)
	TagResourceWithContext(aws.Context, *emrserverlesswebservice.TagResourceInput, ...request.Option) (*emrserverlesswebservice.TagResourceOutput, error)
	TagResourceRequest(*emrserverlesswebservice.TagResourceInput) (*request.Request, *emrserverlesswebservice.TagResourceOutput)

	UntagResource(*emrserverlesswebservice.UntagResourceInput) (*emrserverlesswebservice.UntagResourceOutput, error)
	UntagResourceWithContext(aws.Context, *emrserverlesswebservice.UntagResourceInput, ...request.Option) (*emrserverlesswebservice.UntagResourceOutput, error)
	UntagResourceRequest(*emrserverlesswebservice.UntagResourceInput) (*request.Request, *emrserverlesswebservice.UntagResourceOutput)

	UpdateApplication(*emrserverlesswebservice.UpdateApplicationInput) (*emrserverlesswebservice.UpdateApplicationOutput, error)
	UpdateApplicationWithContext(aws.Context, *emrserverlesswebservice.UpdateApplicationInput, ...request.Option) (*emrserverlesswebservice.UpdateApplicationOutput, error)
	UpdateApplicationRequest(*emrserverlesswebservice.UpdateApplicationInput) (*request.Request, *emrserverlesswebservice.UpdateApplicationOutput)
}

var _ EMRServerlessWebServiceAPI = (*emrserverlesswebservice.EMRServerlessWebService)(nil)
