package cloudwatchlogs

// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

import (
	"github.com/awslabs/aws-sdk-go/aws"
)

// CreateLogGroupRequest generates a request for the CreateLogGroup operation.
func (c *CloudWatchLogs) CreateLogGroupRequest(input *CreateLogGroupInput) (req *aws.Request) {
	if opCreateLogGroup == nil {
		opCreateLogGroup = &aws.Operation{
			Name:       "CreateLogGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateLogGroup, input, nil)

	return
}

func (c *CloudWatchLogs) CreateLogGroup(input *CreateLogGroupInput) (err error) {
	req := c.CreateLogGroupRequest(input)
	err = req.Send()
	return
}

var opCreateLogGroup *aws.Operation

// CreateLogStreamRequest generates a request for the CreateLogStream operation.
func (c *CloudWatchLogs) CreateLogStreamRequest(input *CreateLogStreamInput) (req *aws.Request) {
	if opCreateLogStream == nil {
		opCreateLogStream = &aws.Operation{
			Name:       "CreateLogStream",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateLogStream, input, nil)

	return
}

func (c *CloudWatchLogs) CreateLogStream(input *CreateLogStreamInput) (err error) {
	req := c.CreateLogStreamRequest(input)
	err = req.Send()
	return
}

var opCreateLogStream *aws.Operation

// DeleteLogGroupRequest generates a request for the DeleteLogGroup operation.
func (c *CloudWatchLogs) DeleteLogGroupRequest(input *DeleteLogGroupInput) (req *aws.Request) {
	if opDeleteLogGroup == nil {
		opDeleteLogGroup = &aws.Operation{
			Name:       "DeleteLogGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteLogGroup, input, nil)

	return
}

func (c *CloudWatchLogs) DeleteLogGroup(input *DeleteLogGroupInput) (err error) {
	req := c.DeleteLogGroupRequest(input)
	err = req.Send()
	return
}

var opDeleteLogGroup *aws.Operation

// DeleteLogStreamRequest generates a request for the DeleteLogStream operation.
func (c *CloudWatchLogs) DeleteLogStreamRequest(input *DeleteLogStreamInput) (req *aws.Request) {
	if opDeleteLogStream == nil {
		opDeleteLogStream = &aws.Operation{
			Name:       "DeleteLogStream",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteLogStream, input, nil)

	return
}

func (c *CloudWatchLogs) DeleteLogStream(input *DeleteLogStreamInput) (err error) {
	req := c.DeleteLogStreamRequest(input)
	err = req.Send()
	return
}

var opDeleteLogStream *aws.Operation

// DeleteMetricFilterRequest generates a request for the DeleteMetricFilter operation.
func (c *CloudWatchLogs) DeleteMetricFilterRequest(input *DeleteMetricFilterInput) (req *aws.Request) {
	if opDeleteMetricFilter == nil {
		opDeleteMetricFilter = &aws.Operation{
			Name:       "DeleteMetricFilter",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteMetricFilter, input, nil)

	return
}

func (c *CloudWatchLogs) DeleteMetricFilter(input *DeleteMetricFilterInput) (err error) {
	req := c.DeleteMetricFilterRequest(input)
	err = req.Send()
	return
}

var opDeleteMetricFilter *aws.Operation

// DeleteRetentionPolicyRequest generates a request for the DeleteRetentionPolicy operation.
func (c *CloudWatchLogs) DeleteRetentionPolicyRequest(input *DeleteRetentionPolicyInput) (req *aws.Request) {
	if opDeleteRetentionPolicy == nil {
		opDeleteRetentionPolicy = &aws.Operation{
			Name:       "DeleteRetentionPolicy",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteRetentionPolicy, input, nil)

	return
}

func (c *CloudWatchLogs) DeleteRetentionPolicy(input *DeleteRetentionPolicyInput) (err error) {
	req := c.DeleteRetentionPolicyRequest(input)
	err = req.Send()
	return
}

var opDeleteRetentionPolicy *aws.Operation

// DescribeLogGroupsRequest generates a request for the DescribeLogGroups operation.
func (c *CloudWatchLogs) DescribeLogGroupsRequest(input *DescribeLogGroupsInput) (req *aws.Request, output *DescribeLogGroupsOutput) {
	if opDescribeLogGroups == nil {
		opDescribeLogGroups = &aws.Operation{
			Name:       "DescribeLogGroups",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeLogGroups, input, output)
	output = &DescribeLogGroupsOutput{}
	req.Data = output
	return
}

func (c *CloudWatchLogs) DescribeLogGroups(input *DescribeLogGroupsInput) (output *DescribeLogGroupsOutput, err error) {
	req, out := c.DescribeLogGroupsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeLogGroups *aws.Operation

// DescribeLogStreamsRequest generates a request for the DescribeLogStreams operation.
func (c *CloudWatchLogs) DescribeLogStreamsRequest(input *DescribeLogStreamsInput) (req *aws.Request, output *DescribeLogStreamsOutput) {
	if opDescribeLogStreams == nil {
		opDescribeLogStreams = &aws.Operation{
			Name:       "DescribeLogStreams",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeLogStreams, input, output)
	output = &DescribeLogStreamsOutput{}
	req.Data = output
	return
}

func (c *CloudWatchLogs) DescribeLogStreams(input *DescribeLogStreamsInput) (output *DescribeLogStreamsOutput, err error) {
	req, out := c.DescribeLogStreamsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeLogStreams *aws.Operation

// DescribeMetricFiltersRequest generates a request for the DescribeMetricFilters operation.
func (c *CloudWatchLogs) DescribeMetricFiltersRequest(input *DescribeMetricFiltersInput) (req *aws.Request, output *DescribeMetricFiltersOutput) {
	if opDescribeMetricFilters == nil {
		opDescribeMetricFilters = &aws.Operation{
			Name:       "DescribeMetricFilters",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeMetricFilters, input, output)
	output = &DescribeMetricFiltersOutput{}
	req.Data = output
	return
}

func (c *CloudWatchLogs) DescribeMetricFilters(input *DescribeMetricFiltersInput) (output *DescribeMetricFiltersOutput, err error) {
	req, out := c.DescribeMetricFiltersRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeMetricFilters *aws.Operation

// GetLogEventsRequest generates a request for the GetLogEvents operation.
func (c *CloudWatchLogs) GetLogEventsRequest(input *GetLogEventsInput) (req *aws.Request, output *GetLogEventsOutput) {
	if opGetLogEvents == nil {
		opGetLogEvents = &aws.Operation{
			Name:       "GetLogEvents",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opGetLogEvents, input, output)
	output = &GetLogEventsOutput{}
	req.Data = output
	return
}

func (c *CloudWatchLogs) GetLogEvents(input *GetLogEventsInput) (output *GetLogEventsOutput, err error) {
	req, out := c.GetLogEventsRequest(input)
	output = out
	err = req.Send()
	return
}

var opGetLogEvents *aws.Operation

// PutLogEventsRequest generates a request for the PutLogEvents operation.
func (c *CloudWatchLogs) PutLogEventsRequest(input *PutLogEventsInput) (req *aws.Request, output *PutLogEventsOutput) {
	if opPutLogEvents == nil {
		opPutLogEvents = &aws.Operation{
			Name:       "PutLogEvents",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opPutLogEvents, input, output)
	output = &PutLogEventsOutput{}
	req.Data = output
	return
}

func (c *CloudWatchLogs) PutLogEvents(input *PutLogEventsInput) (output *PutLogEventsOutput, err error) {
	req, out := c.PutLogEventsRequest(input)
	output = out
	err = req.Send()
	return
}

var opPutLogEvents *aws.Operation

// PutMetricFilterRequest generates a request for the PutMetricFilter operation.
func (c *CloudWatchLogs) PutMetricFilterRequest(input *PutMetricFilterInput) (req *aws.Request) {
	if opPutMetricFilter == nil {
		opPutMetricFilter = &aws.Operation{
			Name:       "PutMetricFilter",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opPutMetricFilter, input, nil)

	return
}

func (c *CloudWatchLogs) PutMetricFilter(input *PutMetricFilterInput) (err error) {
	req := c.PutMetricFilterRequest(input)
	err = req.Send()
	return
}

var opPutMetricFilter *aws.Operation

// PutRetentionPolicyRequest generates a request for the PutRetentionPolicy operation.
func (c *CloudWatchLogs) PutRetentionPolicyRequest(input *PutRetentionPolicyInput) (req *aws.Request) {
	if opPutRetentionPolicy == nil {
		opPutRetentionPolicy = &aws.Operation{
			Name:       "PutRetentionPolicy",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opPutRetentionPolicy, input, nil)

	return
}

func (c *CloudWatchLogs) PutRetentionPolicy(input *PutRetentionPolicyInput) (err error) {
	req := c.PutRetentionPolicyRequest(input)
	err = req.Send()
	return
}

var opPutRetentionPolicy *aws.Operation

// TestMetricFilterRequest generates a request for the TestMetricFilter operation.
func (c *CloudWatchLogs) TestMetricFilterRequest(input *TestMetricFilterInput) (req *aws.Request, output *TestMetricFilterOutput) {
	if opTestMetricFilter == nil {
		opTestMetricFilter = &aws.Operation{
			Name:       "TestMetricFilter",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opTestMetricFilter, input, output)
	output = &TestMetricFilterOutput{}
	req.Data = output
	return
}

func (c *CloudWatchLogs) TestMetricFilter(input *TestMetricFilterInput) (output *TestMetricFilterOutput, err error) {
	req, out := c.TestMetricFilterRequest(input)
	output = out
	err = req.Send()
	return
}

var opTestMetricFilter *aws.Operation

type CreateLogGroupInput struct {
	LogGroupName *string `locationName:"logGroupName" type:"string" json:"logGroupName,omitempty"`

	metadataCreateLogGroupInput `json:"-", xml:"-"`
}

type metadataCreateLogGroupInput struct {
	SDKShapeTraits bool `type:"structure" required:"logGroupName" json:",omitempty"`
}

type CreateLogStreamInput struct {
	LogGroupName  *string `locationName:"logGroupName" type:"string" json:"logGroupName,omitempty"`
	LogStreamName *string `locationName:"logStreamName" type:"string" json:"logStreamName,omitempty"`

	metadataCreateLogStreamInput `json:"-", xml:"-"`
}

type metadataCreateLogStreamInput struct {
	SDKShapeTraits bool `type:"structure" required:"logGroupName,logStreamName" json:",omitempty"`
}

type DataAlreadyAcceptedException struct {
	ExpectedSequenceToken *string `locationName:"expectedSequenceToken" type:"string" json:"expectedSequenceToken,omitempty"`

	metadataDataAlreadyAcceptedException `json:"-", xml:"-"`
}

type metadataDataAlreadyAcceptedException struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DeleteLogGroupInput struct {
	LogGroupName *string `locationName:"logGroupName" type:"string" json:"logGroupName,omitempty"`

	metadataDeleteLogGroupInput `json:"-", xml:"-"`
}

type metadataDeleteLogGroupInput struct {
	SDKShapeTraits bool `type:"structure" required:"logGroupName" json:",omitempty"`
}

type DeleteLogStreamInput struct {
	LogGroupName  *string `locationName:"logGroupName" type:"string" json:"logGroupName,omitempty"`
	LogStreamName *string `locationName:"logStreamName" type:"string" json:"logStreamName,omitempty"`

	metadataDeleteLogStreamInput `json:"-", xml:"-"`
}

type metadataDeleteLogStreamInput struct {
	SDKShapeTraits bool `type:"structure" required:"logGroupName,logStreamName" json:",omitempty"`
}

type DeleteMetricFilterInput struct {
	FilterName   *string `locationName:"filterName" type:"string" json:"filterName,omitempty"`
	LogGroupName *string `locationName:"logGroupName" type:"string" json:"logGroupName,omitempty"`

	metadataDeleteMetricFilterInput `json:"-", xml:"-"`
}

type metadataDeleteMetricFilterInput struct {
	SDKShapeTraits bool `type:"structure" required:"logGroupName,filterName" json:",omitempty"`
}

type DeleteRetentionPolicyInput struct {
	LogGroupName *string `locationName:"logGroupName" type:"string" json:"logGroupName,omitempty"`

	metadataDeleteRetentionPolicyInput `json:"-", xml:"-"`
}

type metadataDeleteRetentionPolicyInput struct {
	SDKShapeTraits bool `type:"structure" required:"logGroupName" json:",omitempty"`
}

type DescribeLogGroupsInput struct {
	Limit              *int    `locationName:"limit" type:"integer" json:"limit,omitempty"`
	LogGroupNamePrefix *string `locationName:"logGroupNamePrefix" type:"string" json:"logGroupNamePrefix,omitempty"`
	NextToken          *string `locationName:"nextToken" type:"string" json:"nextToken,omitempty"`

	metadataDescribeLogGroupsInput `json:"-", xml:"-"`
}

type metadataDescribeLogGroupsInput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeLogGroupsOutput struct {
	LogGroups []*LogGroup `locationName:"logGroups" type:"list" json:"logGroups,omitempty"`
	NextToken *string     `locationName:"nextToken" type:"string" json:"nextToken,omitempty"`

	metadataDescribeLogGroupsOutput `json:"-", xml:"-"`
}

type metadataDescribeLogGroupsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeLogStreamsInput struct {
	Limit               *int    `locationName:"limit" type:"integer" json:"limit,omitempty"`
	LogGroupName        *string `locationName:"logGroupName" type:"string" json:"logGroupName,omitempty"`
	LogStreamNamePrefix *string `locationName:"logStreamNamePrefix" type:"string" json:"logStreamNamePrefix,omitempty"`
	NextToken           *string `locationName:"nextToken" type:"string" json:"nextToken,omitempty"`

	metadataDescribeLogStreamsInput `json:"-", xml:"-"`
}

type metadataDescribeLogStreamsInput struct {
	SDKShapeTraits bool `type:"structure" required:"logGroupName" json:",omitempty"`
}

type DescribeLogStreamsOutput struct {
	LogStreams []*LogStream `locationName:"logStreams" type:"list" json:"logStreams,omitempty"`
	NextToken  *string      `locationName:"nextToken" type:"string" json:"nextToken,omitempty"`

	metadataDescribeLogStreamsOutput `json:"-", xml:"-"`
}

type metadataDescribeLogStreamsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeMetricFiltersInput struct {
	FilterNamePrefix *string `locationName:"filterNamePrefix" type:"string" json:"filterNamePrefix,omitempty"`
	Limit            *int    `locationName:"limit" type:"integer" json:"limit,omitempty"`
	LogGroupName     *string `locationName:"logGroupName" type:"string" json:"logGroupName,omitempty"`
	NextToken        *string `locationName:"nextToken" type:"string" json:"nextToken,omitempty"`

	metadataDescribeMetricFiltersInput `json:"-", xml:"-"`
}

type metadataDescribeMetricFiltersInput struct {
	SDKShapeTraits bool `type:"structure" required:"logGroupName" json:",omitempty"`
}

type DescribeMetricFiltersOutput struct {
	MetricFilters []*MetricFilter `locationName:"metricFilters" type:"list" json:"metricFilters,omitempty"`
	NextToken     *string         `locationName:"nextToken" type:"string" json:"nextToken,omitempty"`

	metadataDescribeMetricFiltersOutput `json:"-", xml:"-"`
}

type metadataDescribeMetricFiltersOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type GetLogEventsInput struct {
	EndTime       *int64  `locationName:"endTime" type:"long" json:"endTime,omitempty"`
	Limit         *int    `locationName:"limit" type:"integer" json:"limit,omitempty"`
	LogGroupName  *string `locationName:"logGroupName" type:"string" json:"logGroupName,omitempty"`
	LogStreamName *string `locationName:"logStreamName" type:"string" json:"logStreamName,omitempty"`
	NextToken     *string `locationName:"nextToken" type:"string" json:"nextToken,omitempty"`
	StartFromHead *bool   `locationName:"startFromHead" type:"boolean" json:"startFromHead,omitempty"`
	StartTime     *int64  `locationName:"startTime" type:"long" json:"startTime,omitempty"`

	metadataGetLogEventsInput `json:"-", xml:"-"`
}

type metadataGetLogEventsInput struct {
	SDKShapeTraits bool `type:"structure" required:"logGroupName,logStreamName" json:",omitempty"`
}

type GetLogEventsOutput struct {
	Events            []*OutputLogEvent `locationName:"events" type:"list" json:"events,omitempty"`
	NextBackwardToken *string           `locationName:"nextBackwardToken" type:"string" json:"nextBackwardToken,omitempty"`
	NextForwardToken  *string           `locationName:"nextForwardToken" type:"string" json:"nextForwardToken,omitempty"`

	metadataGetLogEventsOutput `json:"-", xml:"-"`
}

type metadataGetLogEventsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type InputLogEvent struct {
	Message   *string `locationName:"message" type:"string" json:"message,omitempty"`
	Timestamp *int64  `locationName:"timestamp" type:"long" json:"timestamp,omitempty"`

	metadataInputLogEvent `json:"-", xml:"-"`
}

type metadataInputLogEvent struct {
	SDKShapeTraits bool `type:"structure" required:"timestamp,message" json:",omitempty"`
}

type InvalidParameterException struct {
	metadataInvalidParameterException `json:"-", xml:"-"`
}

type metadataInvalidParameterException struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type InvalidSequenceTokenException struct {
	ExpectedSequenceToken *string `locationName:"expectedSequenceToken" type:"string" json:"expectedSequenceToken,omitempty"`

	metadataInvalidSequenceTokenException `json:"-", xml:"-"`
}

type metadataInvalidSequenceTokenException struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type LimitExceededException struct {
	metadataLimitExceededException `json:"-", xml:"-"`
}

type metadataLimitExceededException struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type LogGroup struct {
	ARN               *string `locationName:"arn" type:"string" json:"arn,omitempty"`
	CreationTime      *int64  `locationName:"creationTime" type:"long" json:"creationTime,omitempty"`
	LogGroupName      *string `locationName:"logGroupName" type:"string" json:"logGroupName,omitempty"`
	MetricFilterCount *int    `locationName:"metricFilterCount" type:"integer" json:"metricFilterCount,omitempty"`
	RetentionInDays   *int    `locationName:"retentionInDays" type:"integer" json:"retentionInDays,omitempty"`
	StoredBytes       *int64  `locationName:"storedBytes" type:"long" json:"storedBytes,omitempty"`

	metadataLogGroup `json:"-", xml:"-"`
}

type metadataLogGroup struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type LogStream struct {
	ARN                 *string `locationName:"arn" type:"string" json:"arn,omitempty"`
	CreationTime        *int64  `locationName:"creationTime" type:"long" json:"creationTime,omitempty"`
	FirstEventTimestamp *int64  `locationName:"firstEventTimestamp" type:"long" json:"firstEventTimestamp,omitempty"`
	LastEventTimestamp  *int64  `locationName:"lastEventTimestamp" type:"long" json:"lastEventTimestamp,omitempty"`
	LastIngestionTime   *int64  `locationName:"lastIngestionTime" type:"long" json:"lastIngestionTime,omitempty"`
	LogStreamName       *string `locationName:"logStreamName" type:"string" json:"logStreamName,omitempty"`
	StoredBytes         *int64  `locationName:"storedBytes" type:"long" json:"storedBytes,omitempty"`
	UploadSequenceToken *string `locationName:"uploadSequenceToken" type:"string" json:"uploadSequenceToken,omitempty"`

	metadataLogStream `json:"-", xml:"-"`
}

type metadataLogStream struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type MetricFilter struct {
	CreationTime          *int64                  `locationName:"creationTime" type:"long" json:"creationTime,omitempty"`
	FilterName            *string                 `locationName:"filterName" type:"string" json:"filterName,omitempty"`
	FilterPattern         *string                 `locationName:"filterPattern" type:"string" json:"filterPattern,omitempty"`
	MetricTransformations []*MetricTransformation `locationName:"metricTransformations" type:"list" json:"metricTransformations,omitempty"`

	metadataMetricFilter `json:"-", xml:"-"`
}

type metadataMetricFilter struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type MetricFilterMatchRecord struct {
	EventMessage    *string             `locationName:"eventMessage" type:"string" json:"eventMessage,omitempty"`
	EventNumber     *int64              `locationName:"eventNumber" type:"long" json:"eventNumber,omitempty"`
	ExtractedValues *map[string]*string `locationName:"extractedValues" type:"map" json:"extractedValues,omitempty"`

	metadataMetricFilterMatchRecord `json:"-", xml:"-"`
}

type metadataMetricFilterMatchRecord struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type MetricTransformation struct {
	MetricName      *string `locationName:"metricName" type:"string" json:"metricName,omitempty"`
	MetricNamespace *string `locationName:"metricNamespace" type:"string" json:"metricNamespace,omitempty"`
	MetricValue     *string `locationName:"metricValue" type:"string" json:"metricValue,omitempty"`

	metadataMetricTransformation `json:"-", xml:"-"`
}

type metadataMetricTransformation struct {
	SDKShapeTraits bool `type:"structure" required:"metricName,metricNamespace,metricValue" json:",omitempty"`
}

type OperationAbortedException struct {
	metadataOperationAbortedException `json:"-", xml:"-"`
}

type metadataOperationAbortedException struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type OutputLogEvent struct {
	IngestionTime *int64  `locationName:"ingestionTime" type:"long" json:"ingestionTime,omitempty"`
	Message       *string `locationName:"message" type:"string" json:"message,omitempty"`
	Timestamp     *int64  `locationName:"timestamp" type:"long" json:"timestamp,omitempty"`

	metadataOutputLogEvent `json:"-", xml:"-"`
}

type metadataOutputLogEvent struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type PutLogEventsInput struct {
	LogEvents     []*InputLogEvent `locationName:"logEvents" type:"list" json:"logEvents,omitempty"`
	LogGroupName  *string          `locationName:"logGroupName" type:"string" json:"logGroupName,omitempty"`
	LogStreamName *string          `locationName:"logStreamName" type:"string" json:"logStreamName,omitempty"`
	SequenceToken *string          `locationName:"sequenceToken" type:"string" json:"sequenceToken,omitempty"`

	metadataPutLogEventsInput `json:"-", xml:"-"`
}

type metadataPutLogEventsInput struct {
	SDKShapeTraits bool `type:"structure" required:"logGroupName,logStreamName,logEvents" json:",omitempty"`
}

type PutLogEventsOutput struct {
	NextSequenceToken *string `locationName:"nextSequenceToken" type:"string" json:"nextSequenceToken,omitempty"`

	metadataPutLogEventsOutput `json:"-", xml:"-"`
}

type metadataPutLogEventsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type PutMetricFilterInput struct {
	FilterName            *string                 `locationName:"filterName" type:"string" json:"filterName,omitempty"`
	FilterPattern         *string                 `locationName:"filterPattern" type:"string" json:"filterPattern,omitempty"`
	LogGroupName          *string                 `locationName:"logGroupName" type:"string" json:"logGroupName,omitempty"`
	MetricTransformations []*MetricTransformation `locationName:"metricTransformations" type:"list" json:"metricTransformations,omitempty"`

	metadataPutMetricFilterInput `json:"-", xml:"-"`
}

type metadataPutMetricFilterInput struct {
	SDKShapeTraits bool `type:"structure" required:"logGroupName,filterName,filterPattern,metricTransformations" json:",omitempty"`
}

type PutRetentionPolicyInput struct {
	LogGroupName    *string `locationName:"logGroupName" type:"string" json:"logGroupName,omitempty"`
	RetentionInDays *int    `locationName:"retentionInDays" type:"integer" json:"retentionInDays,omitempty"`

	metadataPutRetentionPolicyInput `json:"-", xml:"-"`
}

type metadataPutRetentionPolicyInput struct {
	SDKShapeTraits bool `type:"structure" required:"logGroupName,retentionInDays" json:",omitempty"`
}

type ResourceAlreadyExistsException struct {
	metadataResourceAlreadyExistsException `json:"-", xml:"-"`
}

type metadataResourceAlreadyExistsException struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ResourceNotFoundException struct {
	metadataResourceNotFoundException `json:"-", xml:"-"`
}

type metadataResourceNotFoundException struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ServiceUnavailableException struct {
	metadataServiceUnavailableException `json:"-", xml:"-"`
}

type metadataServiceUnavailableException struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type TestMetricFilterInput struct {
	FilterPattern    *string   `locationName:"filterPattern" type:"string" json:"filterPattern,omitempty"`
	LogEventMessages []*string `locationName:"logEventMessages" type:"list" json:"logEventMessages,omitempty"`

	metadataTestMetricFilterInput `json:"-", xml:"-"`
}

type metadataTestMetricFilterInput struct {
	SDKShapeTraits bool `type:"structure" required:"filterPattern,logEventMessages" json:",omitempty"`
}

type TestMetricFilterOutput struct {
	Matches []*MetricFilterMatchRecord `locationName:"matches" type:"list" json:"matches,omitempty"`

	metadataTestMetricFilterOutput `json:"-", xml:"-"`
}

type metadataTestMetricFilterOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}