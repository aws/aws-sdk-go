// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

// Package inspector provides a client for Amazon Inspector.
package inspector

import (
	"time"

	"github.com/aws/aws-sdk-go/aws/awsutil"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/private/protocol"
	"github.com/aws/aws-sdk-go/private/protocol/jsonrpc"
)

const opAddAttributesToFindings = "AddAttributesToFindings"

// AddAttributesToFindingsRequest generates a request for the AddAttributesToFindings operation.
func (c *Inspector) AddAttributesToFindingsRequest(input *AddAttributesToFindingsInput) (req *request.Request, output *AddAttributesToFindingsOutput) {
	op := &request.Operation{
		Name:       opAddAttributesToFindings,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AddAttributesToFindingsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &AddAttributesToFindingsOutput{}
	req.Data = output
	return
}

// Assigns attributes (key and value pair) to the findings specified by the
// findings' ARNs.
func (c *Inspector) AddAttributesToFindings(input *AddAttributesToFindingsInput) (*AddAttributesToFindingsOutput, error) {
	req, out := c.AddAttributesToFindingsRequest(input)
	err := req.Send()
	return out, err
}

const opCreateAssessmentTarget = "CreateAssessmentTarget"

// CreateAssessmentTargetRequest generates a request for the CreateAssessmentTarget operation.
func (c *Inspector) CreateAssessmentTargetRequest(input *CreateAssessmentTargetInput) (req *request.Request, output *CreateAssessmentTargetOutput) {
	op := &request.Operation{
		Name:       opCreateAssessmentTarget,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateAssessmentTargetInput{}
	}

	req = c.newRequest(op, input, output)
	output = &CreateAssessmentTargetOutput{}
	req.Data = output
	return
}

// Creates a new assessment target using the resource group ARN generated by
// CreateResourceGroup. You can create up to 50 assessment targets per AWS account.
// You can run up to 500 concurrent agents per AWS account. For more information,
// see  Amazon Inspector Assessment Targets (https://docs.aws.amazon.com/inspector/latest/userguide//inspector_applications.html).
func (c *Inspector) CreateAssessmentTarget(input *CreateAssessmentTargetInput) (*CreateAssessmentTargetOutput, error) {
	req, out := c.CreateAssessmentTargetRequest(input)
	err := req.Send()
	return out, err
}

const opCreateAssessmentTemplate = "CreateAssessmentTemplate"

// CreateAssessmentTemplateRequest generates a request for the CreateAssessmentTemplate operation.
func (c *Inspector) CreateAssessmentTemplateRequest(input *CreateAssessmentTemplateInput) (req *request.Request, output *CreateAssessmentTemplateOutput) {
	op := &request.Operation{
		Name:       opCreateAssessmentTemplate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateAssessmentTemplateInput{}
	}

	req = c.newRequest(op, input, output)
	output = &CreateAssessmentTemplateOutput{}
	req.Data = output
	return
}

// Creates an assessment template for the assessment target specified by the
// assessment target ARN.
func (c *Inspector) CreateAssessmentTemplate(input *CreateAssessmentTemplateInput) (*CreateAssessmentTemplateOutput, error) {
	req, out := c.CreateAssessmentTemplateRequest(input)
	err := req.Send()
	return out, err
}

const opCreateResourceGroup = "CreateResourceGroup"

// CreateResourceGroupRequest generates a request for the CreateResourceGroup operation.
func (c *Inspector) CreateResourceGroupRequest(input *CreateResourceGroupInput) (req *request.Request, output *CreateResourceGroupOutput) {
	op := &request.Operation{
		Name:       opCreateResourceGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateResourceGroupInput{}
	}

	req = c.newRequest(op, input, output)
	output = &CreateResourceGroupOutput{}
	req.Data = output
	return
}

// Creates a resource group using the specified set of tags (key and value pairs)
// that are used to select the EC2 instances to be included in an Inspector
// assessment target. The created resource group is then used to create an Inspector
// assessment target.
func (c *Inspector) CreateResourceGroup(input *CreateResourceGroupInput) (*CreateResourceGroupOutput, error) {
	req, out := c.CreateResourceGroupRequest(input)
	err := req.Send()
	return out, err
}

const opDeleteAssessmentRun = "DeleteAssessmentRun"

// DeleteAssessmentRunRequest generates a request for the DeleteAssessmentRun operation.
func (c *Inspector) DeleteAssessmentRunRequest(input *DeleteAssessmentRunInput) (req *request.Request, output *DeleteAssessmentRunOutput) {
	op := &request.Operation{
		Name:       opDeleteAssessmentRun,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteAssessmentRunInput{}
	}

	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output = &DeleteAssessmentRunOutput{}
	req.Data = output
	return
}

// Deletes the assessment run specified by the assessment run ARN.
func (c *Inspector) DeleteAssessmentRun(input *DeleteAssessmentRunInput) (*DeleteAssessmentRunOutput, error) {
	req, out := c.DeleteAssessmentRunRequest(input)
	err := req.Send()
	return out, err
}

const opDeleteAssessmentTarget = "DeleteAssessmentTarget"

// DeleteAssessmentTargetRequest generates a request for the DeleteAssessmentTarget operation.
func (c *Inspector) DeleteAssessmentTargetRequest(input *DeleteAssessmentTargetInput) (req *request.Request, output *DeleteAssessmentTargetOutput) {
	op := &request.Operation{
		Name:       opDeleteAssessmentTarget,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteAssessmentTargetInput{}
	}

	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output = &DeleteAssessmentTargetOutput{}
	req.Data = output
	return
}

// Deletes the assessment target specified by the assessment target ARN.
func (c *Inspector) DeleteAssessmentTarget(input *DeleteAssessmentTargetInput) (*DeleteAssessmentTargetOutput, error) {
	req, out := c.DeleteAssessmentTargetRequest(input)
	err := req.Send()
	return out, err
}

const opDeleteAssessmentTemplate = "DeleteAssessmentTemplate"

// DeleteAssessmentTemplateRequest generates a request for the DeleteAssessmentTemplate operation.
func (c *Inspector) DeleteAssessmentTemplateRequest(input *DeleteAssessmentTemplateInput) (req *request.Request, output *DeleteAssessmentTemplateOutput) {
	op := &request.Operation{
		Name:       opDeleteAssessmentTemplate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteAssessmentTemplateInput{}
	}

	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output = &DeleteAssessmentTemplateOutput{}
	req.Data = output
	return
}

// Deletes the assessment template specified by the assessment template ARN.
func (c *Inspector) DeleteAssessmentTemplate(input *DeleteAssessmentTemplateInput) (*DeleteAssessmentTemplateOutput, error) {
	req, out := c.DeleteAssessmentTemplateRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeAssessmentRuns = "DescribeAssessmentRuns"

// DescribeAssessmentRunsRequest generates a request for the DescribeAssessmentRuns operation.
func (c *Inspector) DescribeAssessmentRunsRequest(input *DescribeAssessmentRunsInput) (req *request.Request, output *DescribeAssessmentRunsOutput) {
	op := &request.Operation{
		Name:       opDescribeAssessmentRuns,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAssessmentRunsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeAssessmentRunsOutput{}
	req.Data = output
	return
}

// Describes the assessment run(s) specified by the assessment run ARN(s).
func (c *Inspector) DescribeAssessmentRuns(input *DescribeAssessmentRunsInput) (*DescribeAssessmentRunsOutput, error) {
	req, out := c.DescribeAssessmentRunsRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeAssessmentTargets = "DescribeAssessmentTargets"

// DescribeAssessmentTargetsRequest generates a request for the DescribeAssessmentTargets operation.
func (c *Inspector) DescribeAssessmentTargetsRequest(input *DescribeAssessmentTargetsInput) (req *request.Request, output *DescribeAssessmentTargetsOutput) {
	op := &request.Operation{
		Name:       opDescribeAssessmentTargets,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAssessmentTargetsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeAssessmentTargetsOutput{}
	req.Data = output
	return
}

// Describes the assessment target(s) specified by the assessment target ARN(s).
func (c *Inspector) DescribeAssessmentTargets(input *DescribeAssessmentTargetsInput) (*DescribeAssessmentTargetsOutput, error) {
	req, out := c.DescribeAssessmentTargetsRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeAssessmentTemplates = "DescribeAssessmentTemplates"

// DescribeAssessmentTemplatesRequest generates a request for the DescribeAssessmentTemplates operation.
func (c *Inspector) DescribeAssessmentTemplatesRequest(input *DescribeAssessmentTemplatesInput) (req *request.Request, output *DescribeAssessmentTemplatesOutput) {
	op := &request.Operation{
		Name:       opDescribeAssessmentTemplates,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAssessmentTemplatesInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeAssessmentTemplatesOutput{}
	req.Data = output
	return
}

// Describes the assessment template(s) specified by the assessment template(s)
// ARN(s).
func (c *Inspector) DescribeAssessmentTemplates(input *DescribeAssessmentTemplatesInput) (*DescribeAssessmentTemplatesOutput, error) {
	req, out := c.DescribeAssessmentTemplatesRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeCrossAccountAccessRole = "DescribeCrossAccountAccessRole"

// DescribeCrossAccountAccessRoleRequest generates a request for the DescribeCrossAccountAccessRole operation.
func (c *Inspector) DescribeCrossAccountAccessRoleRequest(input *DescribeCrossAccountAccessRoleInput) (req *request.Request, output *DescribeCrossAccountAccessRoleOutput) {
	op := &request.Operation{
		Name:       opDescribeCrossAccountAccessRole,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeCrossAccountAccessRoleInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeCrossAccountAccessRoleOutput{}
	req.Data = output
	return
}

// Describes the IAM role that enables Inspector to access your AWS account.
func (c *Inspector) DescribeCrossAccountAccessRole(input *DescribeCrossAccountAccessRoleInput) (*DescribeCrossAccountAccessRoleOutput, error) {
	req, out := c.DescribeCrossAccountAccessRoleRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeFindings = "DescribeFindings"

// DescribeFindingsRequest generates a request for the DescribeFindings operation.
func (c *Inspector) DescribeFindingsRequest(input *DescribeFindingsInput) (req *request.Request, output *DescribeFindingsOutput) {
	op := &request.Operation{
		Name:       opDescribeFindings,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeFindingsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeFindingsOutput{}
	req.Data = output
	return
}

// Describes the finding(s) specified by the finding ARN(s).
func (c *Inspector) DescribeFindings(input *DescribeFindingsInput) (*DescribeFindingsOutput, error) {
	req, out := c.DescribeFindingsRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeResourceGroups = "DescribeResourceGroups"

// DescribeResourceGroupsRequest generates a request for the DescribeResourceGroups operation.
func (c *Inspector) DescribeResourceGroupsRequest(input *DescribeResourceGroupsInput) (req *request.Request, output *DescribeResourceGroupsOutput) {
	op := &request.Operation{
		Name:       opDescribeResourceGroups,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeResourceGroupsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeResourceGroupsOutput{}
	req.Data = output
	return
}

// Describes resource group(s) specified by the resource group ARN(s).
func (c *Inspector) DescribeResourceGroups(input *DescribeResourceGroupsInput) (*DescribeResourceGroupsOutput, error) {
	req, out := c.DescribeResourceGroupsRequest(input)
	err := req.Send()
	return out, err
}

const opDescribeRulesPackages = "DescribeRulesPackages"

// DescribeRulesPackagesRequest generates a request for the DescribeRulesPackages operation.
func (c *Inspector) DescribeRulesPackagesRequest(input *DescribeRulesPackagesInput) (req *request.Request, output *DescribeRulesPackagesOutput) {
	op := &request.Operation{
		Name:       opDescribeRulesPackages,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeRulesPackagesInput{}
	}

	req = c.newRequest(op, input, output)
	output = &DescribeRulesPackagesOutput{}
	req.Data = output
	return
}

// Describes the rules package(s) specified by the rules package ARN(s).
func (c *Inspector) DescribeRulesPackages(input *DescribeRulesPackagesInput) (*DescribeRulesPackagesOutput, error) {
	req, out := c.DescribeRulesPackagesRequest(input)
	err := req.Send()
	return out, err
}

const opGetTelemetryMetadata = "GetTelemetryMetadata"

// GetTelemetryMetadataRequest generates a request for the GetTelemetryMetadata operation.
func (c *Inspector) GetTelemetryMetadataRequest(input *GetTelemetryMetadataInput) (req *request.Request, output *GetTelemetryMetadataOutput) {
	op := &request.Operation{
		Name:       opGetTelemetryMetadata,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetTelemetryMetadataInput{}
	}

	req = c.newRequest(op, input, output)
	output = &GetTelemetryMetadataOutput{}
	req.Data = output
	return
}

// Information about the data collected for the specified assessment run.
func (c *Inspector) GetTelemetryMetadata(input *GetTelemetryMetadataInput) (*GetTelemetryMetadataOutput, error) {
	req, out := c.GetTelemetryMetadataRequest(input)
	err := req.Send()
	return out, err
}

const opListAssessmentRunAgents = "ListAssessmentRunAgents"

// ListAssessmentRunAgentsRequest generates a request for the ListAssessmentRunAgents operation.
func (c *Inspector) ListAssessmentRunAgentsRequest(input *ListAssessmentRunAgentsInput) (req *request.Request, output *ListAssessmentRunAgentsOutput) {
	op := &request.Operation{
		Name:       opListAssessmentRunAgents,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAssessmentRunAgentsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ListAssessmentRunAgentsOutput{}
	req.Data = output
	return
}

// Lists the agents of the assessment run specified by the assessment run ARN.
func (c *Inspector) ListAssessmentRunAgents(input *ListAssessmentRunAgentsInput) (*ListAssessmentRunAgentsOutput, error) {
	req, out := c.ListAssessmentRunAgentsRequest(input)
	err := req.Send()
	return out, err
}

const opListAssessmentRuns = "ListAssessmentRuns"

// ListAssessmentRunsRequest generates a request for the ListAssessmentRuns operation.
func (c *Inspector) ListAssessmentRunsRequest(input *ListAssessmentRunsInput) (req *request.Request, output *ListAssessmentRunsOutput) {
	op := &request.Operation{
		Name:       opListAssessmentRuns,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAssessmentRunsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ListAssessmentRunsOutput{}
	req.Data = output
	return
}

// Lists the assessments run corresponding to assessment template(s) specified
// by the assessment template(s)' ARN(s).
func (c *Inspector) ListAssessmentRuns(input *ListAssessmentRunsInput) (*ListAssessmentRunsOutput, error) {
	req, out := c.ListAssessmentRunsRequest(input)
	err := req.Send()
	return out, err
}

const opListAssessmentTargets = "ListAssessmentTargets"

// ListAssessmentTargetsRequest generates a request for the ListAssessmentTargets operation.
func (c *Inspector) ListAssessmentTargetsRequest(input *ListAssessmentTargetsInput) (req *request.Request, output *ListAssessmentTargetsOutput) {
	op := &request.Operation{
		Name:       opListAssessmentTargets,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAssessmentTargetsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ListAssessmentTargetsOutput{}
	req.Data = output
	return
}

// Lists the ARN(s) of the assessment target(s) within this AWS account. For
// more information about assessment targets, see Amazon Inspector Assessment
// Targets (https://docs.aws.amazon.com/inspector/latest/userguide//inspector_applications.html).
func (c *Inspector) ListAssessmentTargets(input *ListAssessmentTargetsInput) (*ListAssessmentTargetsOutput, error) {
	req, out := c.ListAssessmentTargetsRequest(input)
	err := req.Send()
	return out, err
}

const opListAssessmentTemplates = "ListAssessmentTemplates"

// ListAssessmentTemplatesRequest generates a request for the ListAssessmentTemplates operation.
func (c *Inspector) ListAssessmentTemplatesRequest(input *ListAssessmentTemplatesInput) (req *request.Request, output *ListAssessmentTemplatesOutput) {
	op := &request.Operation{
		Name:       opListAssessmentTemplates,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAssessmentTemplatesInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ListAssessmentTemplatesOutput{}
	req.Data = output
	return
}

// Lists the assessment template(s) corresponding to the assessment target(s)
// specified by the assessment targets' ARN(s).
func (c *Inspector) ListAssessmentTemplates(input *ListAssessmentTemplatesInput) (*ListAssessmentTemplatesOutput, error) {
	req, out := c.ListAssessmentTemplatesRequest(input)
	err := req.Send()
	return out, err
}

const opListEventSubscriptions = "ListEventSubscriptions"

// ListEventSubscriptionsRequest generates a request for the ListEventSubscriptions operation.
func (c *Inspector) ListEventSubscriptionsRequest(input *ListEventSubscriptionsInput) (req *request.Request, output *ListEventSubscriptionsOutput) {
	op := &request.Operation{
		Name:       opListEventSubscriptions,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListEventSubscriptionsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ListEventSubscriptionsOutput{}
	req.Data = output
	return
}

// Lists all the event subscriptions for the assessment template specified by
// the assessment template ARN. For more information, see SubscribeToEvent and
// UnsubscribeFromEvent.
func (c *Inspector) ListEventSubscriptions(input *ListEventSubscriptionsInput) (*ListEventSubscriptionsOutput, error) {
	req, out := c.ListEventSubscriptionsRequest(input)
	err := req.Send()
	return out, err
}

const opListFindings = "ListFindings"

// ListFindingsRequest generates a request for the ListFindings operation.
func (c *Inspector) ListFindingsRequest(input *ListFindingsInput) (req *request.Request, output *ListFindingsOutput) {
	op := &request.Operation{
		Name:       opListFindings,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListFindingsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ListFindingsOutput{}
	req.Data = output
	return
}

// Lists findings generated by the assessment run(s) specified by the assessment
// run ARN(s).
func (c *Inspector) ListFindings(input *ListFindingsInput) (*ListFindingsOutput, error) {
	req, out := c.ListFindingsRequest(input)
	err := req.Send()
	return out, err
}

const opListRulesPackages = "ListRulesPackages"

// ListRulesPackagesRequest generates a request for the ListRulesPackages operation.
func (c *Inspector) ListRulesPackagesRequest(input *ListRulesPackagesInput) (req *request.Request, output *ListRulesPackagesOutput) {
	op := &request.Operation{
		Name:       opListRulesPackages,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListRulesPackagesInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ListRulesPackagesOutput{}
	req.Data = output
	return
}

// Lists all available Inspector rules packages.
func (c *Inspector) ListRulesPackages(input *ListRulesPackagesInput) (*ListRulesPackagesOutput, error) {
	req, out := c.ListRulesPackagesRequest(input)
	err := req.Send()
	return out, err
}

const opListTagsForResource = "ListTagsForResource"

// ListTagsForResourceRequest generates a request for the ListTagsForResource operation.
func (c *Inspector) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {
	op := &request.Operation{
		Name:       opListTagsForResource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListTagsForResourceInput{}
	}

	req = c.newRequest(op, input, output)
	output = &ListTagsForResourceOutput{}
	req.Data = output
	return
}

// Lists all tags associated with an assessment template.
func (c *Inspector) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {
	req, out := c.ListTagsForResourceRequest(input)
	err := req.Send()
	return out, err
}

const opPreviewAgents = "PreviewAgents"

// PreviewAgentsRequest generates a request for the PreviewAgents operation.
func (c *Inspector) PreviewAgentsRequest(input *PreviewAgentsInput) (req *request.Request, output *PreviewAgentsOutput) {
	op := &request.Operation{
		Name:       opPreviewAgents,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &PreviewAgentsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &PreviewAgentsOutput{}
	req.Data = output
	return
}

// Previews the agents installed on the EC2 instances that are part of the specified
// assessment target.
func (c *Inspector) PreviewAgents(input *PreviewAgentsInput) (*PreviewAgentsOutput, error) {
	req, out := c.PreviewAgentsRequest(input)
	err := req.Send()
	return out, err
}

const opRegisterCrossAccountAccessRole = "RegisterCrossAccountAccessRole"

// RegisterCrossAccountAccessRoleRequest generates a request for the RegisterCrossAccountAccessRole operation.
func (c *Inspector) RegisterCrossAccountAccessRoleRequest(input *RegisterCrossAccountAccessRoleInput) (req *request.Request, output *RegisterCrossAccountAccessRoleOutput) {
	op := &request.Operation{
		Name:       opRegisterCrossAccountAccessRole,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &RegisterCrossAccountAccessRoleInput{}
	}

	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output = &RegisterCrossAccountAccessRoleOutput{}
	req.Data = output
	return
}

// Registers the IAM role that Inspector uses to list your EC2 instances at
// the start of the assessment run or when you call the PreviewAgents action.
func (c *Inspector) RegisterCrossAccountAccessRole(input *RegisterCrossAccountAccessRoleInput) (*RegisterCrossAccountAccessRoleOutput, error) {
	req, out := c.RegisterCrossAccountAccessRoleRequest(input)
	err := req.Send()
	return out, err
}

const opRemoveAttributesFromFindings = "RemoveAttributesFromFindings"

// RemoveAttributesFromFindingsRequest generates a request for the RemoveAttributesFromFindings operation.
func (c *Inspector) RemoveAttributesFromFindingsRequest(input *RemoveAttributesFromFindingsInput) (req *request.Request, output *RemoveAttributesFromFindingsOutput) {
	op := &request.Operation{
		Name:       opRemoveAttributesFromFindings,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &RemoveAttributesFromFindingsInput{}
	}

	req = c.newRequest(op, input, output)
	output = &RemoveAttributesFromFindingsOutput{}
	req.Data = output
	return
}

// Removes entire attributes (key and value pairs) from the findings specified
// by the finding ARNs where an attribute with the specified key exists.
func (c *Inspector) RemoveAttributesFromFindings(input *RemoveAttributesFromFindingsInput) (*RemoveAttributesFromFindingsOutput, error) {
	req, out := c.RemoveAttributesFromFindingsRequest(input)
	err := req.Send()
	return out, err
}

const opSetTagsForResource = "SetTagsForResource"

// SetTagsForResourceRequest generates a request for the SetTagsForResource operation.
func (c *Inspector) SetTagsForResourceRequest(input *SetTagsForResourceInput) (req *request.Request, output *SetTagsForResourceOutput) {
	op := &request.Operation{
		Name:       opSetTagsForResource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &SetTagsForResourceInput{}
	}

	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output = &SetTagsForResourceOutput{}
	req.Data = output
	return
}

// Sets tags (key and value pairs) to the assessment template specified by the
// assessment template ARN.
func (c *Inspector) SetTagsForResource(input *SetTagsForResourceInput) (*SetTagsForResourceOutput, error) {
	req, out := c.SetTagsForResourceRequest(input)
	err := req.Send()
	return out, err
}

const opStartAssessmentRun = "StartAssessmentRun"

// StartAssessmentRunRequest generates a request for the StartAssessmentRun operation.
func (c *Inspector) StartAssessmentRunRequest(input *StartAssessmentRunInput) (req *request.Request, output *StartAssessmentRunOutput) {
	op := &request.Operation{
		Name:       opStartAssessmentRun,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &StartAssessmentRunInput{}
	}

	req = c.newRequest(op, input, output)
	output = &StartAssessmentRunOutput{}
	req.Data = output
	return
}

// Starts the assessment run specified by the assessment template ARN. For this
// API to function properly, you must not exceed the limit of running up to
// 500 concurrent agents per AWS account.
func (c *Inspector) StartAssessmentRun(input *StartAssessmentRunInput) (*StartAssessmentRunOutput, error) {
	req, out := c.StartAssessmentRunRequest(input)
	err := req.Send()
	return out, err
}

const opStopAssessmentRun = "StopAssessmentRun"

// StopAssessmentRunRequest generates a request for the StopAssessmentRun operation.
func (c *Inspector) StopAssessmentRunRequest(input *StopAssessmentRunInput) (req *request.Request, output *StopAssessmentRunOutput) {
	op := &request.Operation{
		Name:       opStopAssessmentRun,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &StopAssessmentRunInput{}
	}

	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output = &StopAssessmentRunOutput{}
	req.Data = output
	return
}

// Stops the assessment run specified by the assessment run ARN.
func (c *Inspector) StopAssessmentRun(input *StopAssessmentRunInput) (*StopAssessmentRunOutput, error) {
	req, out := c.StopAssessmentRunRequest(input)
	err := req.Send()
	return out, err
}

const opSubscribeToEvent = "SubscribeToEvent"

// SubscribeToEventRequest generates a request for the SubscribeToEvent operation.
func (c *Inspector) SubscribeToEventRequest(input *SubscribeToEventInput) (req *request.Request, output *SubscribeToEventOutput) {
	op := &request.Operation{
		Name:       opSubscribeToEvent,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &SubscribeToEventInput{}
	}

	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output = &SubscribeToEventOutput{}
	req.Data = output
	return
}

// Enables the process of sending Amazon Simple Notification Service (SNS) notifications
// about a specified event to a specified topic.
func (c *Inspector) SubscribeToEvent(input *SubscribeToEventInput) (*SubscribeToEventOutput, error) {
	req, out := c.SubscribeToEventRequest(input)
	err := req.Send()
	return out, err
}

const opUnsubscribeFromEvent = "UnsubscribeFromEvent"

// UnsubscribeFromEventRequest generates a request for the UnsubscribeFromEvent operation.
func (c *Inspector) UnsubscribeFromEventRequest(input *UnsubscribeFromEventInput) (req *request.Request, output *UnsubscribeFromEventOutput) {
	op := &request.Operation{
		Name:       opUnsubscribeFromEvent,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UnsubscribeFromEventInput{}
	}

	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output = &UnsubscribeFromEventOutput{}
	req.Data = output
	return
}

// Disables the process of sending Amazon Simple Notification Service (SNS)
// notifications about a specified event to a specified topic.
func (c *Inspector) UnsubscribeFromEvent(input *UnsubscribeFromEventInput) (*UnsubscribeFromEventOutput, error) {
	req, out := c.UnsubscribeFromEventRequest(input)
	err := req.Send()
	return out, err
}

const opUpdateAssessmentTarget = "UpdateAssessmentTarget"

// UpdateAssessmentTargetRequest generates a request for the UpdateAssessmentTarget operation.
func (c *Inspector) UpdateAssessmentTargetRequest(input *UpdateAssessmentTargetInput) (req *request.Request, output *UpdateAssessmentTargetOutput) {
	op := &request.Operation{
		Name:       opUpdateAssessmentTarget,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateAssessmentTargetInput{}
	}

	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Remove(jsonrpc.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	output = &UpdateAssessmentTargetOutput{}
	req.Data = output
	return
}

// Updates the assessment target specified by the assessment target ARN.
func (c *Inspector) UpdateAssessmentTarget(input *UpdateAssessmentTargetInput) (*UpdateAssessmentTargetOutput, error) {
	req, out := c.UpdateAssessmentTargetRequest(input)
	err := req.Send()
	return out, err
}

type AddAttributesToFindingsInput struct {
	_ struct{} `type:"structure"`

	// The array of attributes that you want to assign to specified findings.
	Attributes []*Attribute `locationName:"attributes" type:"list" required:"true"`

	// The ARNs specifying the findings that you want to assign attributes to.
	FindingArns []*string `locationName:"findingArns" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s AddAttributesToFindingsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AddAttributesToFindingsInput) GoString() string {
	return s.String()
}

type AddAttributesToFindingsOutput struct {
	_ struct{} `type:"structure"`

	// Attributes details that cannot be described. An error code is provided for
	// each failed item.
	FailedItems map[string]*FailedItemDetails `locationName:"failedItems" type:"map" required:"true"`
}

// String returns the string representation
func (s AddAttributesToFindingsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AddAttributesToFindingsOutput) GoString() string {
	return s.String()
}

// This data type is used in the exception error that is thrown if you start
// an assessment run for an assessment target that includes an EC2 instance
// that is already participating in another started assessment run.
type AgentAlreadyRunningAssessment struct {
	_ struct{} `type:"structure"`

	// ID of the agent that is running on an EC2 isntance that is already particiapting
	// in another started assessment run.
	AgentId *string `locationName:"agentId" min:"1" type:"string" required:"true"`

	// The ARN of the assessment that has already been started.
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s AgentAlreadyRunningAssessment) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AgentAlreadyRunningAssessment) GoString() string {
	return s.String()
}

// Contains information about an Inspector agent. This data type is used as
// a request parameter in the ListAssessmentRunAgents action.
type AgentFilter struct {
	_ struct{} `type:"structure"`

	// The detailed health state of the agent. Values can be set to IDLE, RUNNING,
	// SHUTDOWN, UNHEALTHY, THROTTLED, and UNKNOWN.
	AgentHealthCodes []*string `locationName:"agentHealthCodes" type:"list" required:"true"`

	// The current health state of the agent. Values can be set to HEALTHY or UNHEALTHY.
	AgentHealths []*string `locationName:"agentHealths" type:"list" required:"true"`
}

// String returns the string representation
func (s AgentFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AgentFilter) GoString() string {
	return s.String()
}

// This data type is used as a response element in the PreviewAgents action.
type AgentPreview struct {
	_ struct{} `type:"structure"`

	// The id of the EC2 instance where the agent is intalled.
	AgentId *string `locationName:"agentId" min:"1" type:"string" required:"true"`

	// The autoscaling group for the EC2 instance where the agent is installed.
	AutoScalingGroup *string `locationName:"autoScalingGroup" min:"1" type:"string"`
}

// String returns the string representation
func (s AgentPreview) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AgentPreview) GoString() string {
	return s.String()
}

// A snapshot of an Inspector assessment run that contains the assessment run's
// findings.
//
// This data type is used as the response element in the DescribeAssessmentRuns
// action.
type AssessmentRun struct {
	_ struct{} `type:"structure"`

	// The ARN of the assessment run.
	Arn *string `locationName:"arn" min:"1" type:"string" required:"true"`

	// The ARN of the assessment template that is associated with the assessment
	// run.
	AssessmentTemplateArn *string `locationName:"assessmentTemplateArn" min:"1" type:"string" required:"true"`

	// Assessment run completion time that corresponds to the rules packages evaluation
	// completion time or failure.
	CompletedAt *time.Time `locationName:"completedAt" type:"timestamp" timestampFormat:"unix"`

	// The time when StartAssessmentRun API was called.
	CreatedAt *time.Time `locationName:"createdAt" type:"timestamp" timestampFormat:"unix" required:"true"`

	// Boolean value (true or false) specifying whether the process of collecting
	// data from the agents is completed.
	DataCollected *bool `locationName:"dataCollected" type:"boolean" required:"true"`

	// The duration of the assessment run.
	DurationInSeconds *int64 `locationName:"durationInSeconds" min:"180" type:"integer" required:"true"`

	// The auto-generated name for the assessment run.
	Name *string `locationName:"name" min:"1" type:"string" required:"true"`

	// A list of notifications for the event subscriptions. A notification about
	// a particular generated finding is only added to this list once.
	Notifications []*AssessmentRunNotification `locationName:"notifications" type:"list" required:"true"`

	// Rules packages selected for the assessment run.
	RulesPackageArns []*string `locationName:"rulesPackageArns" min:"1" type:"list" required:"true"`

	// The time when StartAssessmentRun API was called.
	StartedAt *time.Time `locationName:"startedAt" type:"timestamp" timestampFormat:"unix"`

	// The state of the assessment run.
	State *string `locationName:"state" type:"string" required:"true" enum:"AssessmentRunState"`

	// The last time when the assessment run's state changed.
	StateChangedAt *time.Time `locationName:"stateChangedAt" type:"timestamp" timestampFormat:"unix" required:"true"`

	// A list of the assessment run state changes.
	StateChanges []*AssessmentRunStateChange `locationName:"stateChanges" type:"list" required:"true"`

	// The user-defined attributes that are assigned to every generated finding.
	UserAttributesForFindings []*Attribute `locationName:"userAttributesForFindings" type:"list" required:"true"`
}

// String returns the string representation
func (s AssessmentRun) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentRun) GoString() string {
	return s.String()
}

// Contains information about an Inspector agent. This data type is used as
// a response element in the ListAssessmentRunAgents action.
type AssessmentRunAgent struct {
	_ struct{} `type:"structure"`

	// The current health state of the agent.
	AgentHealth *string `locationName:"agentHealth" type:"string" required:"true" enum:"AgentHealth"`

	// The detailed health state of the agent.
	AgentHealthCode *string `locationName:"agentHealthCode" type:"string" required:"true" enum:"AgentHealthCode"`

	// The description for the agent health code.
	AgentHealthDetails *string `locationName:"agentHealthDetails" type:"string"`

	// AWS account of the EC2 instance where the agent is installed.
	AgentId *string `locationName:"agentId" min:"1" type:"string" required:"true"`

	// The ARN of the assessment run that is associated with the agent.
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string" required:"true"`

	// The auto-scaling group of the EC2 instance specified by the agent ID.
	AutoScalingGroup *string `locationName:"autoScalingGroup" min:"1" type:"string"`

	// The Inspector application data metrics collected by the agent.
	TelemetryMetadata []*TelemetryMetadata `locationName:"telemetryMetadata" type:"list" required:"true"`
}

// String returns the string representation
func (s AssessmentRunAgent) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentRunAgent) GoString() string {
	return s.String()
}

// This data type is used as the request parameter in the ListAssessmentRuns
// action.
type AssessmentRunFilter struct {
	_ struct{} `type:"structure"`

	// For a record to match a filter, the value specified for this data type property
	// must inclusively match any value between the specified minimum and maximum
	// values of the completedAt property of the AssessmentRun data type.
	CompletionTimeRange *TimestampRange `locationName:"completionTimeRange" type:"structure"`

	// For a record to match a filter, the value specified for this data type property
	// must inclusively match any value between the specified minimum and maximum
	// values of the durationInSeconds property of the AssessmentRun data type.
	DurationRange *DurationRange `locationName:"durationRange" type:"structure"`

	// For a record to match a filter, an explicit value or a string containing
	// a wildcard specified for this data type property must match the value of
	// the assessmentRunName property of the AssessmentRun data type.
	NamePattern *string `locationName:"namePattern" min:"1" type:"string"`

	// For a record to match a filter, the value specified for this data type property
	// must be contained in the list of values of the rulesPackages property of
	// the AssessmentRun data type.
	RulesPackageArns []*string `locationName:"rulesPackageArns" type:"list"`

	// For a record to match a filter, the value specified for this data type property
	// must inclusively match any value between the specified minimum and maximum
	// values of the startTime property of the AssessmentRun data type.
	StartTimeRange *TimestampRange `locationName:"startTimeRange" type:"structure"`

	// For a record to match a filter, the value specified for this data type property
	// must match the stateChangedAt property of the AssessmentRun data type.
	StateChangeTimeRange *TimestampRange `locationName:"stateChangeTimeRange" type:"structure"`

	// For a record to match a filter, one of the values specified for this data
	// type property must be the exact match of the value of the assessmentRunState
	// property of the AssessmentRun data type.
	States []*string `locationName:"states" type:"list"`
}

// String returns the string representation
func (s AssessmentRunFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentRunFilter) GoString() string {
	return s.String()
}

// This data type is used as one of the elements of the AssessmentRun data type.
type AssessmentRunNotification struct {
	_ struct{} `type:"structure"`

	// The date of the notification.
	Date *time.Time `locationName:"date" type:"timestamp" timestampFormat:"unix" required:"true"`

	// The Boolean value that specifies whether the notification represents an error.
	Error *bool `locationName:"error" type:"boolean" required:"true"`

	// The event for which a notification is sent.
	Event *string `locationName:"event" type:"string" required:"true" enum:"Event"`

	Message *string `locationName:"message" type:"string"`

	// The status code of the SNS notification.
	SnsPublishStatusCode *string `locationName:"snsPublishStatusCode" type:"string" enum:"AssessmentRunNotificationSnsStatusCode"`

	// The SNS topic to which the SNS notification is sent.
	SnsTopicArn *string `locationName:"snsTopicArn" min:"1" type:"string"`
}

// String returns the string representation
func (s AssessmentRunNotification) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentRunNotification) GoString() string {
	return s.String()
}

// This data type is used as one of the elements of the AssessmentRun data type.
type AssessmentRunStateChange struct {
	_ struct{} `type:"structure"`

	// The assessment run state.
	State *string `locationName:"state" type:"string" required:"true" enum:"AssessmentRunState"`

	// The last time the assessment run state changed.
	StateChangedAt *time.Time `locationName:"stateChangedAt" type:"timestamp" timestampFormat:"unix" required:"true"`
}

// String returns the string representation
func (s AssessmentRunStateChange) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentRunStateChange) GoString() string {
	return s.String()
}

// Contains information about an Inspector application. This data type is used
// as the response element in the DescribeAssessmentTargets action.
type AssessmentTarget struct {
	_ struct{} `type:"structure"`

	// The ARN specifying the Inspector assessment target.
	Arn *string `locationName:"arn" min:"1" type:"string" required:"true"`

	// The time at which the assessment target is created.
	CreatedAt *time.Time `locationName:"createdAt" type:"timestamp" timestampFormat:"unix" required:"true"`

	// The name of the Inspector assessment target.
	Name *string `locationName:"name" min:"1" type:"string" required:"true"`

	// The ARN specifying the resource group that is associated with the assessment
	// target.
	ResourceGroupArn *string `locationName:"resourceGroupArn" min:"1" type:"string" required:"true"`

	// The time at which UpdateAssessmentTarget API is called.
	UpdatedAt *time.Time `locationName:"updatedAt" type:"timestamp" timestampFormat:"unix" required:"true"`
}

// String returns the string representation
func (s AssessmentTarget) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentTarget) GoString() string {
	return s.String()
}

// This data type is used as the request parameter in the ListAssessmentTargets
// action.
type AssessmentTargetFilter struct {
	_ struct{} `type:"structure"`

	// For a record to match a filter, an explicit value or a string containing
	// a wildcard specified for this data type property must match the value of
	// the assessmentTargetName property of the AssessmentTarget data type.
	AssessmentTargetNamePattern *string `locationName:"assessmentTargetNamePattern" min:"1" type:"string"`
}

// String returns the string representation
func (s AssessmentTargetFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentTargetFilter) GoString() string {
	return s.String()
}

// Contains information about an Inspector assessment template. This data type
// is used as the response element in the DescribeAssessmentTemplates action.
type AssessmentTemplate struct {
	_ struct{} `type:"structure"`

	// The ARN of the assessment template.
	Arn *string `locationName:"arn" min:"1" type:"string" required:"true"`

	// The ARN of the assessment target that corresponds to this assessment template.
	AssessmentTargetArn *string `locationName:"assessmentTargetArn" min:"1" type:"string" required:"true"`

	// The time at which the assessment template is created.
	CreatedAt *time.Time `locationName:"createdAt" type:"timestamp" timestampFormat:"unix" required:"true"`

	// The duration in seconds specified for this assessment tempate. The default
	// value is 3600 seconds (one hour). The maximum value is 86400 seconds (one
	// day).
	DurationInSeconds *int64 `locationName:"durationInSeconds" min:"180" type:"integer" required:"true"`

	// The name of the assessment template.
	Name *string `locationName:"name" min:"1" type:"string" required:"true"`

	// Rules packages specified for this assessment template.
	RulesPackageArns []*string `locationName:"rulesPackageArns" type:"list" required:"true"`

	// The user-defined attributes that are assigned to every generated finding
	// from the assessment run that uses this assessment template.
	UserAttributesForFindings []*Attribute `locationName:"userAttributesForFindings" type:"list" required:"true"`
}

// String returns the string representation
func (s AssessmentTemplate) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentTemplate) GoString() string {
	return s.String()
}

// This data type is used as the request parameter in the ListAssessmentTemplates
// action.
type AssessmentTemplateFilter struct {
	_ struct{} `type:"structure"`

	// For a record to match a filter, the value specified for this data type property
	// must inclusively match any value between the specified minimum and maximum
	// values of the durationInSeconds property of the AssessmentTemplate data type.
	DurationRange *DurationRange `locationName:"durationRange" type:"structure"`

	// For a record to match a filter, an explicit value or a string containing
	// a wildcard specified for this data type property must match the value of
	// the assessmentTemplateName property of the AssessmentTemplate data type.
	NamePattern *string `locationName:"namePattern" min:"1" type:"string"`

	// For a record to match a filter, the value(s) specified for this data type
	// property must be contained in the list of values of the rulesPackageArns
	// property of the AssessmentTemplate data type.
	RulesPackageArns []*string `locationName:"rulesPackageArns" type:"list"`
}

// String returns the string representation
func (s AssessmentTemplateFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssessmentTemplateFilter) GoString() string {
	return s.String()
}

// A collection of attributes of the host from which the finding is generated.
type AssetAttributes struct {
	_ struct{} `type:"structure"`

	// The id of the agent that is installed on the EC2 instance where the finding
	// is generated.
	AgentId *string `locationName:"agentId" min:"1" type:"string"`

	// Amazon Machine Image(AMI) ID installed on the EC2 instance where the finding
	// is generated.
	AmiId *string `locationName:"amiId" type:"string"`

	// The auto-scaling group of the EC2 instance where the finding is generated.
	AutoScalingGroup *string `locationName:"autoScalingGroup" min:"1" type:"string"`

	// The hostname of the EC2 instance where the finding is generated.
	Hostname *string `locationName:"hostname" type:"string"`

	// The list of IP v4 addresses of the EC2 instance where the finding is generated.
	Ipv4Addresses []*string `locationName:"ipv4Addresses" type:"list"`

	// The schema version of this data type.
	SchemaVersion *int64 `locationName:"schemaVersion" type:"integer" required:"true"`
}

// String returns the string representation
func (s AssetAttributes) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AssetAttributes) GoString() string {
	return s.String()
}

// This data type is used as a request parameter in the AddAttributesToFindings
// and CreateAssessmentTemplate actions.
type Attribute struct {
	_ struct{} `type:"structure"`

	// The attribute key.
	Key *string `locationName:"key" min:"1" type:"string" required:"true"`

	// The value assigned to the attribute key.
	Value *string `locationName:"value" min:"1" type:"string"`
}

// String returns the string representation
func (s Attribute) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Attribute) GoString() string {
	return s.String()
}

type CreateAssessmentTargetInput struct {
	_ struct{} `type:"structure"`

	// The user-defined name identifying the assessment target that you want to
	// create. The name must be unique within the AWS account.
	AssessmentTargetName *string `locationName:"assessmentTargetName" min:"1" type:"string" required:"true"`

	// The ARN specifying the resource group that is used to create the assessment
	// target.
	ResourceGroupArn *string `locationName:"resourceGroupArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s CreateAssessmentTargetInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAssessmentTargetInput) GoString() string {
	return s.String()
}

type CreateAssessmentTargetOutput struct {
	_ struct{} `type:"structure"`

	// The ARN specifying the assessment target that is created.
	AssessmentTargetArn *string `locationName:"assessmentTargetArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s CreateAssessmentTargetOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAssessmentTargetOutput) GoString() string {
	return s.String()
}

type CreateAssessmentTemplateInput struct {
	_ struct{} `type:"structure"`

	// The ARN specifying the assessment target for which you want to create the
	// assessment template.
	AssessmentTargetArn *string `locationName:"assessmentTargetArn" min:"1" type:"string" required:"true"`

	// The user-defined name identifying the assessment template that you want to
	// create. You can create several assessment templates for an assessment target.
	// The names of the assessment templates corresponding to a particular assessment
	// target must be unique.
	AssessmentTemplateName *string `locationName:"assessmentTemplateName" min:"1" type:"string" required:"true"`

	// The duration of the assessment run in seconds. The default value is 3600
	// seconds (one hour).
	DurationInSeconds *int64 `locationName:"durationInSeconds" min:"180" type:"integer" required:"true"`

	// The ARNs specifying the rules packages that you want to attach to the assessment
	// template.
	RulesPackageArns []*string `locationName:"rulesPackageArns" type:"list" required:"true"`

	// The user-defined attributes that are assigned to every finding generated
	// by the assessment run that uses this assessment template.
	UserAttributesForFindings []*Attribute `locationName:"userAttributesForFindings" type:"list"`
}

// String returns the string representation
func (s CreateAssessmentTemplateInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAssessmentTemplateInput) GoString() string {
	return s.String()
}

type CreateAssessmentTemplateOutput struct {
	_ struct{} `type:"structure"`

	// The ARN specifying the assessment template that is created.
	AssessmentTemplateArn *string `locationName:"assessmentTemplateArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s CreateAssessmentTemplateOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAssessmentTemplateOutput) GoString() string {
	return s.String()
}

type CreateResourceGroupInput struct {
	_ struct{} `type:"structure"`

	// A collection of keys and an array of possible values, '[{"key":"key1","values":["Value1","Value2"]},{"key":"Key2","values":["Value3"]}]'.
	//
	// For example,'[{"key":"Name","values":["TestEC2Instance"]}]'.
	ResourceGroupTags []*ResourceGroupTag `locationName:"resourceGroupTags" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s CreateResourceGroupInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateResourceGroupInput) GoString() string {
	return s.String()
}

type CreateResourceGroupOutput struct {
	_ struct{} `type:"structure"`

	// The ARN specifying the resource group that is created.
	ResourceGroupArn *string `locationName:"resourceGroupArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s CreateResourceGroupOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateResourceGroupOutput) GoString() string {
	return s.String()
}

type DeleteAssessmentRunInput struct {
	_ struct{} `type:"structure"`

	// The ARN specifying the assessment run that you want to delete.
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteAssessmentRunInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAssessmentRunInput) GoString() string {
	return s.String()
}

type DeleteAssessmentRunOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DeleteAssessmentRunOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAssessmentRunOutput) GoString() string {
	return s.String()
}

type DeleteAssessmentTargetInput struct {
	_ struct{} `type:"structure"`

	// The ARN specifying the assessment target that you want to delete.
	AssessmentTargetArn *string `locationName:"assessmentTargetArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteAssessmentTargetInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAssessmentTargetInput) GoString() string {
	return s.String()
}

type DeleteAssessmentTargetOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DeleteAssessmentTargetOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAssessmentTargetOutput) GoString() string {
	return s.String()
}

type DeleteAssessmentTemplateInput struct {
	_ struct{} `type:"structure"`

	// The ARN specifying the assessment template that you want to delete.
	AssessmentTemplateArn *string `locationName:"assessmentTemplateArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteAssessmentTemplateInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAssessmentTemplateInput) GoString() string {
	return s.String()
}

type DeleteAssessmentTemplateOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DeleteAssessmentTemplateOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAssessmentTemplateOutput) GoString() string {
	return s.String()
}

type DescribeAssessmentRunsInput struct {
	_ struct{} `type:"structure"`

	// The ARN(s) specifying the assessment run(s) that you want to describe.
	AssessmentRunArns []*string `locationName:"assessmentRunArns" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s DescribeAssessmentRunsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAssessmentRunsInput) GoString() string {
	return s.String()
}

type DescribeAssessmentRunsOutput struct {
	_ struct{} `type:"structure"`

	// Information about the assessment run(s).
	AssessmentRuns []*AssessmentRun `locationName:"assessmentRuns" type:"list" required:"true"`

	// Assessment run details that cannot be described. An error code is provided
	// for each failed item.
	FailedItems map[string]*FailedItemDetails `locationName:"failedItems" type:"map" required:"true"`
}

// String returns the string representation
func (s DescribeAssessmentRunsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAssessmentRunsOutput) GoString() string {
	return s.String()
}

type DescribeAssessmentTargetsInput struct {
	_ struct{} `type:"structure"`

	// The ARN(s) specifying the assessment target(s) that you want to describe.
	AssessmentTargetArns []*string `locationName:"assessmentTargetArns" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s DescribeAssessmentTargetsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAssessmentTargetsInput) GoString() string {
	return s.String()
}

type DescribeAssessmentTargetsOutput struct {
	_ struct{} `type:"structure"`

	// Information about the assessment target(s).
	AssessmentTargets []*AssessmentTarget `locationName:"assessmentTargets" type:"list" required:"true"`

	// Assessment target details that cannot be described. An error code is provided
	// for each failed item.
	FailedItems map[string]*FailedItemDetails `locationName:"failedItems" type:"map" required:"true"`
}

// String returns the string representation
func (s DescribeAssessmentTargetsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAssessmentTargetsOutput) GoString() string {
	return s.String()
}

type DescribeAssessmentTemplatesInput struct {
	_ struct{} `type:"structure"`

	// The ARN(s) specifying the assessment template(s) that you want to describe.
	AssessmentTemplateArns []*string `locationName:"assessmentTemplateArns" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s DescribeAssessmentTemplatesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAssessmentTemplatesInput) GoString() string {
	return s.String()
}

type DescribeAssessmentTemplatesOutput struct {
	_ struct{} `type:"structure"`

	// Information about the assessment template(s).
	AssessmentTemplates []*AssessmentTemplate `locationName:"assessmentTemplates" type:"list" required:"true"`

	// Assessment template details that cannot be described. An error code is provided
	// for each failed item.
	FailedItems map[string]*FailedItemDetails `locationName:"failedItems" type:"map" required:"true"`
}

// String returns the string representation
func (s DescribeAssessmentTemplatesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAssessmentTemplatesOutput) GoString() string {
	return s.String()
}

type DescribeCrossAccountAccessRoleInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DescribeCrossAccountAccessRoleInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCrossAccountAccessRoleInput) GoString() string {
	return s.String()
}

type DescribeCrossAccountAccessRoleOutput struct {
	_ struct{} `type:"structure"`

	// The date when the cross account access role was registered.
	RegisteredAt *time.Time `locationName:"registeredAt" type:"timestamp" timestampFormat:"unix" required:"true"`

	// The ARN specifying the IAM role that Inspector uses to access your AWS account.
	RoleArn *string `locationName:"roleArn" min:"1" type:"string" required:"true"`

	// A Boolean value that specifies whether the IAM role has the necessary policies
	// attached to enable Inspector to access your AWS account.
	Valid *bool `locationName:"valid" type:"boolean" required:"true"`
}

// String returns the string representation
func (s DescribeCrossAccountAccessRoleOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCrossAccountAccessRoleOutput) GoString() string {
	return s.String()
}

type DescribeFindingsInput struct {
	_ struct{} `type:"structure"`

	// The ARN(s) specifying the finding(s) that you want to describe.
	FindingArns []*string `locationName:"findingArns" min:"1" type:"list" required:"true"`

	// The locale that you want to translate a finding description(s), recommendation(s),
	// and the short description(s) that identify the finding(s) into.
	Locale *string `locationName:"locale" type:"string" enum:"Locale"`
}

// String returns the string representation
func (s DescribeFindingsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeFindingsInput) GoString() string {
	return s.String()
}

type DescribeFindingsOutput struct {
	_ struct{} `type:"structure"`

	// Finding details that cannot be described. An error code is provided for each
	// failed item.
	FailedItems map[string]*FailedItemDetails `locationName:"failedItems" type:"map" required:"true"`

	// Information about the finding(s).
	Findings []*Finding `locationName:"findings" type:"list" required:"true"`
}

// String returns the string representation
func (s DescribeFindingsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeFindingsOutput) GoString() string {
	return s.String()
}

type DescribeResourceGroupsInput struct {
	_ struct{} `type:"structure"`

	// The ARN(s) specifying the resource group(s) that you want to describe.
	ResourceGroupArns []*string `locationName:"resourceGroupArns" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s DescribeResourceGroupsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeResourceGroupsInput) GoString() string {
	return s.String()
}

type DescribeResourceGroupsOutput struct {
	_ struct{} `type:"structure"`

	// Resource group details that cannot be described. An error code is provided
	// for each failed item.
	FailedItems map[string]*FailedItemDetails `locationName:"failedItems" type:"map" required:"true"`

	// Information about the resource group(s).
	ResourceGroups []*ResourceGroup `locationName:"resourceGroups" type:"list" required:"true"`
}

// String returns the string representation
func (s DescribeResourceGroupsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeResourceGroupsOutput) GoString() string {
	return s.String()
}

type DescribeRulesPackagesInput struct {
	_ struct{} `type:"structure"`

	// The locale that you want to translate a rules package description(s) into.
	Locale *string `locationName:"locale" type:"string" enum:"Locale"`

	// The ARN(s) specifying the rules package(s) that you want to describe.
	RulesPackageArns []*string `locationName:"rulesPackageArns" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s DescribeRulesPackagesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeRulesPackagesInput) GoString() string {
	return s.String()
}

type DescribeRulesPackagesOutput struct {
	_ struct{} `type:"structure"`

	// Rules package details that cannot be described. An error code is provided
	// for each failed item.
	FailedItems map[string]*FailedItemDetails `locationName:"failedItems" type:"map" required:"true"`

	// Information about the rules package(s).
	RulesPackages []*RulesPackage `locationName:"rulesPackages" type:"list" required:"true"`
}

// String returns the string representation
func (s DescribeRulesPackagesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeRulesPackagesOutput) GoString() string {
	return s.String()
}

// This data type is used in the AssessmentTemplateFilter data type.
type DurationRange struct {
	_ struct{} `type:"structure"`

	// The maximum value of the duration range. Must be less than or equal to 604800
	// seconds (1 week).
	MaxSeconds *int64 `locationName:"maxSeconds" min:"180" type:"integer"`

	// The minimum value of the duration range. Must be greater than zero.
	MinSeconds *int64 `locationName:"minSeconds" min:"180" type:"integer"`
}

// String returns the string representation
func (s DurationRange) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DurationRange) GoString() string {
	return s.String()
}

// This data type is used in the Subscription data type.
type EventSubscription struct {
	_ struct{} `type:"structure"`

	// The event for which Amazon Simple Notification Service (SNS) notifications
	// are sent.
	Event *string `locationName:"event" type:"string" required:"true" enum:"Event"`

	// The time at which the SubscribeToEvent API is called.
	SubscribedAt *time.Time `locationName:"subscribedAt" type:"timestamp" timestampFormat:"unix" required:"true"`
}

// String returns the string representation
func (s EventSubscription) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s EventSubscription) GoString() string {
	return s.String()
}

// Includes details about the failed items.
type FailedItemDetails struct {
	_ struct{} `type:"structure"`

	// The status code of a failed item.
	FailureCode *string `locationName:"failureCode" type:"string" required:"true" enum:"FailedItemErrorCode"`

	// Indicates whether you can immediately retry a request for this item for a
	// specified resource.
	Retryable *bool `locationName:"retryable" type:"boolean" required:"true"`
}

// String returns the string representation
func (s FailedItemDetails) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s FailedItemDetails) GoString() string {
	return s.String()
}

// Contains information about an Inspector finding. This data type is used as
// the response element in the DescribeFindings action.
type Finding struct {
	_ struct{} `type:"structure"`

	// The ARN specifying the finding.
	Arn *string `locationName:"arn" min:"1" type:"string" required:"true"`

	// A collection of attributes of the host from which the finding is generated.
	AssetAttributes *AssetAttributes `locationName:"assetAttributes" type:"structure"`

	// The type of the host from which the finding is generated.
	AssetType *string `locationName:"assetType" type:"string" enum:"AssetType"`

	// The system-defined attributes for the finding.
	Attributes []*Attribute `locationName:"attributes" type:"list" required:"true"`

	// This data element is currently not used.
	Confidence *int64 `locationName:"confidence" type:"integer"`

	// The time when the finding was generated.
	CreatedAt *time.Time `locationName:"createdAt" type:"timestamp" timestampFormat:"unix" required:"true"`

	// The description of the finding.
	Description *string `locationName:"description" type:"string"`

	// The ID of the finding.
	Id *string `locationName:"id" type:"string"`

	// This data element is currently not used.
	IndicatorOfCompromise *bool `locationName:"indicatorOfCompromise" type:"boolean"`

	// The numeric value of the finding severity.
	NumericSeverity *float64 `locationName:"numericSeverity" type:"double"`

	// The recommendation for the finding.
	Recommendation *string `locationName:"recommendation" type:"string"`

	// The schema version of this data type.
	SchemaVersion *int64 `locationName:"schemaVersion" type:"integer"`

	// The data element is set to "Inspector".
	Service *string `locationName:"service" type:"string"`

	// This data type is used in the Finding data type.
	ServiceAttributes *ServiceAttributes `locationName:"serviceAttributes" type:"structure"`

	// The finding severity. Values can be set to High, Medium, Low, and Informational.
	Severity *string `locationName:"severity" type:"string" enum:"Severity"`

	// The name of the finding.
	Title *string `locationName:"title" type:"string"`

	// The time when AddAttributesToFindings API is called.
	UpdatedAt *time.Time `locationName:"updatedAt" type:"timestamp" timestampFormat:"unix" required:"true"`

	// The user-defined attributes that are assigned to the finding.
	UserAttributes []*Attribute `locationName:"userAttributes" type:"list" required:"true"`
}

// String returns the string representation
func (s Finding) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Finding) GoString() string {
	return s.String()
}

// This data type is used as a request parameter in the ListFindings action.
type FindingFilter struct {
	_ struct{} `type:"structure"`

	// For a record to match a filter, one of the values specified for this data
	// type property must be the exact match of the value of the agentId property
	// of the Finding data type.
	AgentIds []*string `locationName:"agentIds" type:"list"`

	// For a record to match a filter, the list of values specified for this data
	// type property must be contained in the list of values of the attributes property
	// of the Finding data type.
	Attributes []*Attribute `locationName:"attributes" type:"list"`

	// For a record to match a filter, one of the values specified for this data
	// type property must be the exact match of the value of the autoScalingGroup
	// property of the Finding data type.
	AutoScalingGroups []*string `locationName:"autoScalingGroups" type:"list"`

	// The time range during which the finding is generated.
	CreationTimeRange *TimestampRange `locationName:"creationTimeRange" type:"structure"`

	// For a record to match a filter, one of the values specified for this data
	// type property must be the exact match of the value of the ruleName property
	// of the Finding data type.
	RuleNames []*string `locationName:"ruleNames" type:"list"`

	// For a record to match a filter, one of the values specified for this data
	// type property must be the exact match of the value of the rulesPackageArn
	// property of the Finding data type.
	RulesPackageArns []*string `locationName:"rulesPackageArns" type:"list"`

	// For a record to match a filter, one of the values specified for this data
	// type property must be the exact match of the value of the severity property
	// of the Finding data type.
	Severities []*string `locationName:"severities" type:"list"`

	// For a record to match a filter, the value specified for this data type property
	// must be contained in the list of values of the userAttributes property of
	// the Finding data type.
	UserAttributes []*Attribute `locationName:"userAttributes" type:"list"`
}

// String returns the string representation
func (s FindingFilter) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s FindingFilter) GoString() string {
	return s.String()
}

type GetTelemetryMetadataInput struct {
	_ struct{} `type:"structure"`

	// The ARN specifying the assessment run the telemetry of which you want to
	// obtain.
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s GetTelemetryMetadataInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTelemetryMetadataInput) GoString() string {
	return s.String()
}

type GetTelemetryMetadataOutput struct {
	_ struct{} `type:"structure"`

	// Telemetry details.
	TelemetryMetadata []*TelemetryMetadata `locationName:"telemetryMetadata" type:"list" required:"true"`
}

// String returns the string representation
func (s GetTelemetryMetadataOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTelemetryMetadataOutput) GoString() string {
	return s.String()
}

type ListAssessmentRunAgentsInput struct {
	_ struct{} `type:"structure"`

	// The ARN specifying the assessment run whose agents you want to list.
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string" required:"true"`

	// You can use this parameter to specify a subset of data to be included in
	// the action's response.
	//
	// For a record to match a filter, all specified filter attributes must match.
	// When multiple values are specified for a filter attribute, any of the values
	// can match.
	Filter *AgentFilter `locationName:"filter" type:"structure"`

	// You can use this parameter to indicate the maximum number of items you want
	// in the response. The default value is 10. The maximum value is 500.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// You can use this parameter when paginating results. Set the value of this
	// parameter to 'null' on your first call to the ListAssessmentRunAgents action.
	// Subsequent calls to the action fill nextToken in the request with the value
	// of NextToken from previous response to continue listing data.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListAssessmentRunAgentsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssessmentRunAgentsInput) GoString() string {
	return s.String()
}

type ListAssessmentRunAgentsOutput struct {
	_ struct{} `type:"structure"`

	// A list of ARNs specifying the agents returned by the action.
	AssessmentRunAgents []*AssessmentRunAgent `locationName:"assessmentRunAgents" type:"list" required:"true"`

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to 'null'.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListAssessmentRunAgentsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssessmentRunAgentsOutput) GoString() string {
	return s.String()
}

type ListAssessmentRunsInput struct {
	_ struct{} `type:"structure"`

	// ARN(s) specifying the assessment template(s) whose assessment run(s) you
	// want to list.
	AssessmentTemplateArns []*string `locationName:"assessmentTemplateArns" type:"list"`

	// You can use this parameter to specify a subset of data to be included in
	// the action's response.
	//
	// For a record to match a filter, all specified filter attributes must match.
	// When multiple values are specified for a filter attribute, any of the values
	// can match.
	Filter *AssessmentRunFilter `locationName:"filter" type:"structure"`

	// You can use this parameter to indicate the maximum number of items you want
	// in the response. The default value is 10. The maximum value is 500.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// You can use this parameter when paginating results. Set the value of this
	// parameter to 'null' on your first call to the ListAssessmentRuns action.
	// Subsequent calls to the action fill nextToken in the request with the value
	// of NextToken from previous response to continue listing data.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListAssessmentRunsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssessmentRunsInput) GoString() string {
	return s.String()
}

type ListAssessmentRunsOutput struct {
	_ struct{} `type:"structure"`

	// A list of ARNs specifying the assessment run(s) returned by the action.
	AssessmentRunArns []*string `locationName:"assessmentRunArns" type:"list" required:"true"`

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to 'null'.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListAssessmentRunsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssessmentRunsOutput) GoString() string {
	return s.String()
}

type ListAssessmentTargetsInput struct {
	_ struct{} `type:"structure"`

	// You can use this parameter to specify a subset of data to be included in
	// the action's response.
	//
	// For a record to match a filter, all specified filter attributes must match.
	// When multiple values are specified for a filter attribute, any of the values
	// can match.
	Filter *AssessmentTargetFilter `locationName:"filter" type:"structure"`

	// You can use this parameter to indicate the maximum number of items you want
	// in the response. The default value is 10. The maximum value is 500.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// You can use this parameter when paginating results. Set the value of this
	// parameter to 'null' on your first call to the ListAssessmentTargets action.
	// Subsequent calls to the action fill nextToken in the request with the value
	// of NextToken from previous response to continue listing data.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListAssessmentTargetsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssessmentTargetsInput) GoString() string {
	return s.String()
}

type ListAssessmentTargetsOutput struct {
	_ struct{} `type:"structure"`

	// A list of ARNs specifying the assessment targets returned by the action.
	AssessmentTargetArns []*string `locationName:"assessmentTargetArns" type:"list" required:"true"`

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to 'null'.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListAssessmentTargetsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssessmentTargetsOutput) GoString() string {
	return s.String()
}

type ListAssessmentTemplatesInput struct {
	_ struct{} `type:"structure"`

	// A list of ARN(s) specifying the assessment target(s) whose assessment template(s)
	// you want to list.
	AssessmentTargetArns []*string `locationName:"assessmentTargetArns" type:"list"`

	// You can use this parameter to specify a subset of data to be included in
	// the action's response.
	//
	// For a record to match a filter, all specified filter attributes must match.
	// When multiple values are specified for a filter attribute, any of the values
	// can match.
	Filter *AssessmentTemplateFilter `locationName:"filter" type:"structure"`

	// You can use this parameter to indicate the maximum number of items you want
	// in the response. The default value is 10. The maximum value is 500.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// You can use this parameter when paginating results. Set the value of this
	// parameter to 'null' on your first call to the ListAssessmentTemplates action.
	// Subsequent calls to the action fill nextToken in the request with the value
	// of NextToken from previous response to continue listing data.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListAssessmentTemplatesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssessmentTemplatesInput) GoString() string {
	return s.String()
}

type ListAssessmentTemplatesOutput struct {
	_ struct{} `type:"structure"`

	// A list of ARN(s) specifying the assessment template(s) returned by the action.
	AssessmentTemplateArns []*string `locationName:"assessmentTemplateArns" type:"list" required:"true"`

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to 'null'.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListAssessmentTemplatesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAssessmentTemplatesOutput) GoString() string {
	return s.String()
}

type ListEventSubscriptionsInput struct {
	_ struct{} `type:"structure"`

	// You can use this parameter to indicate the maximum number of items you want
	// in the response. The default value is 10. The maximum value is 500.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// You can use this parameter when paginating results. Set the value of this
	// parameter to 'null' on your first call to the ListEventSubscriptions action.
	// Subsequent calls to the action fill nextToken in the request with the value
	// of NextToken from previous response to continue listing data.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`

	// The ARN of the assessment template for which you want to list the existing
	// event subscriptions.
	ResourceArn *string `locationName:"resourceArn" min:"1" type:"string"`
}

// String returns the string representation
func (s ListEventSubscriptionsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListEventSubscriptionsInput) GoString() string {
	return s.String()
}

type ListEventSubscriptionsOutput struct {
	_ struct{} `type:"structure"`

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to 'null'.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`

	// Details of the returned event subscriptions.
	Subscriptions []*Subscription `locationName:"subscriptions" type:"list" required:"true"`
}

// String returns the string representation
func (s ListEventSubscriptionsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListEventSubscriptionsOutput) GoString() string {
	return s.String()
}

type ListFindingsInput struct {
	_ struct{} `type:"structure"`

	// The ARNs of the assessment run(s) that generate the findings that you want
	// to list.
	AssessmentRunArns []*string `locationName:"assessmentRunArns" type:"list"`

	// You can use this parameter to specify a subset of data to be included in
	// the action's response.
	//
	// For a record to match a filter, all specified filter attributes must match.
	// When multiple values are specified for a filter attribute, any of the values
	// can match.
	Filter *FindingFilter `locationName:"filter" type:"structure"`

	// You can use this parameter to indicate the maximum number of items you want
	// in the response. The default value is 10. The maximum value is 500.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// You can use this parameter when paginating results. Set the value of this
	// parameter to 'null' on your first call to the ListFindings action. Subsequent
	// calls to the action fill nextToken in the request with the value of NextToken
	// from previous response to continue listing data.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListFindingsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListFindingsInput) GoString() string {
	return s.String()
}

type ListFindingsOutput struct {
	_ struct{} `type:"structure"`

	// A list of ARN(s) specifying the finding(s) returned by the action.
	FindingArns []*string `locationName:"findingArns" type:"list" required:"true"`

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to 'null'.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListFindingsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListFindingsOutput) GoString() string {
	return s.String()
}

type ListRulesPackagesInput struct {
	_ struct{} `type:"structure"`

	// You can use this parameter to indicate the maximum number of items you want
	// in the response. The default value is 10. The maximum value is 500.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// You can use this parameter when paginating results. Set the value of this
	// parameter to 'null' on your first call to the ListRulesPackages action. Subsequent
	// calls to the action fill nextToken in the request with the value of NextToken
	// from previous response to continue listing data.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s ListRulesPackagesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRulesPackagesInput) GoString() string {
	return s.String()
}

type ListRulesPackagesOutput struct {
	_ struct{} `type:"structure"`

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to 'null'.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`

	// The list of ARNs specifying the rules packages returned by the action.
	RulesPackageArns []*string `locationName:"rulesPackageArns" type:"list" required:"true"`
}

// String returns the string representation
func (s ListRulesPackagesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRulesPackagesOutput) GoString() string {
	return s.String()
}

type ListTagsForResourceInput struct {
	_ struct{} `type:"structure"`

	// The ARN specifying the assessment template whose tags you want to list.
	ResourceArn *string `locationName:"resourceArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s ListTagsForResourceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsForResourceInput) GoString() string {
	return s.String()
}

type ListTagsForResourceOutput struct {
	_ struct{} `type:"structure"`

	// A collection of key and value pairs.
	Tags []*Tag `locationName:"tags" type:"list" required:"true"`
}

// String returns the string representation
func (s ListTagsForResourceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsForResourceOutput) GoString() string {
	return s.String()
}

type PreviewAgentsInput struct {
	_ struct{} `type:"structure"`

	// You can use this parameter to indicate the maximum number of items you want
	// in the response. The default value is 10. The maximum value is 500.
	MaxResults *int64 `locationName:"maxResults" type:"integer"`

	// You can use this parameter when paginating results. Set the value of this
	// parameter to 'null' on your first call to the PreviewAgents action. Subsequent
	// calls to the action fill nextToken in the request with the value of NextToken
	// from previous response to continue listing data.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`

	// The ARN of the assessment target whose agents you want to preview.
	PreviewAgentsArn *string `locationName:"previewAgentsArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s PreviewAgentsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PreviewAgentsInput) GoString() string {
	return s.String()
}

type PreviewAgentsOutput struct {
	_ struct{} `type:"structure"`

	// The resulting list of agents.
	AgentPreviews []*AgentPreview `locationName:"agentPreviews" type:"list" required:"true"`

	// When a response is generated, if there is more data to be listed, this parameter
	// is present in the response and contains the value to use for the nextToken
	// parameter in a subsequent pagination request. If there is no more data to
	// be listed, this parameter is set to 'null'.
	NextToken *string `locationName:"nextToken" min:"1" type:"string"`
}

// String returns the string representation
func (s PreviewAgentsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PreviewAgentsOutput) GoString() string {
	return s.String()
}

type RegisterCrossAccountAccessRoleInput struct {
	_ struct{} `type:"structure"`

	// The ARN of the IAM role that Inspector uses to list your EC2 instances during
	// the assessment run or when you call the PreviewAgents action.
	RoleArn *string `locationName:"roleArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s RegisterCrossAccountAccessRoleInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RegisterCrossAccountAccessRoleInput) GoString() string {
	return s.String()
}

type RegisterCrossAccountAccessRoleOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s RegisterCrossAccountAccessRoleOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RegisterCrossAccountAccessRoleOutput) GoString() string {
	return s.String()
}

type RemoveAttributesFromFindingsInput struct {
	_ struct{} `type:"structure"`

	// The array of attribute keys that you want to remove from specified findings.
	AttributeKeys []*string `locationName:"attributeKeys" type:"list" required:"true"`

	// The ARNs specifying the findings that you want to remove attributes from.
	FindingArns []*string `locationName:"findingArns" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s RemoveAttributesFromFindingsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RemoveAttributesFromFindingsInput) GoString() string {
	return s.String()
}

type RemoveAttributesFromFindingsOutput struct {
	_ struct{} `type:"structure"`

	// Attributes details that cannot be described. An error code is provided for
	// each failed item.
	FailedItems map[string]*FailedItemDetails `locationName:"failedItems" type:"map" required:"true"`
}

// String returns the string representation
func (s RemoveAttributesFromFindingsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RemoveAttributesFromFindingsOutput) GoString() string {
	return s.String()
}

// Contains information about a resource group. The resource group defines a
// set of tags that, when queried, identify the AWS resources that comprise
// the assessment target. This data type is used as the response element in
// the DescribeResourceGroups action.
type ResourceGroup struct {
	_ struct{} `type:"structure"`

	// The ARN of the resource group.
	Arn *string `locationName:"arn" min:"1" type:"string" required:"true"`

	// The time at which resource group is created.
	CreatedAt *time.Time `locationName:"createdAt" type:"timestamp" timestampFormat:"unix" required:"true"`

	// The tags (key and value pairs) of the resource group. This data type property
	// is used in the CreateResourceGroup action.
	Tags []*ResourceGroupTag `locationName:"tags" min:"1" type:"list" required:"true"`
}

// String returns the string representation
func (s ResourceGroup) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceGroup) GoString() string {
	return s.String()
}

// This data type is used as one of the elements of the ResourceGroup data type.
type ResourceGroupTag struct {
	_ struct{} `type:"structure"`

	// A tag key.
	Key *string `locationName:"key" min:"1" type:"string" required:"true"`

	// The value assigned to a tag key.
	Value *string `locationName:"value" min:"1" type:"string"`
}

// String returns the string representation
func (s ResourceGroupTag) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceGroupTag) GoString() string {
	return s.String()
}

// Contains information about an Inspector rules package. This data type is
// used as the response element in the DescribeRulesPackages action.
type RulesPackage struct {
	_ struct{} `type:"structure"`

	// The ARN of the rules package.
	Arn *string `locationName:"arn" min:"1" type:"string" required:"true"`

	// The description of the rules package.
	Description *string `locationName:"description" type:"string"`

	// The name of the rules package.
	Name *string `locationName:"name" type:"string" required:"true"`

	// The provider of the rules package.
	Provider *string `locationName:"provider" type:"string" required:"true"`

	// The version id of the rules package.
	Version *string `locationName:"version" type:"string" required:"true"`
}

// String returns the string representation
func (s RulesPackage) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s RulesPackage) GoString() string {
	return s.String()
}

// This data type is used in the Finding data type.
type ServiceAttributes struct {
	_ struct{} `type:"structure"`

	// The ARN of the assessment run during which the fidning is generated.
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string"`

	// The ARN of the rules package used to generate the finding.
	RulesPackageArn *string `locationName:"rulesPackageArn" min:"1" type:"string"`

	// The schema version of this data type.
	SchemaVersion *int64 `locationName:"schemaVersion" type:"integer" required:"true"`
}

// String returns the string representation
func (s ServiceAttributes) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ServiceAttributes) GoString() string {
	return s.String()
}

type SetTagsForResourceInput struct {
	_ struct{} `type:"structure"`

	// The ARN of the assessment template that you want to set tags to.
	ResourceArn *string `locationName:"resourceArn" min:"1" type:"string" required:"true"`

	// A collection of key and value pairs that you want to set to the assessment
	// template.
	Tags []*Tag `locationName:"tags" type:"list"`
}

// String returns the string representation
func (s SetTagsForResourceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SetTagsForResourceInput) GoString() string {
	return s.String()
}

type SetTagsForResourceOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s SetTagsForResourceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SetTagsForResourceOutput) GoString() string {
	return s.String()
}

type StartAssessmentRunInput struct {
	_ struct{} `type:"structure"`

	// You can specify the name for the assessment run, or it is auto-generated
	// based on the assessment template name. Must be unique for the assessment
	// template.
	AssessmentRunName *string `locationName:"assessmentRunName" min:"1" type:"string"`

	// The assessment template ARN of the assessment run that you want to start.
	AssessmentTemplateArn *string `locationName:"assessmentTemplateArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s StartAssessmentRunInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StartAssessmentRunInput) GoString() string {
	return s.String()
}

type StartAssessmentRunOutput struct {
	_ struct{} `type:"structure"`

	// The ARN of the assessment run that has been started.
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s StartAssessmentRunOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StartAssessmentRunOutput) GoString() string {
	return s.String()
}

type StopAssessmentRunInput struct {
	_ struct{} `type:"structure"`

	// The ARN of the assessment run that you want to stop.
	AssessmentRunArn *string `locationName:"assessmentRunArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s StopAssessmentRunInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StopAssessmentRunInput) GoString() string {
	return s.String()
}

type StopAssessmentRunOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s StopAssessmentRunOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StopAssessmentRunOutput) GoString() string {
	return s.String()
}

type SubscribeToEventInput struct {
	_ struct{} `type:"structure"`

	// The event for which you want to receive SNS notifications.
	Event *string `locationName:"event" type:"string" required:"true" enum:"Event"`

	// The ARN of the assessment template used during the event for which you want
	// to recieve SNS notifications.
	ResourceArn *string `locationName:"resourceArn" min:"1" type:"string" required:"true"`

	// The ARN of the SNS topic to which the SNS notifications are sent.
	TopicArn *string `locationName:"topicArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s SubscribeToEventInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SubscribeToEventInput) GoString() string {
	return s.String()
}

type SubscribeToEventOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s SubscribeToEventOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SubscribeToEventOutput) GoString() string {
	return s.String()
}

// This data type is used as a response element in the ListEventSubscriptions
// action.
type Subscription struct {
	_ struct{} `type:"structure"`

	// The list of existing event subscriptions.
	EventSubscriptions []*EventSubscription `locationName:"eventSubscriptions" min:"1" type:"list" required:"true"`

	// The ARN of the assessment template that is used during the event for which
	// the SNS notification is sent.
	ResourceArn *string `locationName:"resourceArn" min:"1" type:"string" required:"true"`

	// The ARN of the Amazon Simple Notification Service (SNS) topic to which the
	// SNS notifications are sent.
	TopicArn *string `locationName:"topicArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s Subscription) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Subscription) GoString() string {
	return s.String()
}

// A key and value pair. This data type is used as a request parameter in the
// SetTagsForResource action and a response element in the ListTagsForResource
// action.
type Tag struct {
	_ struct{} `type:"structure"`

	// A tag key.
	Key *string `locationName:"key" min:"1" type:"string" required:"true"`

	// A value assigned to a tag key.
	Value *string `locationName:"value" min:"1" type:"string"`
}

// String returns the string representation
func (s Tag) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Tag) GoString() string {
	return s.String()
}

// The metadata about the Inspector application data metrics collected by the
// agent. This data type is used as the response element in the GetTelemetryMetadata
// action.
type TelemetryMetadata struct {
	_ struct{} `type:"structure"`

	// The count of messages that the agent sends to the Inspector service.
	Count *int64 `locationName:"count" type:"long" required:"true"`

	// The data size of messages that the agent sends to the Inspector service.
	DataSize *int64 `locationName:"dataSize" type:"long"`

	// A specific type of behavioral data that is collected by the agent.
	MessageType *string `locationName:"messageType" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s TelemetryMetadata) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s TelemetryMetadata) GoString() string {
	return s.String()
}

// This data type is used in the AssessmentRunFilter data type.
type TimestampRange struct {
	_ struct{} `type:"structure"`

	// The minimum value of the timestamp range.
	BeginDate *time.Time `locationName:"beginDate" type:"timestamp" timestampFormat:"unix"`

	// The maximum value of the timestamp range.
	EndDate *time.Time `locationName:"endDate" type:"timestamp" timestampFormat:"unix"`
}

// String returns the string representation
func (s TimestampRange) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s TimestampRange) GoString() string {
	return s.String()
}

type UnsubscribeFromEventInput struct {
	_ struct{} `type:"structure"`

	// The event for which you want to stop receiving SNS notifications.
	Event *string `locationName:"event" type:"string" required:"true" enum:"Event"`

	// The ARN of the assessment template used during the event for which you want
	// to stop recieving SNS notifications.
	ResourceArn *string `locationName:"resourceArn" min:"1" type:"string" required:"true"`

	// The ARN of the SNS topic to which SNS notifications are sent.
	TopicArn *string `locationName:"topicArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s UnsubscribeFromEventInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UnsubscribeFromEventInput) GoString() string {
	return s.String()
}

type UnsubscribeFromEventOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s UnsubscribeFromEventOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UnsubscribeFromEventOutput) GoString() string {
	return s.String()
}

type UpdateAssessmentTargetInput struct {
	_ struct{} `type:"structure"`

	// The ARN of the assessment target that you want to update.
	AssessmentTargetArn *string `locationName:"assessmentTargetArn" min:"1" type:"string" required:"true"`

	// The name of the assessment target that you want to update.
	AssessmentTargetName *string `locationName:"assessmentTargetName" min:"1" type:"string" required:"true"`

	// The resource group ARN that is used to specify the new resource group to
	// associate with the assessment target.
	ResourceGroupArn *string `locationName:"resourceGroupArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s UpdateAssessmentTargetInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAssessmentTargetInput) GoString() string {
	return s.String()
}

type UpdateAssessmentTargetOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s UpdateAssessmentTargetOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAssessmentTargetOutput) GoString() string {
	return s.String()
}

const (
	// @enum AccessDeniedErrorCode
	AccessDeniedErrorCodeAccessDeniedToAssessmentTarget = "ACCESS_DENIED_TO_ASSESSMENT_TARGET"
	// @enum AccessDeniedErrorCode
	AccessDeniedErrorCodeAccessDeniedToAssessmentTemplate = "ACCESS_DENIED_TO_ASSESSMENT_TEMPLATE"
	// @enum AccessDeniedErrorCode
	AccessDeniedErrorCodeAccessDeniedToAssessmentRun = "ACCESS_DENIED_TO_ASSESSMENT_RUN"
	// @enum AccessDeniedErrorCode
	AccessDeniedErrorCodeAccessDeniedToFinding = "ACCESS_DENIED_TO_FINDING"
	// @enum AccessDeniedErrorCode
	AccessDeniedErrorCodeAccessDeniedToResourceGroup = "ACCESS_DENIED_TO_RESOURCE_GROUP"
	// @enum AccessDeniedErrorCode
	AccessDeniedErrorCodeAccessDeniedToRulesPackage = "ACCESS_DENIED_TO_RULES_PACKAGE"
	// @enum AccessDeniedErrorCode
	AccessDeniedErrorCodeAccessDeniedToSnsTopic = "ACCESS_DENIED_TO_SNS_TOPIC"
	// @enum AccessDeniedErrorCode
	AccessDeniedErrorCodeAccessDeniedToIamRole = "ACCESS_DENIED_TO_IAM_ROLE"
)

const (
	// @enum AgentHealth
	AgentHealthHealthy = "HEALTHY"
	// @enum AgentHealth
	AgentHealthUnhealthy = "UNHEALTHY"
)

const (
	// @enum AgentHealthCode
	AgentHealthCodeIdle = "IDLE"
	// @enum AgentHealthCode
	AgentHealthCodeRunning = "RUNNING"
	// @enum AgentHealthCode
	AgentHealthCodeShutdown = "SHUTDOWN"
	// @enum AgentHealthCode
	AgentHealthCodeUnhealthy = "UNHEALTHY"
	// @enum AgentHealthCode
	AgentHealthCodeThrottled = "THROTTLED"
	// @enum AgentHealthCode
	AgentHealthCodeUnknown = "UNKNOWN"
)

const (
	// @enum AssessmentRunNotificationSnsStatusCode
	AssessmentRunNotificationSnsStatusCodeSuccess = "SUCCESS"
	// @enum AssessmentRunNotificationSnsStatusCode
	AssessmentRunNotificationSnsStatusCodeTopicDoesNotExist = "TOPIC_DOES_NOT_EXIST"
	// @enum AssessmentRunNotificationSnsStatusCode
	AssessmentRunNotificationSnsStatusCodeAccessDenied = "ACCESS_DENIED"
	// @enum AssessmentRunNotificationSnsStatusCode
	AssessmentRunNotificationSnsStatusCodeInternalError = "INTERNAL_ERROR"
)

const (
	// @enum AssessmentRunState
	AssessmentRunStateCreated = "CREATED"
	// @enum AssessmentRunState
	AssessmentRunStateStartDataCollectionPending = "START_DATA_COLLECTION_PENDING"
	// @enum AssessmentRunState
	AssessmentRunStateStartDataCollectionInProgress = "START_DATA_COLLECTION_IN_PROGRESS"
	// @enum AssessmentRunState
	AssessmentRunStateCollectingData = "COLLECTING_DATA"
	// @enum AssessmentRunState
	AssessmentRunStateStopDataCollectionPending = "STOP_DATA_COLLECTION_PENDING"
	// @enum AssessmentRunState
	AssessmentRunStateDataCollected = "DATA_COLLECTED"
	// @enum AssessmentRunState
	AssessmentRunStateEvaluatingRules = "EVALUATING_RULES"
	// @enum AssessmentRunState
	AssessmentRunStateFailed = "FAILED"
	// @enum AssessmentRunState
	AssessmentRunStateCompleted = "COMPLETED"
	// @enum AssessmentRunState
	AssessmentRunStateCompletedWithErrors = "COMPLETED_WITH_ERRORS"
)

const (
	// @enum AssetType
	AssetTypeEc2Instance = "ec2-instance"
)

const (
	// @enum Event
	EventAssessmentRunStarted = "ASSESSMENT_RUN_STARTED"
	// @enum Event
	EventAssessmentRunCompleted = "ASSESSMENT_RUN_COMPLETED"
	// @enum Event
	EventAssessmentRunStateChanged = "ASSESSMENT_RUN_STATE_CHANGED"
	// @enum Event
	EventFindingReported = "FINDING_REPORTED"
	// @enum Event
	EventOther = "OTHER"
)

const (
	// @enum FailedItemErrorCode
	FailedItemErrorCodeInvalidArn = "INVALID_ARN"
	// @enum FailedItemErrorCode
	FailedItemErrorCodeDuplicateArn = "DUPLICATE_ARN"
	// @enum FailedItemErrorCode
	FailedItemErrorCodeItemDoesNotExist = "ITEM_DOES_NOT_EXIST"
	// @enum FailedItemErrorCode
	FailedItemErrorCodeAccessDenied = "ACCESS_DENIED"
	// @enum FailedItemErrorCode
	FailedItemErrorCodeLimitExceeded = "LIMIT_EXCEEDED"
	// @enum FailedItemErrorCode
	FailedItemErrorCodeInternalError = "INTERNAL_ERROR"
)

const (
	// @enum InvalidCrossAccountRoleErrorCode
	InvalidCrossAccountRoleErrorCodeRoleDoesNotExistOrInvalidTrustRelationship = "ROLE_DOES_NOT_EXIST_OR_INVALID_TRUST_RELATIONSHIP"
	// @enum InvalidCrossAccountRoleErrorCode
	InvalidCrossAccountRoleErrorCodeRoleDoesNotHaveCorrectPolicy = "ROLE_DOES_NOT_HAVE_CORRECT_POLICY"
)

const (
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAssessmentTargetArn = "INVALID_ASSESSMENT_TARGET_ARN"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAssessmentTemplateArn = "INVALID_ASSESSMENT_TEMPLATE_ARN"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAssessmentRunArn = "INVALID_ASSESSMENT_RUN_ARN"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidFindingArn = "INVALID_FINDING_ARN"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidResourceGroupArn = "INVALID_RESOURCE_GROUP_ARN"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidRulesPackageArn = "INVALID_RULES_PACKAGE_ARN"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidResourceArn = "INVALID_RESOURCE_ARN"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidSnsTopicArn = "INVALID_SNS_TOPIC_ARN"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidIamRoleArn = "INVALID_IAM_ROLE_ARN"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAssessmentTargetName = "INVALID_ASSESSMENT_TARGET_NAME"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAssessmentTargetNamePattern = "INVALID_ASSESSMENT_TARGET_NAME_PATTERN"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAssessmentTemplateName = "INVALID_ASSESSMENT_TEMPLATE_NAME"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAssessmentTemplateNamePattern = "INVALID_ASSESSMENT_TEMPLATE_NAME_PATTERN"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAssessmentTemplateDuration = "INVALID_ASSESSMENT_TEMPLATE_DURATION"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAssessmentTemplateDurationRange = "INVALID_ASSESSMENT_TEMPLATE_DURATION_RANGE"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAssessmentRunDurationRange = "INVALID_ASSESSMENT_RUN_DURATION_RANGE"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAssessmentRunStartTimeRange = "INVALID_ASSESSMENT_RUN_START_TIME_RANGE"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAssessmentRunCompletionTimeRange = "INVALID_ASSESSMENT_RUN_COMPLETION_TIME_RANGE"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAssessmentRunStateChangeTimeRange = "INVALID_ASSESSMENT_RUN_STATE_CHANGE_TIME_RANGE"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAssessmentRunState = "INVALID_ASSESSMENT_RUN_STATE"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidTag = "INVALID_TAG"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidTagKey = "INVALID_TAG_KEY"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidTagValue = "INVALID_TAG_VALUE"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidResourceGroupTagKey = "INVALID_RESOURCE_GROUP_TAG_KEY"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidResourceGroupTagValue = "INVALID_RESOURCE_GROUP_TAG_VALUE"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAttribute = "INVALID_ATTRIBUTE"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidUserAttribute = "INVALID_USER_ATTRIBUTE"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidUserAttributeKey = "INVALID_USER_ATTRIBUTE_KEY"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidUserAttributeValue = "INVALID_USER_ATTRIBUTE_VALUE"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidPaginationToken = "INVALID_PAGINATION_TOKEN"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidMaxResults = "INVALID_MAX_RESULTS"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAgentId = "INVALID_AGENT_ID"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidAutoScalingGroup = "INVALID_AUTO_SCALING_GROUP"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidRuleName = "INVALID_RULE_NAME"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidSeverity = "INVALID_SEVERITY"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidLocale = "INVALID_LOCALE"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidEvent = "INVALID_EVENT"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeAssessmentTargetNameAlreadyTaken = "ASSESSMENT_TARGET_NAME_ALREADY_TAKEN"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeAssessmentTemplateNameAlreadyTaken = "ASSESSMENT_TEMPLATE_NAME_ALREADY_TAKEN"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidNumberOfAssessmentTargetArns = "INVALID_NUMBER_OF_ASSESSMENT_TARGET_ARNS"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidNumberOfAssessmentTemplateArns = "INVALID_NUMBER_OF_ASSESSMENT_TEMPLATE_ARNS"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidNumberOfAssessmentRunArns = "INVALID_NUMBER_OF_ASSESSMENT_RUN_ARNS"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidNumberOfFindingArns = "INVALID_NUMBER_OF_FINDING_ARNS"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidNumberOfResourceGroupArns = "INVALID_NUMBER_OF_RESOURCE_GROUP_ARNS"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidNumberOfRulesPackageArns = "INVALID_NUMBER_OF_RULES_PACKAGE_ARNS"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidNumberOfAssessmentRunStates = "INVALID_NUMBER_OF_ASSESSMENT_RUN_STATES"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidNumberOfTags = "INVALID_NUMBER_OF_TAGS"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidNumberOfResourceGroupTags = "INVALID_NUMBER_OF_RESOURCE_GROUP_TAGS"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidNumberOfAttributes = "INVALID_NUMBER_OF_ATTRIBUTES"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidNumberOfUserAttributes = "INVALID_NUMBER_OF_USER_ATTRIBUTES"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidNumberOfAgentIds = "INVALID_NUMBER_OF_AGENT_IDS"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidNumberOfAutoScalingGroups = "INVALID_NUMBER_OF_AUTO_SCALING_GROUPS"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidNumberOfRuleNames = "INVALID_NUMBER_OF_RULE_NAMES"
	// @enum InvalidInputErrorCode
	InvalidInputErrorCodeInvalidNumberOfSeverities = "INVALID_NUMBER_OF_SEVERITIES"
)

const (
	// @enum LimitExceededErrorCode
	LimitExceededErrorCodeAssessmentTargetLimitExceeded = "ASSESSMENT_TARGET_LIMIT_EXCEEDED"
	// @enum LimitExceededErrorCode
	LimitExceededErrorCodeAssessmentTemplateLimitExceeded = "ASSESSMENT_TEMPLATE_LIMIT_EXCEEDED"
	// @enum LimitExceededErrorCode
	LimitExceededErrorCodeAssessmentRunLimitExceeded = "ASSESSMENT_RUN_LIMIT_EXCEEDED"
	// @enum LimitExceededErrorCode
	LimitExceededErrorCodeResourceGroupLimitExceeded = "RESOURCE_GROUP_LIMIT_EXCEEDED"
	// @enum LimitExceededErrorCode
	LimitExceededErrorCodeEventSubscriptionLimitExceeded = "EVENT_SUBSCRIPTION_LIMIT_EXCEEDED"
)

const (
	// @enum Locale
	LocaleEnUs = "EN_US"
)

const (
	// @enum NoSuchEntityErrorCode
	NoSuchEntityErrorCodeAssessmentTargetDoesNotExist = "ASSESSMENT_TARGET_DOES_NOT_EXIST"
	// @enum NoSuchEntityErrorCode
	NoSuchEntityErrorCodeAssessmentTemplateDoesNotExist = "ASSESSMENT_TEMPLATE_DOES_NOT_EXIST"
	// @enum NoSuchEntityErrorCode
	NoSuchEntityErrorCodeAssessmentRunDoesNotExist = "ASSESSMENT_RUN_DOES_NOT_EXIST"
	// @enum NoSuchEntityErrorCode
	NoSuchEntityErrorCodeFindingDoesNotExist = "FINDING_DOES_NOT_EXIST"
	// @enum NoSuchEntityErrorCode
	NoSuchEntityErrorCodeResourceGroupDoesNotExist = "RESOURCE_GROUP_DOES_NOT_EXIST"
	// @enum NoSuchEntityErrorCode
	NoSuchEntityErrorCodeRulesPackageDoesNotExist = "RULES_PACKAGE_DOES_NOT_EXIST"
	// @enum NoSuchEntityErrorCode
	NoSuchEntityErrorCodeSnsTopicDoesNotExist = "SNS_TOPIC_DOES_NOT_EXIST"
	// @enum NoSuchEntityErrorCode
	NoSuchEntityErrorCodeIamRoleDoesNotExist = "IAM_ROLE_DOES_NOT_EXIST"
)

const (
	// @enum Severity
	SeverityLow = "Low"
	// @enum Severity
	SeverityMedium = "Medium"
	// @enum Severity
	SeverityHigh = "High"
	// @enum Severity
	SeverityInformational = "Informational"
	// @enum Severity
	SeverityUndefined = "Undefined"
)
