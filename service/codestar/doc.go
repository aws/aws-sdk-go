// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package codestar provides the client and types for making API
// requests to AWS CodeStar.
//
// This is the API reference for AWS CodeStar. This reference provides descriptions
// of the operations and data types for the AWS CodeStar API along with usage
// examples.
//
// You can use the AWS CodeStar API to work with:
//
// Projects and their resources, by calling the following:
//
//    * CreateProject, which creates an empty project in AWS CodeStar with no
//    resources.
//
//    * DeleteProject, which deletes a project in AWS CodeStar.
//
//    * DescribeProject, which lists the attributes of a project.
//
//    * ListProjects, which lists all AWS CodeStar projects associated with
//    your AWS account.
//
//    * ListResources, which lists the resources associated with an AWS CodeStar
//    project.
//
//    * UpdateProject, which updates the attributes of an AWS CodeStar project.
//
// Teams and team members, by calling the following:
//
//    * AssociateTeamMember, which adds an IAM user to the team for an AWS CodeStar
//    project.
//
//    * DisassociateTeamMember, which removes an IAM user from the team for
//    an AWS CodeStar project.
//
//    * ListTeamMembers, which lists all the IAM users in the team for an AWS
//    CodeStar project, including their roles and attributes.
//
// Users, by calling the following:
//
//    * CreateUserProfile, which creates a user profile that contains data associated
//    with the user across all AWS CodeStar projects.
//
//    * DeleteUserProfile, which deletes all user profile information across
//    all AWS CodeStar projects.
//
//    * DescribeUserProfile, which describes the profile of a user.
//
//    * ListUserProfiles, which lists all AWS CodeStar user profiles.
//
//    * UpdateUserProfile, which updates the profile for an AWS CodeStar user.
//
// See https://docs.aws.amazon.com/goto/WebAPI/codestar-2017-04-19 for more information on this service.
//
// See https://docs.aws.amazon.com/sdk-for-go/api/service/codestar/
// for information on using this package.
//
// Using the Client
//
// To use the CodeStar client for AWS CodeStar you will
// first need to create a new instance of it. Once the service's client is created
// you can begin to make API requests to the service using it. The client is safe
// to use across multiple goroutines concurrently.
//
// All clients require a Session. The Session provides the client with shared
// configuration such as region, endpoint, and credentials. A Session should be
// shared where possible to take advantage of configuration and credential caching.
// See the github.com/aws/aws-sdk-go/aws/session package for more information.
//
//   sess := session.Must(session.NewSession())
//
// Create a new instance of the service's client with a Session. Optional
// aws.Config values can also be provided as variadic arguments to the
// New function. This option allows you to provide service specific configuration.
//
//   svc := codestar.New(sess)
//
// Once the client is created you can make an API request to the service.
// Each API method takes a input parameter, and returns the service response
// and an error.
//
// The API method will document which error codes the service can be returned
// by the operation if the service models the API operation's errors. These errors
// will also be available as const strings prefixed with "ErrCode".
//
//   result, err := svc.AssociateTeamMember(params)
//   if err != nil {
//       // Cast err to awserr.Error to handle specific error codes.
//       aerr, ok := err.(awserr.Error)
//       if ok && aerr.Code() == <error code to check for> {
//           // Specific error code handling
//       }
//       return err
//   }
//
//   fmt.Println("AssociateTeamMember result:")
//   fmt.Println(result)
//
// Using the Client with Context
//
// The service's client also provides methods to make API requests with a Context
// value. This allows you to control the timeout, and cancellation of pending
// requests. These methods also take request Option as variadic parameter to apply
// additional configuration to the API request. See the github.com/aws/aws-sdk-go/aws/request
// package for more information.
//
//   ctx := context.Background()
//
//   result, err := svc.AssociateTeamMemberWithContext(ctx, params)
package codestar
