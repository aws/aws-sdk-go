package emr

// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

import (
	"github.com/awslabs/aws-sdk-go/aws"
	"time"
)

// AddInstanceGroupsRequest generates a request for the AddInstanceGroups operation.
func (c *EMR) AddInstanceGroupsRequest(input *AddInstanceGroupsInput) (req *aws.Request, output *AddInstanceGroupsOutput) {
	if opAddInstanceGroups == nil {
		opAddInstanceGroups = &aws.Operation{
			Name:       "AddInstanceGroups",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opAddInstanceGroups, input, output)
	output = &AddInstanceGroupsOutput{}
	req.Data = output
	return
}

func (c *EMR) AddInstanceGroups(input *AddInstanceGroupsInput) (output *AddInstanceGroupsOutput, err error) {
	req, out := c.AddInstanceGroupsRequest(input)
	output = out
	err = req.Send()
	return
}

var opAddInstanceGroups *aws.Operation

// AddJobFlowStepsRequest generates a request for the AddJobFlowSteps operation.
func (c *EMR) AddJobFlowStepsRequest(input *AddJobFlowStepsInput) (req *aws.Request, output *AddJobFlowStepsOutput) {
	if opAddJobFlowSteps == nil {
		opAddJobFlowSteps = &aws.Operation{
			Name:       "AddJobFlowSteps",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opAddJobFlowSteps, input, output)
	output = &AddJobFlowStepsOutput{}
	req.Data = output
	return
}

func (c *EMR) AddJobFlowSteps(input *AddJobFlowStepsInput) (output *AddJobFlowStepsOutput, err error) {
	req, out := c.AddJobFlowStepsRequest(input)
	output = out
	err = req.Send()
	return
}

var opAddJobFlowSteps *aws.Operation

// AddTagsRequest generates a request for the AddTags operation.
func (c *EMR) AddTagsRequest(input *AddTagsInput) (req *aws.Request, output *AddTagsOutput) {
	if opAddTags == nil {
		opAddTags = &aws.Operation{
			Name:       "AddTags",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opAddTags, input, output)
	output = &AddTagsOutput{}
	req.Data = output
	return
}

func (c *EMR) AddTags(input *AddTagsInput) (output *AddTagsOutput, err error) {
	req, out := c.AddTagsRequest(input)
	output = out
	err = req.Send()
	return
}

var opAddTags *aws.Operation

// DescribeClusterRequest generates a request for the DescribeCluster operation.
func (c *EMR) DescribeClusterRequest(input *DescribeClusterInput) (req *aws.Request, output *DescribeClusterOutput) {
	if opDescribeCluster == nil {
		opDescribeCluster = &aws.Operation{
			Name:       "DescribeCluster",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeCluster, input, output)
	output = &DescribeClusterOutput{}
	req.Data = output
	return
}

func (c *EMR) DescribeCluster(input *DescribeClusterInput) (output *DescribeClusterOutput, err error) {
	req, out := c.DescribeClusterRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeCluster *aws.Operation

// DescribeJobFlowsRequest generates a request for the DescribeJobFlows operation.
func (c *EMR) DescribeJobFlowsRequest(input *DescribeJobFlowsInput) (req *aws.Request, output *DescribeJobFlowsOutput) {
	if opDescribeJobFlows == nil {
		opDescribeJobFlows = &aws.Operation{
			Name:       "DescribeJobFlows",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeJobFlows, input, output)
	output = &DescribeJobFlowsOutput{}
	req.Data = output
	return
}

func (c *EMR) DescribeJobFlows(input *DescribeJobFlowsInput) (output *DescribeJobFlowsOutput, err error) {
	req, out := c.DescribeJobFlowsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeJobFlows *aws.Operation

// DescribeStepRequest generates a request for the DescribeStep operation.
func (c *EMR) DescribeStepRequest(input *DescribeStepInput) (req *aws.Request, output *DescribeStepOutput) {
	if opDescribeStep == nil {
		opDescribeStep = &aws.Operation{
			Name:       "DescribeStep",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeStep, input, output)
	output = &DescribeStepOutput{}
	req.Data = output
	return
}

func (c *EMR) DescribeStep(input *DescribeStepInput) (output *DescribeStepOutput, err error) {
	req, out := c.DescribeStepRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeStep *aws.Operation

// ListBootstrapActionsRequest generates a request for the ListBootstrapActions operation.
func (c *EMR) ListBootstrapActionsRequest(input *ListBootstrapActionsInput) (req *aws.Request, output *ListBootstrapActionsOutput) {
	if opListBootstrapActions == nil {
		opListBootstrapActions = &aws.Operation{
			Name:       "ListBootstrapActions",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListBootstrapActions, input, output)
	output = &ListBootstrapActionsOutput{}
	req.Data = output
	return
}

func (c *EMR) ListBootstrapActions(input *ListBootstrapActionsInput) (output *ListBootstrapActionsOutput, err error) {
	req, out := c.ListBootstrapActionsRequest(input)
	output = out
	err = req.Send()
	return
}

var opListBootstrapActions *aws.Operation

// ListClustersRequest generates a request for the ListClusters operation.
func (c *EMR) ListClustersRequest(input *ListClustersInput) (req *aws.Request, output *ListClustersOutput) {
	if opListClusters == nil {
		opListClusters = &aws.Operation{
			Name:       "ListClusters",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListClusters, input, output)
	output = &ListClustersOutput{}
	req.Data = output
	return
}

func (c *EMR) ListClusters(input *ListClustersInput) (output *ListClustersOutput, err error) {
	req, out := c.ListClustersRequest(input)
	output = out
	err = req.Send()
	return
}

var opListClusters *aws.Operation

// ListInstanceGroupsRequest generates a request for the ListInstanceGroups operation.
func (c *EMR) ListInstanceGroupsRequest(input *ListInstanceGroupsInput) (req *aws.Request, output *ListInstanceGroupsOutput) {
	if opListInstanceGroups == nil {
		opListInstanceGroups = &aws.Operation{
			Name:       "ListInstanceGroups",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListInstanceGroups, input, output)
	output = &ListInstanceGroupsOutput{}
	req.Data = output
	return
}

func (c *EMR) ListInstanceGroups(input *ListInstanceGroupsInput) (output *ListInstanceGroupsOutput, err error) {
	req, out := c.ListInstanceGroupsRequest(input)
	output = out
	err = req.Send()
	return
}

var opListInstanceGroups *aws.Operation

// ListInstancesRequest generates a request for the ListInstances operation.
func (c *EMR) ListInstancesRequest(input *ListInstancesInput) (req *aws.Request, output *ListInstancesOutput) {
	if opListInstances == nil {
		opListInstances = &aws.Operation{
			Name:       "ListInstances",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListInstances, input, output)
	output = &ListInstancesOutput{}
	req.Data = output
	return
}

func (c *EMR) ListInstances(input *ListInstancesInput) (output *ListInstancesOutput, err error) {
	req, out := c.ListInstancesRequest(input)
	output = out
	err = req.Send()
	return
}

var opListInstances *aws.Operation

// ListStepsRequest generates a request for the ListSteps operation.
func (c *EMR) ListStepsRequest(input *ListStepsInput) (req *aws.Request, output *ListStepsOutput) {
	if opListSteps == nil {
		opListSteps = &aws.Operation{
			Name:       "ListSteps",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListSteps, input, output)
	output = &ListStepsOutput{}
	req.Data = output
	return
}

func (c *EMR) ListSteps(input *ListStepsInput) (output *ListStepsOutput, err error) {
	req, out := c.ListStepsRequest(input)
	output = out
	err = req.Send()
	return
}

var opListSteps *aws.Operation

// ModifyInstanceGroupsRequest generates a request for the ModifyInstanceGroups operation.
func (c *EMR) ModifyInstanceGroupsRequest(input *ModifyInstanceGroupsInput) (req *aws.Request) {
	if opModifyInstanceGroups == nil {
		opModifyInstanceGroups = &aws.Operation{
			Name:       "ModifyInstanceGroups",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opModifyInstanceGroups, input, nil)

	return
}

func (c *EMR) ModifyInstanceGroups(input *ModifyInstanceGroupsInput) (err error) {
	req := c.ModifyInstanceGroupsRequest(input)
	err = req.Send()
	return
}

var opModifyInstanceGroups *aws.Operation

// RemoveTagsRequest generates a request for the RemoveTags operation.
func (c *EMR) RemoveTagsRequest(input *RemoveTagsInput) (req *aws.Request, output *RemoveTagsOutput) {
	if opRemoveTags == nil {
		opRemoveTags = &aws.Operation{
			Name:       "RemoveTags",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRemoveTags, input, output)
	output = &RemoveTagsOutput{}
	req.Data = output
	return
}

func (c *EMR) RemoveTags(input *RemoveTagsInput) (output *RemoveTagsOutput, err error) {
	req, out := c.RemoveTagsRequest(input)
	output = out
	err = req.Send()
	return
}

var opRemoveTags *aws.Operation

// RunJobFlowRequest generates a request for the RunJobFlow operation.
func (c *EMR) RunJobFlowRequest(input *RunJobFlowInput) (req *aws.Request, output *RunJobFlowOutput) {
	if opRunJobFlow == nil {
		opRunJobFlow = &aws.Operation{
			Name:       "RunJobFlow",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRunJobFlow, input, output)
	output = &RunJobFlowOutput{}
	req.Data = output
	return
}

func (c *EMR) RunJobFlow(input *RunJobFlowInput) (output *RunJobFlowOutput, err error) {
	req, out := c.RunJobFlowRequest(input)
	output = out
	err = req.Send()
	return
}

var opRunJobFlow *aws.Operation

// SetTerminationProtectionRequest generates a request for the SetTerminationProtection operation.
func (c *EMR) SetTerminationProtectionRequest(input *SetTerminationProtectionInput) (req *aws.Request) {
	if opSetTerminationProtection == nil {
		opSetTerminationProtection = &aws.Operation{
			Name:       "SetTerminationProtection",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opSetTerminationProtection, input, nil)

	return
}

func (c *EMR) SetTerminationProtection(input *SetTerminationProtectionInput) (err error) {
	req := c.SetTerminationProtectionRequest(input)
	err = req.Send()
	return
}

var opSetTerminationProtection *aws.Operation

// SetVisibleToAllUsersRequest generates a request for the SetVisibleToAllUsers operation.
func (c *EMR) SetVisibleToAllUsersRequest(input *SetVisibleToAllUsersInput) (req *aws.Request) {
	if opSetVisibleToAllUsers == nil {
		opSetVisibleToAllUsers = &aws.Operation{
			Name:       "SetVisibleToAllUsers",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opSetVisibleToAllUsers, input, nil)

	return
}

func (c *EMR) SetVisibleToAllUsers(input *SetVisibleToAllUsersInput) (err error) {
	req := c.SetVisibleToAllUsersRequest(input)
	err = req.Send()
	return
}

var opSetVisibleToAllUsers *aws.Operation

// TerminateJobFlowsRequest generates a request for the TerminateJobFlows operation.
func (c *EMR) TerminateJobFlowsRequest(input *TerminateJobFlowsInput) (req *aws.Request) {
	if opTerminateJobFlows == nil {
		opTerminateJobFlows = &aws.Operation{
			Name:       "TerminateJobFlows",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opTerminateJobFlows, input, nil)

	return
}

func (c *EMR) TerminateJobFlows(input *TerminateJobFlowsInput) (err error) {
	req := c.TerminateJobFlowsRequest(input)
	err = req.Send()
	return
}

var opTerminateJobFlows *aws.Operation

type AddInstanceGroupsInput struct {
	InstanceGroups []*InstanceGroupConfig `type:"list" json:",omitempty"`
	JobFlowID      *string                `locationName:"JobFlowId" type:"string" json:"JobFlowId,omitempty"`

	metadataAddInstanceGroupsInput `json:"-", xml:"-"`
}

type metadataAddInstanceGroupsInput struct {
	SDKShapeTraits bool `type:"structure" required:"InstanceGroups,JobFlowId" json:",omitempty"`
}

type AddInstanceGroupsOutput struct {
	InstanceGroupIDs []*string `locationName:"InstanceGroupIds" type:"list" json:"InstanceGroupIds,omitempty"`
	JobFlowID        *string   `locationName:"JobFlowId" type:"string" json:"JobFlowId,omitempty"`

	metadataAddInstanceGroupsOutput `json:"-", xml:"-"`
}

type metadataAddInstanceGroupsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type AddJobFlowStepsInput struct {
	JobFlowID *string       `locationName:"JobFlowId" type:"string" json:"JobFlowId,omitempty"`
	Steps     []*StepConfig `type:"list" json:",omitempty"`

	metadataAddJobFlowStepsInput `json:"-", xml:"-"`
}

type metadataAddJobFlowStepsInput struct {
	SDKShapeTraits bool `type:"structure" required:"JobFlowId,Steps" json:",omitempty"`
}

type AddJobFlowStepsOutput struct {
	StepIDs []*string `locationName:"StepIds" type:"list" json:"StepIds,omitempty"`

	metadataAddJobFlowStepsOutput `json:"-", xml:"-"`
}

type metadataAddJobFlowStepsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type AddTagsInput struct {
	ResourceID *string `locationName:"ResourceId" type:"string" json:"ResourceId,omitempty"`
	Tags       []*Tag  `type:"list" json:",omitempty"`

	metadataAddTagsInput `json:"-", xml:"-"`
}

type metadataAddTagsInput struct {
	SDKShapeTraits bool `type:"structure" required:"ResourceId,Tags" json:",omitempty"`
}

type AddTagsOutput struct {
	metadataAddTagsOutput `json:"-", xml:"-"`
}

type metadataAddTagsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Application struct {
	AdditionalInfo *map[string]*string `type:"map" json:",omitempty"`
	Args           []*string           `type:"list" json:",omitempty"`
	Name           *string             `type:"string" json:",omitempty"`
	Version        *string             `type:"string" json:",omitempty"`

	metadataApplication `json:"-", xml:"-"`
}

type metadataApplication struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type BootstrapActionConfig struct {
	Name                  *string                      `type:"string" json:",omitempty"`
	ScriptBootstrapAction *ScriptBootstrapActionConfig `type:"structure" json:",omitempty"`

	metadataBootstrapActionConfig `json:"-", xml:"-"`
}

type metadataBootstrapActionConfig struct {
	SDKShapeTraits bool `type:"structure" required:"Name,ScriptBootstrapAction" json:",omitempty"`
}

type BootstrapActionDetail struct {
	BootstrapActionConfig *BootstrapActionConfig `type:"structure" json:",omitempty"`

	metadataBootstrapActionDetail `json:"-", xml:"-"`
}

type metadataBootstrapActionDetail struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Cluster struct {
	Applications            []*Application         `type:"list" json:",omitempty"`
	AutoTerminate           *bool                  `type:"boolean" json:",omitempty"`
	EC2InstanceAttributes   *EC2InstanceAttributes `locationName:"Ec2InstanceAttributes" type:"structure" json:"Ec2InstanceAttributes,omitempty"`
	ID                      *string                `locationName:"Id" type:"string" json:"Id,omitempty"`
	LogURI                  *string                `locationName:"LogUri" type:"string" json:"LogUri,omitempty"`
	MasterPublicDNSName     *string                `locationName:"MasterPublicDnsName" type:"string" json:"MasterPublicDnsName,omitempty"`
	Name                    *string                `type:"string" json:",omitempty"`
	NormalizedInstanceHours *int                   `type:"integer" json:",omitempty"`
	RequestedAMIVersion     *string                `locationName:"RequestedAmiVersion" type:"string" json:"RequestedAmiVersion,omitempty"`
	RunningAMIVersion       *string                `locationName:"RunningAmiVersion" type:"string" json:"RunningAmiVersion,omitempty"`
	ServiceRole             *string                `type:"string" json:",omitempty"`
	Status                  *ClusterStatus         `type:"structure" json:",omitempty"`
	Tags                    []*Tag                 `type:"list" json:",omitempty"`
	TerminationProtected    *bool                  `type:"boolean" json:",omitempty"`
	VisibleToAllUsers       *bool                  `type:"boolean" json:",omitempty"`

	metadataCluster `json:"-", xml:"-"`
}

type metadataCluster struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ClusterStateChangeReason struct {
	Code    *string `type:"string" json:",omitempty"`
	Message *string `type:"string" json:",omitempty"`

	metadataClusterStateChangeReason `json:"-", xml:"-"`
}

type metadataClusterStateChangeReason struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ClusterStatus struct {
	State             *string                   `type:"string" json:",omitempty"`
	StateChangeReason *ClusterStateChangeReason `type:"structure" json:",omitempty"`
	Timeline          *ClusterTimeline          `type:"structure" json:",omitempty"`

	metadataClusterStatus `json:"-", xml:"-"`
}

type metadataClusterStatus struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ClusterSummary struct {
	ID                      *string        `locationName:"Id" type:"string" json:"Id,omitempty"`
	Name                    *string        `type:"string" json:",omitempty"`
	NormalizedInstanceHours *int           `type:"integer" json:",omitempty"`
	Status                  *ClusterStatus `type:"structure" json:",omitempty"`

	metadataClusterSummary `json:"-", xml:"-"`
}

type metadataClusterSummary struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ClusterTimeline struct {
	CreationDateTime *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	EndDateTime      *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	ReadyDateTime    *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`

	metadataClusterTimeline `json:"-", xml:"-"`
}

type metadataClusterTimeline struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Command struct {
	Args       []*string `type:"list" json:",omitempty"`
	Name       *string   `type:"string" json:",omitempty"`
	ScriptPath *string   `type:"string" json:",omitempty"`

	metadataCommand `json:"-", xml:"-"`
}

type metadataCommand struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeClusterInput struct {
	ClusterID *string `locationName:"ClusterId" type:"string" json:"ClusterId,omitempty"`

	metadataDescribeClusterInput `json:"-", xml:"-"`
}

type metadataDescribeClusterInput struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterId" json:",omitempty"`
}

type DescribeClusterOutput struct {
	Cluster *Cluster `type:"structure" json:",omitempty"`

	metadataDescribeClusterOutput `json:"-", xml:"-"`
}

type metadataDescribeClusterOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeJobFlowsInput struct {
	CreatedAfter  *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	CreatedBefore *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	JobFlowIDs    []*string  `locationName:"JobFlowIds" type:"list" json:"JobFlowIds,omitempty"`
	JobFlowStates []*string  `type:"list" json:",omitempty"`

	metadataDescribeJobFlowsInput `json:"-", xml:"-"`
}

type metadataDescribeJobFlowsInput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeJobFlowsOutput struct {
	JobFlows []*JobFlowDetail `type:"list" json:",omitempty"`

	metadataDescribeJobFlowsOutput `json:"-", xml:"-"`
}

type metadataDescribeJobFlowsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeStepInput struct {
	ClusterID *string `locationName:"ClusterId" type:"string" json:"ClusterId,omitempty"`
	StepID    *string `locationName:"StepId" type:"string" json:"StepId,omitempty"`

	metadataDescribeStepInput `json:"-", xml:"-"`
}

type metadataDescribeStepInput struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterId,StepId" json:",omitempty"`
}

type DescribeStepOutput struct {
	Step *Step `type:"structure" json:",omitempty"`

	metadataDescribeStepOutput `json:"-", xml:"-"`
}

type metadataDescribeStepOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type EC2InstanceAttributes struct {
	AdditionalMasterSecurityGroups []*string `type:"list" json:",omitempty"`
	AdditionalSlaveSecurityGroups  []*string `type:"list" json:",omitempty"`
	EC2AvailabilityZone            *string   `locationName:"Ec2AvailabilityZone" type:"string" json:"Ec2AvailabilityZone,omitempty"`
	EC2KeyName                     *string   `locationName:"Ec2KeyName" type:"string" json:"Ec2KeyName,omitempty"`
	EC2SubnetID                    *string   `locationName:"Ec2SubnetId" type:"string" json:"Ec2SubnetId,omitempty"`
	EMRManagedMasterSecurityGroup  *string   `locationName:"EmrManagedMasterSecurityGroup" type:"string" json:"EmrManagedMasterSecurityGroup,omitempty"`
	EMRManagedSlaveSecurityGroup   *string   `locationName:"EmrManagedSlaveSecurityGroup" type:"string" json:"EmrManagedSlaveSecurityGroup,omitempty"`
	IAMInstanceProfile             *string   `locationName:"IamInstanceProfile" type:"string" json:"IamInstanceProfile,omitempty"`

	metadataEC2InstanceAttributes `json:"-", xml:"-"`
}

type metadataEC2InstanceAttributes struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type HadoopJARStepConfig struct {
	Args       []*string   `type:"list" json:",omitempty"`
	JAR        *string     `locationName:"Jar" type:"string" json:"Jar,omitempty"`
	MainClass  *string     `type:"string" json:",omitempty"`
	Properties []*KeyValue `type:"list" json:",omitempty"`

	metadataHadoopJARStepConfig `json:"-", xml:"-"`
}

type metadataHadoopJARStepConfig struct {
	SDKShapeTraits bool `type:"structure" required:"Jar" json:",omitempty"`
}

type HadoopStepConfig struct {
	Args       []*string           `type:"list" json:",omitempty"`
	JAR        *string             `locationName:"Jar" type:"string" json:"Jar,omitempty"`
	MainClass  *string             `type:"string" json:",omitempty"`
	Properties *map[string]*string `type:"map" json:",omitempty"`

	metadataHadoopStepConfig `json:"-", xml:"-"`
}

type metadataHadoopStepConfig struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Instance struct {
	EC2InstanceID    *string         `locationName:"Ec2InstanceId" type:"string" json:"Ec2InstanceId,omitempty"`
	ID               *string         `locationName:"Id" type:"string" json:"Id,omitempty"`
	PrivateDNSName   *string         `locationName:"PrivateDnsName" type:"string" json:"PrivateDnsName,omitempty"`
	PrivateIPAddress *string         `locationName:"PrivateIpAddress" type:"string" json:"PrivateIpAddress,omitempty"`
	PublicDNSName    *string         `locationName:"PublicDnsName" type:"string" json:"PublicDnsName,omitempty"`
	PublicIPAddress  *string         `locationName:"PublicIpAddress" type:"string" json:"PublicIpAddress,omitempty"`
	Status           *InstanceStatus `type:"structure" json:",omitempty"`

	metadataInstance `json:"-", xml:"-"`
}

type metadataInstance struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type InstanceGroup struct {
	BidPrice               *string              `type:"string" json:",omitempty"`
	ID                     *string              `locationName:"Id" type:"string" json:"Id,omitempty"`
	InstanceGroupType      *string              `type:"string" json:",omitempty"`
	InstanceType           *string              `type:"string" json:",omitempty"`
	Market                 *string              `type:"string" json:",omitempty"`
	Name                   *string              `type:"string" json:",omitempty"`
	RequestedInstanceCount *int                 `type:"integer" json:",omitempty"`
	RunningInstanceCount   *int                 `type:"integer" json:",omitempty"`
	Status                 *InstanceGroupStatus `type:"structure" json:",omitempty"`

	metadataInstanceGroup `json:"-", xml:"-"`
}

type metadataInstanceGroup struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type InstanceGroupConfig struct {
	BidPrice      *string `type:"string" json:",omitempty"`
	InstanceCount *int    `type:"integer" json:",omitempty"`
	InstanceRole  *string `type:"string" json:",omitempty"`
	InstanceType  *string `type:"string" json:",omitempty"`
	Market        *string `type:"string" json:",omitempty"`
	Name          *string `type:"string" json:",omitempty"`

	metadataInstanceGroupConfig `json:"-", xml:"-"`
}

type metadataInstanceGroupConfig struct {
	SDKShapeTraits bool `type:"structure" required:"InstanceRole,InstanceType,InstanceCount" json:",omitempty"`
}

type InstanceGroupDetail struct {
	BidPrice              *string    `type:"string" json:",omitempty"`
	CreationDateTime      *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	EndDateTime           *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	InstanceGroupID       *string    `locationName:"InstanceGroupId" type:"string" json:"InstanceGroupId,omitempty"`
	InstanceRequestCount  *int       `type:"integer" json:",omitempty"`
	InstanceRole          *string    `type:"string" json:",omitempty"`
	InstanceRunningCount  *int       `type:"integer" json:",omitempty"`
	InstanceType          *string    `type:"string" json:",omitempty"`
	LastStateChangeReason *string    `type:"string" json:",omitempty"`
	Market                *string    `type:"string" json:",omitempty"`
	Name                  *string    `type:"string" json:",omitempty"`
	ReadyDateTime         *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	StartDateTime         *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	State                 *string    `type:"string" json:",omitempty"`

	metadataInstanceGroupDetail `json:"-", xml:"-"`
}

type metadataInstanceGroupDetail struct {
	SDKShapeTraits bool `type:"structure" required:"Market,InstanceRole,InstanceType,InstanceRequestCount,InstanceRunningCount,State,CreationDateTime" json:",omitempty"`
}

type InstanceGroupModifyConfig struct {
	EC2InstanceIDsToTerminate []*string `locationName:"EC2InstanceIdsToTerminate" type:"list" json:"EC2InstanceIdsToTerminate,omitempty"`
	InstanceCount             *int      `type:"integer" json:",omitempty"`
	InstanceGroupID           *string   `locationName:"InstanceGroupId" type:"string" json:"InstanceGroupId,omitempty"`

	metadataInstanceGroupModifyConfig `json:"-", xml:"-"`
}

type metadataInstanceGroupModifyConfig struct {
	SDKShapeTraits bool `type:"structure" required:"InstanceGroupId" json:",omitempty"`
}

type InstanceGroupStateChangeReason struct {
	Code    *string `type:"string" json:",omitempty"`
	Message *string `type:"string" json:",omitempty"`

	metadataInstanceGroupStateChangeReason `json:"-", xml:"-"`
}

type metadataInstanceGroupStateChangeReason struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type InstanceGroupStatus struct {
	State             *string                         `type:"string" json:",omitempty"`
	StateChangeReason *InstanceGroupStateChangeReason `type:"structure" json:",omitempty"`
	Timeline          *InstanceGroupTimeline          `type:"structure" json:",omitempty"`

	metadataInstanceGroupStatus `json:"-", xml:"-"`
}

type metadataInstanceGroupStatus struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type InstanceGroupTimeline struct {
	CreationDateTime *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	EndDateTime      *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	ReadyDateTime    *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`

	metadataInstanceGroupTimeline `json:"-", xml:"-"`
}

type metadataInstanceGroupTimeline struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type InstanceStateChangeReason struct {
	Code    *string `type:"string" json:",omitempty"`
	Message *string `type:"string" json:",omitempty"`

	metadataInstanceStateChangeReason `json:"-", xml:"-"`
}

type metadataInstanceStateChangeReason struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type InstanceStatus struct {
	State             *string                    `type:"string" json:",omitempty"`
	StateChangeReason *InstanceStateChangeReason `type:"structure" json:",omitempty"`
	Timeline          *InstanceTimeline          `type:"structure" json:",omitempty"`

	metadataInstanceStatus `json:"-", xml:"-"`
}

type metadataInstanceStatus struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type InstanceTimeline struct {
	CreationDateTime *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	EndDateTime      *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	ReadyDateTime    *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`

	metadataInstanceTimeline `json:"-", xml:"-"`
}

type metadataInstanceTimeline struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type InternalServerError struct {
	metadataInternalServerError `json:"-", xml:"-"`
}

type metadataInternalServerError struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type InternalServerException struct {
	Message *string `type:"string" json:",omitempty"`

	metadataInternalServerException `json:"-", xml:"-"`
}

type metadataInternalServerException struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type InvalidRequestException struct {
	ErrorCode *string `type:"string" json:",omitempty"`
	Message   *string `type:"string" json:",omitempty"`

	metadataInvalidRequestException `json:"-", xml:"-"`
}

type metadataInvalidRequestException struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type JobFlowDetail struct {
	AMIVersion            *string                       `locationName:"AmiVersion" type:"string" json:"AmiVersion,omitempty"`
	BootstrapActions      []*BootstrapActionDetail      `type:"list" json:",omitempty"`
	ExecutionStatusDetail *JobFlowExecutionStatusDetail `type:"structure" json:",omitempty"`
	Instances             *JobFlowInstancesDetail       `type:"structure" json:",omitempty"`
	JobFlowID             *string                       `locationName:"JobFlowId" type:"string" json:"JobFlowId,omitempty"`
	JobFlowRole           *string                       `type:"string" json:",omitempty"`
	LogURI                *string                       `locationName:"LogUri" type:"string" json:"LogUri,omitempty"`
	Name                  *string                       `type:"string" json:",omitempty"`
	ServiceRole           *string                       `type:"string" json:",omitempty"`
	Steps                 []*StepDetail                 `type:"list" json:",omitempty"`
	SupportedProducts     []*string                     `type:"list" json:",omitempty"`
	VisibleToAllUsers     *bool                         `type:"boolean" json:",omitempty"`

	metadataJobFlowDetail `json:"-", xml:"-"`
}

type metadataJobFlowDetail struct {
	SDKShapeTraits bool `type:"structure" required:"JobFlowId,Name,ExecutionStatusDetail,Instances" json:",omitempty"`
}

type JobFlowExecutionStatusDetail struct {
	CreationDateTime      *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	EndDateTime           *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	LastStateChangeReason *string    `type:"string" json:",omitempty"`
	ReadyDateTime         *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	StartDateTime         *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	State                 *string    `type:"string" json:",omitempty"`

	metadataJobFlowExecutionStatusDetail `json:"-", xml:"-"`
}

type metadataJobFlowExecutionStatusDetail struct {
	SDKShapeTraits bool `type:"structure" required:"State,CreationDateTime" json:",omitempty"`
}

type JobFlowInstancesConfig struct {
	AdditionalMasterSecurityGroups []*string              `type:"list" json:",omitempty"`
	AdditionalSlaveSecurityGroups  []*string              `type:"list" json:",omitempty"`
	EC2KeyName                     *string                `locationName:"Ec2KeyName" type:"string" json:"Ec2KeyName,omitempty"`
	EC2SubnetID                    *string                `locationName:"Ec2SubnetId" type:"string" json:"Ec2SubnetId,omitempty"`
	EMRManagedMasterSecurityGroup  *string                `locationName:"EmrManagedMasterSecurityGroup" type:"string" json:"EmrManagedMasterSecurityGroup,omitempty"`
	EMRManagedSlaveSecurityGroup   *string                `locationName:"EmrManagedSlaveSecurityGroup" type:"string" json:"EmrManagedSlaveSecurityGroup,omitempty"`
	HadoopVersion                  *string                `type:"string" json:",omitempty"`
	InstanceCount                  *int                   `type:"integer" json:",omitempty"`
	InstanceGroups                 []*InstanceGroupConfig `type:"list" json:",omitempty"`
	KeepJobFlowAliveWhenNoSteps    *bool                  `type:"boolean" json:",omitempty"`
	MasterInstanceType             *string                `type:"string" json:",omitempty"`
	Placement                      *PlacementType         `type:"structure" json:",omitempty"`
	SlaveInstanceType              *string                `type:"string" json:",omitempty"`
	TerminationProtected           *bool                  `type:"boolean" json:",omitempty"`

	metadataJobFlowInstancesConfig `json:"-", xml:"-"`
}

type metadataJobFlowInstancesConfig struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type JobFlowInstancesDetail struct {
	EC2KeyName                  *string                `locationName:"Ec2KeyName" type:"string" json:"Ec2KeyName,omitempty"`
	EC2SubnetID                 *string                `locationName:"Ec2SubnetId" type:"string" json:"Ec2SubnetId,omitempty"`
	HadoopVersion               *string                `type:"string" json:",omitempty"`
	InstanceCount               *int                   `type:"integer" json:",omitempty"`
	InstanceGroups              []*InstanceGroupDetail `type:"list" json:",omitempty"`
	KeepJobFlowAliveWhenNoSteps *bool                  `type:"boolean" json:",omitempty"`
	MasterInstanceID            *string                `locationName:"MasterInstanceId" type:"string" json:"MasterInstanceId,omitempty"`
	MasterInstanceType          *string                `type:"string" json:",omitempty"`
	MasterPublicDNSName         *string                `locationName:"MasterPublicDnsName" type:"string" json:"MasterPublicDnsName,omitempty"`
	NormalizedInstanceHours     *int                   `type:"integer" json:",omitempty"`
	Placement                   *PlacementType         `type:"structure" json:",omitempty"`
	SlaveInstanceType           *string                `type:"string" json:",omitempty"`
	TerminationProtected        *bool                  `type:"boolean" json:",omitempty"`

	metadataJobFlowInstancesDetail `json:"-", xml:"-"`
}

type metadataJobFlowInstancesDetail struct {
	SDKShapeTraits bool `type:"structure" required:"MasterInstanceType,SlaveInstanceType,InstanceCount" json:",omitempty"`
}

type KeyValue struct {
	Key   *string `type:"string" json:",omitempty"`
	Value *string `type:"string" json:",omitempty"`

	metadataKeyValue `json:"-", xml:"-"`
}

type metadataKeyValue struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListBootstrapActionsInput struct {
	ClusterID *string `locationName:"ClusterId" type:"string" json:"ClusterId,omitempty"`
	Marker    *string `type:"string" json:",omitempty"`

	metadataListBootstrapActionsInput `json:"-", xml:"-"`
}

type metadataListBootstrapActionsInput struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterId" json:",omitempty"`
}

type ListBootstrapActionsOutput struct {
	BootstrapActions []*Command `type:"list" json:",omitempty"`
	Marker           *string    `type:"string" json:",omitempty"`

	metadataListBootstrapActionsOutput `json:"-", xml:"-"`
}

type metadataListBootstrapActionsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListClustersInput struct {
	ClusterStates []*string  `type:"list" json:",omitempty"`
	CreatedAfter  *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	CreatedBefore *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	Marker        *string    `type:"string" json:",omitempty"`

	metadataListClustersInput `json:"-", xml:"-"`
}

type metadataListClustersInput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListClustersOutput struct {
	Clusters []*ClusterSummary `type:"list" json:",omitempty"`
	Marker   *string           `type:"string" json:",omitempty"`

	metadataListClustersOutput `json:"-", xml:"-"`
}

type metadataListClustersOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListInstanceGroupsInput struct {
	ClusterID *string `locationName:"ClusterId" type:"string" json:"ClusterId,omitempty"`
	Marker    *string `type:"string" json:",omitempty"`

	metadataListInstanceGroupsInput `json:"-", xml:"-"`
}

type metadataListInstanceGroupsInput struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterId" json:",omitempty"`
}

type ListInstanceGroupsOutput struct {
	InstanceGroups []*InstanceGroup `type:"list" json:",omitempty"`
	Marker         *string          `type:"string" json:",omitempty"`

	metadataListInstanceGroupsOutput `json:"-", xml:"-"`
}

type metadataListInstanceGroupsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListInstancesInput struct {
	ClusterID          *string   `locationName:"ClusterId" type:"string" json:"ClusterId,omitempty"`
	InstanceGroupID    *string   `locationName:"InstanceGroupId" type:"string" json:"InstanceGroupId,omitempty"`
	InstanceGroupTypes []*string `type:"list" json:",omitempty"`
	Marker             *string   `type:"string" json:",omitempty"`

	metadataListInstancesInput `json:"-", xml:"-"`
}

type metadataListInstancesInput struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterId" json:",omitempty"`
}

type ListInstancesOutput struct {
	Instances []*Instance `type:"list" json:",omitempty"`
	Marker    *string     `type:"string" json:",omitempty"`

	metadataListInstancesOutput `json:"-", xml:"-"`
}

type metadataListInstancesOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListStepsInput struct {
	ClusterID  *string   `locationName:"ClusterId" type:"string" json:"ClusterId,omitempty"`
	Marker     *string   `type:"string" json:",omitempty"`
	StepIDs    []*string `locationName:"StepIds" type:"list" json:"StepIds,omitempty"`
	StepStates []*string `type:"list" json:",omitempty"`

	metadataListStepsInput `json:"-", xml:"-"`
}

type metadataListStepsInput struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterId" json:",omitempty"`
}

type ListStepsOutput struct {
	Marker *string        `type:"string" json:",omitempty"`
	Steps  []*StepSummary `type:"list" json:",omitempty"`

	metadataListStepsOutput `json:"-", xml:"-"`
}

type metadataListStepsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ModifyInstanceGroupsInput struct {
	InstanceGroups []*InstanceGroupModifyConfig `type:"list" json:",omitempty"`

	metadataModifyInstanceGroupsInput `json:"-", xml:"-"`
}

type metadataModifyInstanceGroupsInput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type PlacementType struct {
	AvailabilityZone *string `type:"string" json:",omitempty"`

	metadataPlacementType `json:"-", xml:"-"`
}

type metadataPlacementType struct {
	SDKShapeTraits bool `type:"structure" required:"AvailabilityZone" json:",omitempty"`
}

type RemoveTagsInput struct {
	ResourceID *string   `locationName:"ResourceId" type:"string" json:"ResourceId,omitempty"`
	TagKeys    []*string `type:"list" json:",omitempty"`

	metadataRemoveTagsInput `json:"-", xml:"-"`
}

type metadataRemoveTagsInput struct {
	SDKShapeTraits bool `type:"structure" required:"ResourceId,TagKeys" json:",omitempty"`
}

type RemoveTagsOutput struct {
	metadataRemoveTagsOutput `json:"-", xml:"-"`
}

type metadataRemoveTagsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type RunJobFlowInput struct {
	AMIVersion           *string                   `locationName:"AmiVersion" type:"string" json:"AmiVersion,omitempty"`
	AdditionalInfo       *string                   `type:"string" json:",omitempty"`
	BootstrapActions     []*BootstrapActionConfig  `type:"list" json:",omitempty"`
	Instances            *JobFlowInstancesConfig   `type:"structure" json:",omitempty"`
	JobFlowRole          *string                   `type:"string" json:",omitempty"`
	LogURI               *string                   `locationName:"LogUri" type:"string" json:"LogUri,omitempty"`
	Name                 *string                   `type:"string" json:",omitempty"`
	NewSupportedProducts []*SupportedProductConfig `type:"list" json:",omitempty"`
	ServiceRole          *string                   `type:"string" json:",omitempty"`
	Steps                []*StepConfig             `type:"list" json:",omitempty"`
	SupportedProducts    []*string                 `type:"list" json:",omitempty"`
	Tags                 []*Tag                    `type:"list" json:",omitempty"`
	VisibleToAllUsers    *bool                     `type:"boolean" json:",omitempty"`

	metadataRunJobFlowInput `json:"-", xml:"-"`
}

type metadataRunJobFlowInput struct {
	SDKShapeTraits bool `type:"structure" required:"Name,Instances" json:",omitempty"`
}

type RunJobFlowOutput struct {
	JobFlowID *string `locationName:"JobFlowId" type:"string" json:"JobFlowId,omitempty"`

	metadataRunJobFlowOutput `json:"-", xml:"-"`
}

type metadataRunJobFlowOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ScriptBootstrapActionConfig struct {
	Args []*string `type:"list" json:",omitempty"`
	Path *string   `type:"string" json:",omitempty"`

	metadataScriptBootstrapActionConfig `json:"-", xml:"-"`
}

type metadataScriptBootstrapActionConfig struct {
	SDKShapeTraits bool `type:"structure" required:"Path" json:",omitempty"`
}

type SetTerminationProtectionInput struct {
	JobFlowIDs           []*string `locationName:"JobFlowIds" type:"list" json:"JobFlowIds,omitempty"`
	TerminationProtected *bool     `type:"boolean" json:",omitempty"`

	metadataSetTerminationProtectionInput `json:"-", xml:"-"`
}

type metadataSetTerminationProtectionInput struct {
	SDKShapeTraits bool `type:"structure" required:"JobFlowIds,TerminationProtected" json:",omitempty"`
}

type SetVisibleToAllUsersInput struct {
	JobFlowIDs        []*string `locationName:"JobFlowIds" type:"list" json:"JobFlowIds,omitempty"`
	VisibleToAllUsers *bool     `type:"boolean" json:",omitempty"`

	metadataSetVisibleToAllUsersInput `json:"-", xml:"-"`
}

type metadataSetVisibleToAllUsersInput struct {
	SDKShapeTraits bool `type:"structure" required:"JobFlowIds,VisibleToAllUsers" json:",omitempty"`
}

type Step struct {
	ActionOnFailure *string           `type:"string" json:",omitempty"`
	Config          *HadoopStepConfig `type:"structure" json:",omitempty"`
	ID              *string           `locationName:"Id" type:"string" json:"Id,omitempty"`
	Name            *string           `type:"string" json:",omitempty"`
	Status          *StepStatus       `type:"structure" json:",omitempty"`

	metadataStep `json:"-", xml:"-"`
}

type metadataStep struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type StepConfig struct {
	ActionOnFailure *string              `type:"string" json:",omitempty"`
	HadoopJARStep   *HadoopJARStepConfig `locationName:"HadoopJarStep" type:"structure" json:"HadoopJarStep,omitempty"`
	Name            *string              `type:"string" json:",omitempty"`

	metadataStepConfig `json:"-", xml:"-"`
}

type metadataStepConfig struct {
	SDKShapeTraits bool `type:"structure" required:"Name,HadoopJarStep" json:",omitempty"`
}

type StepDetail struct {
	ExecutionStatusDetail *StepExecutionStatusDetail `type:"structure" json:",omitempty"`
	StepConfig            *StepConfig                `type:"structure" json:",omitempty"`

	metadataStepDetail `json:"-", xml:"-"`
}

type metadataStepDetail struct {
	SDKShapeTraits bool `type:"structure" required:"StepConfig,ExecutionStatusDetail" json:",omitempty"`
}

type StepExecutionStatusDetail struct {
	CreationDateTime      *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	EndDateTime           *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	LastStateChangeReason *string    `type:"string" json:",omitempty"`
	StartDateTime         *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	State                 *string    `type:"string" json:",omitempty"`

	metadataStepExecutionStatusDetail `json:"-", xml:"-"`
}

type metadataStepExecutionStatusDetail struct {
	SDKShapeTraits bool `type:"structure" required:"State,CreationDateTime" json:",omitempty"`
}

type StepStateChangeReason struct {
	Code    *string `type:"string" json:",omitempty"`
	Message *string `type:"string" json:",omitempty"`

	metadataStepStateChangeReason `json:"-", xml:"-"`
}

type metadataStepStateChangeReason struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type StepStatus struct {
	State             *string                `type:"string" json:",omitempty"`
	StateChangeReason *StepStateChangeReason `type:"structure" json:",omitempty"`
	Timeline          *StepTimeline          `type:"structure" json:",omitempty"`

	metadataStepStatus `json:"-", xml:"-"`
}

type metadataStepStatus struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type StepSummary struct {
	ActionOnFailure *string           `type:"string" json:",omitempty"`
	Config          *HadoopStepConfig `type:"structure" json:",omitempty"`
	ID              *string           `locationName:"Id" type:"string" json:"Id,omitempty"`
	Name            *string           `type:"string" json:",omitempty"`
	Status          *StepStatus       `type:"structure" json:",omitempty"`

	metadataStepSummary `json:"-", xml:"-"`
}

type metadataStepSummary struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type StepTimeline struct {
	CreationDateTime *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	EndDateTime      *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	StartDateTime    *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`

	metadataStepTimeline `json:"-", xml:"-"`
}

type metadataStepTimeline struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type SupportedProductConfig struct {
	Args []*string `type:"list" json:",omitempty"`
	Name *string   `type:"string" json:",omitempty"`

	metadataSupportedProductConfig `json:"-", xml:"-"`
}

type metadataSupportedProductConfig struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Tag struct {
	Key   *string `type:"string" json:",omitempty"`
	Value *string `type:"string" json:",omitempty"`

	metadataTag `json:"-", xml:"-"`
}

type metadataTag struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type TerminateJobFlowsInput struct {
	JobFlowIDs []*string `locationName:"JobFlowIds" type:"list" json:"JobFlowIds,omitempty"`

	metadataTerminateJobFlowsInput `json:"-", xml:"-"`
}

type metadataTerminateJobFlowsInput struct {
	SDKShapeTraits bool `type:"structure" required:"JobFlowIds" json:",omitempty"`
}