package redshift

// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

import (
	"github.com/awslabs/aws-sdk-go/aws"
	"time"
)

// AuthorizeClusterSecurityGroupIngressRequest generates a request for the AuthorizeClusterSecurityGroupIngress operation.
func (c *Redshift) AuthorizeClusterSecurityGroupIngressRequest(input *AuthorizeClusterSecurityGroupIngressMessage) (req *aws.Request, output *AuthorizeClusterSecurityGroupIngressOutput) {
	if opAuthorizeClusterSecurityGroupIngress == nil {
		opAuthorizeClusterSecurityGroupIngress = &aws.Operation{
			Name:       "AuthorizeClusterSecurityGroupIngress",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opAuthorizeClusterSecurityGroupIngress, input, output)
	output = &AuthorizeClusterSecurityGroupIngressOutput{}
	req.Data = output
	return
}

func (c *Redshift) AuthorizeClusterSecurityGroupIngress(input *AuthorizeClusterSecurityGroupIngressMessage) (output *AuthorizeClusterSecurityGroupIngressOutput, err error) {
	req, out := c.AuthorizeClusterSecurityGroupIngressRequest(input)
	output = out
	err = req.Send()
	return
}

var opAuthorizeClusterSecurityGroupIngress *aws.Operation

// AuthorizeSnapshotAccessRequest generates a request for the AuthorizeSnapshotAccess operation.
func (c *Redshift) AuthorizeSnapshotAccessRequest(input *AuthorizeSnapshotAccessMessage) (req *aws.Request, output *AuthorizeSnapshotAccessOutput) {
	if opAuthorizeSnapshotAccess == nil {
		opAuthorizeSnapshotAccess = &aws.Operation{
			Name:       "AuthorizeSnapshotAccess",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opAuthorizeSnapshotAccess, input, output)
	output = &AuthorizeSnapshotAccessOutput{}
	req.Data = output
	return
}

func (c *Redshift) AuthorizeSnapshotAccess(input *AuthorizeSnapshotAccessMessage) (output *AuthorizeSnapshotAccessOutput, err error) {
	req, out := c.AuthorizeSnapshotAccessRequest(input)
	output = out
	err = req.Send()
	return
}

var opAuthorizeSnapshotAccess *aws.Operation

// CopyClusterSnapshotRequest generates a request for the CopyClusterSnapshot operation.
func (c *Redshift) CopyClusterSnapshotRequest(input *CopyClusterSnapshotMessage) (req *aws.Request, output *CopyClusterSnapshotOutput) {
	if opCopyClusterSnapshot == nil {
		opCopyClusterSnapshot = &aws.Operation{
			Name:       "CopyClusterSnapshot",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCopyClusterSnapshot, input, output)
	output = &CopyClusterSnapshotOutput{}
	req.Data = output
	return
}

func (c *Redshift) CopyClusterSnapshot(input *CopyClusterSnapshotMessage) (output *CopyClusterSnapshotOutput, err error) {
	req, out := c.CopyClusterSnapshotRequest(input)
	output = out
	err = req.Send()
	return
}

var opCopyClusterSnapshot *aws.Operation

// CreateClusterRequest generates a request for the CreateCluster operation.
func (c *Redshift) CreateClusterRequest(input *CreateClusterMessage) (req *aws.Request, output *CreateClusterOutput) {
	if opCreateCluster == nil {
		opCreateCluster = &aws.Operation{
			Name:       "CreateCluster",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateCluster, input, output)
	output = &CreateClusterOutput{}
	req.Data = output
	return
}

func (c *Redshift) CreateCluster(input *CreateClusterMessage) (output *CreateClusterOutput, err error) {
	req, out := c.CreateClusterRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateCluster *aws.Operation

// CreateClusterParameterGroupRequest generates a request for the CreateClusterParameterGroup operation.
func (c *Redshift) CreateClusterParameterGroupRequest(input *CreateClusterParameterGroupMessage) (req *aws.Request, output *CreateClusterParameterGroupOutput) {
	if opCreateClusterParameterGroup == nil {
		opCreateClusterParameterGroup = &aws.Operation{
			Name:       "CreateClusterParameterGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateClusterParameterGroup, input, output)
	output = &CreateClusterParameterGroupOutput{}
	req.Data = output
	return
}

func (c *Redshift) CreateClusterParameterGroup(input *CreateClusterParameterGroupMessage) (output *CreateClusterParameterGroupOutput, err error) {
	req, out := c.CreateClusterParameterGroupRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateClusterParameterGroup *aws.Operation

// CreateClusterSecurityGroupRequest generates a request for the CreateClusterSecurityGroup operation.
func (c *Redshift) CreateClusterSecurityGroupRequest(input *CreateClusterSecurityGroupMessage) (req *aws.Request, output *CreateClusterSecurityGroupOutput) {
	if opCreateClusterSecurityGroup == nil {
		opCreateClusterSecurityGroup = &aws.Operation{
			Name:       "CreateClusterSecurityGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateClusterSecurityGroup, input, output)
	output = &CreateClusterSecurityGroupOutput{}
	req.Data = output
	return
}

func (c *Redshift) CreateClusterSecurityGroup(input *CreateClusterSecurityGroupMessage) (output *CreateClusterSecurityGroupOutput, err error) {
	req, out := c.CreateClusterSecurityGroupRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateClusterSecurityGroup *aws.Operation

// CreateClusterSnapshotRequest generates a request for the CreateClusterSnapshot operation.
func (c *Redshift) CreateClusterSnapshotRequest(input *CreateClusterSnapshotMessage) (req *aws.Request, output *CreateClusterSnapshotOutput) {
	if opCreateClusterSnapshot == nil {
		opCreateClusterSnapshot = &aws.Operation{
			Name:       "CreateClusterSnapshot",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateClusterSnapshot, input, output)
	output = &CreateClusterSnapshotOutput{}
	req.Data = output
	return
}

func (c *Redshift) CreateClusterSnapshot(input *CreateClusterSnapshotMessage) (output *CreateClusterSnapshotOutput, err error) {
	req, out := c.CreateClusterSnapshotRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateClusterSnapshot *aws.Operation

// CreateClusterSubnetGroupRequest generates a request for the CreateClusterSubnetGroup operation.
func (c *Redshift) CreateClusterSubnetGroupRequest(input *CreateClusterSubnetGroupMessage) (req *aws.Request, output *CreateClusterSubnetGroupOutput) {
	if opCreateClusterSubnetGroup == nil {
		opCreateClusterSubnetGroup = &aws.Operation{
			Name:       "CreateClusterSubnetGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateClusterSubnetGroup, input, output)
	output = &CreateClusterSubnetGroupOutput{}
	req.Data = output
	return
}

func (c *Redshift) CreateClusterSubnetGroup(input *CreateClusterSubnetGroupMessage) (output *CreateClusterSubnetGroupOutput, err error) {
	req, out := c.CreateClusterSubnetGroupRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateClusterSubnetGroup *aws.Operation

// CreateEventSubscriptionRequest generates a request for the CreateEventSubscription operation.
func (c *Redshift) CreateEventSubscriptionRequest(input *CreateEventSubscriptionMessage) (req *aws.Request, output *CreateEventSubscriptionOutput) {
	if opCreateEventSubscription == nil {
		opCreateEventSubscription = &aws.Operation{
			Name:       "CreateEventSubscription",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateEventSubscription, input, output)
	output = &CreateEventSubscriptionOutput{}
	req.Data = output
	return
}

func (c *Redshift) CreateEventSubscription(input *CreateEventSubscriptionMessage) (output *CreateEventSubscriptionOutput, err error) {
	req, out := c.CreateEventSubscriptionRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateEventSubscription *aws.Operation

// CreateHSMClientCertificateRequest generates a request for the CreateHSMClientCertificate operation.
func (c *Redshift) CreateHSMClientCertificateRequest(input *CreateHSMClientCertificateMessage) (req *aws.Request, output *CreateHSMClientCertificateOutput) {
	if opCreateHSMClientCertificate == nil {
		opCreateHSMClientCertificate = &aws.Operation{
			Name:       "CreateHsmClientCertificate",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateHSMClientCertificate, input, output)
	output = &CreateHSMClientCertificateOutput{}
	req.Data = output
	return
}

func (c *Redshift) CreateHSMClientCertificate(input *CreateHSMClientCertificateMessage) (output *CreateHSMClientCertificateOutput, err error) {
	req, out := c.CreateHSMClientCertificateRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateHSMClientCertificate *aws.Operation

// CreateHSMConfigurationRequest generates a request for the CreateHSMConfiguration operation.
func (c *Redshift) CreateHSMConfigurationRequest(input *CreateHSMConfigurationMessage) (req *aws.Request, output *CreateHSMConfigurationOutput) {
	if opCreateHSMConfiguration == nil {
		opCreateHSMConfiguration = &aws.Operation{
			Name:       "CreateHsmConfiguration",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateHSMConfiguration, input, output)
	output = &CreateHSMConfigurationOutput{}
	req.Data = output
	return
}

func (c *Redshift) CreateHSMConfiguration(input *CreateHSMConfigurationMessage) (output *CreateHSMConfigurationOutput, err error) {
	req, out := c.CreateHSMConfigurationRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateHSMConfiguration *aws.Operation

// CreateTagsRequest generates a request for the CreateTags operation.
func (c *Redshift) CreateTagsRequest(input *CreateTagsMessage) (req *aws.Request) {
	if opCreateTags == nil {
		opCreateTags = &aws.Operation{
			Name:       "CreateTags",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateTags, input, nil)

	return
}

func (c *Redshift) CreateTags(input *CreateTagsMessage) (err error) {
	req := c.CreateTagsRequest(input)
	err = req.Send()
	return
}

var opCreateTags *aws.Operation

// DeleteClusterRequest generates a request for the DeleteCluster operation.
func (c *Redshift) DeleteClusterRequest(input *DeleteClusterMessage) (req *aws.Request, output *DeleteClusterOutput) {
	if opDeleteCluster == nil {
		opDeleteCluster = &aws.Operation{
			Name:       "DeleteCluster",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteCluster, input, output)
	output = &DeleteClusterOutput{}
	req.Data = output
	return
}

func (c *Redshift) DeleteCluster(input *DeleteClusterMessage) (output *DeleteClusterOutput, err error) {
	req, out := c.DeleteClusterRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteCluster *aws.Operation

// DeleteClusterParameterGroupRequest generates a request for the DeleteClusterParameterGroup operation.
func (c *Redshift) DeleteClusterParameterGroupRequest(input *DeleteClusterParameterGroupMessage) (req *aws.Request) {
	if opDeleteClusterParameterGroup == nil {
		opDeleteClusterParameterGroup = &aws.Operation{
			Name:       "DeleteClusterParameterGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteClusterParameterGroup, input, nil)

	return
}

func (c *Redshift) DeleteClusterParameterGroup(input *DeleteClusterParameterGroupMessage) (err error) {
	req := c.DeleteClusterParameterGroupRequest(input)
	err = req.Send()
	return
}

var opDeleteClusterParameterGroup *aws.Operation

// DeleteClusterSecurityGroupRequest generates a request for the DeleteClusterSecurityGroup operation.
func (c *Redshift) DeleteClusterSecurityGroupRequest(input *DeleteClusterSecurityGroupMessage) (req *aws.Request) {
	if opDeleteClusterSecurityGroup == nil {
		opDeleteClusterSecurityGroup = &aws.Operation{
			Name:       "DeleteClusterSecurityGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteClusterSecurityGroup, input, nil)

	return
}

func (c *Redshift) DeleteClusterSecurityGroup(input *DeleteClusterSecurityGroupMessage) (err error) {
	req := c.DeleteClusterSecurityGroupRequest(input)
	err = req.Send()
	return
}

var opDeleteClusterSecurityGroup *aws.Operation

// DeleteClusterSnapshotRequest generates a request for the DeleteClusterSnapshot operation.
func (c *Redshift) DeleteClusterSnapshotRequest(input *DeleteClusterSnapshotMessage) (req *aws.Request, output *DeleteClusterSnapshotOutput) {
	if opDeleteClusterSnapshot == nil {
		opDeleteClusterSnapshot = &aws.Operation{
			Name:       "DeleteClusterSnapshot",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteClusterSnapshot, input, output)
	output = &DeleteClusterSnapshotOutput{}
	req.Data = output
	return
}

func (c *Redshift) DeleteClusterSnapshot(input *DeleteClusterSnapshotMessage) (output *DeleteClusterSnapshotOutput, err error) {
	req, out := c.DeleteClusterSnapshotRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteClusterSnapshot *aws.Operation

// DeleteClusterSubnetGroupRequest generates a request for the DeleteClusterSubnetGroup operation.
func (c *Redshift) DeleteClusterSubnetGroupRequest(input *DeleteClusterSubnetGroupMessage) (req *aws.Request) {
	if opDeleteClusterSubnetGroup == nil {
		opDeleteClusterSubnetGroup = &aws.Operation{
			Name:       "DeleteClusterSubnetGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteClusterSubnetGroup, input, nil)

	return
}

func (c *Redshift) DeleteClusterSubnetGroup(input *DeleteClusterSubnetGroupMessage) (err error) {
	req := c.DeleteClusterSubnetGroupRequest(input)
	err = req.Send()
	return
}

var opDeleteClusterSubnetGroup *aws.Operation

// DeleteEventSubscriptionRequest generates a request for the DeleteEventSubscription operation.
func (c *Redshift) DeleteEventSubscriptionRequest(input *DeleteEventSubscriptionMessage) (req *aws.Request) {
	if opDeleteEventSubscription == nil {
		opDeleteEventSubscription = &aws.Operation{
			Name:       "DeleteEventSubscription",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteEventSubscription, input, nil)

	return
}

func (c *Redshift) DeleteEventSubscription(input *DeleteEventSubscriptionMessage) (err error) {
	req := c.DeleteEventSubscriptionRequest(input)
	err = req.Send()
	return
}

var opDeleteEventSubscription *aws.Operation

// DeleteHSMClientCertificateRequest generates a request for the DeleteHSMClientCertificate operation.
func (c *Redshift) DeleteHSMClientCertificateRequest(input *DeleteHSMClientCertificateMessage) (req *aws.Request) {
	if opDeleteHSMClientCertificate == nil {
		opDeleteHSMClientCertificate = &aws.Operation{
			Name:       "DeleteHsmClientCertificate",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteHSMClientCertificate, input, nil)

	return
}

func (c *Redshift) DeleteHSMClientCertificate(input *DeleteHSMClientCertificateMessage) (err error) {
	req := c.DeleteHSMClientCertificateRequest(input)
	err = req.Send()
	return
}

var opDeleteHSMClientCertificate *aws.Operation

// DeleteHSMConfigurationRequest generates a request for the DeleteHSMConfiguration operation.
func (c *Redshift) DeleteHSMConfigurationRequest(input *DeleteHSMConfigurationMessage) (req *aws.Request) {
	if opDeleteHSMConfiguration == nil {
		opDeleteHSMConfiguration = &aws.Operation{
			Name:       "DeleteHsmConfiguration",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteHSMConfiguration, input, nil)

	return
}

func (c *Redshift) DeleteHSMConfiguration(input *DeleteHSMConfigurationMessage) (err error) {
	req := c.DeleteHSMConfigurationRequest(input)
	err = req.Send()
	return
}

var opDeleteHSMConfiguration *aws.Operation

// DeleteTagsRequest generates a request for the DeleteTags operation.
func (c *Redshift) DeleteTagsRequest(input *DeleteTagsMessage) (req *aws.Request) {
	if opDeleteTags == nil {
		opDeleteTags = &aws.Operation{
			Name:       "DeleteTags",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteTags, input, nil)

	return
}

func (c *Redshift) DeleteTags(input *DeleteTagsMessage) (err error) {
	req := c.DeleteTagsRequest(input)
	err = req.Send()
	return
}

var opDeleteTags *aws.Operation

// DescribeClusterParameterGroupsRequest generates a request for the DescribeClusterParameterGroups operation.
func (c *Redshift) DescribeClusterParameterGroupsRequest(input *DescribeClusterParameterGroupsMessage) (req *aws.Request, output *ClusterParameterGroupsMessage) {
	if opDescribeClusterParameterGroups == nil {
		opDescribeClusterParameterGroups = &aws.Operation{
			Name:       "DescribeClusterParameterGroups",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeClusterParameterGroups, input, output)
	output = &ClusterParameterGroupsMessage{}
	req.Data = output
	return
}

func (c *Redshift) DescribeClusterParameterGroups(input *DescribeClusterParameterGroupsMessage) (output *ClusterParameterGroupsMessage, err error) {
	req, out := c.DescribeClusterParameterGroupsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeClusterParameterGroups *aws.Operation

// DescribeClusterParametersRequest generates a request for the DescribeClusterParameters operation.
func (c *Redshift) DescribeClusterParametersRequest(input *DescribeClusterParametersMessage) (req *aws.Request, output *ClusterParameterGroupDetails) {
	if opDescribeClusterParameters == nil {
		opDescribeClusterParameters = &aws.Operation{
			Name:       "DescribeClusterParameters",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeClusterParameters, input, output)
	output = &ClusterParameterGroupDetails{}
	req.Data = output
	return
}

func (c *Redshift) DescribeClusterParameters(input *DescribeClusterParametersMessage) (output *ClusterParameterGroupDetails, err error) {
	req, out := c.DescribeClusterParametersRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeClusterParameters *aws.Operation

// DescribeClusterSecurityGroupsRequest generates a request for the DescribeClusterSecurityGroups operation.
func (c *Redshift) DescribeClusterSecurityGroupsRequest(input *DescribeClusterSecurityGroupsMessage) (req *aws.Request, output *ClusterSecurityGroupMessage) {
	if opDescribeClusterSecurityGroups == nil {
		opDescribeClusterSecurityGroups = &aws.Operation{
			Name:       "DescribeClusterSecurityGroups",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeClusterSecurityGroups, input, output)
	output = &ClusterSecurityGroupMessage{}
	req.Data = output
	return
}

func (c *Redshift) DescribeClusterSecurityGroups(input *DescribeClusterSecurityGroupsMessage) (output *ClusterSecurityGroupMessage, err error) {
	req, out := c.DescribeClusterSecurityGroupsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeClusterSecurityGroups *aws.Operation

// DescribeClusterSnapshotsRequest generates a request for the DescribeClusterSnapshots operation.
func (c *Redshift) DescribeClusterSnapshotsRequest(input *DescribeClusterSnapshotsMessage) (req *aws.Request, output *SnapshotMessage) {
	if opDescribeClusterSnapshots == nil {
		opDescribeClusterSnapshots = &aws.Operation{
			Name:       "DescribeClusterSnapshots",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeClusterSnapshots, input, output)
	output = &SnapshotMessage{}
	req.Data = output
	return
}

func (c *Redshift) DescribeClusterSnapshots(input *DescribeClusterSnapshotsMessage) (output *SnapshotMessage, err error) {
	req, out := c.DescribeClusterSnapshotsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeClusterSnapshots *aws.Operation

// DescribeClusterSubnetGroupsRequest generates a request for the DescribeClusterSubnetGroups operation.
func (c *Redshift) DescribeClusterSubnetGroupsRequest(input *DescribeClusterSubnetGroupsMessage) (req *aws.Request, output *ClusterSubnetGroupMessage) {
	if opDescribeClusterSubnetGroups == nil {
		opDescribeClusterSubnetGroups = &aws.Operation{
			Name:       "DescribeClusterSubnetGroups",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeClusterSubnetGroups, input, output)
	output = &ClusterSubnetGroupMessage{}
	req.Data = output
	return
}

func (c *Redshift) DescribeClusterSubnetGroups(input *DescribeClusterSubnetGroupsMessage) (output *ClusterSubnetGroupMessage, err error) {
	req, out := c.DescribeClusterSubnetGroupsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeClusterSubnetGroups *aws.Operation

// DescribeClusterVersionsRequest generates a request for the DescribeClusterVersions operation.
func (c *Redshift) DescribeClusterVersionsRequest(input *DescribeClusterVersionsMessage) (req *aws.Request, output *ClusterVersionsMessage) {
	if opDescribeClusterVersions == nil {
		opDescribeClusterVersions = &aws.Operation{
			Name:       "DescribeClusterVersions",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeClusterVersions, input, output)
	output = &ClusterVersionsMessage{}
	req.Data = output
	return
}

func (c *Redshift) DescribeClusterVersions(input *DescribeClusterVersionsMessage) (output *ClusterVersionsMessage, err error) {
	req, out := c.DescribeClusterVersionsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeClusterVersions *aws.Operation

// DescribeClustersRequest generates a request for the DescribeClusters operation.
func (c *Redshift) DescribeClustersRequest(input *DescribeClustersMessage) (req *aws.Request, output *ClustersMessage) {
	if opDescribeClusters == nil {
		opDescribeClusters = &aws.Operation{
			Name:       "DescribeClusters",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeClusters, input, output)
	output = &ClustersMessage{}
	req.Data = output
	return
}

func (c *Redshift) DescribeClusters(input *DescribeClustersMessage) (output *ClustersMessage, err error) {
	req, out := c.DescribeClustersRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeClusters *aws.Operation

// DescribeDefaultClusterParametersRequest generates a request for the DescribeDefaultClusterParameters operation.
func (c *Redshift) DescribeDefaultClusterParametersRequest(input *DescribeDefaultClusterParametersMessage) (req *aws.Request, output *DescribeDefaultClusterParametersOutput) {
	if opDescribeDefaultClusterParameters == nil {
		opDescribeDefaultClusterParameters = &aws.Operation{
			Name:       "DescribeDefaultClusterParameters",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeDefaultClusterParameters, input, output)
	output = &DescribeDefaultClusterParametersOutput{}
	req.Data = output
	return
}

func (c *Redshift) DescribeDefaultClusterParameters(input *DescribeDefaultClusterParametersMessage) (output *DescribeDefaultClusterParametersOutput, err error) {
	req, out := c.DescribeDefaultClusterParametersRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeDefaultClusterParameters *aws.Operation

// DescribeEventCategoriesRequest generates a request for the DescribeEventCategories operation.
func (c *Redshift) DescribeEventCategoriesRequest(input *DescribeEventCategoriesMessage) (req *aws.Request, output *EventCategoriesMessage) {
	if opDescribeEventCategories == nil {
		opDescribeEventCategories = &aws.Operation{
			Name:       "DescribeEventCategories",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeEventCategories, input, output)
	output = &EventCategoriesMessage{}
	req.Data = output
	return
}

func (c *Redshift) DescribeEventCategories(input *DescribeEventCategoriesMessage) (output *EventCategoriesMessage, err error) {
	req, out := c.DescribeEventCategoriesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeEventCategories *aws.Operation

// DescribeEventSubscriptionsRequest generates a request for the DescribeEventSubscriptions operation.
func (c *Redshift) DescribeEventSubscriptionsRequest(input *DescribeEventSubscriptionsMessage) (req *aws.Request, output *EventSubscriptionsMessage) {
	if opDescribeEventSubscriptions == nil {
		opDescribeEventSubscriptions = &aws.Operation{
			Name:       "DescribeEventSubscriptions",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeEventSubscriptions, input, output)
	output = &EventSubscriptionsMessage{}
	req.Data = output
	return
}

func (c *Redshift) DescribeEventSubscriptions(input *DescribeEventSubscriptionsMessage) (output *EventSubscriptionsMessage, err error) {
	req, out := c.DescribeEventSubscriptionsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeEventSubscriptions *aws.Operation

// DescribeEventsRequest generates a request for the DescribeEvents operation.
func (c *Redshift) DescribeEventsRequest(input *DescribeEventsMessage) (req *aws.Request, output *EventsMessage) {
	if opDescribeEvents == nil {
		opDescribeEvents = &aws.Operation{
			Name:       "DescribeEvents",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeEvents, input, output)
	output = &EventsMessage{}
	req.Data = output
	return
}

func (c *Redshift) DescribeEvents(input *DescribeEventsMessage) (output *EventsMessage, err error) {
	req, out := c.DescribeEventsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeEvents *aws.Operation

// DescribeHSMClientCertificatesRequest generates a request for the DescribeHSMClientCertificates operation.
func (c *Redshift) DescribeHSMClientCertificatesRequest(input *DescribeHSMClientCertificatesMessage) (req *aws.Request, output *HSMClientCertificateMessage) {
	if opDescribeHSMClientCertificates == nil {
		opDescribeHSMClientCertificates = &aws.Operation{
			Name:       "DescribeHsmClientCertificates",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeHSMClientCertificates, input, output)
	output = &HSMClientCertificateMessage{}
	req.Data = output
	return
}

func (c *Redshift) DescribeHSMClientCertificates(input *DescribeHSMClientCertificatesMessage) (output *HSMClientCertificateMessage, err error) {
	req, out := c.DescribeHSMClientCertificatesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeHSMClientCertificates *aws.Operation

// DescribeHSMConfigurationsRequest generates a request for the DescribeHSMConfigurations operation.
func (c *Redshift) DescribeHSMConfigurationsRequest(input *DescribeHSMConfigurationsMessage) (req *aws.Request, output *HSMConfigurationMessage) {
	if opDescribeHSMConfigurations == nil {
		opDescribeHSMConfigurations = &aws.Operation{
			Name:       "DescribeHsmConfigurations",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeHSMConfigurations, input, output)
	output = &HSMConfigurationMessage{}
	req.Data = output
	return
}

func (c *Redshift) DescribeHSMConfigurations(input *DescribeHSMConfigurationsMessage) (output *HSMConfigurationMessage, err error) {
	req, out := c.DescribeHSMConfigurationsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeHSMConfigurations *aws.Operation

// DescribeLoggingStatusRequest generates a request for the DescribeLoggingStatus operation.
func (c *Redshift) DescribeLoggingStatusRequest(input *DescribeLoggingStatusMessage) (req *aws.Request, output *LoggingStatus) {
	if opDescribeLoggingStatus == nil {
		opDescribeLoggingStatus = &aws.Operation{
			Name:       "DescribeLoggingStatus",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeLoggingStatus, input, output)
	output = &LoggingStatus{}
	req.Data = output
	return
}

func (c *Redshift) DescribeLoggingStatus(input *DescribeLoggingStatusMessage) (output *LoggingStatus, err error) {
	req, out := c.DescribeLoggingStatusRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeLoggingStatus *aws.Operation

// DescribeOrderableClusterOptionsRequest generates a request for the DescribeOrderableClusterOptions operation.
func (c *Redshift) DescribeOrderableClusterOptionsRequest(input *DescribeOrderableClusterOptionsMessage) (req *aws.Request, output *OrderableClusterOptionsMessage) {
	if opDescribeOrderableClusterOptions == nil {
		opDescribeOrderableClusterOptions = &aws.Operation{
			Name:       "DescribeOrderableClusterOptions",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeOrderableClusterOptions, input, output)
	output = &OrderableClusterOptionsMessage{}
	req.Data = output
	return
}

func (c *Redshift) DescribeOrderableClusterOptions(input *DescribeOrderableClusterOptionsMessage) (output *OrderableClusterOptionsMessage, err error) {
	req, out := c.DescribeOrderableClusterOptionsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeOrderableClusterOptions *aws.Operation

// DescribeReservedNodeOfferingsRequest generates a request for the DescribeReservedNodeOfferings operation.
func (c *Redshift) DescribeReservedNodeOfferingsRequest(input *DescribeReservedNodeOfferingsMessage) (req *aws.Request, output *ReservedNodeOfferingsMessage) {
	if opDescribeReservedNodeOfferings == nil {
		opDescribeReservedNodeOfferings = &aws.Operation{
			Name:       "DescribeReservedNodeOfferings",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeReservedNodeOfferings, input, output)
	output = &ReservedNodeOfferingsMessage{}
	req.Data = output
	return
}

func (c *Redshift) DescribeReservedNodeOfferings(input *DescribeReservedNodeOfferingsMessage) (output *ReservedNodeOfferingsMessage, err error) {
	req, out := c.DescribeReservedNodeOfferingsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeReservedNodeOfferings *aws.Operation

// DescribeReservedNodesRequest generates a request for the DescribeReservedNodes operation.
func (c *Redshift) DescribeReservedNodesRequest(input *DescribeReservedNodesMessage) (req *aws.Request, output *ReservedNodesMessage) {
	if opDescribeReservedNodes == nil {
		opDescribeReservedNodes = &aws.Operation{
			Name:       "DescribeReservedNodes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeReservedNodes, input, output)
	output = &ReservedNodesMessage{}
	req.Data = output
	return
}

func (c *Redshift) DescribeReservedNodes(input *DescribeReservedNodesMessage) (output *ReservedNodesMessage, err error) {
	req, out := c.DescribeReservedNodesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeReservedNodes *aws.Operation

// DescribeResizeRequest generates a request for the DescribeResize operation.
func (c *Redshift) DescribeResizeRequest(input *DescribeResizeMessage) (req *aws.Request, output *ResizeProgressMessage) {
	if opDescribeResize == nil {
		opDescribeResize = &aws.Operation{
			Name:       "DescribeResize",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeResize, input, output)
	output = &ResizeProgressMessage{}
	req.Data = output
	return
}

func (c *Redshift) DescribeResize(input *DescribeResizeMessage) (output *ResizeProgressMessage, err error) {
	req, out := c.DescribeResizeRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeResize *aws.Operation

// DescribeTagsRequest generates a request for the DescribeTags operation.
func (c *Redshift) DescribeTagsRequest(input *DescribeTagsMessage) (req *aws.Request, output *TaggedResourceListMessage) {
	if opDescribeTags == nil {
		opDescribeTags = &aws.Operation{
			Name:       "DescribeTags",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeTags, input, output)
	output = &TaggedResourceListMessage{}
	req.Data = output
	return
}

func (c *Redshift) DescribeTags(input *DescribeTagsMessage) (output *TaggedResourceListMessage, err error) {
	req, out := c.DescribeTagsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeTags *aws.Operation

// DisableLoggingRequest generates a request for the DisableLogging operation.
func (c *Redshift) DisableLoggingRequest(input *DisableLoggingMessage) (req *aws.Request, output *LoggingStatus) {
	if opDisableLogging == nil {
		opDisableLogging = &aws.Operation{
			Name:       "DisableLogging",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDisableLogging, input, output)
	output = &LoggingStatus{}
	req.Data = output
	return
}

func (c *Redshift) DisableLogging(input *DisableLoggingMessage) (output *LoggingStatus, err error) {
	req, out := c.DisableLoggingRequest(input)
	output = out
	err = req.Send()
	return
}

var opDisableLogging *aws.Operation

// DisableSnapshotCopyRequest generates a request for the DisableSnapshotCopy operation.
func (c *Redshift) DisableSnapshotCopyRequest(input *DisableSnapshotCopyMessage) (req *aws.Request, output *DisableSnapshotCopyOutput) {
	if opDisableSnapshotCopy == nil {
		opDisableSnapshotCopy = &aws.Operation{
			Name:       "DisableSnapshotCopy",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDisableSnapshotCopy, input, output)
	output = &DisableSnapshotCopyOutput{}
	req.Data = output
	return
}

func (c *Redshift) DisableSnapshotCopy(input *DisableSnapshotCopyMessage) (output *DisableSnapshotCopyOutput, err error) {
	req, out := c.DisableSnapshotCopyRequest(input)
	output = out
	err = req.Send()
	return
}

var opDisableSnapshotCopy *aws.Operation

// EnableLoggingRequest generates a request for the EnableLogging operation.
func (c *Redshift) EnableLoggingRequest(input *EnableLoggingMessage) (req *aws.Request, output *LoggingStatus) {
	if opEnableLogging == nil {
		opEnableLogging = &aws.Operation{
			Name:       "EnableLogging",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opEnableLogging, input, output)
	output = &LoggingStatus{}
	req.Data = output
	return
}

func (c *Redshift) EnableLogging(input *EnableLoggingMessage) (output *LoggingStatus, err error) {
	req, out := c.EnableLoggingRequest(input)
	output = out
	err = req.Send()
	return
}

var opEnableLogging *aws.Operation

// EnableSnapshotCopyRequest generates a request for the EnableSnapshotCopy operation.
func (c *Redshift) EnableSnapshotCopyRequest(input *EnableSnapshotCopyMessage) (req *aws.Request, output *EnableSnapshotCopyOutput) {
	if opEnableSnapshotCopy == nil {
		opEnableSnapshotCopy = &aws.Operation{
			Name:       "EnableSnapshotCopy",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opEnableSnapshotCopy, input, output)
	output = &EnableSnapshotCopyOutput{}
	req.Data = output
	return
}

func (c *Redshift) EnableSnapshotCopy(input *EnableSnapshotCopyMessage) (output *EnableSnapshotCopyOutput, err error) {
	req, out := c.EnableSnapshotCopyRequest(input)
	output = out
	err = req.Send()
	return
}

var opEnableSnapshotCopy *aws.Operation

// ModifyClusterRequest generates a request for the ModifyCluster operation.
func (c *Redshift) ModifyClusterRequest(input *ModifyClusterMessage) (req *aws.Request, output *ModifyClusterOutput) {
	if opModifyCluster == nil {
		opModifyCluster = &aws.Operation{
			Name:       "ModifyCluster",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opModifyCluster, input, output)
	output = &ModifyClusterOutput{}
	req.Data = output
	return
}

func (c *Redshift) ModifyCluster(input *ModifyClusterMessage) (output *ModifyClusterOutput, err error) {
	req, out := c.ModifyClusterRequest(input)
	output = out
	err = req.Send()
	return
}

var opModifyCluster *aws.Operation

// ModifyClusterParameterGroupRequest generates a request for the ModifyClusterParameterGroup operation.
func (c *Redshift) ModifyClusterParameterGroupRequest(input *ModifyClusterParameterGroupMessage) (req *aws.Request, output *ClusterParameterGroupNameMessage) {
	if opModifyClusterParameterGroup == nil {
		opModifyClusterParameterGroup = &aws.Operation{
			Name:       "ModifyClusterParameterGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opModifyClusterParameterGroup, input, output)
	output = &ClusterParameterGroupNameMessage{}
	req.Data = output
	return
}

func (c *Redshift) ModifyClusterParameterGroup(input *ModifyClusterParameterGroupMessage) (output *ClusterParameterGroupNameMessage, err error) {
	req, out := c.ModifyClusterParameterGroupRequest(input)
	output = out
	err = req.Send()
	return
}

var opModifyClusterParameterGroup *aws.Operation

// ModifyClusterSubnetGroupRequest generates a request for the ModifyClusterSubnetGroup operation.
func (c *Redshift) ModifyClusterSubnetGroupRequest(input *ModifyClusterSubnetGroupMessage) (req *aws.Request, output *ModifyClusterSubnetGroupOutput) {
	if opModifyClusterSubnetGroup == nil {
		opModifyClusterSubnetGroup = &aws.Operation{
			Name:       "ModifyClusterSubnetGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opModifyClusterSubnetGroup, input, output)
	output = &ModifyClusterSubnetGroupOutput{}
	req.Data = output
	return
}

func (c *Redshift) ModifyClusterSubnetGroup(input *ModifyClusterSubnetGroupMessage) (output *ModifyClusterSubnetGroupOutput, err error) {
	req, out := c.ModifyClusterSubnetGroupRequest(input)
	output = out
	err = req.Send()
	return
}

var opModifyClusterSubnetGroup *aws.Operation

// ModifyEventSubscriptionRequest generates a request for the ModifyEventSubscription operation.
func (c *Redshift) ModifyEventSubscriptionRequest(input *ModifyEventSubscriptionMessage) (req *aws.Request, output *ModifyEventSubscriptionOutput) {
	if opModifyEventSubscription == nil {
		opModifyEventSubscription = &aws.Operation{
			Name:       "ModifyEventSubscription",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opModifyEventSubscription, input, output)
	output = &ModifyEventSubscriptionOutput{}
	req.Data = output
	return
}

func (c *Redshift) ModifyEventSubscription(input *ModifyEventSubscriptionMessage) (output *ModifyEventSubscriptionOutput, err error) {
	req, out := c.ModifyEventSubscriptionRequest(input)
	output = out
	err = req.Send()
	return
}

var opModifyEventSubscription *aws.Operation

// ModifySnapshotCopyRetentionPeriodRequest generates a request for the ModifySnapshotCopyRetentionPeriod operation.
func (c *Redshift) ModifySnapshotCopyRetentionPeriodRequest(input *ModifySnapshotCopyRetentionPeriodMessage) (req *aws.Request, output *ModifySnapshotCopyRetentionPeriodOutput) {
	if opModifySnapshotCopyRetentionPeriod == nil {
		opModifySnapshotCopyRetentionPeriod = &aws.Operation{
			Name:       "ModifySnapshotCopyRetentionPeriod",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opModifySnapshotCopyRetentionPeriod, input, output)
	output = &ModifySnapshotCopyRetentionPeriodOutput{}
	req.Data = output
	return
}

func (c *Redshift) ModifySnapshotCopyRetentionPeriod(input *ModifySnapshotCopyRetentionPeriodMessage) (output *ModifySnapshotCopyRetentionPeriodOutput, err error) {
	req, out := c.ModifySnapshotCopyRetentionPeriodRequest(input)
	output = out
	err = req.Send()
	return
}

var opModifySnapshotCopyRetentionPeriod *aws.Operation

// PurchaseReservedNodeOfferingRequest generates a request for the PurchaseReservedNodeOffering operation.
func (c *Redshift) PurchaseReservedNodeOfferingRequest(input *PurchaseReservedNodeOfferingMessage) (req *aws.Request, output *PurchaseReservedNodeOfferingOutput) {
	if opPurchaseReservedNodeOffering == nil {
		opPurchaseReservedNodeOffering = &aws.Operation{
			Name:       "PurchaseReservedNodeOffering",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opPurchaseReservedNodeOffering, input, output)
	output = &PurchaseReservedNodeOfferingOutput{}
	req.Data = output
	return
}

func (c *Redshift) PurchaseReservedNodeOffering(input *PurchaseReservedNodeOfferingMessage) (output *PurchaseReservedNodeOfferingOutput, err error) {
	req, out := c.PurchaseReservedNodeOfferingRequest(input)
	output = out
	err = req.Send()
	return
}

var opPurchaseReservedNodeOffering *aws.Operation

// RebootClusterRequest generates a request for the RebootCluster operation.
func (c *Redshift) RebootClusterRequest(input *RebootClusterMessage) (req *aws.Request, output *RebootClusterOutput) {
	if opRebootCluster == nil {
		opRebootCluster = &aws.Operation{
			Name:       "RebootCluster",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRebootCluster, input, output)
	output = &RebootClusterOutput{}
	req.Data = output
	return
}

func (c *Redshift) RebootCluster(input *RebootClusterMessage) (output *RebootClusterOutput, err error) {
	req, out := c.RebootClusterRequest(input)
	output = out
	err = req.Send()
	return
}

var opRebootCluster *aws.Operation

// ResetClusterParameterGroupRequest generates a request for the ResetClusterParameterGroup operation.
func (c *Redshift) ResetClusterParameterGroupRequest(input *ResetClusterParameterGroupMessage) (req *aws.Request, output *ClusterParameterGroupNameMessage) {
	if opResetClusterParameterGroup == nil {
		opResetClusterParameterGroup = &aws.Operation{
			Name:       "ResetClusterParameterGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opResetClusterParameterGroup, input, output)
	output = &ClusterParameterGroupNameMessage{}
	req.Data = output
	return
}

func (c *Redshift) ResetClusterParameterGroup(input *ResetClusterParameterGroupMessage) (output *ClusterParameterGroupNameMessage, err error) {
	req, out := c.ResetClusterParameterGroupRequest(input)
	output = out
	err = req.Send()
	return
}

var opResetClusterParameterGroup *aws.Operation

// RestoreFromClusterSnapshotRequest generates a request for the RestoreFromClusterSnapshot operation.
func (c *Redshift) RestoreFromClusterSnapshotRequest(input *RestoreFromClusterSnapshotMessage) (req *aws.Request, output *RestoreFromClusterSnapshotOutput) {
	if opRestoreFromClusterSnapshot == nil {
		opRestoreFromClusterSnapshot = &aws.Operation{
			Name:       "RestoreFromClusterSnapshot",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRestoreFromClusterSnapshot, input, output)
	output = &RestoreFromClusterSnapshotOutput{}
	req.Data = output
	return
}

func (c *Redshift) RestoreFromClusterSnapshot(input *RestoreFromClusterSnapshotMessage) (output *RestoreFromClusterSnapshotOutput, err error) {
	req, out := c.RestoreFromClusterSnapshotRequest(input)
	output = out
	err = req.Send()
	return
}

var opRestoreFromClusterSnapshot *aws.Operation

// RevokeClusterSecurityGroupIngressRequest generates a request for the RevokeClusterSecurityGroupIngress operation.
func (c *Redshift) RevokeClusterSecurityGroupIngressRequest(input *RevokeClusterSecurityGroupIngressMessage) (req *aws.Request, output *RevokeClusterSecurityGroupIngressOutput) {
	if opRevokeClusterSecurityGroupIngress == nil {
		opRevokeClusterSecurityGroupIngress = &aws.Operation{
			Name:       "RevokeClusterSecurityGroupIngress",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRevokeClusterSecurityGroupIngress, input, output)
	output = &RevokeClusterSecurityGroupIngressOutput{}
	req.Data = output
	return
}

func (c *Redshift) RevokeClusterSecurityGroupIngress(input *RevokeClusterSecurityGroupIngressMessage) (output *RevokeClusterSecurityGroupIngressOutput, err error) {
	req, out := c.RevokeClusterSecurityGroupIngressRequest(input)
	output = out
	err = req.Send()
	return
}

var opRevokeClusterSecurityGroupIngress *aws.Operation

// RevokeSnapshotAccessRequest generates a request for the RevokeSnapshotAccess operation.
func (c *Redshift) RevokeSnapshotAccessRequest(input *RevokeSnapshotAccessMessage) (req *aws.Request, output *RevokeSnapshotAccessOutput) {
	if opRevokeSnapshotAccess == nil {
		opRevokeSnapshotAccess = &aws.Operation{
			Name:       "RevokeSnapshotAccess",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRevokeSnapshotAccess, input, output)
	output = &RevokeSnapshotAccessOutput{}
	req.Data = output
	return
}

func (c *Redshift) RevokeSnapshotAccess(input *RevokeSnapshotAccessMessage) (output *RevokeSnapshotAccessOutput, err error) {
	req, out := c.RevokeSnapshotAccessRequest(input)
	output = out
	err = req.Send()
	return
}

var opRevokeSnapshotAccess *aws.Operation

// RotateEncryptionKeyRequest generates a request for the RotateEncryptionKey operation.
func (c *Redshift) RotateEncryptionKeyRequest(input *RotateEncryptionKeyMessage) (req *aws.Request, output *RotateEncryptionKeyOutput) {
	if opRotateEncryptionKey == nil {
		opRotateEncryptionKey = &aws.Operation{
			Name:       "RotateEncryptionKey",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRotateEncryptionKey, input, output)
	output = &RotateEncryptionKeyOutput{}
	req.Data = output
	return
}

func (c *Redshift) RotateEncryptionKey(input *RotateEncryptionKeyMessage) (output *RotateEncryptionKeyOutput, err error) {
	req, out := c.RotateEncryptionKeyRequest(input)
	output = out
	err = req.Send()
	return
}

var opRotateEncryptionKey *aws.Operation

type AccessToSnapshotDeniedFault struct {
	metadataAccessToSnapshotDeniedFault `json:"-", xml:"-"`
}

type metadataAccessToSnapshotDeniedFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type AccountWithRestoreAccess struct {
	AccountID *string `locationName:"AccountId" type:"string"`

	metadataAccountWithRestoreAccess `json:"-", xml:"-"`
}

type metadataAccountWithRestoreAccess struct {
	SDKShapeTraits bool `type:"structure"`
}

type AuthorizationAlreadyExistsFault struct {
	metadataAuthorizationAlreadyExistsFault `json:"-", xml:"-"`
}

type metadataAuthorizationAlreadyExistsFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type AuthorizationNotFoundFault struct {
	metadataAuthorizationNotFoundFault `json:"-", xml:"-"`
}

type metadataAuthorizationNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type AuthorizationQuotaExceededFault struct {
	metadataAuthorizationQuotaExceededFault `json:"-", xml:"-"`
}

type metadataAuthorizationQuotaExceededFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type AuthorizeClusterSecurityGroupIngressMessage struct {
	CIDRIP                   *string `type:"string"`
	ClusterSecurityGroupName *string `type:"string"`
	EC2SecurityGroupName     *string `type:"string"`
	EC2SecurityGroupOwnerID  *string `locationName:"EC2SecurityGroupOwnerId" type:"string"`

	metadataAuthorizeClusterSecurityGroupIngressMessage `json:"-", xml:"-"`
}

type metadataAuthorizeClusterSecurityGroupIngressMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterSecurityGroupName"`
}

type AuthorizeClusterSecurityGroupIngressOutput struct {
	ClusterSecurityGroup *ClusterSecurityGroup `type:"structure"`

	metadataAuthorizeClusterSecurityGroupIngressOutput `json:"-", xml:"-"`
}

type metadataAuthorizeClusterSecurityGroupIngressOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"AuthorizeClusterSecurityGroupIngressResult"`
}

type AuthorizeSnapshotAccessMessage struct {
	AccountWithRestoreAccess  *string `type:"string"`
	SnapshotClusterIdentifier *string `type:"string"`
	SnapshotIdentifier        *string `type:"string"`

	metadataAuthorizeSnapshotAccessMessage `json:"-", xml:"-"`
}

type metadataAuthorizeSnapshotAccessMessage struct {
	SDKShapeTraits bool `type:"structure" required:"SnapshotIdentifier,AccountWithRestoreAccess"`
}

type AuthorizeSnapshotAccessOutput struct {
	Snapshot *Snapshot `type:"structure"`

	metadataAuthorizeSnapshotAccessOutput `json:"-", xml:"-"`
}

type metadataAuthorizeSnapshotAccessOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"AuthorizeSnapshotAccessResult"`
}

type AvailabilityZone struct {
	Name *string `type:"string"`

	metadataAvailabilityZone `json:"-", xml:"-"`
}

type metadataAvailabilityZone struct {
	SDKShapeTraits bool `type:"structure"`
}

type BucketNotFoundFault struct {
	metadataBucketNotFoundFault `json:"-", xml:"-"`
}

type metadataBucketNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type Cluster struct {
	AllowVersionUpgrade              *bool                             `type:"boolean"`
	AutomatedSnapshotRetentionPeriod *int                              `type:"integer"`
	AvailabilityZone                 *string                           `type:"string"`
	ClusterCreateTime                *time.Time                        `type:"timestamp" timestampFormat:"iso8601"`
	ClusterIdentifier                *string                           `type:"string"`
	ClusterNodes                     []*ClusterNode                    `type:"list"`
	ClusterParameterGroups           []*ClusterParameterGroupStatus    `locationNameList:"ClusterParameterGroup" type:"list"`
	ClusterPublicKey                 *string                           `type:"string"`
	ClusterRevisionNumber            *string                           `type:"string"`
	ClusterSecurityGroups            []*ClusterSecurityGroupMembership `locationNameList:"ClusterSecurityGroup" type:"list"`
	ClusterSnapshotCopyStatus        *ClusterSnapshotCopyStatus        `type:"structure"`
	ClusterStatus                    *string                           `type:"string"`
	ClusterSubnetGroupName           *string                           `type:"string"`
	ClusterVersion                   *string                           `type:"string"`
	DBName                           *string                           `type:"string"`
	ElasticIPStatus                  *ElasticIPStatus                  `locationName:"ElasticIpStatus" type:"structure"`
	Encrypted                        *bool                             `type:"boolean"`
	Endpoint                         *Endpoint                         `type:"structure"`
	HSMStatus                        *HSMStatus                        `locationName:"HsmStatus" type:"structure"`
	KMSKeyID                         *string                           `locationName:"KmsKeyId" type:"string"`
	MasterUsername                   *string                           `type:"string"`
	ModifyStatus                     *string                           `type:"string"`
	NodeType                         *string                           `type:"string"`
	NumberOfNodes                    *int                              `type:"integer"`
	PendingModifiedValues            *PendingModifiedValues            `type:"structure"`
	PreferredMaintenanceWindow       *string                           `type:"string"`
	PubliclyAccessible               *bool                             `type:"boolean"`
	RestoreStatus                    *RestoreStatus                    `type:"structure"`
	Tags                             []*Tag                            `locationNameList:"Tag" type:"list"`
	VPCID                            *string                           `locationName:"VpcId" type:"string"`
	VPCSecurityGroups                []*VPCSecurityGroupMembership     `locationName:"VpcSecurityGroups" locationNameList:"VpcSecurityGroup" type:"list"`

	metadataCluster `json:"-", xml:"-"`
}

type metadataCluster struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterAlreadyExistsFault struct {
	metadataClusterAlreadyExistsFault `json:"-", xml:"-"`
}

type metadataClusterAlreadyExistsFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterNode struct {
	NodeRole         *string `type:"string"`
	PrivateIPAddress *string `type:"string"`
	PublicIPAddress  *string `type:"string"`

	metadataClusterNode `json:"-", xml:"-"`
}

type metadataClusterNode struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterNotFoundFault struct {
	metadataClusterNotFoundFault `json:"-", xml:"-"`
}

type metadataClusterNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterParameterGroup struct {
	Description          *string `type:"string"`
	ParameterGroupFamily *string `type:"string"`
	ParameterGroupName   *string `type:"string"`
	Tags                 []*Tag  `locationNameList:"Tag" type:"list"`

	metadataClusterParameterGroup `json:"-", xml:"-"`
}

type metadataClusterParameterGroup struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterParameterGroupAlreadyExistsFault struct {
	metadataClusterParameterGroupAlreadyExistsFault `json:"-", xml:"-"`
}

type metadataClusterParameterGroupAlreadyExistsFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterParameterGroupDetails struct {
	Marker     *string      `type:"string"`
	Parameters []*Parameter `locationNameList:"Parameter" type:"list"`

	metadataClusterParameterGroupDetails `json:"-", xml:"-"`
}

type metadataClusterParameterGroupDetails struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeClusterParametersResult"`
}

type ClusterParameterGroupNameMessage struct {
	ParameterGroupName   *string `type:"string"`
	ParameterGroupStatus *string `type:"string"`

	metadataClusterParameterGroupNameMessage `json:"-", xml:"-"`
}

type metadataClusterParameterGroupNameMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"ModifyClusterParameterGroupResult"`
}

type ClusterParameterGroupNotFoundFault struct {
	metadataClusterParameterGroupNotFoundFault `json:"-", xml:"-"`
}

type metadataClusterParameterGroupNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterParameterGroupQuotaExceededFault struct {
	metadataClusterParameterGroupQuotaExceededFault `json:"-", xml:"-"`
}

type metadataClusterParameterGroupQuotaExceededFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterParameterGroupStatus struct {
	ParameterApplyStatus *string `type:"string"`
	ParameterGroupName   *string `type:"string"`

	metadataClusterParameterGroupStatus `json:"-", xml:"-"`
}

type metadataClusterParameterGroupStatus struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterParameterGroupsMessage struct {
	Marker          *string                  `type:"string"`
	ParameterGroups []*ClusterParameterGroup `locationNameList:"ClusterParameterGroup" type:"list"`

	metadataClusterParameterGroupsMessage `json:"-", xml:"-"`
}

type metadataClusterParameterGroupsMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeClusterParameterGroupsResult"`
}

type ClusterQuotaExceededFault struct {
	metadataClusterQuotaExceededFault `json:"-", xml:"-"`
}

type metadataClusterQuotaExceededFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterSecurityGroup struct {
	ClusterSecurityGroupName *string             `type:"string"`
	Description              *string             `type:"string"`
	EC2SecurityGroups        []*EC2SecurityGroup `locationNameList:"EC2SecurityGroup" type:"list"`
	IPRanges                 []*IPRange          `locationNameList:"IPRange" type:"list"`
	Tags                     []*Tag              `locationNameList:"Tag" type:"list"`

	metadataClusterSecurityGroup `json:"-", xml:"-"`
}

type metadataClusterSecurityGroup struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterSecurityGroupAlreadyExistsFault struct {
	metadataClusterSecurityGroupAlreadyExistsFault `json:"-", xml:"-"`
}

type metadataClusterSecurityGroupAlreadyExistsFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterSecurityGroupMembership struct {
	ClusterSecurityGroupName *string `type:"string"`
	Status                   *string `type:"string"`

	metadataClusterSecurityGroupMembership `json:"-", xml:"-"`
}

type metadataClusterSecurityGroupMembership struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterSecurityGroupMessage struct {
	ClusterSecurityGroups []*ClusterSecurityGroup `locationNameList:"ClusterSecurityGroup" type:"list"`
	Marker                *string                 `type:"string"`

	metadataClusterSecurityGroupMessage `json:"-", xml:"-"`
}

type metadataClusterSecurityGroupMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeClusterSecurityGroupsResult"`
}

type ClusterSecurityGroupNotFoundFault struct {
	metadataClusterSecurityGroupNotFoundFault `json:"-", xml:"-"`
}

type metadataClusterSecurityGroupNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterSecurityGroupQuotaExceededFault struct {
	metadataClusterSecurityGroupQuotaExceededFault `json:"-", xml:"-"`
}

type metadataClusterSecurityGroupQuotaExceededFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterSnapshotAlreadyExistsFault struct {
	metadataClusterSnapshotAlreadyExistsFault `json:"-", xml:"-"`
}

type metadataClusterSnapshotAlreadyExistsFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterSnapshotCopyStatus struct {
	DestinationRegion *string `type:"string"`
	RetentionPeriod   *int64  `type:"long"`

	metadataClusterSnapshotCopyStatus `json:"-", xml:"-"`
}

type metadataClusterSnapshotCopyStatus struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterSnapshotNotFoundFault struct {
	metadataClusterSnapshotNotFoundFault `json:"-", xml:"-"`
}

type metadataClusterSnapshotNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterSnapshotQuotaExceededFault struct {
	metadataClusterSnapshotQuotaExceededFault `json:"-", xml:"-"`
}

type metadataClusterSnapshotQuotaExceededFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterSubnetGroup struct {
	ClusterSubnetGroupName *string   `type:"string"`
	Description            *string   `type:"string"`
	SubnetGroupStatus      *string   `type:"string"`
	Subnets                []*Subnet `locationNameList:"Subnet" type:"list"`
	Tags                   []*Tag    `locationNameList:"Tag" type:"list"`
	VPCID                  *string   `locationName:"VpcId" type:"string"`

	metadataClusterSubnetGroup `json:"-", xml:"-"`
}

type metadataClusterSubnetGroup struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterSubnetGroupAlreadyExistsFault struct {
	metadataClusterSubnetGroupAlreadyExistsFault `json:"-", xml:"-"`
}

type metadataClusterSubnetGroupAlreadyExistsFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterSubnetGroupMessage struct {
	ClusterSubnetGroups []*ClusterSubnetGroup `locationNameList:"ClusterSubnetGroup" type:"list"`
	Marker              *string               `type:"string"`

	metadataClusterSubnetGroupMessage `json:"-", xml:"-"`
}

type metadataClusterSubnetGroupMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeClusterSubnetGroupsResult"`
}

type ClusterSubnetGroupNotFoundFault struct {
	metadataClusterSubnetGroupNotFoundFault `json:"-", xml:"-"`
}

type metadataClusterSubnetGroupNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterSubnetGroupQuotaExceededFault struct {
	metadataClusterSubnetGroupQuotaExceededFault `json:"-", xml:"-"`
}

type metadataClusterSubnetGroupQuotaExceededFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterSubnetQuotaExceededFault struct {
	metadataClusterSubnetQuotaExceededFault `json:"-", xml:"-"`
}

type metadataClusterSubnetQuotaExceededFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterVersion struct {
	ClusterParameterGroupFamily *string `type:"string"`
	ClusterVersion              *string `type:"string"`
	Description                 *string `type:"string"`

	metadataClusterVersion `json:"-", xml:"-"`
}

type metadataClusterVersion struct {
	SDKShapeTraits bool `type:"structure"`
}

type ClusterVersionsMessage struct {
	ClusterVersions []*ClusterVersion `locationNameList:"ClusterVersion" type:"list"`
	Marker          *string           `type:"string"`

	metadataClusterVersionsMessage `json:"-", xml:"-"`
}

type metadataClusterVersionsMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeClusterVersionsResult"`
}

type ClustersMessage struct {
	Clusters []*Cluster `locationNameList:"Cluster" type:"list"`
	Marker   *string    `type:"string"`

	metadataClustersMessage `json:"-", xml:"-"`
}

type metadataClustersMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeClustersResult"`
}

type CopyClusterSnapshotMessage struct {
	SourceSnapshotClusterIdentifier *string `type:"string"`
	SourceSnapshotIdentifier        *string `type:"string"`
	TargetSnapshotIdentifier        *string `type:"string"`

	metadataCopyClusterSnapshotMessage `json:"-", xml:"-"`
}

type metadataCopyClusterSnapshotMessage struct {
	SDKShapeTraits bool `type:"structure" required:"SourceSnapshotIdentifier,TargetSnapshotIdentifier"`
}

type CopyClusterSnapshotOutput struct {
	Snapshot *Snapshot `type:"structure"`

	metadataCopyClusterSnapshotOutput `json:"-", xml:"-"`
}

type metadataCopyClusterSnapshotOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"CopyClusterSnapshotResult"`
}

type CopyToRegionDisabledFault struct {
	metadataCopyToRegionDisabledFault `json:"-", xml:"-"`
}

type metadataCopyToRegionDisabledFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type CreateClusterMessage struct {
	AllowVersionUpgrade              *bool     `type:"boolean"`
	AutomatedSnapshotRetentionPeriod *int      `type:"integer"`
	AvailabilityZone                 *string   `type:"string"`
	ClusterIdentifier                *string   `type:"string"`
	ClusterParameterGroupName        *string   `type:"string"`
	ClusterSecurityGroups            []*string `locationNameList:"ClusterSecurityGroupName" type:"list"`
	ClusterSubnetGroupName           *string   `type:"string"`
	ClusterType                      *string   `type:"string"`
	ClusterVersion                   *string   `type:"string"`
	DBName                           *string   `type:"string"`
	ElasticIP                        *string   `locationName:"ElasticIp" type:"string"`
	Encrypted                        *bool     `type:"boolean"`
	HSMClientCertificateIdentifier   *string   `locationName:"HsmClientCertificateIdentifier" type:"string"`
	HSMConfigurationIdentifier       *string   `locationName:"HsmConfigurationIdentifier" type:"string"`
	KMSKeyID                         *string   `locationName:"KmsKeyId" type:"string"`
	MasterUserPassword               *string   `type:"string"`
	MasterUsername                   *string   `type:"string"`
	NodeType                         *string   `type:"string"`
	NumberOfNodes                    *int      `type:"integer"`
	Port                             *int      `type:"integer"`
	PreferredMaintenanceWindow       *string   `type:"string"`
	PubliclyAccessible               *bool     `type:"boolean"`
	Tags                             []*Tag    `locationNameList:"Tag" type:"list"`
	VPCSecurityGroupIDs              []*string `locationName:"VpcSecurityGroupIds" locationNameList:"VpcSecurityGroupId" type:"list"`

	metadataCreateClusterMessage `json:"-", xml:"-"`
}

type metadataCreateClusterMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterIdentifier,NodeType,MasterUsername,MasterUserPassword"`
}

type CreateClusterOutput struct {
	Cluster *Cluster `type:"structure"`

	metadataCreateClusterOutput `json:"-", xml:"-"`
}

type metadataCreateClusterOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"CreateClusterResult"`
}

type CreateClusterParameterGroupMessage struct {
	Description          *string `type:"string"`
	ParameterGroupFamily *string `type:"string"`
	ParameterGroupName   *string `type:"string"`
	Tags                 []*Tag  `locationNameList:"Tag" type:"list"`

	metadataCreateClusterParameterGroupMessage `json:"-", xml:"-"`
}

type metadataCreateClusterParameterGroupMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ParameterGroupName,ParameterGroupFamily,Description"`
}

type CreateClusterParameterGroupOutput struct {
	ClusterParameterGroup *ClusterParameterGroup `type:"structure"`

	metadataCreateClusterParameterGroupOutput `json:"-", xml:"-"`
}

type metadataCreateClusterParameterGroupOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"CreateClusterParameterGroupResult"`
}

type CreateClusterSecurityGroupMessage struct {
	ClusterSecurityGroupName *string `type:"string"`
	Description              *string `type:"string"`
	Tags                     []*Tag  `locationNameList:"Tag" type:"list"`

	metadataCreateClusterSecurityGroupMessage `json:"-", xml:"-"`
}

type metadataCreateClusterSecurityGroupMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterSecurityGroupName,Description"`
}

type CreateClusterSecurityGroupOutput struct {
	ClusterSecurityGroup *ClusterSecurityGroup `type:"structure"`

	metadataCreateClusterSecurityGroupOutput `json:"-", xml:"-"`
}

type metadataCreateClusterSecurityGroupOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"CreateClusterSecurityGroupResult"`
}

type CreateClusterSnapshotMessage struct {
	ClusterIdentifier  *string `type:"string"`
	SnapshotIdentifier *string `type:"string"`
	Tags               []*Tag  `locationNameList:"Tag" type:"list"`

	metadataCreateClusterSnapshotMessage `json:"-", xml:"-"`
}

type metadataCreateClusterSnapshotMessage struct {
	SDKShapeTraits bool `type:"structure" required:"SnapshotIdentifier,ClusterIdentifier"`
}

type CreateClusterSnapshotOutput struct {
	Snapshot *Snapshot `type:"structure"`

	metadataCreateClusterSnapshotOutput `json:"-", xml:"-"`
}

type metadataCreateClusterSnapshotOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"CreateClusterSnapshotResult"`
}

type CreateClusterSubnetGroupMessage struct {
	ClusterSubnetGroupName *string   `type:"string"`
	Description            *string   `type:"string"`
	SubnetIDs              []*string `locationName:"SubnetIds" locationNameList:"SubnetIdentifier" type:"list"`
	Tags                   []*Tag    `locationNameList:"Tag" type:"list"`

	metadataCreateClusterSubnetGroupMessage `json:"-", xml:"-"`
}

type metadataCreateClusterSubnetGroupMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterSubnetGroupName,Description,SubnetIds"`
}

type CreateClusterSubnetGroupOutput struct {
	ClusterSubnetGroup *ClusterSubnetGroup `type:"structure"`

	metadataCreateClusterSubnetGroupOutput `json:"-", xml:"-"`
}

type metadataCreateClusterSubnetGroupOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"CreateClusterSubnetGroupResult"`
}

type CreateEventSubscriptionMessage struct {
	Enabled          *bool     `type:"boolean"`
	EventCategories  []*string `locationNameList:"EventCategory" type:"list"`
	SNSTopicARN      *string   `locationName:"SnsTopicArn" type:"string"`
	Severity         *string   `type:"string"`
	SourceIDs        []*string `locationName:"SourceIds" locationNameList:"SourceId" type:"list"`
	SourceType       *string   `type:"string"`
	SubscriptionName *string   `type:"string"`
	Tags             []*Tag    `locationNameList:"Tag" type:"list"`

	metadataCreateEventSubscriptionMessage `json:"-", xml:"-"`
}

type metadataCreateEventSubscriptionMessage struct {
	SDKShapeTraits bool `type:"structure" required:"SubscriptionName,SnsTopicArn"`
}

type CreateEventSubscriptionOutput struct {
	EventSubscription *EventSubscription `type:"structure"`

	metadataCreateEventSubscriptionOutput `json:"-", xml:"-"`
}

type metadataCreateEventSubscriptionOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"CreateEventSubscriptionResult"`
}

type CreateHSMClientCertificateMessage struct {
	HSMClientCertificateIdentifier *string `locationName:"HsmClientCertificateIdentifier" type:"string"`
	Tags                           []*Tag  `locationNameList:"Tag" type:"list"`

	metadataCreateHSMClientCertificateMessage `json:"-", xml:"-"`
}

type metadataCreateHSMClientCertificateMessage struct {
	SDKShapeTraits bool `type:"structure" required:"HsmClientCertificateIdentifier"`
}

type CreateHSMClientCertificateOutput struct {
	HSMClientCertificate *HSMClientCertificate `locationName:"HsmClientCertificate" type:"structure"`

	metadataCreateHSMClientCertificateOutput `json:"-", xml:"-"`
}

type metadataCreateHSMClientCertificateOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"CreateHsmClientCertificateResult"`
}

type CreateHSMConfigurationMessage struct {
	Description                *string `type:"string"`
	HSMConfigurationIdentifier *string `locationName:"HsmConfigurationIdentifier" type:"string"`
	HSMIPAddress               *string `locationName:"HsmIpAddress" type:"string"`
	HSMPartitionName           *string `locationName:"HsmPartitionName" type:"string"`
	HSMPartitionPassword       *string `locationName:"HsmPartitionPassword" type:"string"`
	HSMServerPublicCertificate *string `locationName:"HsmServerPublicCertificate" type:"string"`
	Tags                       []*Tag  `locationNameList:"Tag" type:"list"`

	metadataCreateHSMConfigurationMessage `json:"-", xml:"-"`
}

type metadataCreateHSMConfigurationMessage struct {
	SDKShapeTraits bool `type:"structure" required:"HsmConfigurationIdentifier,Description,HsmIpAddress,HsmPartitionName,HsmPartitionPassword,HsmServerPublicCertificate"`
}

type CreateHSMConfigurationOutput struct {
	HSMConfiguration *HSMConfiguration `locationName:"HsmConfiguration" type:"structure"`

	metadataCreateHSMConfigurationOutput `json:"-", xml:"-"`
}

type metadataCreateHSMConfigurationOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"CreateHsmConfigurationResult"`
}

type CreateTagsMessage struct {
	ResourceName *string `type:"string"`
	Tags         []*Tag  `locationNameList:"Tag" type:"list"`

	metadataCreateTagsMessage `json:"-", xml:"-"`
}

type metadataCreateTagsMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ResourceName,Tags"`
}

type DefaultClusterParameters struct {
	Marker               *string      `type:"string"`
	ParameterGroupFamily *string      `type:"string"`
	Parameters           []*Parameter `locationNameList:"Parameter" type:"list"`

	metadataDefaultClusterParameters `json:"-", xml:"-"`
}

type metadataDefaultClusterParameters struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteClusterMessage struct {
	ClusterIdentifier              *string `type:"string"`
	FinalClusterSnapshotIdentifier *string `type:"string"`
	SkipFinalClusterSnapshot       *bool   `type:"boolean"`

	metadataDeleteClusterMessage `json:"-", xml:"-"`
}

type metadataDeleteClusterMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterIdentifier"`
}

type DeleteClusterOutput struct {
	Cluster *Cluster `type:"structure"`

	metadataDeleteClusterOutput `json:"-", xml:"-"`
}

type metadataDeleteClusterOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DeleteClusterResult"`
}

type DeleteClusterParameterGroupMessage struct {
	ParameterGroupName *string `type:"string"`

	metadataDeleteClusterParameterGroupMessage `json:"-", xml:"-"`
}

type metadataDeleteClusterParameterGroupMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ParameterGroupName"`
}

type DeleteClusterSecurityGroupMessage struct {
	ClusterSecurityGroupName *string `type:"string"`

	metadataDeleteClusterSecurityGroupMessage `json:"-", xml:"-"`
}

type metadataDeleteClusterSecurityGroupMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterSecurityGroupName"`
}

type DeleteClusterSnapshotMessage struct {
	SnapshotClusterIdentifier *string `type:"string"`
	SnapshotIdentifier        *string `type:"string"`

	metadataDeleteClusterSnapshotMessage `json:"-", xml:"-"`
}

type metadataDeleteClusterSnapshotMessage struct {
	SDKShapeTraits bool `type:"structure" required:"SnapshotIdentifier"`
}

type DeleteClusterSnapshotOutput struct {
	Snapshot *Snapshot `type:"structure"`

	metadataDeleteClusterSnapshotOutput `json:"-", xml:"-"`
}

type metadataDeleteClusterSnapshotOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DeleteClusterSnapshotResult"`
}

type DeleteClusterSubnetGroupMessage struct {
	ClusterSubnetGroupName *string `type:"string"`

	metadataDeleteClusterSubnetGroupMessage `json:"-", xml:"-"`
}

type metadataDeleteClusterSubnetGroupMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterSubnetGroupName"`
}

type DeleteEventSubscriptionMessage struct {
	SubscriptionName *string `type:"string"`

	metadataDeleteEventSubscriptionMessage `json:"-", xml:"-"`
}

type metadataDeleteEventSubscriptionMessage struct {
	SDKShapeTraits bool `type:"structure" required:"SubscriptionName"`
}

type DeleteHSMClientCertificateMessage struct {
	HSMClientCertificateIdentifier *string `locationName:"HsmClientCertificateIdentifier" type:"string"`

	metadataDeleteHSMClientCertificateMessage `json:"-", xml:"-"`
}

type metadataDeleteHSMClientCertificateMessage struct {
	SDKShapeTraits bool `type:"structure" required:"HsmClientCertificateIdentifier"`
}

type DeleteHSMConfigurationMessage struct {
	HSMConfigurationIdentifier *string `locationName:"HsmConfigurationIdentifier" type:"string"`

	metadataDeleteHSMConfigurationMessage `json:"-", xml:"-"`
}

type metadataDeleteHSMConfigurationMessage struct {
	SDKShapeTraits bool `type:"structure" required:"HsmConfigurationIdentifier"`
}

type DeleteTagsMessage struct {
	ResourceName *string   `type:"string"`
	TagKeys      []*string `locationNameList:"TagKey" type:"list"`

	metadataDeleteTagsMessage `json:"-", xml:"-"`
}

type metadataDeleteTagsMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ResourceName,TagKeys"`
}

type DescribeClusterParameterGroupsMessage struct {
	Marker             *string   `type:"string"`
	MaxRecords         *int      `type:"integer"`
	ParameterGroupName *string   `type:"string"`
	TagKeys            []*string `locationNameList:"TagKey" type:"list"`
	TagValues          []*string `locationNameList:"TagValue" type:"list"`

	metadataDescribeClusterParameterGroupsMessage `json:"-", xml:"-"`
}

type metadataDescribeClusterParameterGroupsMessage struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeClusterParametersMessage struct {
	Marker             *string `type:"string"`
	MaxRecords         *int    `type:"integer"`
	ParameterGroupName *string `type:"string"`
	Source             *string `type:"string"`

	metadataDescribeClusterParametersMessage `json:"-", xml:"-"`
}

type metadataDescribeClusterParametersMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ParameterGroupName"`
}

type DescribeClusterSecurityGroupsMessage struct {
	ClusterSecurityGroupName *string   `type:"string"`
	Marker                   *string   `type:"string"`
	MaxRecords               *int      `type:"integer"`
	TagKeys                  []*string `locationNameList:"TagKey" type:"list"`
	TagValues                []*string `locationNameList:"TagValue" type:"list"`

	metadataDescribeClusterSecurityGroupsMessage `json:"-", xml:"-"`
}

type metadataDescribeClusterSecurityGroupsMessage struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeClusterSnapshotsMessage struct {
	ClusterIdentifier  *string    `type:"string"`
	EndTime            *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	Marker             *string    `type:"string"`
	MaxRecords         *int       `type:"integer"`
	OwnerAccount       *string    `type:"string"`
	SnapshotIdentifier *string    `type:"string"`
	SnapshotType       *string    `type:"string"`
	StartTime          *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	TagKeys            []*string  `locationNameList:"TagKey" type:"list"`
	TagValues          []*string  `locationNameList:"TagValue" type:"list"`

	metadataDescribeClusterSnapshotsMessage `json:"-", xml:"-"`
}

type metadataDescribeClusterSnapshotsMessage struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeClusterSubnetGroupsMessage struct {
	ClusterSubnetGroupName *string   `type:"string"`
	Marker                 *string   `type:"string"`
	MaxRecords             *int      `type:"integer"`
	TagKeys                []*string `locationNameList:"TagKey" type:"list"`
	TagValues              []*string `locationNameList:"TagValue" type:"list"`

	metadataDescribeClusterSubnetGroupsMessage `json:"-", xml:"-"`
}

type metadataDescribeClusterSubnetGroupsMessage struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeClusterVersionsMessage struct {
	ClusterParameterGroupFamily *string `type:"string"`
	ClusterVersion              *string `type:"string"`
	Marker                      *string `type:"string"`
	MaxRecords                  *int    `type:"integer"`

	metadataDescribeClusterVersionsMessage `json:"-", xml:"-"`
}

type metadataDescribeClusterVersionsMessage struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeClustersMessage struct {
	ClusterIdentifier *string   `type:"string"`
	Marker            *string   `type:"string"`
	MaxRecords        *int      `type:"integer"`
	TagKeys           []*string `locationNameList:"TagKey" type:"list"`
	TagValues         []*string `locationNameList:"TagValue" type:"list"`

	metadataDescribeClustersMessage `json:"-", xml:"-"`
}

type metadataDescribeClustersMessage struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeDefaultClusterParametersMessage struct {
	Marker               *string `type:"string"`
	MaxRecords           *int    `type:"integer"`
	ParameterGroupFamily *string `type:"string"`

	metadataDescribeDefaultClusterParametersMessage `json:"-", xml:"-"`
}

type metadataDescribeDefaultClusterParametersMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ParameterGroupFamily"`
}

type DescribeDefaultClusterParametersOutput struct {
	DefaultClusterParameters *DefaultClusterParameters `type:"structure"`

	metadataDescribeDefaultClusterParametersOutput `json:"-", xml:"-"`
}

type metadataDescribeDefaultClusterParametersOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeDefaultClusterParametersResult"`
}

type DescribeEventCategoriesMessage struct {
	SourceType *string `type:"string"`

	metadataDescribeEventCategoriesMessage `json:"-", xml:"-"`
}

type metadataDescribeEventCategoriesMessage struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeEventSubscriptionsMessage struct {
	Marker           *string `type:"string"`
	MaxRecords       *int    `type:"integer"`
	SubscriptionName *string `type:"string"`

	metadataDescribeEventSubscriptionsMessage `json:"-", xml:"-"`
}

type metadataDescribeEventSubscriptionsMessage struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeEventsMessage struct {
	Duration         *int       `type:"integer"`
	EndTime          *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	Marker           *string    `type:"string"`
	MaxRecords       *int       `type:"integer"`
	SourceIdentifier *string    `type:"string"`
	SourceType       *string    `type:"string"`
	StartTime        *time.Time `type:"timestamp" timestampFormat:"iso8601"`

	metadataDescribeEventsMessage `json:"-", xml:"-"`
}

type metadataDescribeEventsMessage struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeHSMClientCertificatesMessage struct {
	HSMClientCertificateIdentifier *string   `locationName:"HsmClientCertificateIdentifier" type:"string"`
	Marker                         *string   `type:"string"`
	MaxRecords                     *int      `type:"integer"`
	TagKeys                        []*string `locationNameList:"TagKey" type:"list"`
	TagValues                      []*string `locationNameList:"TagValue" type:"list"`

	metadataDescribeHSMClientCertificatesMessage `json:"-", xml:"-"`
}

type metadataDescribeHSMClientCertificatesMessage struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeHSMConfigurationsMessage struct {
	HSMConfigurationIdentifier *string   `locationName:"HsmConfigurationIdentifier" type:"string"`
	Marker                     *string   `type:"string"`
	MaxRecords                 *int      `type:"integer"`
	TagKeys                    []*string `locationNameList:"TagKey" type:"list"`
	TagValues                  []*string `locationNameList:"TagValue" type:"list"`

	metadataDescribeHSMConfigurationsMessage `json:"-", xml:"-"`
}

type metadataDescribeHSMConfigurationsMessage struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeLoggingStatusMessage struct {
	ClusterIdentifier *string `type:"string"`

	metadataDescribeLoggingStatusMessage `json:"-", xml:"-"`
}

type metadataDescribeLoggingStatusMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterIdentifier"`
}

type DescribeOrderableClusterOptionsMessage struct {
	ClusterVersion *string `type:"string"`
	Marker         *string `type:"string"`
	MaxRecords     *int    `type:"integer"`
	NodeType       *string `type:"string"`

	metadataDescribeOrderableClusterOptionsMessage `json:"-", xml:"-"`
}

type metadataDescribeOrderableClusterOptionsMessage struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeReservedNodeOfferingsMessage struct {
	Marker                 *string `type:"string"`
	MaxRecords             *int    `type:"integer"`
	ReservedNodeOfferingID *string `locationName:"ReservedNodeOfferingId" type:"string"`

	metadataDescribeReservedNodeOfferingsMessage `json:"-", xml:"-"`
}

type metadataDescribeReservedNodeOfferingsMessage struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeReservedNodesMessage struct {
	Marker         *string `type:"string"`
	MaxRecords     *int    `type:"integer"`
	ReservedNodeID *string `locationName:"ReservedNodeId" type:"string"`

	metadataDescribeReservedNodesMessage `json:"-", xml:"-"`
}

type metadataDescribeReservedNodesMessage struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeResizeMessage struct {
	ClusterIdentifier *string `type:"string"`

	metadataDescribeResizeMessage `json:"-", xml:"-"`
}

type metadataDescribeResizeMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterIdentifier"`
}

type DescribeTagsMessage struct {
	Marker       *string   `type:"string"`
	MaxRecords   *int      `type:"integer"`
	ResourceName *string   `type:"string"`
	ResourceType *string   `type:"string"`
	TagKeys      []*string `locationNameList:"TagKey" type:"list"`
	TagValues    []*string `locationNameList:"TagValue" type:"list"`

	metadataDescribeTagsMessage `json:"-", xml:"-"`
}

type metadataDescribeTagsMessage struct {
	SDKShapeTraits bool `type:"structure"`
}

type DisableLoggingMessage struct {
	ClusterIdentifier *string `type:"string"`

	metadataDisableLoggingMessage `json:"-", xml:"-"`
}

type metadataDisableLoggingMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterIdentifier"`
}

type DisableSnapshotCopyMessage struct {
	ClusterIdentifier *string `type:"string"`

	metadataDisableSnapshotCopyMessage `json:"-", xml:"-"`
}

type metadataDisableSnapshotCopyMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterIdentifier"`
}

type DisableSnapshotCopyOutput struct {
	Cluster *Cluster `type:"structure"`

	metadataDisableSnapshotCopyOutput `json:"-", xml:"-"`
}

type metadataDisableSnapshotCopyOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DisableSnapshotCopyResult"`
}

type EC2SecurityGroup struct {
	EC2SecurityGroupName    *string `type:"string"`
	EC2SecurityGroupOwnerID *string `locationName:"EC2SecurityGroupOwnerId" type:"string"`
	Status                  *string `type:"string"`
	Tags                    []*Tag  `locationNameList:"Tag" type:"list"`

	metadataEC2SecurityGroup `json:"-", xml:"-"`
}

type metadataEC2SecurityGroup struct {
	SDKShapeTraits bool `type:"structure"`
}

type ElasticIPStatus struct {
	ElasticIP *string `locationName:"ElasticIp" type:"string"`
	Status    *string `type:"string"`

	metadataElasticIPStatus `json:"-", xml:"-"`
}

type metadataElasticIPStatus struct {
	SDKShapeTraits bool `type:"structure"`
}

type EnableLoggingMessage struct {
	BucketName        *string `type:"string"`
	ClusterIdentifier *string `type:"string"`
	S3KeyPrefix       *string `type:"string"`

	metadataEnableLoggingMessage `json:"-", xml:"-"`
}

type metadataEnableLoggingMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterIdentifier,BucketName"`
}

type EnableSnapshotCopyMessage struct {
	ClusterIdentifier *string `type:"string"`
	DestinationRegion *string `type:"string"`
	RetentionPeriod   *int    `type:"integer"`

	metadataEnableSnapshotCopyMessage `json:"-", xml:"-"`
}

type metadataEnableSnapshotCopyMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterIdentifier,DestinationRegion"`
}

type EnableSnapshotCopyOutput struct {
	Cluster *Cluster `type:"structure"`

	metadataEnableSnapshotCopyOutput `json:"-", xml:"-"`
}

type metadataEnableSnapshotCopyOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"EnableSnapshotCopyResult"`
}

type Endpoint struct {
	Address *string `type:"string"`
	Port    *int    `type:"integer"`

	metadataEndpoint `json:"-", xml:"-"`
}

type metadataEndpoint struct {
	SDKShapeTraits bool `type:"structure"`
}

type Event struct {
	Date             *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	EventCategories  []*string  `locationNameList:"EventCategory" type:"list"`
	EventID          *string    `locationName:"EventId" type:"string"`
	Message          *string    `type:"string"`
	Severity         *string    `type:"string"`
	SourceIdentifier *string    `type:"string"`
	SourceType       *string    `type:"string"`

	metadataEvent `json:"-", xml:"-"`
}

type metadataEvent struct {
	SDKShapeTraits bool `type:"structure"`
}

type EventCategoriesMap struct {
	Events     []*EventInfoMap `locationNameList:"EventInfoMap" type:"list"`
	SourceType *string         `type:"string"`

	metadataEventCategoriesMap `json:"-", xml:"-"`
}

type metadataEventCategoriesMap struct {
	SDKShapeTraits bool `type:"structure"`
}

type EventCategoriesMessage struct {
	EventCategoriesMapList []*EventCategoriesMap `locationNameList:"EventCategoriesMap" type:"list"`

	metadataEventCategoriesMessage `json:"-", xml:"-"`
}

type metadataEventCategoriesMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeEventCategoriesResult"`
}

type EventInfoMap struct {
	EventCategories  []*string `locationNameList:"EventCategory" type:"list"`
	EventDescription *string   `type:"string"`
	EventID          *string   `locationName:"EventId" type:"string"`
	Severity         *string   `type:"string"`

	metadataEventInfoMap `json:"-", xml:"-"`
}

type metadataEventInfoMap struct {
	SDKShapeTraits bool `type:"structure"`
}

type EventSubscription struct {
	CustSubscriptionID       *string    `locationName:"CustSubscriptionId" type:"string"`
	CustomerAWSID            *string    `locationName:"CustomerAwsId" type:"string"`
	Enabled                  *bool      `type:"boolean"`
	EventCategoriesList      []*string  `locationNameList:"EventCategory" type:"list"`
	SNSTopicARN              *string    `locationName:"SnsTopicArn" type:"string"`
	Severity                 *string    `type:"string"`
	SourceIDsList            []*string  `locationName:"SourceIdsList" locationNameList:"SourceId" type:"list"`
	SourceType               *string    `type:"string"`
	Status                   *string    `type:"string"`
	SubscriptionCreationTime *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	Tags                     []*Tag     `locationNameList:"Tag" type:"list"`

	metadataEventSubscription `json:"-", xml:"-"`
}

type metadataEventSubscription struct {
	SDKShapeTraits bool `type:"structure"`
}

type EventSubscriptionQuotaExceededFault struct {
	metadataEventSubscriptionQuotaExceededFault `json:"-", xml:"-"`
}

type metadataEventSubscriptionQuotaExceededFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type EventSubscriptionsMessage struct {
	EventSubscriptionsList []*EventSubscription `locationNameList:"EventSubscription" type:"list"`
	Marker                 *string              `type:"string"`

	metadataEventSubscriptionsMessage `json:"-", xml:"-"`
}

type metadataEventSubscriptionsMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeEventSubscriptionsResult"`
}

type EventsMessage struct {
	Events []*Event `locationNameList:"Event" type:"list"`
	Marker *string  `type:"string"`

	metadataEventsMessage `json:"-", xml:"-"`
}

type metadataEventsMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeEventsResult"`
}

type HSMClientCertificate struct {
	HSMClientCertificateIdentifier *string `locationName:"HsmClientCertificateIdentifier" type:"string"`
	HSMClientCertificatePublicKey  *string `locationName:"HsmClientCertificatePublicKey" type:"string"`
	Tags                           []*Tag  `locationNameList:"Tag" type:"list"`

	metadataHSMClientCertificate `json:"-", xml:"-"`
}

type metadataHSMClientCertificate struct {
	SDKShapeTraits bool `type:"structure"`
}

type HSMClientCertificateAlreadyExistsFault struct {
	metadataHSMClientCertificateAlreadyExistsFault `json:"-", xml:"-"`
}

type metadataHSMClientCertificateAlreadyExistsFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type HSMClientCertificateMessage struct {
	HSMClientCertificates []*HSMClientCertificate `locationName:"HsmClientCertificates" locationNameList:"HsmClientCertificate" type:"list"`
	Marker                *string                 `type:"string"`

	metadataHSMClientCertificateMessage `json:"-", xml:"-"`
}

type metadataHSMClientCertificateMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeHsmClientCertificatesResult"`
}

type HSMClientCertificateNotFoundFault struct {
	metadataHSMClientCertificateNotFoundFault `json:"-", xml:"-"`
}

type metadataHSMClientCertificateNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type HSMClientCertificateQuotaExceededFault struct {
	metadataHSMClientCertificateQuotaExceededFault `json:"-", xml:"-"`
}

type metadataHSMClientCertificateQuotaExceededFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type HSMConfiguration struct {
	Description                *string `type:"string"`
	HSMConfigurationIdentifier *string `locationName:"HsmConfigurationIdentifier" type:"string"`
	HSMIPAddress               *string `locationName:"HsmIpAddress" type:"string"`
	HSMPartitionName           *string `locationName:"HsmPartitionName" type:"string"`
	Tags                       []*Tag  `locationNameList:"Tag" type:"list"`

	metadataHSMConfiguration `json:"-", xml:"-"`
}

type metadataHSMConfiguration struct {
	SDKShapeTraits bool `type:"structure"`
}

type HSMConfigurationAlreadyExistsFault struct {
	metadataHSMConfigurationAlreadyExistsFault `json:"-", xml:"-"`
}

type metadataHSMConfigurationAlreadyExistsFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type HSMConfigurationMessage struct {
	HSMConfigurations []*HSMConfiguration `locationName:"HsmConfigurations" locationNameList:"HsmConfiguration" type:"list"`
	Marker            *string             `type:"string"`

	metadataHSMConfigurationMessage `json:"-", xml:"-"`
}

type metadataHSMConfigurationMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeHsmConfigurationsResult"`
}

type HSMConfigurationNotFoundFault struct {
	metadataHSMConfigurationNotFoundFault `json:"-", xml:"-"`
}

type metadataHSMConfigurationNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type HSMConfigurationQuotaExceededFault struct {
	metadataHSMConfigurationQuotaExceededFault `json:"-", xml:"-"`
}

type metadataHSMConfigurationQuotaExceededFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type HSMStatus struct {
	HSMClientCertificateIdentifier *string `locationName:"HsmClientCertificateIdentifier" type:"string"`
	HSMConfigurationIdentifier     *string `locationName:"HsmConfigurationIdentifier" type:"string"`
	Status                         *string `type:"string"`

	metadataHSMStatus `json:"-", xml:"-"`
}

type metadataHSMStatus struct {
	SDKShapeTraits bool `type:"structure"`
}

type IPRange struct {
	CIDRIP *string `type:"string"`
	Status *string `type:"string"`
	Tags   []*Tag  `locationNameList:"Tag" type:"list"`

	metadataIPRange `json:"-", xml:"-"`
}

type metadataIPRange struct {
	SDKShapeTraits bool `type:"structure"`
}

type IncompatibleOrderableOptions struct {
	metadataIncompatibleOrderableOptions `json:"-", xml:"-"`
}

type metadataIncompatibleOrderableOptions struct {
	SDKShapeTraits bool `type:"structure"`
}

type InsufficientClusterCapacityFault struct {
	metadataInsufficientClusterCapacityFault `json:"-", xml:"-"`
}

type metadataInsufficientClusterCapacityFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type InsufficientS3BucketPolicyFault struct {
	metadataInsufficientS3BucketPolicyFault `json:"-", xml:"-"`
}

type metadataInsufficientS3BucketPolicyFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidClusterParameterGroupStateFault struct {
	metadataInvalidClusterParameterGroupStateFault `json:"-", xml:"-"`
}

type metadataInvalidClusterParameterGroupStateFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidClusterSecurityGroupStateFault struct {
	metadataInvalidClusterSecurityGroupStateFault `json:"-", xml:"-"`
}

type metadataInvalidClusterSecurityGroupStateFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidClusterSnapshotStateFault struct {
	metadataInvalidClusterSnapshotStateFault `json:"-", xml:"-"`
}

type metadataInvalidClusterSnapshotStateFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidClusterStateFault struct {
	metadataInvalidClusterStateFault `json:"-", xml:"-"`
}

type metadataInvalidClusterStateFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidClusterSubnetGroupStateFault struct {
	metadataInvalidClusterSubnetGroupStateFault `json:"-", xml:"-"`
}

type metadataInvalidClusterSubnetGroupStateFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidClusterSubnetStateFault struct {
	metadataInvalidClusterSubnetStateFault `json:"-", xml:"-"`
}

type metadataInvalidClusterSubnetStateFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidElasticIPFault struct {
	metadataInvalidElasticIPFault `json:"-", xml:"-"`
}

type metadataInvalidElasticIPFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidHSMClientCertificateStateFault struct {
	metadataInvalidHSMClientCertificateStateFault `json:"-", xml:"-"`
}

type metadataInvalidHSMClientCertificateStateFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidHSMConfigurationStateFault struct {
	metadataInvalidHSMConfigurationStateFault `json:"-", xml:"-"`
}

type metadataInvalidHSMConfigurationStateFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidRestoreFault struct {
	metadataInvalidRestoreFault `json:"-", xml:"-"`
}

type metadataInvalidRestoreFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidS3BucketNameFault struct {
	metadataInvalidS3BucketNameFault `json:"-", xml:"-"`
}

type metadataInvalidS3BucketNameFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidS3KeyPrefixFault struct {
	metadataInvalidS3KeyPrefixFault `json:"-", xml:"-"`
}

type metadataInvalidS3KeyPrefixFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidSubnet struct {
	metadataInvalidSubnet `json:"-", xml:"-"`
}

type metadataInvalidSubnet struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidSubscriptionStateFault struct {
	metadataInvalidSubscriptionStateFault `json:"-", xml:"-"`
}

type metadataInvalidSubscriptionStateFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidTagFault struct {
	metadataInvalidTagFault `json:"-", xml:"-"`
}

type metadataInvalidTagFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidVPCNetworkStateFault struct {
	metadataInvalidVPCNetworkStateFault `json:"-", xml:"-"`
}

type metadataInvalidVPCNetworkStateFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type LoggingStatus struct {
	BucketName                 *string    `type:"string"`
	LastFailureMessage         *string    `type:"string"`
	LastFailureTime            *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	LastSuccessfulDeliveryTime *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	LoggingEnabled             *bool      `type:"boolean"`
	S3KeyPrefix                *string    `type:"string"`

	metadataLoggingStatus `json:"-", xml:"-"`
}

type metadataLoggingStatus struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DisableLoggingResult"`
}

type ModifyClusterMessage struct {
	AllowVersionUpgrade              *bool     `type:"boolean"`
	AutomatedSnapshotRetentionPeriod *int      `type:"integer"`
	ClusterIdentifier                *string   `type:"string"`
	ClusterParameterGroupName        *string   `type:"string"`
	ClusterSecurityGroups            []*string `locationNameList:"ClusterSecurityGroupName" type:"list"`
	ClusterType                      *string   `type:"string"`
	ClusterVersion                   *string   `type:"string"`
	HSMClientCertificateIdentifier   *string   `locationName:"HsmClientCertificateIdentifier" type:"string"`
	HSMConfigurationIdentifier       *string   `locationName:"HsmConfigurationIdentifier" type:"string"`
	MasterUserPassword               *string   `type:"string"`
	NewClusterIdentifier             *string   `type:"string"`
	NodeType                         *string   `type:"string"`
	NumberOfNodes                    *int      `type:"integer"`
	PreferredMaintenanceWindow       *string   `type:"string"`
	VPCSecurityGroupIDs              []*string `locationName:"VpcSecurityGroupIds" locationNameList:"VpcSecurityGroupId" type:"list"`

	metadataModifyClusterMessage `json:"-", xml:"-"`
}

type metadataModifyClusterMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterIdentifier"`
}

type ModifyClusterOutput struct {
	Cluster *Cluster `type:"structure"`

	metadataModifyClusterOutput `json:"-", xml:"-"`
}

type metadataModifyClusterOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"ModifyClusterResult"`
}

type ModifyClusterParameterGroupMessage struct {
	ParameterGroupName *string      `type:"string"`
	Parameters         []*Parameter `locationNameList:"Parameter" type:"list"`

	metadataModifyClusterParameterGroupMessage `json:"-", xml:"-"`
}

type metadataModifyClusterParameterGroupMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ParameterGroupName,Parameters"`
}

type ModifyClusterSubnetGroupMessage struct {
	ClusterSubnetGroupName *string   `type:"string"`
	Description            *string   `type:"string"`
	SubnetIDs              []*string `locationName:"SubnetIds" locationNameList:"SubnetIdentifier" type:"list"`

	metadataModifyClusterSubnetGroupMessage `json:"-", xml:"-"`
}

type metadataModifyClusterSubnetGroupMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterSubnetGroupName,SubnetIds"`
}

type ModifyClusterSubnetGroupOutput struct {
	ClusterSubnetGroup *ClusterSubnetGroup `type:"structure"`

	metadataModifyClusterSubnetGroupOutput `json:"-", xml:"-"`
}

type metadataModifyClusterSubnetGroupOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"ModifyClusterSubnetGroupResult"`
}

type ModifyEventSubscriptionMessage struct {
	Enabled          *bool     `type:"boolean"`
	EventCategories  []*string `locationNameList:"EventCategory" type:"list"`
	SNSTopicARN      *string   `locationName:"SnsTopicArn" type:"string"`
	Severity         *string   `type:"string"`
	SourceIDs        []*string `locationName:"SourceIds" locationNameList:"SourceId" type:"list"`
	SourceType       *string   `type:"string"`
	SubscriptionName *string   `type:"string"`

	metadataModifyEventSubscriptionMessage `json:"-", xml:"-"`
}

type metadataModifyEventSubscriptionMessage struct {
	SDKShapeTraits bool `type:"structure" required:"SubscriptionName"`
}

type ModifyEventSubscriptionOutput struct {
	EventSubscription *EventSubscription `type:"structure"`

	metadataModifyEventSubscriptionOutput `json:"-", xml:"-"`
}

type metadataModifyEventSubscriptionOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"ModifyEventSubscriptionResult"`
}

type ModifySnapshotCopyRetentionPeriodMessage struct {
	ClusterIdentifier *string `type:"string"`
	RetentionPeriod   *int    `type:"integer"`

	metadataModifySnapshotCopyRetentionPeriodMessage `json:"-", xml:"-"`
}

type metadataModifySnapshotCopyRetentionPeriodMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterIdentifier,RetentionPeriod"`
}

type ModifySnapshotCopyRetentionPeriodOutput struct {
	Cluster *Cluster `type:"structure"`

	metadataModifySnapshotCopyRetentionPeriodOutput `json:"-", xml:"-"`
}

type metadataModifySnapshotCopyRetentionPeriodOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"ModifySnapshotCopyRetentionPeriodResult"`
}

type NumberOfNodesPerClusterLimitExceededFault struct {
	metadataNumberOfNodesPerClusterLimitExceededFault `json:"-", xml:"-"`
}

type metadataNumberOfNodesPerClusterLimitExceededFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type NumberOfNodesQuotaExceededFault struct {
	metadataNumberOfNodesQuotaExceededFault `json:"-", xml:"-"`
}

type metadataNumberOfNodesQuotaExceededFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type OrderableClusterOption struct {
	AvailabilityZones []*AvailabilityZone `locationNameList:"AvailabilityZone" type:"list"`
	ClusterType       *string             `type:"string"`
	ClusterVersion    *string             `type:"string"`
	NodeType          *string             `type:"string"`

	metadataOrderableClusterOption `json:"-", xml:"-"`
}

type metadataOrderableClusterOption struct {
	SDKShapeTraits bool `type:"structure"`
}

type OrderableClusterOptionsMessage struct {
	Marker                  *string                   `type:"string"`
	OrderableClusterOptions []*OrderableClusterOption `locationNameList:"OrderableClusterOption" type:"list"`

	metadataOrderableClusterOptionsMessage `json:"-", xml:"-"`
}

type metadataOrderableClusterOptionsMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeOrderableClusterOptionsResult"`
}

type Parameter struct {
	AllowedValues        *string `type:"string"`
	DataType             *string `type:"string"`
	Description          *string `type:"string"`
	IsModifiable         *bool   `type:"boolean"`
	MinimumEngineVersion *string `type:"string"`
	ParameterName        *string `type:"string"`
	ParameterValue       *string `type:"string"`
	Source               *string `type:"string"`

	metadataParameter `json:"-", xml:"-"`
}

type metadataParameter struct {
	SDKShapeTraits bool `type:"structure"`
}

type PendingModifiedValues struct {
	AutomatedSnapshotRetentionPeriod *int    `type:"integer"`
	ClusterIdentifier                *string `type:"string"`
	ClusterType                      *string `type:"string"`
	ClusterVersion                   *string `type:"string"`
	MasterUserPassword               *string `type:"string"`
	NodeType                         *string `type:"string"`
	NumberOfNodes                    *int    `type:"integer"`

	metadataPendingModifiedValues `json:"-", xml:"-"`
}

type metadataPendingModifiedValues struct {
	SDKShapeTraits bool `type:"structure"`
}

type PurchaseReservedNodeOfferingMessage struct {
	NodeCount              *int    `type:"integer"`
	ReservedNodeOfferingID *string `locationName:"ReservedNodeOfferingId" type:"string"`

	metadataPurchaseReservedNodeOfferingMessage `json:"-", xml:"-"`
}

type metadataPurchaseReservedNodeOfferingMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ReservedNodeOfferingId"`
}

type PurchaseReservedNodeOfferingOutput struct {
	ReservedNode *ReservedNode `type:"structure"`

	metadataPurchaseReservedNodeOfferingOutput `json:"-", xml:"-"`
}

type metadataPurchaseReservedNodeOfferingOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"PurchaseReservedNodeOfferingResult"`
}

type RebootClusterMessage struct {
	ClusterIdentifier *string `type:"string"`

	metadataRebootClusterMessage `json:"-", xml:"-"`
}

type metadataRebootClusterMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterIdentifier"`
}

type RebootClusterOutput struct {
	Cluster *Cluster `type:"structure"`

	metadataRebootClusterOutput `json:"-", xml:"-"`
}

type metadataRebootClusterOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"RebootClusterResult"`
}

type RecurringCharge struct {
	RecurringChargeAmount    *float64 `type:"double"`
	RecurringChargeFrequency *string  `type:"string"`

	metadataRecurringCharge `json:"-", xml:"-"`
}

type metadataRecurringCharge struct {
	SDKShapeTraits bool `type:"structure"`
}

type ReservedNode struct {
	CurrencyCode           *string            `type:"string"`
	Duration               *int               `type:"integer"`
	FixedPrice             *float64           `type:"double"`
	NodeCount              *int               `type:"integer"`
	NodeType               *string            `type:"string"`
	OfferingType           *string            `type:"string"`
	RecurringCharges       []*RecurringCharge `locationNameList:"RecurringCharge" type:"list"`
	ReservedNodeID         *string            `locationName:"ReservedNodeId" type:"string"`
	ReservedNodeOfferingID *string            `locationName:"ReservedNodeOfferingId" type:"string"`
	StartTime              *time.Time         `type:"timestamp" timestampFormat:"iso8601"`
	State                  *string            `type:"string"`
	UsagePrice             *float64           `type:"double"`

	metadataReservedNode `json:"-", xml:"-"`
}

type metadataReservedNode struct {
	SDKShapeTraits bool `type:"structure"`
}

type ReservedNodeAlreadyExistsFault struct {
	metadataReservedNodeAlreadyExistsFault `json:"-", xml:"-"`
}

type metadataReservedNodeAlreadyExistsFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ReservedNodeNotFoundFault struct {
	metadataReservedNodeNotFoundFault `json:"-", xml:"-"`
}

type metadataReservedNodeNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ReservedNodeOffering struct {
	CurrencyCode           *string            `type:"string"`
	Duration               *int               `type:"integer"`
	FixedPrice             *float64           `type:"double"`
	NodeType               *string            `type:"string"`
	OfferingType           *string            `type:"string"`
	RecurringCharges       []*RecurringCharge `locationNameList:"RecurringCharge" type:"list"`
	ReservedNodeOfferingID *string            `locationName:"ReservedNodeOfferingId" type:"string"`
	UsagePrice             *float64           `type:"double"`

	metadataReservedNodeOffering `json:"-", xml:"-"`
}

type metadataReservedNodeOffering struct {
	SDKShapeTraits bool `type:"structure"`
}

type ReservedNodeOfferingNotFoundFault struct {
	metadataReservedNodeOfferingNotFoundFault `json:"-", xml:"-"`
}

type metadataReservedNodeOfferingNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ReservedNodeOfferingsMessage struct {
	Marker                *string                 `type:"string"`
	ReservedNodeOfferings []*ReservedNodeOffering `locationNameList:"ReservedNodeOffering" type:"list"`

	metadataReservedNodeOfferingsMessage `json:"-", xml:"-"`
}

type metadataReservedNodeOfferingsMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeReservedNodeOfferingsResult"`
}

type ReservedNodeQuotaExceededFault struct {
	metadataReservedNodeQuotaExceededFault `json:"-", xml:"-"`
}

type metadataReservedNodeQuotaExceededFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ReservedNodesMessage struct {
	Marker        *string         `type:"string"`
	ReservedNodes []*ReservedNode `locationNameList:"ReservedNode" type:"list"`

	metadataReservedNodesMessage `json:"-", xml:"-"`
}

type metadataReservedNodesMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeReservedNodesResult"`
}

type ResetClusterParameterGroupMessage struct {
	ParameterGroupName *string      `type:"string"`
	Parameters         []*Parameter `locationNameList:"Parameter" type:"list"`
	ResetAllParameters *bool        `type:"boolean"`

	metadataResetClusterParameterGroupMessage `json:"-", xml:"-"`
}

type metadataResetClusterParameterGroupMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ParameterGroupName"`
}

type ResizeNotFoundFault struct {
	metadataResizeNotFoundFault `json:"-", xml:"-"`
}

type metadataResizeNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ResizeProgressMessage struct {
	AvgResizeRateInMegaBytesPerSecond  *float64  `type:"double"`
	ElapsedTimeInSeconds               *int64    `type:"long"`
	EstimatedTimeToCompletionInSeconds *int64    `type:"long"`
	ImportTablesCompleted              []*string `type:"list"`
	ImportTablesInProgress             []*string `type:"list"`
	ImportTablesNotStarted             []*string `type:"list"`
	ProgressInMegaBytes                *int64    `type:"long"`
	Status                             *string   `type:"string"`
	TargetClusterType                  *string   `type:"string"`
	TargetNodeType                     *string   `type:"string"`
	TargetNumberOfNodes                *int      `type:"integer"`
	TotalResizeDataInMegaBytes         *int64    `type:"long"`

	metadataResizeProgressMessage `json:"-", xml:"-"`
}

type metadataResizeProgressMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeResizeResult"`
}

type ResourceNotFoundFault struct {
	metadataResourceNotFoundFault `json:"-", xml:"-"`
}

type metadataResourceNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type RestoreFromClusterSnapshotMessage struct {
	AllowVersionUpgrade              *bool     `type:"boolean"`
	AutomatedSnapshotRetentionPeriod *int      `type:"integer"`
	AvailabilityZone                 *string   `type:"string"`
	ClusterIdentifier                *string   `type:"string"`
	ClusterParameterGroupName        *string   `type:"string"`
	ClusterSecurityGroups            []*string `locationNameList:"ClusterSecurityGroupName" type:"list"`
	ClusterSubnetGroupName           *string   `type:"string"`
	ElasticIP                        *string   `locationName:"ElasticIp" type:"string"`
	HSMClientCertificateIdentifier   *string   `locationName:"HsmClientCertificateIdentifier" type:"string"`
	HSMConfigurationIdentifier       *string   `locationName:"HsmConfigurationIdentifier" type:"string"`
	KMSKeyID                         *string   `locationName:"KmsKeyId" type:"string"`
	OwnerAccount                     *string   `type:"string"`
	Port                             *int      `type:"integer"`
	PreferredMaintenanceWindow       *string   `type:"string"`
	PubliclyAccessible               *bool     `type:"boolean"`
	SnapshotClusterIdentifier        *string   `type:"string"`
	SnapshotIdentifier               *string   `type:"string"`
	VPCSecurityGroupIDs              []*string `locationName:"VpcSecurityGroupIds" locationNameList:"VpcSecurityGroupId" type:"list"`

	metadataRestoreFromClusterSnapshotMessage `json:"-", xml:"-"`
}

type metadataRestoreFromClusterSnapshotMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterIdentifier,SnapshotIdentifier"`
}

type RestoreFromClusterSnapshotOutput struct {
	Cluster *Cluster `type:"structure"`

	metadataRestoreFromClusterSnapshotOutput `json:"-", xml:"-"`
}

type metadataRestoreFromClusterSnapshotOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"RestoreFromClusterSnapshotResult"`
}

type RestoreStatus struct {
	CurrentRestoreRateInMegaBytesPerSecond *float64 `type:"double"`
	ElapsedTimeInSeconds                   *int64   `type:"long"`
	EstimatedTimeToCompletionInSeconds     *int64   `type:"long"`
	ProgressInMegaBytes                    *int64   `type:"long"`
	SnapshotSizeInMegaBytes                *int64   `type:"long"`
	Status                                 *string  `type:"string"`

	metadataRestoreStatus `json:"-", xml:"-"`
}

type metadataRestoreStatus struct {
	SDKShapeTraits bool `type:"structure"`
}

type RevokeClusterSecurityGroupIngressMessage struct {
	CIDRIP                   *string `type:"string"`
	ClusterSecurityGroupName *string `type:"string"`
	EC2SecurityGroupName     *string `type:"string"`
	EC2SecurityGroupOwnerID  *string `locationName:"EC2SecurityGroupOwnerId" type:"string"`

	metadataRevokeClusterSecurityGroupIngressMessage `json:"-", xml:"-"`
}

type metadataRevokeClusterSecurityGroupIngressMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterSecurityGroupName"`
}

type RevokeClusterSecurityGroupIngressOutput struct {
	ClusterSecurityGroup *ClusterSecurityGroup `type:"structure"`

	metadataRevokeClusterSecurityGroupIngressOutput `json:"-", xml:"-"`
}

type metadataRevokeClusterSecurityGroupIngressOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"RevokeClusterSecurityGroupIngressResult"`
}

type RevokeSnapshotAccessMessage struct {
	AccountWithRestoreAccess  *string `type:"string"`
	SnapshotClusterIdentifier *string `type:"string"`
	SnapshotIdentifier        *string `type:"string"`

	metadataRevokeSnapshotAccessMessage `json:"-", xml:"-"`
}

type metadataRevokeSnapshotAccessMessage struct {
	SDKShapeTraits bool `type:"structure" required:"SnapshotIdentifier,AccountWithRestoreAccess"`
}

type RevokeSnapshotAccessOutput struct {
	Snapshot *Snapshot `type:"structure"`

	metadataRevokeSnapshotAccessOutput `json:"-", xml:"-"`
}

type metadataRevokeSnapshotAccessOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"RevokeSnapshotAccessResult"`
}

type RotateEncryptionKeyMessage struct {
	ClusterIdentifier *string `type:"string"`

	metadataRotateEncryptionKeyMessage `json:"-", xml:"-"`
}

type metadataRotateEncryptionKeyMessage struct {
	SDKShapeTraits bool `type:"structure" required:"ClusterIdentifier"`
}

type RotateEncryptionKeyOutput struct {
	Cluster *Cluster `type:"structure"`

	metadataRotateEncryptionKeyOutput `json:"-", xml:"-"`
}

type metadataRotateEncryptionKeyOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"RotateEncryptionKeyResult"`
}

type SNSInvalidTopicFault struct {
	metadataSNSInvalidTopicFault `json:"-", xml:"-"`
}

type metadataSNSInvalidTopicFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type SNSNoAuthorizationFault struct {
	metadataSNSNoAuthorizationFault `json:"-", xml:"-"`
}

type metadataSNSNoAuthorizationFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type SNSTopicARNNotFoundFault struct {
	metadataSNSTopicARNNotFoundFault `json:"-", xml:"-"`
}

type metadataSNSTopicARNNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type Snapshot struct {
	AccountsWithRestoreAccess              []*AccountWithRestoreAccess `locationNameList:"AccountWithRestoreAccess" type:"list"`
	ActualIncrementalBackupSizeInMegaBytes *float64                    `type:"double"`
	AvailabilityZone                       *string                     `type:"string"`
	BackupProgressInMegaBytes              *float64                    `type:"double"`
	ClusterCreateTime                      *time.Time                  `type:"timestamp" timestampFormat:"iso8601"`
	ClusterIdentifier                      *string                     `type:"string"`
	ClusterVersion                         *string                     `type:"string"`
	CurrentBackupRateInMegaBytesPerSecond  *float64                    `type:"double"`
	DBName                                 *string                     `type:"string"`
	ElapsedTimeInSeconds                   *int64                      `type:"long"`
	Encrypted                              *bool                       `type:"boolean"`
	EncryptedWithHSM                       *bool                       `type:"boolean"`
	EstimatedSecondsToCompletion           *int64                      `type:"long"`
	KMSKeyID                               *string                     `locationName:"KmsKeyId" type:"string"`
	MasterUsername                         *string                     `type:"string"`
	NodeType                               *string                     `type:"string"`
	NumberOfNodes                          *int                        `type:"integer"`
	OwnerAccount                           *string                     `type:"string"`
	Port                                   *int                        `type:"integer"`
	SnapshotCreateTime                     *time.Time                  `type:"timestamp" timestampFormat:"iso8601"`
	SnapshotIdentifier                     *string                     `type:"string"`
	SnapshotType                           *string                     `type:"string"`
	SourceRegion                           *string                     `type:"string"`
	Status                                 *string                     `type:"string"`
	Tags                                   []*Tag                      `locationNameList:"Tag" type:"list"`
	TotalBackupSizeInMegaBytes             *float64                    `type:"double"`
	VPCID                                  *string                     `locationName:"VpcId" type:"string"`

	metadataSnapshot `json:"-", xml:"-"`
}

type metadataSnapshot struct {
	SDKShapeTraits bool `type:"structure"`
}

type SnapshotCopyAlreadyDisabledFault struct {
	metadataSnapshotCopyAlreadyDisabledFault `json:"-", xml:"-"`
}

type metadataSnapshotCopyAlreadyDisabledFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type SnapshotCopyAlreadyEnabledFault struct {
	metadataSnapshotCopyAlreadyEnabledFault `json:"-", xml:"-"`
}

type metadataSnapshotCopyAlreadyEnabledFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type SnapshotCopyDisabledFault struct {
	metadataSnapshotCopyDisabledFault `json:"-", xml:"-"`
}

type metadataSnapshotCopyDisabledFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type SnapshotMessage struct {
	Marker    *string     `type:"string"`
	Snapshots []*Snapshot `locationNameList:"Snapshot" type:"list"`

	metadataSnapshotMessage `json:"-", xml:"-"`
}

type metadataSnapshotMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeClusterSnapshotsResult"`
}

type SourceNotFoundFault struct {
	metadataSourceNotFoundFault `json:"-", xml:"-"`
}

type metadataSourceNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type Subnet struct {
	SubnetAvailabilityZone *AvailabilityZone `type:"structure"`
	SubnetIdentifier       *string           `type:"string"`
	SubnetStatus           *string           `type:"string"`

	metadataSubnet `json:"-", xml:"-"`
}

type metadataSubnet struct {
	SDKShapeTraits bool `type:"structure"`
}

type SubnetAlreadyInUse struct {
	metadataSubnetAlreadyInUse `json:"-", xml:"-"`
}

type metadataSubnetAlreadyInUse struct {
	SDKShapeTraits bool `type:"structure"`
}

type SubscriptionAlreadyExistFault struct {
	metadataSubscriptionAlreadyExistFault `json:"-", xml:"-"`
}

type metadataSubscriptionAlreadyExistFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type SubscriptionCategoryNotFoundFault struct {
	metadataSubscriptionCategoryNotFoundFault `json:"-", xml:"-"`
}

type metadataSubscriptionCategoryNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type SubscriptionEventIDNotFoundFault struct {
	metadataSubscriptionEventIDNotFoundFault `json:"-", xml:"-"`
}

type metadataSubscriptionEventIDNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type SubscriptionNotFoundFault struct {
	metadataSubscriptionNotFoundFault `json:"-", xml:"-"`
}

type metadataSubscriptionNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type SubscriptionSeverityNotFoundFault struct {
	metadataSubscriptionSeverityNotFoundFault `json:"-", xml:"-"`
}

type metadataSubscriptionSeverityNotFoundFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type Tag struct {
	Key   *string `type:"string"`
	Value *string `type:"string"`

	metadataTag `json:"-", xml:"-"`
}

type metadataTag struct {
	SDKShapeTraits bool `type:"structure"`
}

type TagLimitExceededFault struct {
	metadataTagLimitExceededFault `json:"-", xml:"-"`
}

type metadataTagLimitExceededFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type TaggedResource struct {
	ResourceName *string `type:"string"`
	ResourceType *string `type:"string"`
	Tag          *Tag    `type:"structure"`

	metadataTaggedResource `json:"-", xml:"-"`
}

type metadataTaggedResource struct {
	SDKShapeTraits bool `type:"structure"`
}

type TaggedResourceListMessage struct {
	Marker          *string           `type:"string"`
	TaggedResources []*TaggedResource `locationNameList:"TaggedResource" type:"list"`

	metadataTaggedResourceListMessage `json:"-", xml:"-"`
}

type metadataTaggedResourceListMessage struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeTagsResult"`
}

type UnauthorizedOperation struct {
	metadataUnauthorizedOperation `json:"-", xml:"-"`
}

type metadataUnauthorizedOperation struct {
	SDKShapeTraits bool `type:"structure"`
}

type UnknownSnapshotCopyRegionFault struct {
	metadataUnknownSnapshotCopyRegionFault `json:"-", xml:"-"`
}

type metadataUnknownSnapshotCopyRegionFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type UnsupportedOptionFault struct {
	metadataUnsupportedOptionFault `json:"-", xml:"-"`
}

type metadataUnsupportedOptionFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type VPCSecurityGroupMembership struct {
	Status             *string `type:"string"`
	VPCSecurityGroupID *string `locationName:"VpcSecurityGroupId" type:"string"`

	metadataVPCSecurityGroupMembership `json:"-", xml:"-"`
}

type metadataVPCSecurityGroupMembership struct {
	SDKShapeTraits bool `type:"structure"`
}