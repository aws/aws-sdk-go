package swf

// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

import (
	"time"
	"github.com/awslabs/aws-sdk-go/aws"
)

// CountClosedWorkflowExecutionsRequest generates a request for the CountClosedWorkflowExecutions operation.
func (c *SWF) CountClosedWorkflowExecutionsRequest(input *CountClosedWorkflowExecutionsInput) (req *aws.Request, output *WorkflowExecutionCount) {
	if opCountClosedWorkflowExecutions == nil {
		opCountClosedWorkflowExecutions = &aws.Operation{
			Name:       "CountClosedWorkflowExecutions",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCountClosedWorkflowExecutions, input, output)
	output = &WorkflowExecutionCount{}
	req.Data = output
	return
}

func (c *SWF) CountClosedWorkflowExecutions(input *CountClosedWorkflowExecutionsInput) (output *WorkflowExecutionCount, err error) {
	req, out := c.CountClosedWorkflowExecutionsRequest(input)
	output = out
	err = req.Send()
	return
}

var opCountClosedWorkflowExecutions *aws.Operation

// CountOpenWorkflowExecutionsRequest generates a request for the CountOpenWorkflowExecutions operation.
func (c *SWF) CountOpenWorkflowExecutionsRequest(input *CountOpenWorkflowExecutionsInput) (req *aws.Request, output *WorkflowExecutionCount) {
	if opCountOpenWorkflowExecutions == nil {
		opCountOpenWorkflowExecutions = &aws.Operation{
			Name:       "CountOpenWorkflowExecutions",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCountOpenWorkflowExecutions, input, output)
	output = &WorkflowExecutionCount{}
	req.Data = output
	return
}

func (c *SWF) CountOpenWorkflowExecutions(input *CountOpenWorkflowExecutionsInput) (output *WorkflowExecutionCount, err error) {
	req, out := c.CountOpenWorkflowExecutionsRequest(input)
	output = out
	err = req.Send()
	return
}

var opCountOpenWorkflowExecutions *aws.Operation

// CountPendingActivityTasksRequest generates a request for the CountPendingActivityTasks operation.
func (c *SWF) CountPendingActivityTasksRequest(input *CountPendingActivityTasksInput) (req *aws.Request, output *PendingTaskCount) {
	if opCountPendingActivityTasks == nil {
		opCountPendingActivityTasks = &aws.Operation{
			Name:       "CountPendingActivityTasks",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCountPendingActivityTasks, input, output)
	output = &PendingTaskCount{}
	req.Data = output
	return
}

func (c *SWF) CountPendingActivityTasks(input *CountPendingActivityTasksInput) (output *PendingTaskCount, err error) {
	req, out := c.CountPendingActivityTasksRequest(input)
	output = out
	err = req.Send()
	return
}

var opCountPendingActivityTasks *aws.Operation

// CountPendingDecisionTasksRequest generates a request for the CountPendingDecisionTasks operation.
func (c *SWF) CountPendingDecisionTasksRequest(input *CountPendingDecisionTasksInput) (req *aws.Request, output *PendingTaskCount) {
	if opCountPendingDecisionTasks == nil {
		opCountPendingDecisionTasks = &aws.Operation{
			Name:       "CountPendingDecisionTasks",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCountPendingDecisionTasks, input, output)
	output = &PendingTaskCount{}
	req.Data = output
	return
}

func (c *SWF) CountPendingDecisionTasks(input *CountPendingDecisionTasksInput) (output *PendingTaskCount, err error) {
	req, out := c.CountPendingDecisionTasksRequest(input)
	output = out
	err = req.Send()
	return
}

var opCountPendingDecisionTasks *aws.Operation

// DeprecateActivityTypeRequest generates a request for the DeprecateActivityType operation.
func (c *SWF) DeprecateActivityTypeRequest(input *DeprecateActivityTypeInput) (req *aws.Request) {
	if opDeprecateActivityType == nil {
		opDeprecateActivityType = &aws.Operation{
			Name:       "DeprecateActivityType",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeprecateActivityType, input, nil)

	return
}

func (c *SWF) DeprecateActivityType(input *DeprecateActivityTypeInput) (err error) {
	req := c.DeprecateActivityTypeRequest(input)
	err = req.Send()
	return
}

var opDeprecateActivityType *aws.Operation

// DeprecateDomainRequest generates a request for the DeprecateDomain operation.
func (c *SWF) DeprecateDomainRequest(input *DeprecateDomainInput) (req *aws.Request) {
	if opDeprecateDomain == nil {
		opDeprecateDomain = &aws.Operation{
			Name:       "DeprecateDomain",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeprecateDomain, input, nil)

	return
}

func (c *SWF) DeprecateDomain(input *DeprecateDomainInput) (err error) {
	req := c.DeprecateDomainRequest(input)
	err = req.Send()
	return
}

var opDeprecateDomain *aws.Operation

// DeprecateWorkflowTypeRequest generates a request for the DeprecateWorkflowType operation.
func (c *SWF) DeprecateWorkflowTypeRequest(input *DeprecateWorkflowTypeInput) (req *aws.Request) {
	if opDeprecateWorkflowType == nil {
		opDeprecateWorkflowType = &aws.Operation{
			Name:       "DeprecateWorkflowType",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeprecateWorkflowType, input, nil)

	return
}

func (c *SWF) DeprecateWorkflowType(input *DeprecateWorkflowTypeInput) (err error) {
	req := c.DeprecateWorkflowTypeRequest(input)
	err = req.Send()
	return
}

var opDeprecateWorkflowType *aws.Operation

// DescribeActivityTypeRequest generates a request for the DescribeActivityType operation.
func (c *SWF) DescribeActivityTypeRequest(input *DescribeActivityTypeInput) (req *aws.Request, output *ActivityTypeDetail) {
	if opDescribeActivityType == nil {
		opDescribeActivityType = &aws.Operation{
			Name:       "DescribeActivityType",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeActivityType, input, output)
	output = &ActivityTypeDetail{}
	req.Data = output
	return
}

func (c *SWF) DescribeActivityType(input *DescribeActivityTypeInput) (output *ActivityTypeDetail, err error) {
	req, out := c.DescribeActivityTypeRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeActivityType *aws.Operation

// DescribeDomainRequest generates a request for the DescribeDomain operation.
func (c *SWF) DescribeDomainRequest(input *DescribeDomainInput) (req *aws.Request, output *DomainDetail) {
	if opDescribeDomain == nil {
		opDescribeDomain = &aws.Operation{
			Name:       "DescribeDomain",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeDomain, input, output)
	output = &DomainDetail{}
	req.Data = output
	return
}

func (c *SWF) DescribeDomain(input *DescribeDomainInput) (output *DomainDetail, err error) {
	req, out := c.DescribeDomainRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeDomain *aws.Operation

// DescribeWorkflowExecutionRequest generates a request for the DescribeWorkflowExecution operation.
func (c *SWF) DescribeWorkflowExecutionRequest(input *DescribeWorkflowExecutionInput) (req *aws.Request, output *WorkflowExecutionDetail) {
	if opDescribeWorkflowExecution == nil {
		opDescribeWorkflowExecution = &aws.Operation{
			Name:       "DescribeWorkflowExecution",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeWorkflowExecution, input, output)
	output = &WorkflowExecutionDetail{}
	req.Data = output
	return
}

func (c *SWF) DescribeWorkflowExecution(input *DescribeWorkflowExecutionInput) (output *WorkflowExecutionDetail, err error) {
	req, out := c.DescribeWorkflowExecutionRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeWorkflowExecution *aws.Operation

// DescribeWorkflowTypeRequest generates a request for the DescribeWorkflowType operation.
func (c *SWF) DescribeWorkflowTypeRequest(input *DescribeWorkflowTypeInput) (req *aws.Request, output *WorkflowTypeDetail) {
	if opDescribeWorkflowType == nil {
		opDescribeWorkflowType = &aws.Operation{
			Name:       "DescribeWorkflowType",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeWorkflowType, input, output)
	output = &WorkflowTypeDetail{}
	req.Data = output
	return
}

func (c *SWF) DescribeWorkflowType(input *DescribeWorkflowTypeInput) (output *WorkflowTypeDetail, err error) {
	req, out := c.DescribeWorkflowTypeRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeWorkflowType *aws.Operation

// GetWorkflowExecutionHistoryRequest generates a request for the GetWorkflowExecutionHistory operation.
func (c *SWF) GetWorkflowExecutionHistoryRequest(input *GetWorkflowExecutionHistoryInput) (req *aws.Request, output *History) {
	if opGetWorkflowExecutionHistory == nil {
		opGetWorkflowExecutionHistory = &aws.Operation{
			Name:       "GetWorkflowExecutionHistory",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opGetWorkflowExecutionHistory, input, output)
	output = &History{}
	req.Data = output
	return
}

func (c *SWF) GetWorkflowExecutionHistory(input *GetWorkflowExecutionHistoryInput) (output *History, err error) {
	req, out := c.GetWorkflowExecutionHistoryRequest(input)
	output = out
	err = req.Send()
	return
}

var opGetWorkflowExecutionHistory *aws.Operation

// ListActivityTypesRequest generates a request for the ListActivityTypes operation.
func (c *SWF) ListActivityTypesRequest(input *ListActivityTypesInput) (req *aws.Request, output *ActivityTypeInfos) {
	if opListActivityTypes == nil {
		opListActivityTypes = &aws.Operation{
			Name:       "ListActivityTypes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListActivityTypes, input, output)
	output = &ActivityTypeInfos{}
	req.Data = output
	return
}

func (c *SWF) ListActivityTypes(input *ListActivityTypesInput) (output *ActivityTypeInfos, err error) {
	req, out := c.ListActivityTypesRequest(input)
	output = out
	err = req.Send()
	return
}

var opListActivityTypes *aws.Operation

// ListClosedWorkflowExecutionsRequest generates a request for the ListClosedWorkflowExecutions operation.
func (c *SWF) ListClosedWorkflowExecutionsRequest(input *ListClosedWorkflowExecutionsInput) (req *aws.Request, output *WorkflowExecutionInfos) {
	if opListClosedWorkflowExecutions == nil {
		opListClosedWorkflowExecutions = &aws.Operation{
			Name:       "ListClosedWorkflowExecutions",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListClosedWorkflowExecutions, input, output)
	output = &WorkflowExecutionInfos{}
	req.Data = output
	return
}

func (c *SWF) ListClosedWorkflowExecutions(input *ListClosedWorkflowExecutionsInput) (output *WorkflowExecutionInfos, err error) {
	req, out := c.ListClosedWorkflowExecutionsRequest(input)
	output = out
	err = req.Send()
	return
}

var opListClosedWorkflowExecutions *aws.Operation

// ListDomainsRequest generates a request for the ListDomains operation.
func (c *SWF) ListDomainsRequest(input *ListDomainsInput) (req *aws.Request, output *DomainInfos) {
	if opListDomains == nil {
		opListDomains = &aws.Operation{
			Name:       "ListDomains",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListDomains, input, output)
	output = &DomainInfos{}
	req.Data = output
	return
}

func (c *SWF) ListDomains(input *ListDomainsInput) (output *DomainInfos, err error) {
	req, out := c.ListDomainsRequest(input)
	output = out
	err = req.Send()
	return
}

var opListDomains *aws.Operation

// ListOpenWorkflowExecutionsRequest generates a request for the ListOpenWorkflowExecutions operation.
func (c *SWF) ListOpenWorkflowExecutionsRequest(input *ListOpenWorkflowExecutionsInput) (req *aws.Request, output *WorkflowExecutionInfos) {
	if opListOpenWorkflowExecutions == nil {
		opListOpenWorkflowExecutions = &aws.Operation{
			Name:       "ListOpenWorkflowExecutions",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListOpenWorkflowExecutions, input, output)
	output = &WorkflowExecutionInfos{}
	req.Data = output
	return
}

func (c *SWF) ListOpenWorkflowExecutions(input *ListOpenWorkflowExecutionsInput) (output *WorkflowExecutionInfos, err error) {
	req, out := c.ListOpenWorkflowExecutionsRequest(input)
	output = out
	err = req.Send()
	return
}

var opListOpenWorkflowExecutions *aws.Operation

// ListWorkflowTypesRequest generates a request for the ListWorkflowTypes operation.
func (c *SWF) ListWorkflowTypesRequest(input *ListWorkflowTypesInput) (req *aws.Request, output *WorkflowTypeInfos) {
	if opListWorkflowTypes == nil {
		opListWorkflowTypes = &aws.Operation{
			Name:       "ListWorkflowTypes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListWorkflowTypes, input, output)
	output = &WorkflowTypeInfos{}
	req.Data = output
	return
}

func (c *SWF) ListWorkflowTypes(input *ListWorkflowTypesInput) (output *WorkflowTypeInfos, err error) {
	req, out := c.ListWorkflowTypesRequest(input)
	output = out
	err = req.Send()
	return
}

var opListWorkflowTypes *aws.Operation

// PollForActivityTaskRequest generates a request for the PollForActivityTask operation.
func (c *SWF) PollForActivityTaskRequest(input *PollForActivityTaskInput) (req *aws.Request, output *ActivityTask) {
	if opPollForActivityTask == nil {
		opPollForActivityTask = &aws.Operation{
			Name:       "PollForActivityTask",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opPollForActivityTask, input, output)
	output = &ActivityTask{}
	req.Data = output
	return
}

func (c *SWF) PollForActivityTask(input *PollForActivityTaskInput) (output *ActivityTask, err error) {
	req, out := c.PollForActivityTaskRequest(input)
	output = out
	err = req.Send()
	return
}

var opPollForActivityTask *aws.Operation

// PollForDecisionTaskRequest generates a request for the PollForDecisionTask operation.
func (c *SWF) PollForDecisionTaskRequest(input *PollForDecisionTaskInput) (req *aws.Request, output *DecisionTask) {
	if opPollForDecisionTask == nil {
		opPollForDecisionTask = &aws.Operation{
			Name:       "PollForDecisionTask",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opPollForDecisionTask, input, output)
	output = &DecisionTask{}
	req.Data = output
	return
}

func (c *SWF) PollForDecisionTask(input *PollForDecisionTaskInput) (output *DecisionTask, err error) {
	req, out := c.PollForDecisionTaskRequest(input)
	output = out
	err = req.Send()
	return
}

var opPollForDecisionTask *aws.Operation

// RecordActivityTaskHeartbeatRequest generates a request for the RecordActivityTaskHeartbeat operation.
func (c *SWF) RecordActivityTaskHeartbeatRequest(input *RecordActivityTaskHeartbeatInput) (req *aws.Request, output *ActivityTaskStatus) {
	if opRecordActivityTaskHeartbeat == nil {
		opRecordActivityTaskHeartbeat = &aws.Operation{
			Name:       "RecordActivityTaskHeartbeat",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRecordActivityTaskHeartbeat, input, output)
	output = &ActivityTaskStatus{}
	req.Data = output
	return
}

func (c *SWF) RecordActivityTaskHeartbeat(input *RecordActivityTaskHeartbeatInput) (output *ActivityTaskStatus, err error) {
	req, out := c.RecordActivityTaskHeartbeatRequest(input)
	output = out
	err = req.Send()
	return
}

var opRecordActivityTaskHeartbeat *aws.Operation

// RegisterActivityTypeRequest generates a request for the RegisterActivityType operation.
func (c *SWF) RegisterActivityTypeRequest(input *RegisterActivityTypeInput) (req *aws.Request) {
	if opRegisterActivityType == nil {
		opRegisterActivityType = &aws.Operation{
			Name:       "RegisterActivityType",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRegisterActivityType, input, nil)

	return
}

func (c *SWF) RegisterActivityType(input *RegisterActivityTypeInput) (err error) {
	req := c.RegisterActivityTypeRequest(input)
	err = req.Send()
	return
}

var opRegisterActivityType *aws.Operation

// RegisterDomainRequest generates a request for the RegisterDomain operation.
func (c *SWF) RegisterDomainRequest(input *RegisterDomainInput) (req *aws.Request) {
	if opRegisterDomain == nil {
		opRegisterDomain = &aws.Operation{
			Name:       "RegisterDomain",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRegisterDomain, input, nil)

	return
}

func (c *SWF) RegisterDomain(input *RegisterDomainInput) (err error) {
	req := c.RegisterDomainRequest(input)
	err = req.Send()
	return
}

var opRegisterDomain *aws.Operation

// RegisterWorkflowTypeRequest generates a request for the RegisterWorkflowType operation.
func (c *SWF) RegisterWorkflowTypeRequest(input *RegisterWorkflowTypeInput) (req *aws.Request) {
	if opRegisterWorkflowType == nil {
		opRegisterWorkflowType = &aws.Operation{
			Name:       "RegisterWorkflowType",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRegisterWorkflowType, input, nil)

	return
}

func (c *SWF) RegisterWorkflowType(input *RegisterWorkflowTypeInput) (err error) {
	req := c.RegisterWorkflowTypeRequest(input)
	err = req.Send()
	return
}

var opRegisterWorkflowType *aws.Operation

// RequestCancelWorkflowExecutionRequest generates a request for the RequestCancelWorkflowExecution operation.
func (c *SWF) RequestCancelWorkflowExecutionRequest(input *RequestCancelWorkflowExecutionInput) (req *aws.Request) {
	if opRequestCancelWorkflowExecution == nil {
		opRequestCancelWorkflowExecution = &aws.Operation{
			Name:       "RequestCancelWorkflowExecution",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRequestCancelWorkflowExecution, input, nil)

	return
}

func (c *SWF) RequestCancelWorkflowExecution(input *RequestCancelWorkflowExecutionInput) (err error) {
	req := c.RequestCancelWorkflowExecutionRequest(input)
	err = req.Send()
	return
}

var opRequestCancelWorkflowExecution *aws.Operation

// RespondActivityTaskCanceledRequest generates a request for the RespondActivityTaskCanceled operation.
func (c *SWF) RespondActivityTaskCanceledRequest(input *RespondActivityTaskCanceledInput) (req *aws.Request) {
	if opRespondActivityTaskCanceled == nil {
		opRespondActivityTaskCanceled = &aws.Operation{
			Name:       "RespondActivityTaskCanceled",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRespondActivityTaskCanceled, input, nil)

	return
}

func (c *SWF) RespondActivityTaskCanceled(input *RespondActivityTaskCanceledInput) (err error) {
	req := c.RespondActivityTaskCanceledRequest(input)
	err = req.Send()
	return
}

var opRespondActivityTaskCanceled *aws.Operation

// RespondActivityTaskCompletedRequest generates a request for the RespondActivityTaskCompleted operation.
func (c *SWF) RespondActivityTaskCompletedRequest(input *RespondActivityTaskCompletedInput) (req *aws.Request) {
	if opRespondActivityTaskCompleted == nil {
		opRespondActivityTaskCompleted = &aws.Operation{
			Name:       "RespondActivityTaskCompleted",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRespondActivityTaskCompleted, input, nil)

	return
}

func (c *SWF) RespondActivityTaskCompleted(input *RespondActivityTaskCompletedInput) (err error) {
	req := c.RespondActivityTaskCompletedRequest(input)
	err = req.Send()
	return
}

var opRespondActivityTaskCompleted *aws.Operation

// RespondActivityTaskFailedRequest generates a request for the RespondActivityTaskFailed operation.
func (c *SWF) RespondActivityTaskFailedRequest(input *RespondActivityTaskFailedInput) (req *aws.Request) {
	if opRespondActivityTaskFailed == nil {
		opRespondActivityTaskFailed = &aws.Operation{
			Name:       "RespondActivityTaskFailed",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRespondActivityTaskFailed, input, nil)

	return
}

func (c *SWF) RespondActivityTaskFailed(input *RespondActivityTaskFailedInput) (err error) {
	req := c.RespondActivityTaskFailedRequest(input)
	err = req.Send()
	return
}

var opRespondActivityTaskFailed *aws.Operation

// RespondDecisionTaskCompletedRequest generates a request for the RespondDecisionTaskCompleted operation.
func (c *SWF) RespondDecisionTaskCompletedRequest(input *RespondDecisionTaskCompletedInput) (req *aws.Request) {
	if opRespondDecisionTaskCompleted == nil {
		opRespondDecisionTaskCompleted = &aws.Operation{
			Name:       "RespondDecisionTaskCompleted",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRespondDecisionTaskCompleted, input, nil)

	return
}

func (c *SWF) RespondDecisionTaskCompleted(input *RespondDecisionTaskCompletedInput) (err error) {
	req := c.RespondDecisionTaskCompletedRequest(input)
	err = req.Send()
	return
}

var opRespondDecisionTaskCompleted *aws.Operation

// SignalWorkflowExecutionRequest generates a request for the SignalWorkflowExecution operation.
func (c *SWF) SignalWorkflowExecutionRequest(input *SignalWorkflowExecutionInput) (req *aws.Request) {
	if opSignalWorkflowExecution == nil {
		opSignalWorkflowExecution = &aws.Operation{
			Name:       "SignalWorkflowExecution",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opSignalWorkflowExecution, input, nil)

	return
}

func (c *SWF) SignalWorkflowExecution(input *SignalWorkflowExecutionInput) (err error) {
	req := c.SignalWorkflowExecutionRequest(input)
	err = req.Send()
	return
}

var opSignalWorkflowExecution *aws.Operation

// StartWorkflowExecutionRequest generates a request for the StartWorkflowExecution operation.
func (c *SWF) StartWorkflowExecutionRequest(input *StartWorkflowExecutionInput) (req *aws.Request, output *Run) {
	if opStartWorkflowExecution == nil {
		opStartWorkflowExecution = &aws.Operation{
			Name:       "StartWorkflowExecution",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opStartWorkflowExecution, input, output)
	output = &Run{}
	req.Data = output
	return
}

func (c *SWF) StartWorkflowExecution(input *StartWorkflowExecutionInput) (output *Run, err error) {
	req, out := c.StartWorkflowExecutionRequest(input)
	output = out
	err = req.Send()
	return
}

var opStartWorkflowExecution *aws.Operation

// TerminateWorkflowExecutionRequest generates a request for the TerminateWorkflowExecution operation.
func (c *SWF) TerminateWorkflowExecutionRequest(input *TerminateWorkflowExecutionInput) (req *aws.Request) {
	if opTerminateWorkflowExecution == nil {
		opTerminateWorkflowExecution = &aws.Operation{
			Name:       "TerminateWorkflowExecution",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opTerminateWorkflowExecution, input, nil)

	return
}

func (c *SWF) TerminateWorkflowExecution(input *TerminateWorkflowExecutionInput) (err error) {
	req := c.TerminateWorkflowExecutionRequest(input)
	err = req.Send()
	return
}

var opTerminateWorkflowExecution *aws.Operation

type ActivityTask struct {
	ActivityID        *string            `locationName:"activityId" type:"string" json:"activityId,omitempty"`
	ActivityType      *ActivityType      `locationName:"activityType" type:"structure" json:"activityType,omitempty"`
	Input             *string            `locationName:"input" type:"string" json:"input,omitempty"`
	StartedEventID    *int64             `locationName:"startedEventId" type:"long" json:"startedEventId,omitempty"`
	TaskToken         *string            `locationName:"taskToken" type:"string" json:"taskToken,omitempty"`
	WorkflowExecution *WorkflowExecution `locationName:"workflowExecution" type:"structure" json:"workflowExecution,omitempty"`

	metadataActivityTask `json:"-", xml:"-"`
}

type metadataActivityTask struct {
	SDKShapeTraits bool `type:"structure" required:"taskToken,activityId,startedEventId,workflowExecution,activityType" json:",omitempty"`
}

type ActivityTaskCancelRequestedEventAttributes struct {
	ActivityID                   *string `locationName:"activityId" type:"string" json:"activityId,omitempty"`
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`

	metadataActivityTaskCancelRequestedEventAttributes `json:"-", xml:"-"`
}

type metadataActivityTaskCancelRequestedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"decisionTaskCompletedEventId,activityId" json:",omitempty"`
}

type ActivityTaskCanceledEventAttributes struct {
	Details                      *string `locationName:"details" type:"string" json:"details,omitempty"`
	LatestCancelRequestedEventID *int64  `locationName:"latestCancelRequestedEventId" type:"long" json:"latestCancelRequestedEventId,omitempty"`
	ScheduledEventID             *int64  `locationName:"scheduledEventId" type:"long" json:"scheduledEventId,omitempty"`
	StartedEventID               *int64  `locationName:"startedEventId" type:"long" json:"startedEventId,omitempty"`

	metadataActivityTaskCanceledEventAttributes `json:"-", xml:"-"`
}

type metadataActivityTaskCanceledEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"scheduledEventId,startedEventId" json:",omitempty"`
}

type ActivityTaskCompletedEventAttributes struct {
	Result           *string `locationName:"result" type:"string" json:"result,omitempty"`
	ScheduledEventID *int64  `locationName:"scheduledEventId" type:"long" json:"scheduledEventId,omitempty"`
	StartedEventID   *int64  `locationName:"startedEventId" type:"long" json:"startedEventId,omitempty"`

	metadataActivityTaskCompletedEventAttributes `json:"-", xml:"-"`
}

type metadataActivityTaskCompletedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"scheduledEventId,startedEventId" json:",omitempty"`
}

type ActivityTaskFailedEventAttributes struct {
	Details          *string `locationName:"details" type:"string" json:"details,omitempty"`
	Reason           *string `locationName:"reason" type:"string" json:"reason,omitempty"`
	ScheduledEventID *int64  `locationName:"scheduledEventId" type:"long" json:"scheduledEventId,omitempty"`
	StartedEventID   *int64  `locationName:"startedEventId" type:"long" json:"startedEventId,omitempty"`

	metadataActivityTaskFailedEventAttributes `json:"-", xml:"-"`
}

type metadataActivityTaskFailedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"scheduledEventId,startedEventId" json:",omitempty"`
}

type ActivityTaskScheduledEventAttributes struct {
	ActivityID                   *string       `locationName:"activityId" type:"string" json:"activityId,omitempty"`
	ActivityType                 *ActivityType `locationName:"activityType" type:"structure" json:"activityType,omitempty"`
	Control                      *string       `locationName:"control" type:"string" json:"control,omitempty"`
	DecisionTaskCompletedEventID *int64        `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	HeartbeatTimeout             *string       `locationName:"heartbeatTimeout" type:"string" json:"heartbeatTimeout,omitempty"`
	Input                        *string       `locationName:"input" type:"string" json:"input,omitempty"`
	ScheduleToCloseTimeout       *string       `locationName:"scheduleToCloseTimeout" type:"string" json:"scheduleToCloseTimeout,omitempty"`
	ScheduleToStartTimeout       *string       `locationName:"scheduleToStartTimeout" type:"string" json:"scheduleToStartTimeout,omitempty"`
	StartToCloseTimeout          *string       `locationName:"startToCloseTimeout" type:"string" json:"startToCloseTimeout,omitempty"`
	TaskList                     *TaskList     `locationName:"taskList" type:"structure" json:"taskList,omitempty"`
	TaskPriority                 *string       `locationName:"taskPriority" type:"string" json:"taskPriority,omitempty"`

	metadataActivityTaskScheduledEventAttributes `json:"-", xml:"-"`
}

type metadataActivityTaskScheduledEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"activityType,activityId,taskList,decisionTaskCompletedEventId" json:",omitempty"`
}

type ActivityTaskStartedEventAttributes struct {
	Identity         *string `locationName:"identity" type:"string" json:"identity,omitempty"`
	ScheduledEventID *int64  `locationName:"scheduledEventId" type:"long" json:"scheduledEventId,omitempty"`

	metadataActivityTaskStartedEventAttributes `json:"-", xml:"-"`
}

type metadataActivityTaskStartedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"scheduledEventId" json:",omitempty"`
}

type ActivityTaskStatus struct {
	CancelRequested *bool `locationName:"cancelRequested" type:"boolean" json:"cancelRequested,omitempty"`

	metadataActivityTaskStatus `json:"-", xml:"-"`
}

type metadataActivityTaskStatus struct {
	SDKShapeTraits bool `type:"structure" required:"cancelRequested" json:",omitempty"`
}

type ActivityTaskTimedOutEventAttributes struct {
	Details          *string `locationName:"details" type:"string" json:"details,omitempty"`
	ScheduledEventID *int64  `locationName:"scheduledEventId" type:"long" json:"scheduledEventId,omitempty"`
	StartedEventID   *int64  `locationName:"startedEventId" type:"long" json:"startedEventId,omitempty"`
	TimeoutType      *string `locationName:"timeoutType" type:"string" json:"timeoutType,omitempty"`

	metadataActivityTaskTimedOutEventAttributes `json:"-", xml:"-"`
}

type metadataActivityTaskTimedOutEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"timeoutType,scheduledEventId,startedEventId" json:",omitempty"`
}

type ActivityType struct {
	Name    *string `locationName:"name" type:"string" json:"name,omitempty"`
	Version *string `locationName:"version" type:"string" json:"version,omitempty"`

	metadataActivityType `json:"-", xml:"-"`
}

type metadataActivityType struct {
	SDKShapeTraits bool `type:"structure" required:"name,version" json:",omitempty"`
}

type ActivityTypeConfiguration struct {
	DefaultTaskHeartbeatTimeout       *string   `locationName:"defaultTaskHeartbeatTimeout" type:"string" json:"defaultTaskHeartbeatTimeout,omitempty"`
	DefaultTaskList                   *TaskList `locationName:"defaultTaskList" type:"structure" json:"defaultTaskList,omitempty"`
	DefaultTaskPriority               *string   `locationName:"defaultTaskPriority" type:"string" json:"defaultTaskPriority,omitempty"`
	DefaultTaskScheduleToCloseTimeout *string   `locationName:"defaultTaskScheduleToCloseTimeout" type:"string" json:"defaultTaskScheduleToCloseTimeout,omitempty"`
	DefaultTaskScheduleToStartTimeout *string   `locationName:"defaultTaskScheduleToStartTimeout" type:"string" json:"defaultTaskScheduleToStartTimeout,omitempty"`
	DefaultTaskStartToCloseTimeout    *string   `locationName:"defaultTaskStartToCloseTimeout" type:"string" json:"defaultTaskStartToCloseTimeout,omitempty"`

	metadataActivityTypeConfiguration `json:"-", xml:"-"`
}

type metadataActivityTypeConfiguration struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ActivityTypeDetail struct {
	Configuration *ActivityTypeConfiguration `locationName:"configuration" type:"structure" json:"configuration,omitempty"`
	TypeInfo      *ActivityTypeInfo          `locationName:"typeInfo" type:"structure" json:"typeInfo,omitempty"`

	metadataActivityTypeDetail `json:"-", xml:"-"`
}

type metadataActivityTypeDetail struct {
	SDKShapeTraits bool `type:"structure" required:"typeInfo,configuration" json:",omitempty"`
}

type ActivityTypeInfo struct {
	ActivityType    *ActivityType `locationName:"activityType" type:"structure" json:"activityType,omitempty"`
	CreationDate    *time.Time    `locationName:"creationDate" type:"timestamp" timestampFormat:"unix" json:"creationDate,omitempty"`
	DeprecationDate *time.Time    `locationName:"deprecationDate" type:"timestamp" timestampFormat:"unix" json:"deprecationDate,omitempty"`
	Description     *string       `locationName:"description" type:"string" json:"description,omitempty"`
	Status          *string       `locationName:"status" type:"string" json:"status,omitempty"`

	metadataActivityTypeInfo `json:"-", xml:"-"`
}

type metadataActivityTypeInfo struct {
	SDKShapeTraits bool `type:"structure" required:"activityType,status,creationDate" json:",omitempty"`
}

type ActivityTypeInfos struct {
	NextPageToken *string             `locationName:"nextPageToken" type:"string" json:"nextPageToken,omitempty"`
	TypeInfos     []*ActivityTypeInfo `locationName:"typeInfos" type:"list" json:"typeInfos,omitempty"`

	metadataActivityTypeInfos `json:"-", xml:"-"`
}

type metadataActivityTypeInfos struct {
	SDKShapeTraits bool `type:"structure" required:"typeInfos" json:",omitempty"`
}

type CancelTimerDecisionAttributes struct {
	TimerID *string `locationName:"timerId" type:"string" json:"timerId,omitempty"`

	metadataCancelTimerDecisionAttributes `json:"-", xml:"-"`
}

type metadataCancelTimerDecisionAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"timerId" json:",omitempty"`
}

type CancelTimerFailedEventAttributes struct {
	Cause                        *string `locationName:"cause" type:"string" json:"cause,omitempty"`
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	TimerID                      *string `locationName:"timerId" type:"string" json:"timerId,omitempty"`

	metadataCancelTimerFailedEventAttributes `json:"-", xml:"-"`
}

type metadataCancelTimerFailedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"timerId,cause,decisionTaskCompletedEventId" json:",omitempty"`
}

type CancelWorkflowExecutionDecisionAttributes struct {
	Details *string `locationName:"details" type:"string" json:"details,omitempty"`

	metadataCancelWorkflowExecutionDecisionAttributes `json:"-", xml:"-"`
}

type metadataCancelWorkflowExecutionDecisionAttributes struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CancelWorkflowExecutionFailedEventAttributes struct {
	Cause                        *string `locationName:"cause" type:"string" json:"cause,omitempty"`
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`

	metadataCancelWorkflowExecutionFailedEventAttributes `json:"-", xml:"-"`
}

type metadataCancelWorkflowExecutionFailedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"cause,decisionTaskCompletedEventId" json:",omitempty"`
}

type ChildWorkflowExecutionCanceledEventAttributes struct {
	Details           *string            `locationName:"details" type:"string" json:"details,omitempty"`
	InitiatedEventID  *int64             `locationName:"initiatedEventId" type:"long" json:"initiatedEventId,omitempty"`
	StartedEventID    *int64             `locationName:"startedEventId" type:"long" json:"startedEventId,omitempty"`
	WorkflowExecution *WorkflowExecution `locationName:"workflowExecution" type:"structure" json:"workflowExecution,omitempty"`
	WorkflowType      *WorkflowType      `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataChildWorkflowExecutionCanceledEventAttributes `json:"-", xml:"-"`
}

type metadataChildWorkflowExecutionCanceledEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowExecution,workflowType,initiatedEventId,startedEventId" json:",omitempty"`
}

type ChildWorkflowExecutionCompletedEventAttributes struct {
	InitiatedEventID  *int64             `locationName:"initiatedEventId" type:"long" json:"initiatedEventId,omitempty"`
	Result            *string            `locationName:"result" type:"string" json:"result,omitempty"`
	StartedEventID    *int64             `locationName:"startedEventId" type:"long" json:"startedEventId,omitempty"`
	WorkflowExecution *WorkflowExecution `locationName:"workflowExecution" type:"structure" json:"workflowExecution,omitempty"`
	WorkflowType      *WorkflowType      `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataChildWorkflowExecutionCompletedEventAttributes `json:"-", xml:"-"`
}

type metadataChildWorkflowExecutionCompletedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowExecution,workflowType,initiatedEventId,startedEventId" json:",omitempty"`
}

type ChildWorkflowExecutionFailedEventAttributes struct {
	Details           *string            `locationName:"details" type:"string" json:"details,omitempty"`
	InitiatedEventID  *int64             `locationName:"initiatedEventId" type:"long" json:"initiatedEventId,omitempty"`
	Reason            *string            `locationName:"reason" type:"string" json:"reason,omitempty"`
	StartedEventID    *int64             `locationName:"startedEventId" type:"long" json:"startedEventId,omitempty"`
	WorkflowExecution *WorkflowExecution `locationName:"workflowExecution" type:"structure" json:"workflowExecution,omitempty"`
	WorkflowType      *WorkflowType      `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataChildWorkflowExecutionFailedEventAttributes `json:"-", xml:"-"`
}

type metadataChildWorkflowExecutionFailedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowExecution,workflowType,initiatedEventId,startedEventId" json:",omitempty"`
}

type ChildWorkflowExecutionStartedEventAttributes struct {
	InitiatedEventID  *int64             `locationName:"initiatedEventId" type:"long" json:"initiatedEventId,omitempty"`
	WorkflowExecution *WorkflowExecution `locationName:"workflowExecution" type:"structure" json:"workflowExecution,omitempty"`
	WorkflowType      *WorkflowType      `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataChildWorkflowExecutionStartedEventAttributes `json:"-", xml:"-"`
}

type metadataChildWorkflowExecutionStartedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowExecution,workflowType,initiatedEventId" json:",omitempty"`
}

type ChildWorkflowExecutionTerminatedEventAttributes struct {
	InitiatedEventID  *int64             `locationName:"initiatedEventId" type:"long" json:"initiatedEventId,omitempty"`
	StartedEventID    *int64             `locationName:"startedEventId" type:"long" json:"startedEventId,omitempty"`
	WorkflowExecution *WorkflowExecution `locationName:"workflowExecution" type:"structure" json:"workflowExecution,omitempty"`
	WorkflowType      *WorkflowType      `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataChildWorkflowExecutionTerminatedEventAttributes `json:"-", xml:"-"`
}

type metadataChildWorkflowExecutionTerminatedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowExecution,workflowType,initiatedEventId,startedEventId" json:",omitempty"`
}

type ChildWorkflowExecutionTimedOutEventAttributes struct {
	InitiatedEventID  *int64             `locationName:"initiatedEventId" type:"long" json:"initiatedEventId,omitempty"`
	StartedEventID    *int64             `locationName:"startedEventId" type:"long" json:"startedEventId,omitempty"`
	TimeoutType       *string            `locationName:"timeoutType" type:"string" json:"timeoutType,omitempty"`
	WorkflowExecution *WorkflowExecution `locationName:"workflowExecution" type:"structure" json:"workflowExecution,omitempty"`
	WorkflowType      *WorkflowType      `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataChildWorkflowExecutionTimedOutEventAttributes `json:"-", xml:"-"`
}

type metadataChildWorkflowExecutionTimedOutEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowExecution,workflowType,timeoutType,initiatedEventId,startedEventId" json:",omitempty"`
}

type CloseStatusFilter struct {
	Status *string `locationName:"status" type:"string" json:"status,omitempty"`

	metadataCloseStatusFilter `json:"-", xml:"-"`
}

type metadataCloseStatusFilter struct {
	SDKShapeTraits bool `type:"structure" required:"status" json:",omitempty"`
}

type CompleteWorkflowExecutionDecisionAttributes struct {
	Result *string `locationName:"result" type:"string" json:"result,omitempty"`

	metadataCompleteWorkflowExecutionDecisionAttributes `json:"-", xml:"-"`
}

type metadataCompleteWorkflowExecutionDecisionAttributes struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CompleteWorkflowExecutionFailedEventAttributes struct {
	Cause                        *string `locationName:"cause" type:"string" json:"cause,omitempty"`
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`

	metadataCompleteWorkflowExecutionFailedEventAttributes `json:"-", xml:"-"`
}

type metadataCompleteWorkflowExecutionFailedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"cause,decisionTaskCompletedEventId" json:",omitempty"`
}

type ContinueAsNewWorkflowExecutionDecisionAttributes struct {
	ChildPolicy                  *string   `locationName:"childPolicy" type:"string" json:"childPolicy,omitempty"`
	ExecutionStartToCloseTimeout *string   `locationName:"executionStartToCloseTimeout" type:"string" json:"executionStartToCloseTimeout,omitempty"`
	Input                        *string   `locationName:"input" type:"string" json:"input,omitempty"`
	TagList                      []*string `locationName:"tagList" type:"list" json:"tagList,omitempty"`
	TaskList                     *TaskList `locationName:"taskList" type:"structure" json:"taskList,omitempty"`
	TaskPriority                 *string   `locationName:"taskPriority" type:"string" json:"taskPriority,omitempty"`
	TaskStartToCloseTimeout      *string   `locationName:"taskStartToCloseTimeout" type:"string" json:"taskStartToCloseTimeout,omitempty"`
	WorkflowTypeVersion          *string   `locationName:"workflowTypeVersion" type:"string" json:"workflowTypeVersion,omitempty"`

	metadataContinueAsNewWorkflowExecutionDecisionAttributes `json:"-", xml:"-"`
}

type metadataContinueAsNewWorkflowExecutionDecisionAttributes struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ContinueAsNewWorkflowExecutionFailedEventAttributes struct {
	Cause                        *string `locationName:"cause" type:"string" json:"cause,omitempty"`
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`

	metadataContinueAsNewWorkflowExecutionFailedEventAttributes `json:"-", xml:"-"`
}

type metadataContinueAsNewWorkflowExecutionFailedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"cause,decisionTaskCompletedEventId" json:",omitempty"`
}

type CountClosedWorkflowExecutionsInput struct {
	CloseStatusFilter *CloseStatusFilter       `locationName:"closeStatusFilter" type:"structure" json:"closeStatusFilter,omitempty"`
	CloseTimeFilter   *ExecutionTimeFilter     `locationName:"closeTimeFilter" type:"structure" json:"closeTimeFilter,omitempty"`
	Domain            *string                  `locationName:"domain" type:"string" json:"domain,omitempty"`
	ExecutionFilter   *WorkflowExecutionFilter `locationName:"executionFilter" type:"structure" json:"executionFilter,omitempty"`
	StartTimeFilter   *ExecutionTimeFilter     `locationName:"startTimeFilter" type:"structure" json:"startTimeFilter,omitempty"`
	TagFilter         *TagFilter               `locationName:"tagFilter" type:"structure" json:"tagFilter,omitempty"`
	TypeFilter        *WorkflowTypeFilter      `locationName:"typeFilter" type:"structure" json:"typeFilter,omitempty"`

	metadataCountClosedWorkflowExecutionsInput `json:"-", xml:"-"`
}

type metadataCountClosedWorkflowExecutionsInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain" json:",omitempty"`
}

type CountOpenWorkflowExecutionsInput struct {
	Domain          *string                  `locationName:"domain" type:"string" json:"domain,omitempty"`
	ExecutionFilter *WorkflowExecutionFilter `locationName:"executionFilter" type:"structure" json:"executionFilter,omitempty"`
	StartTimeFilter *ExecutionTimeFilter     `locationName:"startTimeFilter" type:"structure" json:"startTimeFilter,omitempty"`
	TagFilter       *TagFilter               `locationName:"tagFilter" type:"structure" json:"tagFilter,omitempty"`
	TypeFilter      *WorkflowTypeFilter      `locationName:"typeFilter" type:"structure" json:"typeFilter,omitempty"`

	metadataCountOpenWorkflowExecutionsInput `json:"-", xml:"-"`
}

type metadataCountOpenWorkflowExecutionsInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,startTimeFilter" json:",omitempty"`
}

type CountPendingActivityTasksInput struct {
	Domain   *string   `locationName:"domain" type:"string" json:"domain,omitempty"`
	TaskList *TaskList `locationName:"taskList" type:"structure" json:"taskList,omitempty"`

	metadataCountPendingActivityTasksInput `json:"-", xml:"-"`
}

type metadataCountPendingActivityTasksInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,taskList" json:",omitempty"`
}

type CountPendingDecisionTasksInput struct {
	Domain   *string   `locationName:"domain" type:"string" json:"domain,omitempty"`
	TaskList *TaskList `locationName:"taskList" type:"structure" json:"taskList,omitempty"`

	metadataCountPendingDecisionTasksInput `json:"-", xml:"-"`
}

type metadataCountPendingDecisionTasksInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,taskList" json:",omitempty"`
}

type Decision struct {
	CancelTimerDecisionAttributes                            *CancelTimerDecisionAttributes                            `locationName:"cancelTimerDecisionAttributes" type:"structure" json:"cancelTimerDecisionAttributes,omitempty"`
	CancelWorkflowExecutionDecisionAttributes                *CancelWorkflowExecutionDecisionAttributes                `locationName:"cancelWorkflowExecutionDecisionAttributes" type:"structure" json:"cancelWorkflowExecutionDecisionAttributes,omitempty"`
	CompleteWorkflowExecutionDecisionAttributes              *CompleteWorkflowExecutionDecisionAttributes              `locationName:"completeWorkflowExecutionDecisionAttributes" type:"structure" json:"completeWorkflowExecutionDecisionAttributes,omitempty"`
	ContinueAsNewWorkflowExecutionDecisionAttributes         *ContinueAsNewWorkflowExecutionDecisionAttributes         `locationName:"continueAsNewWorkflowExecutionDecisionAttributes" type:"structure" json:"continueAsNewWorkflowExecutionDecisionAttributes,omitempty"`
	DecisionType                                             *string                                                   `locationName:"decisionType" type:"string" json:"decisionType,omitempty"`
	FailWorkflowExecutionDecisionAttributes                  *FailWorkflowExecutionDecisionAttributes                  `locationName:"failWorkflowExecutionDecisionAttributes" type:"structure" json:"failWorkflowExecutionDecisionAttributes,omitempty"`
	RecordMarkerDecisionAttributes                           *RecordMarkerDecisionAttributes                           `locationName:"recordMarkerDecisionAttributes" type:"structure" json:"recordMarkerDecisionAttributes,omitempty"`
	RequestCancelActivityTaskDecisionAttributes              *RequestCancelActivityTaskDecisionAttributes              `locationName:"requestCancelActivityTaskDecisionAttributes" type:"structure" json:"requestCancelActivityTaskDecisionAttributes,omitempty"`
	RequestCancelExternalWorkflowExecutionDecisionAttributes *RequestCancelExternalWorkflowExecutionDecisionAttributes `locationName:"requestCancelExternalWorkflowExecutionDecisionAttributes" type:"structure" json:"requestCancelExternalWorkflowExecutionDecisionAttributes,omitempty"`
	ScheduleActivityTaskDecisionAttributes                   *ScheduleActivityTaskDecisionAttributes                   `locationName:"scheduleActivityTaskDecisionAttributes" type:"structure" json:"scheduleActivityTaskDecisionAttributes,omitempty"`
	SignalExternalWorkflowExecutionDecisionAttributes        *SignalExternalWorkflowExecutionDecisionAttributes        `locationName:"signalExternalWorkflowExecutionDecisionAttributes" type:"structure" json:"signalExternalWorkflowExecutionDecisionAttributes,omitempty"`
	StartChildWorkflowExecutionDecisionAttributes            *StartChildWorkflowExecutionDecisionAttributes            `locationName:"startChildWorkflowExecutionDecisionAttributes" type:"structure" json:"startChildWorkflowExecutionDecisionAttributes,omitempty"`
	StartTimerDecisionAttributes                             *StartTimerDecisionAttributes                             `locationName:"startTimerDecisionAttributes" type:"structure" json:"startTimerDecisionAttributes,omitempty"`

	metadataDecision `json:"-", xml:"-"`
}

type metadataDecision struct {
	SDKShapeTraits bool `type:"structure" required:"decisionType" json:",omitempty"`
}

type DecisionTask struct {
	Events                 []*HistoryEvent    `locationName:"events" type:"list" json:"events,omitempty"`
	NextPageToken          *string            `locationName:"nextPageToken" type:"string" json:"nextPageToken,omitempty"`
	PreviousStartedEventID *int64             `locationName:"previousStartedEventId" type:"long" json:"previousStartedEventId,omitempty"`
	StartedEventID         *int64             `locationName:"startedEventId" type:"long" json:"startedEventId,omitempty"`
	TaskToken              *string            `locationName:"taskToken" type:"string" json:"taskToken,omitempty"`
	WorkflowExecution      *WorkflowExecution `locationName:"workflowExecution" type:"structure" json:"workflowExecution,omitempty"`
	WorkflowType           *WorkflowType      `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataDecisionTask `json:"-", xml:"-"`
}

type metadataDecisionTask struct {
	SDKShapeTraits bool `type:"structure" required:"taskToken,startedEventId,workflowExecution,workflowType,events" json:",omitempty"`
}

type DecisionTaskCompletedEventAttributes struct {
	ExecutionContext *string `locationName:"executionContext" type:"string" json:"executionContext,omitempty"`
	ScheduledEventID *int64  `locationName:"scheduledEventId" type:"long" json:"scheduledEventId,omitempty"`
	StartedEventID   *int64  `locationName:"startedEventId" type:"long" json:"startedEventId,omitempty"`

	metadataDecisionTaskCompletedEventAttributes `json:"-", xml:"-"`
}

type metadataDecisionTaskCompletedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"scheduledEventId,startedEventId" json:",omitempty"`
}

type DecisionTaskScheduledEventAttributes struct {
	StartToCloseTimeout *string   `locationName:"startToCloseTimeout" type:"string" json:"startToCloseTimeout,omitempty"`
	TaskList            *TaskList `locationName:"taskList" type:"structure" json:"taskList,omitempty"`
	TaskPriority        *string   `locationName:"taskPriority" type:"string" json:"taskPriority,omitempty"`

	metadataDecisionTaskScheduledEventAttributes `json:"-", xml:"-"`
}

type metadataDecisionTaskScheduledEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"taskList" json:",omitempty"`
}

type DecisionTaskStartedEventAttributes struct {
	Identity         *string `locationName:"identity" type:"string" json:"identity,omitempty"`
	ScheduledEventID *int64  `locationName:"scheduledEventId" type:"long" json:"scheduledEventId,omitempty"`

	metadataDecisionTaskStartedEventAttributes `json:"-", xml:"-"`
}

type metadataDecisionTaskStartedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"scheduledEventId" json:",omitempty"`
}

type DecisionTaskTimedOutEventAttributes struct {
	ScheduledEventID *int64  `locationName:"scheduledEventId" type:"long" json:"scheduledEventId,omitempty"`
	StartedEventID   *int64  `locationName:"startedEventId" type:"long" json:"startedEventId,omitempty"`
	TimeoutType      *string `locationName:"timeoutType" type:"string" json:"timeoutType,omitempty"`

	metadataDecisionTaskTimedOutEventAttributes `json:"-", xml:"-"`
}

type metadataDecisionTaskTimedOutEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"timeoutType,scheduledEventId,startedEventId" json:",omitempty"`
}

type DefaultUndefinedFault struct {
	Message *string `locationName:"message" type:"string" json:"message,omitempty"`

	metadataDefaultUndefinedFault `json:"-", xml:"-"`
}

type metadataDefaultUndefinedFault struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DeprecateActivityTypeInput struct {
	ActivityType *ActivityType `locationName:"activityType" type:"structure" json:"activityType,omitempty"`
	Domain       *string       `locationName:"domain" type:"string" json:"domain,omitempty"`

	metadataDeprecateActivityTypeInput `json:"-", xml:"-"`
}

type metadataDeprecateActivityTypeInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,activityType" json:",omitempty"`
}

type DeprecateDomainInput struct {
	Name *string `locationName:"name" type:"string" json:"name,omitempty"`

	metadataDeprecateDomainInput `json:"-", xml:"-"`
}

type metadataDeprecateDomainInput struct {
	SDKShapeTraits bool `type:"structure" required:"name" json:",omitempty"`
}

type DeprecateWorkflowTypeInput struct {
	Domain       *string       `locationName:"domain" type:"string" json:"domain,omitempty"`
	WorkflowType *WorkflowType `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataDeprecateWorkflowTypeInput `json:"-", xml:"-"`
}

type metadataDeprecateWorkflowTypeInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,workflowType" json:",omitempty"`
}

type DescribeActivityTypeInput struct {
	ActivityType *ActivityType `locationName:"activityType" type:"structure" json:"activityType,omitempty"`
	Domain       *string       `locationName:"domain" type:"string" json:"domain,omitempty"`

	metadataDescribeActivityTypeInput `json:"-", xml:"-"`
}

type metadataDescribeActivityTypeInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,activityType" json:",omitempty"`
}

type DescribeDomainInput struct {
	Name *string `locationName:"name" type:"string" json:"name,omitempty"`

	metadataDescribeDomainInput `json:"-", xml:"-"`
}

type metadataDescribeDomainInput struct {
	SDKShapeTraits bool `type:"structure" required:"name" json:",omitempty"`
}

type DescribeWorkflowExecutionInput struct {
	Domain    *string            `locationName:"domain" type:"string" json:"domain,omitempty"`
	Execution *WorkflowExecution `locationName:"execution" type:"structure" json:"execution,omitempty"`

	metadataDescribeWorkflowExecutionInput `json:"-", xml:"-"`
}

type metadataDescribeWorkflowExecutionInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,execution" json:",omitempty"`
}

type DescribeWorkflowTypeInput struct {
	Domain       *string       `locationName:"domain" type:"string" json:"domain,omitempty"`
	WorkflowType *WorkflowType `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataDescribeWorkflowTypeInput `json:"-", xml:"-"`
}

type metadataDescribeWorkflowTypeInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,workflowType" json:",omitempty"`
}

type DomainAlreadyExistsFault struct {
	Message *string `locationName:"message" type:"string" json:"message,omitempty"`

	metadataDomainAlreadyExistsFault `json:"-", xml:"-"`
}

type metadataDomainAlreadyExistsFault struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DomainConfiguration struct {
	WorkflowExecutionRetentionPeriodInDays *string `locationName:"workflowExecutionRetentionPeriodInDays" type:"string" json:"workflowExecutionRetentionPeriodInDays,omitempty"`

	metadataDomainConfiguration `json:"-", xml:"-"`
}

type metadataDomainConfiguration struct {
	SDKShapeTraits bool `type:"structure" required:"workflowExecutionRetentionPeriodInDays" json:",omitempty"`
}

type DomainDeprecatedFault struct {
	Message *string `locationName:"message" type:"string" json:"message,omitempty"`

	metadataDomainDeprecatedFault `json:"-", xml:"-"`
}

type metadataDomainDeprecatedFault struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DomainDetail struct {
	Configuration *DomainConfiguration `locationName:"configuration" type:"structure" json:"configuration,omitempty"`
	DomainInfo    *DomainInfo          `locationName:"domainInfo" type:"structure" json:"domainInfo,omitempty"`

	metadataDomainDetail `json:"-", xml:"-"`
}

type metadataDomainDetail struct {
	SDKShapeTraits bool `type:"structure" required:"domainInfo,configuration" json:",omitempty"`
}

type DomainInfo struct {
	Description *string `locationName:"description" type:"string" json:"description,omitempty"`
	Name        *string `locationName:"name" type:"string" json:"name,omitempty"`
	Status      *string `locationName:"status" type:"string" json:"status,omitempty"`

	metadataDomainInfo `json:"-", xml:"-"`
}

type metadataDomainInfo struct {
	SDKShapeTraits bool `type:"structure" required:"name,status" json:",omitempty"`
}

type DomainInfos struct {
	DomainInfos   []*DomainInfo `locationName:"domainInfos" type:"list" json:"domainInfos,omitempty"`
	NextPageToken *string       `locationName:"nextPageToken" type:"string" json:"nextPageToken,omitempty"`

	metadataDomainInfos `json:"-", xml:"-"`
}

type metadataDomainInfos struct {
	SDKShapeTraits bool `type:"structure" required:"domainInfos" json:",omitempty"`
}

type ExecutionTimeFilter struct {
	LatestDate *time.Time `locationName:"latestDate" type:"timestamp" timestampFormat:"unix" json:"latestDate,omitempty"`
	OldestDate *time.Time `locationName:"oldestDate" type:"timestamp" timestampFormat:"unix" json:"oldestDate,omitempty"`

	metadataExecutionTimeFilter `json:"-", xml:"-"`
}

type metadataExecutionTimeFilter struct {
	SDKShapeTraits bool `type:"structure" required:"oldestDate" json:",omitempty"`
}

type ExternalWorkflowExecutionCancelRequestedEventAttributes struct {
	InitiatedEventID  *int64             `locationName:"initiatedEventId" type:"long" json:"initiatedEventId,omitempty"`
	WorkflowExecution *WorkflowExecution `locationName:"workflowExecution" type:"structure" json:"workflowExecution,omitempty"`

	metadataExternalWorkflowExecutionCancelRequestedEventAttributes `json:"-", xml:"-"`
}

type metadataExternalWorkflowExecutionCancelRequestedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowExecution,initiatedEventId" json:",omitempty"`
}

type ExternalWorkflowExecutionSignaledEventAttributes struct {
	InitiatedEventID  *int64             `locationName:"initiatedEventId" type:"long" json:"initiatedEventId,omitempty"`
	WorkflowExecution *WorkflowExecution `locationName:"workflowExecution" type:"structure" json:"workflowExecution,omitempty"`

	metadataExternalWorkflowExecutionSignaledEventAttributes `json:"-", xml:"-"`
}

type metadataExternalWorkflowExecutionSignaledEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowExecution,initiatedEventId" json:",omitempty"`
}

type FailWorkflowExecutionDecisionAttributes struct {
	Details *string `locationName:"details" type:"string" json:"details,omitempty"`
	Reason  *string `locationName:"reason" type:"string" json:"reason,omitempty"`

	metadataFailWorkflowExecutionDecisionAttributes `json:"-", xml:"-"`
}

type metadataFailWorkflowExecutionDecisionAttributes struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type FailWorkflowExecutionFailedEventAttributes struct {
	Cause                        *string `locationName:"cause" type:"string" json:"cause,omitempty"`
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`

	metadataFailWorkflowExecutionFailedEventAttributes `json:"-", xml:"-"`
}

type metadataFailWorkflowExecutionFailedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"cause,decisionTaskCompletedEventId" json:",omitempty"`
}

type GetWorkflowExecutionHistoryInput struct {
	Domain          *string            `locationName:"domain" type:"string" json:"domain,omitempty"`
	Execution       *WorkflowExecution `locationName:"execution" type:"structure" json:"execution,omitempty"`
	MaximumPageSize *int               `locationName:"maximumPageSize" type:"integer" json:"maximumPageSize,omitempty"`
	NextPageToken   *string            `locationName:"nextPageToken" type:"string" json:"nextPageToken,omitempty"`
	ReverseOrder    *bool              `locationName:"reverseOrder" type:"boolean" json:"reverseOrder,omitempty"`

	metadataGetWorkflowExecutionHistoryInput `json:"-", xml:"-"`
}

type metadataGetWorkflowExecutionHistoryInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,execution" json:",omitempty"`
}

type History struct {
	Events        []*HistoryEvent `locationName:"events" type:"list" json:"events,omitempty"`
	NextPageToken *string         `locationName:"nextPageToken" type:"string" json:"nextPageToken,omitempty"`

	metadataHistory `json:"-", xml:"-"`
}

type metadataHistory struct {
	SDKShapeTraits bool `type:"structure" required:"events" json:",omitempty"`
}

type HistoryEvent struct {
	ActivityTaskCancelRequestedEventAttributes                     *ActivityTaskCancelRequestedEventAttributes                     `locationName:"activityTaskCancelRequestedEventAttributes" type:"structure" json:"activityTaskCancelRequestedEventAttributes,omitempty"`
	ActivityTaskCanceledEventAttributes                            *ActivityTaskCanceledEventAttributes                            `locationName:"activityTaskCanceledEventAttributes" type:"structure" json:"activityTaskCanceledEventAttributes,omitempty"`
	ActivityTaskCompletedEventAttributes                           *ActivityTaskCompletedEventAttributes                           `locationName:"activityTaskCompletedEventAttributes" type:"structure" json:"activityTaskCompletedEventAttributes,omitempty"`
	ActivityTaskFailedEventAttributes                              *ActivityTaskFailedEventAttributes                              `locationName:"activityTaskFailedEventAttributes" type:"structure" json:"activityTaskFailedEventAttributes,omitempty"`
	ActivityTaskScheduledEventAttributes                           *ActivityTaskScheduledEventAttributes                           `locationName:"activityTaskScheduledEventAttributes" type:"structure" json:"activityTaskScheduledEventAttributes,omitempty"`
	ActivityTaskStartedEventAttributes                             *ActivityTaskStartedEventAttributes                             `locationName:"activityTaskStartedEventAttributes" type:"structure" json:"activityTaskStartedEventAttributes,omitempty"`
	ActivityTaskTimedOutEventAttributes                            *ActivityTaskTimedOutEventAttributes                            `locationName:"activityTaskTimedOutEventAttributes" type:"structure" json:"activityTaskTimedOutEventAttributes,omitempty"`
	CancelTimerFailedEventAttributes                               *CancelTimerFailedEventAttributes                               `locationName:"cancelTimerFailedEventAttributes" type:"structure" json:"cancelTimerFailedEventAttributes,omitempty"`
	CancelWorkflowExecutionFailedEventAttributes                   *CancelWorkflowExecutionFailedEventAttributes                   `locationName:"cancelWorkflowExecutionFailedEventAttributes" type:"structure" json:"cancelWorkflowExecutionFailedEventAttributes,omitempty"`
	ChildWorkflowExecutionCanceledEventAttributes                  *ChildWorkflowExecutionCanceledEventAttributes                  `locationName:"childWorkflowExecutionCanceledEventAttributes" type:"structure" json:"childWorkflowExecutionCanceledEventAttributes,omitempty"`
	ChildWorkflowExecutionCompletedEventAttributes                 *ChildWorkflowExecutionCompletedEventAttributes                 `locationName:"childWorkflowExecutionCompletedEventAttributes" type:"structure" json:"childWorkflowExecutionCompletedEventAttributes,omitempty"`
	ChildWorkflowExecutionFailedEventAttributes                    *ChildWorkflowExecutionFailedEventAttributes                    `locationName:"childWorkflowExecutionFailedEventAttributes" type:"structure" json:"childWorkflowExecutionFailedEventAttributes,omitempty"`
	ChildWorkflowExecutionStartedEventAttributes                   *ChildWorkflowExecutionStartedEventAttributes                   `locationName:"childWorkflowExecutionStartedEventAttributes" type:"structure" json:"childWorkflowExecutionStartedEventAttributes,omitempty"`
	ChildWorkflowExecutionTerminatedEventAttributes                *ChildWorkflowExecutionTerminatedEventAttributes                `locationName:"childWorkflowExecutionTerminatedEventAttributes" type:"structure" json:"childWorkflowExecutionTerminatedEventAttributes,omitempty"`
	ChildWorkflowExecutionTimedOutEventAttributes                  *ChildWorkflowExecutionTimedOutEventAttributes                  `locationName:"childWorkflowExecutionTimedOutEventAttributes" type:"structure" json:"childWorkflowExecutionTimedOutEventAttributes,omitempty"`
	CompleteWorkflowExecutionFailedEventAttributes                 *CompleteWorkflowExecutionFailedEventAttributes                 `locationName:"completeWorkflowExecutionFailedEventAttributes" type:"structure" json:"completeWorkflowExecutionFailedEventAttributes,omitempty"`
	ContinueAsNewWorkflowExecutionFailedEventAttributes            *ContinueAsNewWorkflowExecutionFailedEventAttributes            `locationName:"continueAsNewWorkflowExecutionFailedEventAttributes" type:"structure" json:"continueAsNewWorkflowExecutionFailedEventAttributes,omitempty"`
	DecisionTaskCompletedEventAttributes                           *DecisionTaskCompletedEventAttributes                           `locationName:"decisionTaskCompletedEventAttributes" type:"structure" json:"decisionTaskCompletedEventAttributes,omitempty"`
	DecisionTaskScheduledEventAttributes                           *DecisionTaskScheduledEventAttributes                           `locationName:"decisionTaskScheduledEventAttributes" type:"structure" json:"decisionTaskScheduledEventAttributes,omitempty"`
	DecisionTaskStartedEventAttributes                             *DecisionTaskStartedEventAttributes                             `locationName:"decisionTaskStartedEventAttributes" type:"structure" json:"decisionTaskStartedEventAttributes,omitempty"`
	DecisionTaskTimedOutEventAttributes                            *DecisionTaskTimedOutEventAttributes                            `locationName:"decisionTaskTimedOutEventAttributes" type:"structure" json:"decisionTaskTimedOutEventAttributes,omitempty"`
	EventID                                                        *int64                                                          `locationName:"eventId" type:"long" json:"eventId,omitempty"`
	EventTimestamp                                                 *time.Time                                                      `locationName:"eventTimestamp" type:"timestamp" timestampFormat:"unix" json:"eventTimestamp,omitempty"`
	EventType                                                      *string                                                         `locationName:"eventType" type:"string" json:"eventType,omitempty"`
	ExternalWorkflowExecutionCancelRequestedEventAttributes        *ExternalWorkflowExecutionCancelRequestedEventAttributes        `locationName:"externalWorkflowExecutionCancelRequestedEventAttributes" type:"structure" json:"externalWorkflowExecutionCancelRequestedEventAttributes,omitempty"`
	ExternalWorkflowExecutionSignaledEventAttributes               *ExternalWorkflowExecutionSignaledEventAttributes               `locationName:"externalWorkflowExecutionSignaledEventAttributes" type:"structure" json:"externalWorkflowExecutionSignaledEventAttributes,omitempty"`
	FailWorkflowExecutionFailedEventAttributes                     *FailWorkflowExecutionFailedEventAttributes                     `locationName:"failWorkflowExecutionFailedEventAttributes" type:"structure" json:"failWorkflowExecutionFailedEventAttributes,omitempty"`
	MarkerRecordedEventAttributes                                  *MarkerRecordedEventAttributes                                  `locationName:"markerRecordedEventAttributes" type:"structure" json:"markerRecordedEventAttributes,omitempty"`
	RecordMarkerFailedEventAttributes                              *RecordMarkerFailedEventAttributes                              `locationName:"recordMarkerFailedEventAttributes" type:"structure" json:"recordMarkerFailedEventAttributes,omitempty"`
	RequestCancelActivityTaskFailedEventAttributes                 *RequestCancelActivityTaskFailedEventAttributes                 `locationName:"requestCancelActivityTaskFailedEventAttributes" type:"structure" json:"requestCancelActivityTaskFailedEventAttributes,omitempty"`
	RequestCancelExternalWorkflowExecutionFailedEventAttributes    *RequestCancelExternalWorkflowExecutionFailedEventAttributes    `locationName:"requestCancelExternalWorkflowExecutionFailedEventAttributes" type:"structure" json:"requestCancelExternalWorkflowExecutionFailedEventAttributes,omitempty"`
	RequestCancelExternalWorkflowExecutionInitiatedEventAttributes *RequestCancelExternalWorkflowExecutionInitiatedEventAttributes `locationName:"requestCancelExternalWorkflowExecutionInitiatedEventAttributes" type:"structure" json:"requestCancelExternalWorkflowExecutionInitiatedEventAttributes,omitempty"`
	ScheduleActivityTaskFailedEventAttributes                      *ScheduleActivityTaskFailedEventAttributes                      `locationName:"scheduleActivityTaskFailedEventAttributes" type:"structure" json:"scheduleActivityTaskFailedEventAttributes,omitempty"`
	SignalExternalWorkflowExecutionFailedEventAttributes           *SignalExternalWorkflowExecutionFailedEventAttributes           `locationName:"signalExternalWorkflowExecutionFailedEventAttributes" type:"structure" json:"signalExternalWorkflowExecutionFailedEventAttributes,omitempty"`
	SignalExternalWorkflowExecutionInitiatedEventAttributes        *SignalExternalWorkflowExecutionInitiatedEventAttributes        `locationName:"signalExternalWorkflowExecutionInitiatedEventAttributes" type:"structure" json:"signalExternalWorkflowExecutionInitiatedEventAttributes,omitempty"`
	StartChildWorkflowExecutionFailedEventAttributes               *StartChildWorkflowExecutionFailedEventAttributes               `locationName:"startChildWorkflowExecutionFailedEventAttributes" type:"structure" json:"startChildWorkflowExecutionFailedEventAttributes,omitempty"`
	StartChildWorkflowExecutionInitiatedEventAttributes            *StartChildWorkflowExecutionInitiatedEventAttributes            `locationName:"startChildWorkflowExecutionInitiatedEventAttributes" type:"structure" json:"startChildWorkflowExecutionInitiatedEventAttributes,omitempty"`
	StartTimerFailedEventAttributes                                *StartTimerFailedEventAttributes                                `locationName:"startTimerFailedEventAttributes" type:"structure" json:"startTimerFailedEventAttributes,omitempty"`
	TimerCanceledEventAttributes                                   *TimerCanceledEventAttributes                                   `locationName:"timerCanceledEventAttributes" type:"structure" json:"timerCanceledEventAttributes,omitempty"`
	TimerFiredEventAttributes                                      *TimerFiredEventAttributes                                      `locationName:"timerFiredEventAttributes" type:"structure" json:"timerFiredEventAttributes,omitempty"`
	TimerStartedEventAttributes                                    *TimerStartedEventAttributes                                    `locationName:"timerStartedEventAttributes" type:"structure" json:"timerStartedEventAttributes,omitempty"`
	WorkflowExecutionCancelRequestedEventAttributes                *WorkflowExecutionCancelRequestedEventAttributes                `locationName:"workflowExecutionCancelRequestedEventAttributes" type:"structure" json:"workflowExecutionCancelRequestedEventAttributes,omitempty"`
	WorkflowExecutionCanceledEventAttributes                       *WorkflowExecutionCanceledEventAttributes                       `locationName:"workflowExecutionCanceledEventAttributes" type:"structure" json:"workflowExecutionCanceledEventAttributes,omitempty"`
	WorkflowExecutionCompletedEventAttributes                      *WorkflowExecutionCompletedEventAttributes                      `locationName:"workflowExecutionCompletedEventAttributes" type:"structure" json:"workflowExecutionCompletedEventAttributes,omitempty"`
	WorkflowExecutionContinuedAsNewEventAttributes                 *WorkflowExecutionContinuedAsNewEventAttributes                 `locationName:"workflowExecutionContinuedAsNewEventAttributes" type:"structure" json:"workflowExecutionContinuedAsNewEventAttributes,omitempty"`
	WorkflowExecutionFailedEventAttributes                         *WorkflowExecutionFailedEventAttributes                         `locationName:"workflowExecutionFailedEventAttributes" type:"structure" json:"workflowExecutionFailedEventAttributes,omitempty"`
	WorkflowExecutionSignaledEventAttributes                       *WorkflowExecutionSignaledEventAttributes                       `locationName:"workflowExecutionSignaledEventAttributes" type:"structure" json:"workflowExecutionSignaledEventAttributes,omitempty"`
	WorkflowExecutionStartedEventAttributes                        *WorkflowExecutionStartedEventAttributes                        `locationName:"workflowExecutionStartedEventAttributes" type:"structure" json:"workflowExecutionStartedEventAttributes,omitempty"`
	WorkflowExecutionTerminatedEventAttributes                     *WorkflowExecutionTerminatedEventAttributes                     `locationName:"workflowExecutionTerminatedEventAttributes" type:"structure" json:"workflowExecutionTerminatedEventAttributes,omitempty"`
	WorkflowExecutionTimedOutEventAttributes                       *WorkflowExecutionTimedOutEventAttributes                       `locationName:"workflowExecutionTimedOutEventAttributes" type:"structure" json:"workflowExecutionTimedOutEventAttributes,omitempty"`

	metadataHistoryEvent `json:"-", xml:"-"`
}

type metadataHistoryEvent struct {
	SDKShapeTraits bool `type:"structure" required:"eventTimestamp,eventType,eventId" json:",omitempty"`
}

type LimitExceededFault struct {
	Message *string `locationName:"message" type:"string" json:"message,omitempty"`

	metadataLimitExceededFault `json:"-", xml:"-"`
}

type metadataLimitExceededFault struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListActivityTypesInput struct {
	Domain             *string `locationName:"domain" type:"string" json:"domain,omitempty"`
	MaximumPageSize    *int    `locationName:"maximumPageSize" type:"integer" json:"maximumPageSize,omitempty"`
	Name               *string `locationName:"name" type:"string" json:"name,omitempty"`
	NextPageToken      *string `locationName:"nextPageToken" type:"string" json:"nextPageToken,omitempty"`
	RegistrationStatus *string `locationName:"registrationStatus" type:"string" json:"registrationStatus,omitempty"`
	ReverseOrder       *bool   `locationName:"reverseOrder" type:"boolean" json:"reverseOrder,omitempty"`

	metadataListActivityTypesInput `json:"-", xml:"-"`
}

type metadataListActivityTypesInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,registrationStatus" json:",omitempty"`
}

type ListClosedWorkflowExecutionsInput struct {
	CloseStatusFilter *CloseStatusFilter       `locationName:"closeStatusFilter" type:"structure" json:"closeStatusFilter,omitempty"`
	CloseTimeFilter   *ExecutionTimeFilter     `locationName:"closeTimeFilter" type:"structure" json:"closeTimeFilter,omitempty"`
	Domain            *string                  `locationName:"domain" type:"string" json:"domain,omitempty"`
	ExecutionFilter   *WorkflowExecutionFilter `locationName:"executionFilter" type:"structure" json:"executionFilter,omitempty"`
	MaximumPageSize   *int                     `locationName:"maximumPageSize" type:"integer" json:"maximumPageSize,omitempty"`
	NextPageToken     *string                  `locationName:"nextPageToken" type:"string" json:"nextPageToken,omitempty"`
	ReverseOrder      *bool                    `locationName:"reverseOrder" type:"boolean" json:"reverseOrder,omitempty"`
	StartTimeFilter   *ExecutionTimeFilter     `locationName:"startTimeFilter" type:"structure" json:"startTimeFilter,omitempty"`
	TagFilter         *TagFilter               `locationName:"tagFilter" type:"structure" json:"tagFilter,omitempty"`
	TypeFilter        *WorkflowTypeFilter      `locationName:"typeFilter" type:"structure" json:"typeFilter,omitempty"`

	metadataListClosedWorkflowExecutionsInput `json:"-", xml:"-"`
}

type metadataListClosedWorkflowExecutionsInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain" json:",omitempty"`
}

type ListDomainsInput struct {
	MaximumPageSize    *int    `locationName:"maximumPageSize" type:"integer" json:"maximumPageSize,omitempty"`
	NextPageToken      *string `locationName:"nextPageToken" type:"string" json:"nextPageToken,omitempty"`
	RegistrationStatus *string `locationName:"registrationStatus" type:"string" json:"registrationStatus,omitempty"`
	ReverseOrder       *bool   `locationName:"reverseOrder" type:"boolean" json:"reverseOrder,omitempty"`

	metadataListDomainsInput `json:"-", xml:"-"`
}

type metadataListDomainsInput struct {
	SDKShapeTraits bool `type:"structure" required:"registrationStatus" json:",omitempty"`
}

type ListOpenWorkflowExecutionsInput struct {
	Domain          *string                  `locationName:"domain" type:"string" json:"domain,omitempty"`
	ExecutionFilter *WorkflowExecutionFilter `locationName:"executionFilter" type:"structure" json:"executionFilter,omitempty"`
	MaximumPageSize *int                     `locationName:"maximumPageSize" type:"integer" json:"maximumPageSize,omitempty"`
	NextPageToken   *string                  `locationName:"nextPageToken" type:"string" json:"nextPageToken,omitempty"`
	ReverseOrder    *bool                    `locationName:"reverseOrder" type:"boolean" json:"reverseOrder,omitempty"`
	StartTimeFilter *ExecutionTimeFilter     `locationName:"startTimeFilter" type:"structure" json:"startTimeFilter,omitempty"`
	TagFilter       *TagFilter               `locationName:"tagFilter" type:"structure" json:"tagFilter,omitempty"`
	TypeFilter      *WorkflowTypeFilter      `locationName:"typeFilter" type:"structure" json:"typeFilter,omitempty"`

	metadataListOpenWorkflowExecutionsInput `json:"-", xml:"-"`
}

type metadataListOpenWorkflowExecutionsInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,startTimeFilter" json:",omitempty"`
}

type ListWorkflowTypesInput struct {
	Domain             *string `locationName:"domain" type:"string" json:"domain,omitempty"`
	MaximumPageSize    *int    `locationName:"maximumPageSize" type:"integer" json:"maximumPageSize,omitempty"`
	Name               *string `locationName:"name" type:"string" json:"name,omitempty"`
	NextPageToken      *string `locationName:"nextPageToken" type:"string" json:"nextPageToken,omitempty"`
	RegistrationStatus *string `locationName:"registrationStatus" type:"string" json:"registrationStatus,omitempty"`
	ReverseOrder       *bool   `locationName:"reverseOrder" type:"boolean" json:"reverseOrder,omitempty"`

	metadataListWorkflowTypesInput `json:"-", xml:"-"`
}

type metadataListWorkflowTypesInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,registrationStatus" json:",omitempty"`
}

type MarkerRecordedEventAttributes struct {
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	Details                      *string `locationName:"details" type:"string" json:"details,omitempty"`
	MarkerName                   *string `locationName:"markerName" type:"string" json:"markerName,omitempty"`

	metadataMarkerRecordedEventAttributes `json:"-", xml:"-"`
}

type metadataMarkerRecordedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"markerName,decisionTaskCompletedEventId" json:",omitempty"`
}

type OperationNotPermittedFault struct {
	Message *string `locationName:"message" type:"string" json:"message,omitempty"`

	metadataOperationNotPermittedFault `json:"-", xml:"-"`
}

type metadataOperationNotPermittedFault struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type PendingTaskCount struct {
	Count     *int  `locationName:"count" type:"integer" json:"count,omitempty"`
	Truncated *bool `locationName:"truncated" type:"boolean" json:"truncated,omitempty"`

	metadataPendingTaskCount `json:"-", xml:"-"`
}

type metadataPendingTaskCount struct {
	SDKShapeTraits bool `type:"structure" required:"count" json:",omitempty"`
}

type PollForActivityTaskInput struct {
	Domain   *string   `locationName:"domain" type:"string" json:"domain,omitempty"`
	Identity *string   `locationName:"identity" type:"string" json:"identity,omitempty"`
	TaskList *TaskList `locationName:"taskList" type:"structure" json:"taskList,omitempty"`

	metadataPollForActivityTaskInput `json:"-", xml:"-"`
}

type metadataPollForActivityTaskInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,taskList" json:",omitempty"`
}

type PollForDecisionTaskInput struct {
	Domain          *string   `locationName:"domain" type:"string" json:"domain,omitempty"`
	Identity        *string   `locationName:"identity" type:"string" json:"identity,omitempty"`
	MaximumPageSize *int      `locationName:"maximumPageSize" type:"integer" json:"maximumPageSize,omitempty"`
	NextPageToken   *string   `locationName:"nextPageToken" type:"string" json:"nextPageToken,omitempty"`
	ReverseOrder    *bool     `locationName:"reverseOrder" type:"boolean" json:"reverseOrder,omitempty"`
	TaskList        *TaskList `locationName:"taskList" type:"structure" json:"taskList,omitempty"`

	metadataPollForDecisionTaskInput `json:"-", xml:"-"`
}

type metadataPollForDecisionTaskInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,taskList" json:",omitempty"`
}

type RecordActivityTaskHeartbeatInput struct {
	Details   *string `locationName:"details" type:"string" json:"details,omitempty"`
	TaskToken *string `locationName:"taskToken" type:"string" json:"taskToken,omitempty"`

	metadataRecordActivityTaskHeartbeatInput `json:"-", xml:"-"`
}

type metadataRecordActivityTaskHeartbeatInput struct {
	SDKShapeTraits bool `type:"structure" required:"taskToken" json:",omitempty"`
}

type RecordMarkerDecisionAttributes struct {
	Details    *string `locationName:"details" type:"string" json:"details,omitempty"`
	MarkerName *string `locationName:"markerName" type:"string" json:"markerName,omitempty"`

	metadataRecordMarkerDecisionAttributes `json:"-", xml:"-"`
}

type metadataRecordMarkerDecisionAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"markerName" json:",omitempty"`
}

type RecordMarkerFailedEventAttributes struct {
	Cause                        *string `locationName:"cause" type:"string" json:"cause,omitempty"`
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	MarkerName                   *string `locationName:"markerName" type:"string" json:"markerName,omitempty"`

	metadataRecordMarkerFailedEventAttributes `json:"-", xml:"-"`
}

type metadataRecordMarkerFailedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"markerName,cause,decisionTaskCompletedEventId" json:",omitempty"`
}

type RegisterActivityTypeInput struct {
	DefaultTaskHeartbeatTimeout       *string   `locationName:"defaultTaskHeartbeatTimeout" type:"string" json:"defaultTaskHeartbeatTimeout,omitempty"`
	DefaultTaskList                   *TaskList `locationName:"defaultTaskList" type:"structure" json:"defaultTaskList,omitempty"`
	DefaultTaskPriority               *string   `locationName:"defaultTaskPriority" type:"string" json:"defaultTaskPriority,omitempty"`
	DefaultTaskScheduleToCloseTimeout *string   `locationName:"defaultTaskScheduleToCloseTimeout" type:"string" json:"defaultTaskScheduleToCloseTimeout,omitempty"`
	DefaultTaskScheduleToStartTimeout *string   `locationName:"defaultTaskScheduleToStartTimeout" type:"string" json:"defaultTaskScheduleToStartTimeout,omitempty"`
	DefaultTaskStartToCloseTimeout    *string   `locationName:"defaultTaskStartToCloseTimeout" type:"string" json:"defaultTaskStartToCloseTimeout,omitempty"`
	Description                       *string   `locationName:"description" type:"string" json:"description,omitempty"`
	Domain                            *string   `locationName:"domain" type:"string" json:"domain,omitempty"`
	Name                              *string   `locationName:"name" type:"string" json:"name,omitempty"`
	Version                           *string   `locationName:"version" type:"string" json:"version,omitempty"`

	metadataRegisterActivityTypeInput `json:"-", xml:"-"`
}

type metadataRegisterActivityTypeInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,name,version" json:",omitempty"`
}

type RegisterDomainInput struct {
	Description                            *string `locationName:"description" type:"string" json:"description,omitempty"`
	Name                                   *string `locationName:"name" type:"string" json:"name,omitempty"`
	WorkflowExecutionRetentionPeriodInDays *string `locationName:"workflowExecutionRetentionPeriodInDays" type:"string" json:"workflowExecutionRetentionPeriodInDays,omitempty"`

	metadataRegisterDomainInput `json:"-", xml:"-"`
}

type metadataRegisterDomainInput struct {
	SDKShapeTraits bool `type:"structure" required:"name,workflowExecutionRetentionPeriodInDays" json:",omitempty"`
}

type RegisterWorkflowTypeInput struct {
	DefaultChildPolicy                  *string   `locationName:"defaultChildPolicy" type:"string" json:"defaultChildPolicy,omitempty"`
	DefaultExecutionStartToCloseTimeout *string   `locationName:"defaultExecutionStartToCloseTimeout" type:"string" json:"defaultExecutionStartToCloseTimeout,omitempty"`
	DefaultTaskList                     *TaskList `locationName:"defaultTaskList" type:"structure" json:"defaultTaskList,omitempty"`
	DefaultTaskPriority                 *string   `locationName:"defaultTaskPriority" type:"string" json:"defaultTaskPriority,omitempty"`
	DefaultTaskStartToCloseTimeout      *string   `locationName:"defaultTaskStartToCloseTimeout" type:"string" json:"defaultTaskStartToCloseTimeout,omitempty"`
	Description                         *string   `locationName:"description" type:"string" json:"description,omitempty"`
	Domain                              *string   `locationName:"domain" type:"string" json:"domain,omitempty"`
	Name                                *string   `locationName:"name" type:"string" json:"name,omitempty"`
	Version                             *string   `locationName:"version" type:"string" json:"version,omitempty"`

	metadataRegisterWorkflowTypeInput `json:"-", xml:"-"`
}

type metadataRegisterWorkflowTypeInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,name,version" json:",omitempty"`
}

type RequestCancelActivityTaskDecisionAttributes struct {
	ActivityID *string `locationName:"activityId" type:"string" json:"activityId,omitempty"`

	metadataRequestCancelActivityTaskDecisionAttributes `json:"-", xml:"-"`
}

type metadataRequestCancelActivityTaskDecisionAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"activityId" json:",omitempty"`
}

type RequestCancelActivityTaskFailedEventAttributes struct {
	ActivityID                   *string `locationName:"activityId" type:"string" json:"activityId,omitempty"`
	Cause                        *string `locationName:"cause" type:"string" json:"cause,omitempty"`
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`

	metadataRequestCancelActivityTaskFailedEventAttributes `json:"-", xml:"-"`
}

type metadataRequestCancelActivityTaskFailedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"activityId,cause,decisionTaskCompletedEventId" json:",omitempty"`
}

type RequestCancelExternalWorkflowExecutionDecisionAttributes struct {
	Control    *string `locationName:"control" type:"string" json:"control,omitempty"`
	RunID      *string `locationName:"runId" type:"string" json:"runId,omitempty"`
	WorkflowID *string `locationName:"workflowId" type:"string" json:"workflowId,omitempty"`

	metadataRequestCancelExternalWorkflowExecutionDecisionAttributes `json:"-", xml:"-"`
}

type metadataRequestCancelExternalWorkflowExecutionDecisionAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowId" json:",omitempty"`
}

type RequestCancelExternalWorkflowExecutionFailedEventAttributes struct {
	Cause                        *string `locationName:"cause" type:"string" json:"cause,omitempty"`
	Control                      *string `locationName:"control" type:"string" json:"control,omitempty"`
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	InitiatedEventID             *int64  `locationName:"initiatedEventId" type:"long" json:"initiatedEventId,omitempty"`
	RunID                        *string `locationName:"runId" type:"string" json:"runId,omitempty"`
	WorkflowID                   *string `locationName:"workflowId" type:"string" json:"workflowId,omitempty"`

	metadataRequestCancelExternalWorkflowExecutionFailedEventAttributes `json:"-", xml:"-"`
}

type metadataRequestCancelExternalWorkflowExecutionFailedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowId,cause,initiatedEventId,decisionTaskCompletedEventId" json:",omitempty"`
}

type RequestCancelExternalWorkflowExecutionInitiatedEventAttributes struct {
	Control                      *string `locationName:"control" type:"string" json:"control,omitempty"`
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	RunID                        *string `locationName:"runId" type:"string" json:"runId,omitempty"`
	WorkflowID                   *string `locationName:"workflowId" type:"string" json:"workflowId,omitempty"`

	metadataRequestCancelExternalWorkflowExecutionInitiatedEventAttributes `json:"-", xml:"-"`
}

type metadataRequestCancelExternalWorkflowExecutionInitiatedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowId,decisionTaskCompletedEventId" json:",omitempty"`
}

type RequestCancelWorkflowExecutionInput struct {
	Domain     *string `locationName:"domain" type:"string" json:"domain,omitempty"`
	RunID      *string `locationName:"runId" type:"string" json:"runId,omitempty"`
	WorkflowID *string `locationName:"workflowId" type:"string" json:"workflowId,omitempty"`

	metadataRequestCancelWorkflowExecutionInput `json:"-", xml:"-"`
}

type metadataRequestCancelWorkflowExecutionInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,workflowId" json:",omitempty"`
}

type RespondActivityTaskCanceledInput struct {
	Details   *string `locationName:"details" type:"string" json:"details,omitempty"`
	TaskToken *string `locationName:"taskToken" type:"string" json:"taskToken,omitempty"`

	metadataRespondActivityTaskCanceledInput `json:"-", xml:"-"`
}

type metadataRespondActivityTaskCanceledInput struct {
	SDKShapeTraits bool `type:"structure" required:"taskToken" json:",omitempty"`
}

type RespondActivityTaskCompletedInput struct {
	Result    *string `locationName:"result" type:"string" json:"result,omitempty"`
	TaskToken *string `locationName:"taskToken" type:"string" json:"taskToken,omitempty"`

	metadataRespondActivityTaskCompletedInput `json:"-", xml:"-"`
}

type metadataRespondActivityTaskCompletedInput struct {
	SDKShapeTraits bool `type:"structure" required:"taskToken" json:",omitempty"`
}

type RespondActivityTaskFailedInput struct {
	Details   *string `locationName:"details" type:"string" json:"details,omitempty"`
	Reason    *string `locationName:"reason" type:"string" json:"reason,omitempty"`
	TaskToken *string `locationName:"taskToken" type:"string" json:"taskToken,omitempty"`

	metadataRespondActivityTaskFailedInput `json:"-", xml:"-"`
}

type metadataRespondActivityTaskFailedInput struct {
	SDKShapeTraits bool `type:"structure" required:"taskToken" json:",omitempty"`
}

type RespondDecisionTaskCompletedInput struct {
	Decisions        []*Decision `locationName:"decisions" type:"list" json:"decisions,omitempty"`
	ExecutionContext *string     `locationName:"executionContext" type:"string" json:"executionContext,omitempty"`
	TaskToken        *string     `locationName:"taskToken" type:"string" json:"taskToken,omitempty"`

	metadataRespondDecisionTaskCompletedInput `json:"-", xml:"-"`
}

type metadataRespondDecisionTaskCompletedInput struct {
	SDKShapeTraits bool `type:"structure" required:"taskToken" json:",omitempty"`
}

type Run struct {
	RunID *string `locationName:"runId" type:"string" json:"runId,omitempty"`

	metadataRun `json:"-", xml:"-"`
}

type metadataRun struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ScheduleActivityTaskDecisionAttributes struct {
	ActivityID             *string       `locationName:"activityId" type:"string" json:"activityId,omitempty"`
	ActivityType           *ActivityType `locationName:"activityType" type:"structure" json:"activityType,omitempty"`
	Control                *string       `locationName:"control" type:"string" json:"control,omitempty"`
	HeartbeatTimeout       *string       `locationName:"heartbeatTimeout" type:"string" json:"heartbeatTimeout,omitempty"`
	Input                  *string       `locationName:"input" type:"string" json:"input,omitempty"`
	ScheduleToCloseTimeout *string       `locationName:"scheduleToCloseTimeout" type:"string" json:"scheduleToCloseTimeout,omitempty"`
	ScheduleToStartTimeout *string       `locationName:"scheduleToStartTimeout" type:"string" json:"scheduleToStartTimeout,omitempty"`
	StartToCloseTimeout    *string       `locationName:"startToCloseTimeout" type:"string" json:"startToCloseTimeout,omitempty"`
	TaskList               *TaskList     `locationName:"taskList" type:"structure" json:"taskList,omitempty"`
	TaskPriority           *string       `locationName:"taskPriority" type:"string" json:"taskPriority,omitempty"`

	metadataScheduleActivityTaskDecisionAttributes `json:"-", xml:"-"`
}

type metadataScheduleActivityTaskDecisionAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"activityType,activityId" json:",omitempty"`
}

type ScheduleActivityTaskFailedEventAttributes struct {
	ActivityID                   *string       `locationName:"activityId" type:"string" json:"activityId,omitempty"`
	ActivityType                 *ActivityType `locationName:"activityType" type:"structure" json:"activityType,omitempty"`
	Cause                        *string       `locationName:"cause" type:"string" json:"cause,omitempty"`
	DecisionTaskCompletedEventID *int64        `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`

	metadataScheduleActivityTaskFailedEventAttributes `json:"-", xml:"-"`
}

type metadataScheduleActivityTaskFailedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"activityType,activityId,cause,decisionTaskCompletedEventId" json:",omitempty"`
}

type SignalExternalWorkflowExecutionDecisionAttributes struct {
	Control    *string `locationName:"control" type:"string" json:"control,omitempty"`
	Input      *string `locationName:"input" type:"string" json:"input,omitempty"`
	RunID      *string `locationName:"runId" type:"string" json:"runId,omitempty"`
	SignalName *string `locationName:"signalName" type:"string" json:"signalName,omitempty"`
	WorkflowID *string `locationName:"workflowId" type:"string" json:"workflowId,omitempty"`

	metadataSignalExternalWorkflowExecutionDecisionAttributes `json:"-", xml:"-"`
}

type metadataSignalExternalWorkflowExecutionDecisionAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowId,signalName" json:",omitempty"`
}

type SignalExternalWorkflowExecutionFailedEventAttributes struct {
	Cause                        *string `locationName:"cause" type:"string" json:"cause,omitempty"`
	Control                      *string `locationName:"control" type:"string" json:"control,omitempty"`
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	InitiatedEventID             *int64  `locationName:"initiatedEventId" type:"long" json:"initiatedEventId,omitempty"`
	RunID                        *string `locationName:"runId" type:"string" json:"runId,omitempty"`
	WorkflowID                   *string `locationName:"workflowId" type:"string" json:"workflowId,omitempty"`

	metadataSignalExternalWorkflowExecutionFailedEventAttributes `json:"-", xml:"-"`
}

type metadataSignalExternalWorkflowExecutionFailedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowId,cause,initiatedEventId,decisionTaskCompletedEventId" json:",omitempty"`
}

type SignalExternalWorkflowExecutionInitiatedEventAttributes struct {
	Control                      *string `locationName:"control" type:"string" json:"control,omitempty"`
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	Input                        *string `locationName:"input" type:"string" json:"input,omitempty"`
	RunID                        *string `locationName:"runId" type:"string" json:"runId,omitempty"`
	SignalName                   *string `locationName:"signalName" type:"string" json:"signalName,omitempty"`
	WorkflowID                   *string `locationName:"workflowId" type:"string" json:"workflowId,omitempty"`

	metadataSignalExternalWorkflowExecutionInitiatedEventAttributes `json:"-", xml:"-"`
}

type metadataSignalExternalWorkflowExecutionInitiatedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowId,signalName,decisionTaskCompletedEventId" json:",omitempty"`
}

type SignalWorkflowExecutionInput struct {
	Domain     *string `locationName:"domain" type:"string" json:"domain,omitempty"`
	Input      *string `locationName:"input" type:"string" json:"input,omitempty"`
	RunID      *string `locationName:"runId" type:"string" json:"runId,omitempty"`
	SignalName *string `locationName:"signalName" type:"string" json:"signalName,omitempty"`
	WorkflowID *string `locationName:"workflowId" type:"string" json:"workflowId,omitempty"`

	metadataSignalWorkflowExecutionInput `json:"-", xml:"-"`
}

type metadataSignalWorkflowExecutionInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,workflowId,signalName" json:",omitempty"`
}

type StartChildWorkflowExecutionDecisionAttributes struct {
	ChildPolicy                  *string       `locationName:"childPolicy" type:"string" json:"childPolicy,omitempty"`
	Control                      *string       `locationName:"control" type:"string" json:"control,omitempty"`
	ExecutionStartToCloseTimeout *string       `locationName:"executionStartToCloseTimeout" type:"string" json:"executionStartToCloseTimeout,omitempty"`
	Input                        *string       `locationName:"input" type:"string" json:"input,omitempty"`
	TagList                      []*string     `locationName:"tagList" type:"list" json:"tagList,omitempty"`
	TaskList                     *TaskList     `locationName:"taskList" type:"structure" json:"taskList,omitempty"`
	TaskPriority                 *string       `locationName:"taskPriority" type:"string" json:"taskPriority,omitempty"`
	TaskStartToCloseTimeout      *string       `locationName:"taskStartToCloseTimeout" type:"string" json:"taskStartToCloseTimeout,omitempty"`
	WorkflowID                   *string       `locationName:"workflowId" type:"string" json:"workflowId,omitempty"`
	WorkflowType                 *WorkflowType `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataStartChildWorkflowExecutionDecisionAttributes `json:"-", xml:"-"`
}

type metadataStartChildWorkflowExecutionDecisionAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowType,workflowId" json:",omitempty"`
}

type StartChildWorkflowExecutionFailedEventAttributes struct {
	Cause                        *string       `locationName:"cause" type:"string" json:"cause,omitempty"`
	Control                      *string       `locationName:"control" type:"string" json:"control,omitempty"`
	DecisionTaskCompletedEventID *int64        `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	InitiatedEventID             *int64        `locationName:"initiatedEventId" type:"long" json:"initiatedEventId,omitempty"`
	WorkflowID                   *string       `locationName:"workflowId" type:"string" json:"workflowId,omitempty"`
	WorkflowType                 *WorkflowType `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataStartChildWorkflowExecutionFailedEventAttributes `json:"-", xml:"-"`
}

type metadataStartChildWorkflowExecutionFailedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowType,cause,workflowId,initiatedEventId,decisionTaskCompletedEventId" json:",omitempty"`
}

type StartChildWorkflowExecutionInitiatedEventAttributes struct {
	ChildPolicy                  *string       `locationName:"childPolicy" type:"string" json:"childPolicy,omitempty"`
	Control                      *string       `locationName:"control" type:"string" json:"control,omitempty"`
	DecisionTaskCompletedEventID *int64        `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	ExecutionStartToCloseTimeout *string       `locationName:"executionStartToCloseTimeout" type:"string" json:"executionStartToCloseTimeout,omitempty"`
	Input                        *string       `locationName:"input" type:"string" json:"input,omitempty"`
	TagList                      []*string     `locationName:"tagList" type:"list" json:"tagList,omitempty"`
	TaskList                     *TaskList     `locationName:"taskList" type:"structure" json:"taskList,omitempty"`
	TaskPriority                 *string       `locationName:"taskPriority" type:"string" json:"taskPriority,omitempty"`
	TaskStartToCloseTimeout      *string       `locationName:"taskStartToCloseTimeout" type:"string" json:"taskStartToCloseTimeout,omitempty"`
	WorkflowID                   *string       `locationName:"workflowId" type:"string" json:"workflowId,omitempty"`
	WorkflowType                 *WorkflowType `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataStartChildWorkflowExecutionInitiatedEventAttributes `json:"-", xml:"-"`
}

type metadataStartChildWorkflowExecutionInitiatedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"workflowId,workflowType,taskList,decisionTaskCompletedEventId,childPolicy" json:",omitempty"`
}

type StartTimerDecisionAttributes struct {
	Control            *string `locationName:"control" type:"string" json:"control,omitempty"`
	StartToFireTimeout *string `locationName:"startToFireTimeout" type:"string" json:"startToFireTimeout,omitempty"`
	TimerID            *string `locationName:"timerId" type:"string" json:"timerId,omitempty"`

	metadataStartTimerDecisionAttributes `json:"-", xml:"-"`
}

type metadataStartTimerDecisionAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"timerId,startToFireTimeout" json:",omitempty"`
}

type StartTimerFailedEventAttributes struct {
	Cause                        *string `locationName:"cause" type:"string" json:"cause,omitempty"`
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	TimerID                      *string `locationName:"timerId" type:"string" json:"timerId,omitempty"`

	metadataStartTimerFailedEventAttributes `json:"-", xml:"-"`
}

type metadataStartTimerFailedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"timerId,cause,decisionTaskCompletedEventId" json:",omitempty"`
}

type StartWorkflowExecutionInput struct {
	ChildPolicy                  *string       `locationName:"childPolicy" type:"string" json:"childPolicy,omitempty"`
	Domain                       *string       `locationName:"domain" type:"string" json:"domain,omitempty"`
	ExecutionStartToCloseTimeout *string       `locationName:"executionStartToCloseTimeout" type:"string" json:"executionStartToCloseTimeout,omitempty"`
	Input                        *string       `locationName:"input" type:"string" json:"input,omitempty"`
	TagList                      []*string     `locationName:"tagList" type:"list" json:"tagList,omitempty"`
	TaskList                     *TaskList     `locationName:"taskList" type:"structure" json:"taskList,omitempty"`
	TaskPriority                 *string       `locationName:"taskPriority" type:"string" json:"taskPriority,omitempty"`
	TaskStartToCloseTimeout      *string       `locationName:"taskStartToCloseTimeout" type:"string" json:"taskStartToCloseTimeout,omitempty"`
	WorkflowID                   *string       `locationName:"workflowId" type:"string" json:"workflowId,omitempty"`
	WorkflowType                 *WorkflowType `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataStartWorkflowExecutionInput `json:"-", xml:"-"`
}

type metadataStartWorkflowExecutionInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,workflowId,workflowType" json:",omitempty"`
}

type TagFilter struct {
	Tag *string `locationName:"tag" type:"string" json:"tag,omitempty"`

	metadataTagFilter `json:"-", xml:"-"`
}

type metadataTagFilter struct {
	SDKShapeTraits bool `type:"structure" required:"tag" json:",omitempty"`
}

type TaskList struct {
	Name *string `locationName:"name" type:"string" json:"name,omitempty"`

	metadataTaskList `json:"-", xml:"-"`
}

type metadataTaskList struct {
	SDKShapeTraits bool `type:"structure" required:"name" json:",omitempty"`
}

type TerminateWorkflowExecutionInput struct {
	ChildPolicy *string `locationName:"childPolicy" type:"string" json:"childPolicy,omitempty"`
	Details     *string `locationName:"details" type:"string" json:"details,omitempty"`
	Domain      *string `locationName:"domain" type:"string" json:"domain,omitempty"`
	Reason      *string `locationName:"reason" type:"string" json:"reason,omitempty"`
	RunID       *string `locationName:"runId" type:"string" json:"runId,omitempty"`
	WorkflowID  *string `locationName:"workflowId" type:"string" json:"workflowId,omitempty"`

	metadataTerminateWorkflowExecutionInput `json:"-", xml:"-"`
}

type metadataTerminateWorkflowExecutionInput struct {
	SDKShapeTraits bool `type:"structure" required:"domain,workflowId" json:",omitempty"`
}

type TimerCanceledEventAttributes struct {
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	StartedEventID               *int64  `locationName:"startedEventId" type:"long" json:"startedEventId,omitempty"`
	TimerID                      *string `locationName:"timerId" type:"string" json:"timerId,omitempty"`

	metadataTimerCanceledEventAttributes `json:"-", xml:"-"`
}

type metadataTimerCanceledEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"timerId,startedEventId,decisionTaskCompletedEventId" json:",omitempty"`
}

type TimerFiredEventAttributes struct {
	StartedEventID *int64  `locationName:"startedEventId" type:"long" json:"startedEventId,omitempty"`
	TimerID        *string `locationName:"timerId" type:"string" json:"timerId,omitempty"`

	metadataTimerFiredEventAttributes `json:"-", xml:"-"`
}

type metadataTimerFiredEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"timerId,startedEventId" json:",omitempty"`
}

type TimerStartedEventAttributes struct {
	Control                      *string `locationName:"control" type:"string" json:"control,omitempty"`
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	StartToFireTimeout           *string `locationName:"startToFireTimeout" type:"string" json:"startToFireTimeout,omitempty"`
	TimerID                      *string `locationName:"timerId" type:"string" json:"timerId,omitempty"`

	metadataTimerStartedEventAttributes `json:"-", xml:"-"`
}

type metadataTimerStartedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"timerId,startToFireTimeout,decisionTaskCompletedEventId" json:",omitempty"`
}

type TypeAlreadyExistsFault struct {
	Message *string `locationName:"message" type:"string" json:"message,omitempty"`

	metadataTypeAlreadyExistsFault `json:"-", xml:"-"`
}

type metadataTypeAlreadyExistsFault struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type TypeDeprecatedFault struct {
	Message *string `locationName:"message" type:"string" json:"message,omitempty"`

	metadataTypeDeprecatedFault `json:"-", xml:"-"`
}

type metadataTypeDeprecatedFault struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type UnknownResourceFault struct {
	Message *string `locationName:"message" type:"string" json:"message,omitempty"`

	metadataUnknownResourceFault `json:"-", xml:"-"`
}

type metadataUnknownResourceFault struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type WorkflowExecution struct {
	RunID      *string `locationName:"runId" type:"string" json:"runId,omitempty"`
	WorkflowID *string `locationName:"workflowId" type:"string" json:"workflowId,omitempty"`

	metadataWorkflowExecution `json:"-", xml:"-"`
}

type metadataWorkflowExecution struct {
	SDKShapeTraits bool `type:"structure" required:"workflowId,runId" json:",omitempty"`
}

type WorkflowExecutionAlreadyStartedFault struct {
	Message *string `locationName:"message" type:"string" json:"message,omitempty"`

	metadataWorkflowExecutionAlreadyStartedFault `json:"-", xml:"-"`
}

type metadataWorkflowExecutionAlreadyStartedFault struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type WorkflowExecutionCancelRequestedEventAttributes struct {
	Cause                     *string            `locationName:"cause" type:"string" json:"cause,omitempty"`
	ExternalInitiatedEventID  *int64             `locationName:"externalInitiatedEventId" type:"long" json:"externalInitiatedEventId,omitempty"`
	ExternalWorkflowExecution *WorkflowExecution `locationName:"externalWorkflowExecution" type:"structure" json:"externalWorkflowExecution,omitempty"`

	metadataWorkflowExecutionCancelRequestedEventAttributes `json:"-", xml:"-"`
}

type metadataWorkflowExecutionCancelRequestedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type WorkflowExecutionCanceledEventAttributes struct {
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	Details                      *string `locationName:"details" type:"string" json:"details,omitempty"`

	metadataWorkflowExecutionCanceledEventAttributes `json:"-", xml:"-"`
}

type metadataWorkflowExecutionCanceledEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"decisionTaskCompletedEventId" json:",omitempty"`
}

type WorkflowExecutionCompletedEventAttributes struct {
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	Result                       *string `locationName:"result" type:"string" json:"result,omitempty"`

	metadataWorkflowExecutionCompletedEventAttributes `json:"-", xml:"-"`
}

type metadataWorkflowExecutionCompletedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"decisionTaskCompletedEventId" json:",omitempty"`
}

type WorkflowExecutionConfiguration struct {
	ChildPolicy                  *string   `locationName:"childPolicy" type:"string" json:"childPolicy,omitempty"`
	ExecutionStartToCloseTimeout *string   `locationName:"executionStartToCloseTimeout" type:"string" json:"executionStartToCloseTimeout,omitempty"`
	TaskList                     *TaskList `locationName:"taskList" type:"structure" json:"taskList,omitempty"`
	TaskPriority                 *string   `locationName:"taskPriority" type:"string" json:"taskPriority,omitempty"`
	TaskStartToCloseTimeout      *string   `locationName:"taskStartToCloseTimeout" type:"string" json:"taskStartToCloseTimeout,omitempty"`

	metadataWorkflowExecutionConfiguration `json:"-", xml:"-"`
}

type metadataWorkflowExecutionConfiguration struct {
	SDKShapeTraits bool `type:"structure" required:"taskStartToCloseTimeout,executionStartToCloseTimeout,taskList,childPolicy" json:",omitempty"`
}

type WorkflowExecutionContinuedAsNewEventAttributes struct {
	ChildPolicy                  *string       `locationName:"childPolicy" type:"string" json:"childPolicy,omitempty"`
	DecisionTaskCompletedEventID *int64        `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	ExecutionStartToCloseTimeout *string       `locationName:"executionStartToCloseTimeout" type:"string" json:"executionStartToCloseTimeout,omitempty"`
	Input                        *string       `locationName:"input" type:"string" json:"input,omitempty"`
	NewExecutionRunID            *string       `locationName:"newExecutionRunId" type:"string" json:"newExecutionRunId,omitempty"`
	TagList                      []*string     `locationName:"tagList" type:"list" json:"tagList,omitempty"`
	TaskList                     *TaskList     `locationName:"taskList" type:"structure" json:"taskList,omitempty"`
	TaskPriority                 *string       `locationName:"taskPriority" type:"string" json:"taskPriority,omitempty"`
	TaskStartToCloseTimeout      *string       `locationName:"taskStartToCloseTimeout" type:"string" json:"taskStartToCloseTimeout,omitempty"`
	WorkflowType                 *WorkflowType `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataWorkflowExecutionContinuedAsNewEventAttributes `json:"-", xml:"-"`
}

type metadataWorkflowExecutionContinuedAsNewEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"decisionTaskCompletedEventId,newExecutionRunId,taskList,childPolicy,workflowType" json:",omitempty"`
}

type WorkflowExecutionCount struct {
	Count     *int  `locationName:"count" type:"integer" json:"count,omitempty"`
	Truncated *bool `locationName:"truncated" type:"boolean" json:"truncated,omitempty"`

	metadataWorkflowExecutionCount `json:"-", xml:"-"`
}

type metadataWorkflowExecutionCount struct {
	SDKShapeTraits bool `type:"structure" required:"count" json:",omitempty"`
}

type WorkflowExecutionDetail struct {
	ExecutionConfiguration      *WorkflowExecutionConfiguration `locationName:"executionConfiguration" type:"structure" json:"executionConfiguration,omitempty"`
	ExecutionInfo               *WorkflowExecutionInfo          `locationName:"executionInfo" type:"structure" json:"executionInfo,omitempty"`
	LatestActivityTaskTimestamp *time.Time                      `locationName:"latestActivityTaskTimestamp" type:"timestamp" timestampFormat:"unix" json:"latestActivityTaskTimestamp,omitempty"`
	LatestExecutionContext      *string                         `locationName:"latestExecutionContext" type:"string" json:"latestExecutionContext,omitempty"`
	OpenCounts                  *WorkflowExecutionOpenCounts    `locationName:"openCounts" type:"structure" json:"openCounts,omitempty"`

	metadataWorkflowExecutionDetail `json:"-", xml:"-"`
}

type metadataWorkflowExecutionDetail struct {
	SDKShapeTraits bool `type:"structure" required:"executionInfo,executionConfiguration,openCounts" json:",omitempty"`
}

type WorkflowExecutionFailedEventAttributes struct {
	DecisionTaskCompletedEventID *int64  `locationName:"decisionTaskCompletedEventId" type:"long" json:"decisionTaskCompletedEventId,omitempty"`
	Details                      *string `locationName:"details" type:"string" json:"details,omitempty"`
	Reason                       *string `locationName:"reason" type:"string" json:"reason,omitempty"`

	metadataWorkflowExecutionFailedEventAttributes `json:"-", xml:"-"`
}

type metadataWorkflowExecutionFailedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"decisionTaskCompletedEventId" json:",omitempty"`
}

type WorkflowExecutionFilter struct {
	WorkflowID *string `locationName:"workflowId" type:"string" json:"workflowId,omitempty"`

	metadataWorkflowExecutionFilter `json:"-", xml:"-"`
}

type metadataWorkflowExecutionFilter struct {
	SDKShapeTraits bool `type:"structure" required:"workflowId" json:",omitempty"`
}

type WorkflowExecutionInfo struct {
	CancelRequested *bool              `locationName:"cancelRequested" type:"boolean" json:"cancelRequested,omitempty"`
	CloseStatus     *string            `locationName:"closeStatus" type:"string" json:"closeStatus,omitempty"`
	CloseTimestamp  *time.Time         `locationName:"closeTimestamp" type:"timestamp" timestampFormat:"unix" json:"closeTimestamp,omitempty"`
	Execution       *WorkflowExecution `locationName:"execution" type:"structure" json:"execution,omitempty"`
	ExecutionStatus *string            `locationName:"executionStatus" type:"string" json:"executionStatus,omitempty"`
	Parent          *WorkflowExecution `locationName:"parent" type:"structure" json:"parent,omitempty"`
	StartTimestamp  *time.Time         `locationName:"startTimestamp" type:"timestamp" timestampFormat:"unix" json:"startTimestamp,omitempty"`
	TagList         []*string          `locationName:"tagList" type:"list" json:"tagList,omitempty"`
	WorkflowType    *WorkflowType      `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataWorkflowExecutionInfo `json:"-", xml:"-"`
}

type metadataWorkflowExecutionInfo struct {
	SDKShapeTraits bool `type:"structure" required:"execution,workflowType,startTimestamp,executionStatus" json:",omitempty"`
}

type WorkflowExecutionInfos struct {
	ExecutionInfos []*WorkflowExecutionInfo `locationName:"executionInfos" type:"list" json:"executionInfos,omitempty"`
	NextPageToken  *string                  `locationName:"nextPageToken" type:"string" json:"nextPageToken,omitempty"`

	metadataWorkflowExecutionInfos `json:"-", xml:"-"`
}

type metadataWorkflowExecutionInfos struct {
	SDKShapeTraits bool `type:"structure" required:"executionInfos" json:",omitempty"`
}

type WorkflowExecutionOpenCounts struct {
	OpenActivityTasks           *int `locationName:"openActivityTasks" type:"integer" json:"openActivityTasks,omitempty"`
	OpenChildWorkflowExecutions *int `locationName:"openChildWorkflowExecutions" type:"integer" json:"openChildWorkflowExecutions,omitempty"`
	OpenDecisionTasks           *int `locationName:"openDecisionTasks" type:"integer" json:"openDecisionTasks,omitempty"`
	OpenTimers                  *int `locationName:"openTimers" type:"integer" json:"openTimers,omitempty"`

	metadataWorkflowExecutionOpenCounts `json:"-", xml:"-"`
}

type metadataWorkflowExecutionOpenCounts struct {
	SDKShapeTraits bool `type:"structure" required:"openActivityTasks,openDecisionTasks,openTimers,openChildWorkflowExecutions" json:",omitempty"`
}

type WorkflowExecutionSignaledEventAttributes struct {
	ExternalInitiatedEventID  *int64             `locationName:"externalInitiatedEventId" type:"long" json:"externalInitiatedEventId,omitempty"`
	ExternalWorkflowExecution *WorkflowExecution `locationName:"externalWorkflowExecution" type:"structure" json:"externalWorkflowExecution,omitempty"`
	Input                     *string            `locationName:"input" type:"string" json:"input,omitempty"`
	SignalName                *string            `locationName:"signalName" type:"string" json:"signalName,omitempty"`

	metadataWorkflowExecutionSignaledEventAttributes `json:"-", xml:"-"`
}

type metadataWorkflowExecutionSignaledEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"signalName" json:",omitempty"`
}

type WorkflowExecutionStartedEventAttributes struct {
	ChildPolicy                  *string            `locationName:"childPolicy" type:"string" json:"childPolicy,omitempty"`
	ContinuedExecutionRunID      *string            `locationName:"continuedExecutionRunId" type:"string" json:"continuedExecutionRunId,omitempty"`
	ExecutionStartToCloseTimeout *string            `locationName:"executionStartToCloseTimeout" type:"string" json:"executionStartToCloseTimeout,omitempty"`
	Input                        *string            `locationName:"input" type:"string" json:"input,omitempty"`
	ParentInitiatedEventID       *int64             `locationName:"parentInitiatedEventId" type:"long" json:"parentInitiatedEventId,omitempty"`
	ParentWorkflowExecution      *WorkflowExecution `locationName:"parentWorkflowExecution" type:"structure" json:"parentWorkflowExecution,omitempty"`
	TagList                      []*string          `locationName:"tagList" type:"list" json:"tagList,omitempty"`
	TaskList                     *TaskList          `locationName:"taskList" type:"structure" json:"taskList,omitempty"`
	TaskPriority                 *string            `locationName:"taskPriority" type:"string" json:"taskPriority,omitempty"`
	TaskStartToCloseTimeout      *string            `locationName:"taskStartToCloseTimeout" type:"string" json:"taskStartToCloseTimeout,omitempty"`
	WorkflowType                 *WorkflowType      `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataWorkflowExecutionStartedEventAttributes `json:"-", xml:"-"`
}

type metadataWorkflowExecutionStartedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"childPolicy,taskList,workflowType" json:",omitempty"`
}

type WorkflowExecutionTerminatedEventAttributes struct {
	Cause       *string `locationName:"cause" type:"string" json:"cause,omitempty"`
	ChildPolicy *string `locationName:"childPolicy" type:"string" json:"childPolicy,omitempty"`
	Details     *string `locationName:"details" type:"string" json:"details,omitempty"`
	Reason      *string `locationName:"reason" type:"string" json:"reason,omitempty"`

	metadataWorkflowExecutionTerminatedEventAttributes `json:"-", xml:"-"`
}

type metadataWorkflowExecutionTerminatedEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"childPolicy" json:",omitempty"`
}

type WorkflowExecutionTimedOutEventAttributes struct {
	ChildPolicy *string `locationName:"childPolicy" type:"string" json:"childPolicy,omitempty"`
	TimeoutType *string `locationName:"timeoutType" type:"string" json:"timeoutType,omitempty"`

	metadataWorkflowExecutionTimedOutEventAttributes `json:"-", xml:"-"`
}

type metadataWorkflowExecutionTimedOutEventAttributes struct {
	SDKShapeTraits bool `type:"structure" required:"timeoutType,childPolicy" json:",omitempty"`
}

type WorkflowType struct {
	Name    *string `locationName:"name" type:"string" json:"name,omitempty"`
	Version *string `locationName:"version" type:"string" json:"version,omitempty"`

	metadataWorkflowType `json:"-", xml:"-"`
}

type metadataWorkflowType struct {
	SDKShapeTraits bool `type:"structure" required:"name,version" json:",omitempty"`
}

type WorkflowTypeConfiguration struct {
	DefaultChildPolicy                  *string   `locationName:"defaultChildPolicy" type:"string" json:"defaultChildPolicy,omitempty"`
	DefaultExecutionStartToCloseTimeout *string   `locationName:"defaultExecutionStartToCloseTimeout" type:"string" json:"defaultExecutionStartToCloseTimeout,omitempty"`
	DefaultTaskList                     *TaskList `locationName:"defaultTaskList" type:"structure" json:"defaultTaskList,omitempty"`
	DefaultTaskPriority                 *string   `locationName:"defaultTaskPriority" type:"string" json:"defaultTaskPriority,omitempty"`
	DefaultTaskStartToCloseTimeout      *string   `locationName:"defaultTaskStartToCloseTimeout" type:"string" json:"defaultTaskStartToCloseTimeout,omitempty"`

	metadataWorkflowTypeConfiguration `json:"-", xml:"-"`
}

type metadataWorkflowTypeConfiguration struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type WorkflowTypeDetail struct {
	Configuration *WorkflowTypeConfiguration `locationName:"configuration" type:"structure" json:"configuration,omitempty"`
	TypeInfo      *WorkflowTypeInfo          `locationName:"typeInfo" type:"structure" json:"typeInfo,omitempty"`

	metadataWorkflowTypeDetail `json:"-", xml:"-"`
}

type metadataWorkflowTypeDetail struct {
	SDKShapeTraits bool `type:"structure" required:"typeInfo,configuration" json:",omitempty"`
}

type WorkflowTypeFilter struct {
	Name    *string `locationName:"name" type:"string" json:"name,omitempty"`
	Version *string `locationName:"version" type:"string" json:"version,omitempty"`

	metadataWorkflowTypeFilter `json:"-", xml:"-"`
}

type metadataWorkflowTypeFilter struct {
	SDKShapeTraits bool `type:"structure" required:"name" json:",omitempty"`
}

type WorkflowTypeInfo struct {
	CreationDate    *time.Time    `locationName:"creationDate" type:"timestamp" timestampFormat:"unix" json:"creationDate,omitempty"`
	DeprecationDate *time.Time    `locationName:"deprecationDate" type:"timestamp" timestampFormat:"unix" json:"deprecationDate,omitempty"`
	Description     *string       `locationName:"description" type:"string" json:"description,omitempty"`
	Status          *string       `locationName:"status" type:"string" json:"status,omitempty"`
	WorkflowType    *WorkflowType `locationName:"workflowType" type:"structure" json:"workflowType,omitempty"`

	metadataWorkflowTypeInfo `json:"-", xml:"-"`
}

type metadataWorkflowTypeInfo struct {
	SDKShapeTraits bool `type:"structure" required:"workflowType,status,creationDate" json:",omitempty"`
}

type WorkflowTypeInfos struct {
	NextPageToken *string             `locationName:"nextPageToken" type:"string" json:"nextPageToken,omitempty"`
	TypeInfos     []*WorkflowTypeInfo `locationName:"typeInfos" type:"list" json:"typeInfos,omitempty"`

	metadataWorkflowTypeInfos `json:"-", xml:"-"`
}

type metadataWorkflowTypeInfos struct {
	SDKShapeTraits bool `type:"structure" required:"typeInfos" json:",omitempty"`
}