// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package autoscalingplans

import (
	"fmt"
	"time"

	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/awsutil"
	"github.com/aws/aws-sdk-go/aws/request"
)

const opCreateScalingPlan = "CreateScalingPlan"

// CreateScalingPlanRequest generates a "aws/request.Request" representing the
// client's request for the CreateScalingPlan operation. The "output" return
// value will be populated with the request's response once the request complets
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateScalingPlan for more information on using the CreateScalingPlan
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateScalingPlanRequest method.
//    req, resp := client.CreateScalingPlanRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/CreateScalingPlan
func (c *AutoScalingPlans) CreateScalingPlanRequest(input *CreateScalingPlanInput) (req *request.Request, output *CreateScalingPlanOutput) {
	op := &request.Operation{
		Name:       opCreateScalingPlan,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateScalingPlanInput{}
	}

	output = &CreateScalingPlanOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateScalingPlan API operation for AWS Auto Scaling Plans.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Auto Scaling Plans's
// API operation CreateScalingPlan for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeValidationException "ValidationException"
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//
//   * ErrCodeConcurrentUpdateException "ConcurrentUpdateException"
//
//   * ErrCodeInternalServiceException "InternalServiceException"
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/CreateScalingPlan
func (c *AutoScalingPlans) CreateScalingPlan(input *CreateScalingPlanInput) (*CreateScalingPlanOutput, error) {
	req, out := c.CreateScalingPlanRequest(input)
	return out, req.Send()
}

// CreateScalingPlanWithContext is the same as CreateScalingPlan with the addition of
// the ability to pass a context and additional request options.
//
// See CreateScalingPlan for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AutoScalingPlans) CreateScalingPlanWithContext(ctx aws.Context, input *CreateScalingPlanInput, opts ...request.Option) (*CreateScalingPlanOutput, error) {
	req, out := c.CreateScalingPlanRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteScalingPlan = "DeleteScalingPlan"

// DeleteScalingPlanRequest generates a "aws/request.Request" representing the
// client's request for the DeleteScalingPlan operation. The "output" return
// value will be populated with the request's response once the request complets
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteScalingPlan for more information on using the DeleteScalingPlan
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteScalingPlanRequest method.
//    req, resp := client.DeleteScalingPlanRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DeleteScalingPlan
func (c *AutoScalingPlans) DeleteScalingPlanRequest(input *DeleteScalingPlanInput) (req *request.Request, output *DeleteScalingPlanOutput) {
	op := &request.Operation{
		Name:       opDeleteScalingPlan,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteScalingPlanInput{}
	}

	output = &DeleteScalingPlanOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteScalingPlan API operation for AWS Auto Scaling Plans.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Auto Scaling Plans's
// API operation DeleteScalingPlan for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeValidationException "ValidationException"
//
//   * ErrCodeObjectNotFoundException "ObjectNotFoundException"
//
//   * ErrCodeConcurrentUpdateException "ConcurrentUpdateException"
//
//   * ErrCodeInternalServiceException "InternalServiceException"
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DeleteScalingPlan
func (c *AutoScalingPlans) DeleteScalingPlan(input *DeleteScalingPlanInput) (*DeleteScalingPlanOutput, error) {
	req, out := c.DeleteScalingPlanRequest(input)
	return out, req.Send()
}

// DeleteScalingPlanWithContext is the same as DeleteScalingPlan with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteScalingPlan for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AutoScalingPlans) DeleteScalingPlanWithContext(ctx aws.Context, input *DeleteScalingPlanInput, opts ...request.Option) (*DeleteScalingPlanOutput, error) {
	req, out := c.DeleteScalingPlanRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeScalingPlanResources = "DescribeScalingPlanResources"

// DescribeScalingPlanResourcesRequest generates a "aws/request.Request" representing the
// client's request for the DescribeScalingPlanResources operation. The "output" return
// value will be populated with the request's response once the request complets
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeScalingPlanResources for more information on using the DescribeScalingPlanResources
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeScalingPlanResourcesRequest method.
//    req, resp := client.DescribeScalingPlanResourcesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DescribeScalingPlanResources
func (c *AutoScalingPlans) DescribeScalingPlanResourcesRequest(input *DescribeScalingPlanResourcesInput) (req *request.Request, output *DescribeScalingPlanResourcesOutput) {
	op := &request.Operation{
		Name:       opDescribeScalingPlanResources,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeScalingPlanResourcesInput{}
	}

	output = &DescribeScalingPlanResourcesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeScalingPlanResources API operation for AWS Auto Scaling Plans.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Auto Scaling Plans's
// API operation DescribeScalingPlanResources for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeValidationException "ValidationException"
//
//   * ErrCodeInvalidNextTokenException "InvalidNextTokenException"
//
//   * ErrCodeConcurrentUpdateException "ConcurrentUpdateException"
//
//   * ErrCodeInternalServiceException "InternalServiceException"
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DescribeScalingPlanResources
func (c *AutoScalingPlans) DescribeScalingPlanResources(input *DescribeScalingPlanResourcesInput) (*DescribeScalingPlanResourcesOutput, error) {
	req, out := c.DescribeScalingPlanResourcesRequest(input)
	return out, req.Send()
}

// DescribeScalingPlanResourcesWithContext is the same as DescribeScalingPlanResources with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeScalingPlanResources for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AutoScalingPlans) DescribeScalingPlanResourcesWithContext(ctx aws.Context, input *DescribeScalingPlanResourcesInput, opts ...request.Option) (*DescribeScalingPlanResourcesOutput, error) {
	req, out := c.DescribeScalingPlanResourcesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeScalingPlans = "DescribeScalingPlans"

// DescribeScalingPlansRequest generates a "aws/request.Request" representing the
// client's request for the DescribeScalingPlans operation. The "output" return
// value will be populated with the request's response once the request complets
// successfuly.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeScalingPlans for more information on using the DescribeScalingPlans
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeScalingPlansRequest method.
//    req, resp := client.DescribeScalingPlansRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DescribeScalingPlans
func (c *AutoScalingPlans) DescribeScalingPlansRequest(input *DescribeScalingPlansInput) (req *request.Request, output *DescribeScalingPlansOutput) {
	op := &request.Operation{
		Name:       opDescribeScalingPlans,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeScalingPlansInput{}
	}

	output = &DescribeScalingPlansOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeScalingPlans API operation for AWS Auto Scaling Plans.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Auto Scaling Plans's
// API operation DescribeScalingPlans for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeValidationException "ValidationException"
//
//   * ErrCodeInvalidNextTokenException "InvalidNextTokenException"
//
//   * ErrCodeConcurrentUpdateException "ConcurrentUpdateException"
//
//   * ErrCodeInternalServiceException "InternalServiceException"
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DescribeScalingPlans
func (c *AutoScalingPlans) DescribeScalingPlans(input *DescribeScalingPlansInput) (*DescribeScalingPlansOutput, error) {
	req, out := c.DescribeScalingPlansRequest(input)
	return out, req.Send()
}

// DescribeScalingPlansWithContext is the same as DescribeScalingPlans with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeScalingPlans for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AutoScalingPlans) DescribeScalingPlansWithContext(ctx aws.Context, input *DescribeScalingPlansInput, opts ...request.Option) (*DescribeScalingPlansOutput, error) {
	req, out := c.DescribeScalingPlansRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/ApplicationSource
type ApplicationSource struct {
	_ struct{} `type:"structure"`

	CloudFormationStackARN *string `type:"string"`
}

// String returns the string representation
func (s ApplicationSource) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ApplicationSource) GoString() string {
	return s.String()
}

// SetCloudFormationStackARN sets the CloudFormationStackARN field's value.
func (s *ApplicationSource) SetCloudFormationStackARN(v string) *ApplicationSource {
	s.CloudFormationStackARN = &v
	return s
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/CreateScalingPlanRequest
type CreateScalingPlanInput struct {
	_ struct{} `type:"structure"`

	// ApplicationSource is a required field
	ApplicationSource *ApplicationSource `type:"structure" required:"true"`

	// ScalingInstructions is a required field
	ScalingInstructions []*ScalingInstruction `type:"list" required:"true"`

	// ScalingPlanName is a required field
	ScalingPlanName *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s CreateScalingPlanInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateScalingPlanInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateScalingPlanInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateScalingPlanInput"}
	if s.ApplicationSource == nil {
		invalidParams.Add(request.NewErrParamRequired("ApplicationSource"))
	}
	if s.ScalingInstructions == nil {
		invalidParams.Add(request.NewErrParamRequired("ScalingInstructions"))
	}
	if s.ScalingPlanName == nil {
		invalidParams.Add(request.NewErrParamRequired("ScalingPlanName"))
	}
	if s.ScalingPlanName != nil && len(*s.ScalingPlanName) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ScalingPlanName", 1))
	}
	if s.ScalingInstructions != nil {
		for i, v := range s.ScalingInstructions {
			if v == nil {
				continue
			}
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "ScalingInstructions", i), err.(request.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetApplicationSource sets the ApplicationSource field's value.
func (s *CreateScalingPlanInput) SetApplicationSource(v *ApplicationSource) *CreateScalingPlanInput {
	s.ApplicationSource = v
	return s
}

// SetScalingInstructions sets the ScalingInstructions field's value.
func (s *CreateScalingPlanInput) SetScalingInstructions(v []*ScalingInstruction) *CreateScalingPlanInput {
	s.ScalingInstructions = v
	return s
}

// SetScalingPlanName sets the ScalingPlanName field's value.
func (s *CreateScalingPlanInput) SetScalingPlanName(v string) *CreateScalingPlanInput {
	s.ScalingPlanName = &v
	return s
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/CreateScalingPlanResponse
type CreateScalingPlanOutput struct {
	_ struct{} `type:"structure"`

	// ScalingPlanVersion is a required field
	ScalingPlanVersion *int64 `type:"long" required:"true"`
}

// String returns the string representation
func (s CreateScalingPlanOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateScalingPlanOutput) GoString() string {
	return s.String()
}

// SetScalingPlanVersion sets the ScalingPlanVersion field's value.
func (s *CreateScalingPlanOutput) SetScalingPlanVersion(v int64) *CreateScalingPlanOutput {
	s.ScalingPlanVersion = &v
	return s
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/CustomizedScalingMetricSpecification
type CustomizedScalingMetricSpecification struct {
	_ struct{} `type:"structure"`

	Dimensions []*MetricDimension `type:"list"`

	// MetricName is a required field
	MetricName *string `type:"string" required:"true"`

	// Namespace is a required field
	Namespace *string `type:"string" required:"true"`

	// Statistic is a required field
	Statistic *string `type:"string" required:"true" enum:"MetricStatistic"`

	Unit *string `type:"string"`
}

// String returns the string representation
func (s CustomizedScalingMetricSpecification) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CustomizedScalingMetricSpecification) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CustomizedScalingMetricSpecification) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CustomizedScalingMetricSpecification"}
	if s.MetricName == nil {
		invalidParams.Add(request.NewErrParamRequired("MetricName"))
	}
	if s.Namespace == nil {
		invalidParams.Add(request.NewErrParamRequired("Namespace"))
	}
	if s.Statistic == nil {
		invalidParams.Add(request.NewErrParamRequired("Statistic"))
	}
	if s.Dimensions != nil {
		for i, v := range s.Dimensions {
			if v == nil {
				continue
			}
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Dimensions", i), err.(request.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDimensions sets the Dimensions field's value.
func (s *CustomizedScalingMetricSpecification) SetDimensions(v []*MetricDimension) *CustomizedScalingMetricSpecification {
	s.Dimensions = v
	return s
}

// SetMetricName sets the MetricName field's value.
func (s *CustomizedScalingMetricSpecification) SetMetricName(v string) *CustomizedScalingMetricSpecification {
	s.MetricName = &v
	return s
}

// SetNamespace sets the Namespace field's value.
func (s *CustomizedScalingMetricSpecification) SetNamespace(v string) *CustomizedScalingMetricSpecification {
	s.Namespace = &v
	return s
}

// SetStatistic sets the Statistic field's value.
func (s *CustomizedScalingMetricSpecification) SetStatistic(v string) *CustomizedScalingMetricSpecification {
	s.Statistic = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *CustomizedScalingMetricSpecification) SetUnit(v string) *CustomizedScalingMetricSpecification {
	s.Unit = &v
	return s
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DeleteScalingPlanRequest
type DeleteScalingPlanInput struct {
	_ struct{} `type:"structure"`

	// ScalingPlanName is a required field
	ScalingPlanName *string `min:"1" type:"string" required:"true"`

	// ScalingPlanVersion is a required field
	ScalingPlanVersion *int64 `type:"long" required:"true"`
}

// String returns the string representation
func (s DeleteScalingPlanInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteScalingPlanInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteScalingPlanInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteScalingPlanInput"}
	if s.ScalingPlanName == nil {
		invalidParams.Add(request.NewErrParamRequired("ScalingPlanName"))
	}
	if s.ScalingPlanName != nil && len(*s.ScalingPlanName) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ScalingPlanName", 1))
	}
	if s.ScalingPlanVersion == nil {
		invalidParams.Add(request.NewErrParamRequired("ScalingPlanVersion"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetScalingPlanName sets the ScalingPlanName field's value.
func (s *DeleteScalingPlanInput) SetScalingPlanName(v string) *DeleteScalingPlanInput {
	s.ScalingPlanName = &v
	return s
}

// SetScalingPlanVersion sets the ScalingPlanVersion field's value.
func (s *DeleteScalingPlanInput) SetScalingPlanVersion(v int64) *DeleteScalingPlanInput {
	s.ScalingPlanVersion = &v
	return s
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DeleteScalingPlanResponse
type DeleteScalingPlanOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DeleteScalingPlanOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteScalingPlanOutput) GoString() string {
	return s.String()
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DescribeScalingPlanResourcesRequest
type DescribeScalingPlanResourcesInput struct {
	_ struct{} `type:"structure"`

	MaxResults *int64 `type:"integer"`

	NextToken *string `type:"string"`

	// ScalingPlanName is a required field
	ScalingPlanName *string `min:"1" type:"string" required:"true"`

	// ScalingPlanVersion is a required field
	ScalingPlanVersion *int64 `type:"long" required:"true"`
}

// String returns the string representation
func (s DescribeScalingPlanResourcesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingPlanResourcesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeScalingPlanResourcesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeScalingPlanResourcesInput"}
	if s.ScalingPlanName == nil {
		invalidParams.Add(request.NewErrParamRequired("ScalingPlanName"))
	}
	if s.ScalingPlanName != nil && len(*s.ScalingPlanName) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ScalingPlanName", 1))
	}
	if s.ScalingPlanVersion == nil {
		invalidParams.Add(request.NewErrParamRequired("ScalingPlanVersion"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetMaxResults sets the MaxResults field's value.
func (s *DescribeScalingPlanResourcesInput) SetMaxResults(v int64) *DescribeScalingPlanResourcesInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeScalingPlanResourcesInput) SetNextToken(v string) *DescribeScalingPlanResourcesInput {
	s.NextToken = &v
	return s
}

// SetScalingPlanName sets the ScalingPlanName field's value.
func (s *DescribeScalingPlanResourcesInput) SetScalingPlanName(v string) *DescribeScalingPlanResourcesInput {
	s.ScalingPlanName = &v
	return s
}

// SetScalingPlanVersion sets the ScalingPlanVersion field's value.
func (s *DescribeScalingPlanResourcesInput) SetScalingPlanVersion(v int64) *DescribeScalingPlanResourcesInput {
	s.ScalingPlanVersion = &v
	return s
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DescribeScalingPlanResourcesResponse
type DescribeScalingPlanResourcesOutput struct {
	_ struct{} `type:"structure"`

	NextToken *string `type:"string"`

	ScalingPlanResources []*ScalingPlanResource `type:"list"`
}

// String returns the string representation
func (s DescribeScalingPlanResourcesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingPlanResourcesOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeScalingPlanResourcesOutput) SetNextToken(v string) *DescribeScalingPlanResourcesOutput {
	s.NextToken = &v
	return s
}

// SetScalingPlanResources sets the ScalingPlanResources field's value.
func (s *DescribeScalingPlanResourcesOutput) SetScalingPlanResources(v []*ScalingPlanResource) *DescribeScalingPlanResourcesOutput {
	s.ScalingPlanResources = v
	return s
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DescribeScalingPlansRequest
type DescribeScalingPlansInput struct {
	_ struct{} `type:"structure"`

	ApplicationSources []*ApplicationSource `type:"list"`

	MaxResults *int64 `type:"integer"`

	NextToken *string `type:"string"`

	ScalingPlanNames []*string `type:"list"`

	ScalingPlanVersion *int64 `type:"long"`
}

// String returns the string representation
func (s DescribeScalingPlansInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingPlansInput) GoString() string {
	return s.String()
}

// SetApplicationSources sets the ApplicationSources field's value.
func (s *DescribeScalingPlansInput) SetApplicationSources(v []*ApplicationSource) *DescribeScalingPlansInput {
	s.ApplicationSources = v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *DescribeScalingPlansInput) SetMaxResults(v int64) *DescribeScalingPlansInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeScalingPlansInput) SetNextToken(v string) *DescribeScalingPlansInput {
	s.NextToken = &v
	return s
}

// SetScalingPlanNames sets the ScalingPlanNames field's value.
func (s *DescribeScalingPlansInput) SetScalingPlanNames(v []*string) *DescribeScalingPlansInput {
	s.ScalingPlanNames = v
	return s
}

// SetScalingPlanVersion sets the ScalingPlanVersion field's value.
func (s *DescribeScalingPlansInput) SetScalingPlanVersion(v int64) *DescribeScalingPlansInput {
	s.ScalingPlanVersion = &v
	return s
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DescribeScalingPlansResponse
type DescribeScalingPlansOutput struct {
	_ struct{} `type:"structure"`

	NextToken *string `type:"string"`

	ScalingPlans []*ScalingPlan `type:"list"`
}

// String returns the string representation
func (s DescribeScalingPlansOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingPlansOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeScalingPlansOutput) SetNextToken(v string) *DescribeScalingPlansOutput {
	s.NextToken = &v
	return s
}

// SetScalingPlans sets the ScalingPlans field's value.
func (s *DescribeScalingPlansOutput) SetScalingPlans(v []*ScalingPlan) *DescribeScalingPlansOutput {
	s.ScalingPlans = v
	return s
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/MetricDimension
type MetricDimension struct {
	_ struct{} `type:"structure"`

	// Name is a required field
	Name *string `type:"string" required:"true"`

	// Value is a required field
	Value *string `type:"string" required:"true"`
}

// String returns the string representation
func (s MetricDimension) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s MetricDimension) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *MetricDimension) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "MetricDimension"}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.Value == nil {
		invalidParams.Add(request.NewErrParamRequired("Value"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetName sets the Name field's value.
func (s *MetricDimension) SetName(v string) *MetricDimension {
	s.Name = &v
	return s
}

// SetValue sets the Value field's value.
func (s *MetricDimension) SetValue(v string) *MetricDimension {
	s.Value = &v
	return s
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/PredefinedScalingMetricSpecification
type PredefinedScalingMetricSpecification struct {
	_ struct{} `type:"structure"`

	// PredefinedScalingMetricType is a required field
	PredefinedScalingMetricType *string `type:"string" required:"true" enum:"ScalingMetricType"`

	ResourceLabel *string `min:"1" type:"string"`
}

// String returns the string representation
func (s PredefinedScalingMetricSpecification) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PredefinedScalingMetricSpecification) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *PredefinedScalingMetricSpecification) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "PredefinedScalingMetricSpecification"}
	if s.PredefinedScalingMetricType == nil {
		invalidParams.Add(request.NewErrParamRequired("PredefinedScalingMetricType"))
	}
	if s.ResourceLabel != nil && len(*s.ResourceLabel) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ResourceLabel", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetPredefinedScalingMetricType sets the PredefinedScalingMetricType field's value.
func (s *PredefinedScalingMetricSpecification) SetPredefinedScalingMetricType(v string) *PredefinedScalingMetricSpecification {
	s.PredefinedScalingMetricType = &v
	return s
}

// SetResourceLabel sets the ResourceLabel field's value.
func (s *PredefinedScalingMetricSpecification) SetResourceLabel(v string) *PredefinedScalingMetricSpecification {
	s.ResourceLabel = &v
	return s
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/ScalingInstruction
type ScalingInstruction struct {
	_ struct{} `type:"structure"`

	// MaxCapacity is a required field
	MaxCapacity *int64 `type:"integer" required:"true"`

	// MinCapacity is a required field
	MinCapacity *int64 `type:"integer" required:"true"`

	// ResourceId is a required field
	ResourceId *string `min:"1" type:"string" required:"true"`

	// ScalableDimension is a required field
	ScalableDimension *string `type:"string" required:"true" enum:"ScalableDimension"`

	// ServiceNamespace is a required field
	ServiceNamespace *string `type:"string" required:"true" enum:"ServiceNamespace"`

	// TargetTrackingConfigurations is a required field
	TargetTrackingConfigurations []*TargetTrackingConfiguration `type:"list" required:"true"`
}

// String returns the string representation
func (s ScalingInstruction) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingInstruction) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ScalingInstruction) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ScalingInstruction"}
	if s.MaxCapacity == nil {
		invalidParams.Add(request.NewErrParamRequired("MaxCapacity"))
	}
	if s.MinCapacity == nil {
		invalidParams.Add(request.NewErrParamRequired("MinCapacity"))
	}
	if s.ResourceId == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceId"))
	}
	if s.ResourceId != nil && len(*s.ResourceId) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ResourceId", 1))
	}
	if s.ScalableDimension == nil {
		invalidParams.Add(request.NewErrParamRequired("ScalableDimension"))
	}
	if s.ServiceNamespace == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceNamespace"))
	}
	if s.TargetTrackingConfigurations == nil {
		invalidParams.Add(request.NewErrParamRequired("TargetTrackingConfigurations"))
	}
	if s.TargetTrackingConfigurations != nil {
		for i, v := range s.TargetTrackingConfigurations {
			if v == nil {
				continue
			}
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "TargetTrackingConfigurations", i), err.(request.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetMaxCapacity sets the MaxCapacity field's value.
func (s *ScalingInstruction) SetMaxCapacity(v int64) *ScalingInstruction {
	s.MaxCapacity = &v
	return s
}

// SetMinCapacity sets the MinCapacity field's value.
func (s *ScalingInstruction) SetMinCapacity(v int64) *ScalingInstruction {
	s.MinCapacity = &v
	return s
}

// SetResourceId sets the ResourceId field's value.
func (s *ScalingInstruction) SetResourceId(v string) *ScalingInstruction {
	s.ResourceId = &v
	return s
}

// SetScalableDimension sets the ScalableDimension field's value.
func (s *ScalingInstruction) SetScalableDimension(v string) *ScalingInstruction {
	s.ScalableDimension = &v
	return s
}

// SetServiceNamespace sets the ServiceNamespace field's value.
func (s *ScalingInstruction) SetServiceNamespace(v string) *ScalingInstruction {
	s.ServiceNamespace = &v
	return s
}

// SetTargetTrackingConfigurations sets the TargetTrackingConfigurations field's value.
func (s *ScalingInstruction) SetTargetTrackingConfigurations(v []*TargetTrackingConfiguration) *ScalingInstruction {
	s.TargetTrackingConfigurations = v
	return s
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/ScalingPlan
type ScalingPlan struct {
	_ struct{} `type:"structure"`

	// ApplicationSource is a required field
	ApplicationSource *ApplicationSource `type:"structure" required:"true"`

	CreationTime *time.Time `type:"timestamp" timestampFormat:"unix"`

	// ScalingInstructions is a required field
	ScalingInstructions []*ScalingInstruction `type:"list" required:"true"`

	// ScalingPlanName is a required field
	ScalingPlanName *string `min:"1" type:"string" required:"true"`

	// ScalingPlanVersion is a required field
	ScalingPlanVersion *int64 `type:"long" required:"true"`

	// StatusCode is a required field
	StatusCode *string `type:"string" required:"true" enum:"ScalingPlanStatusCode"`

	StatusMessage *string `type:"string"`
}

// String returns the string representation
func (s ScalingPlan) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingPlan) GoString() string {
	return s.String()
}

// SetApplicationSource sets the ApplicationSource field's value.
func (s *ScalingPlan) SetApplicationSource(v *ApplicationSource) *ScalingPlan {
	s.ApplicationSource = v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *ScalingPlan) SetCreationTime(v time.Time) *ScalingPlan {
	s.CreationTime = &v
	return s
}

// SetScalingInstructions sets the ScalingInstructions field's value.
func (s *ScalingPlan) SetScalingInstructions(v []*ScalingInstruction) *ScalingPlan {
	s.ScalingInstructions = v
	return s
}

// SetScalingPlanName sets the ScalingPlanName field's value.
func (s *ScalingPlan) SetScalingPlanName(v string) *ScalingPlan {
	s.ScalingPlanName = &v
	return s
}

// SetScalingPlanVersion sets the ScalingPlanVersion field's value.
func (s *ScalingPlan) SetScalingPlanVersion(v int64) *ScalingPlan {
	s.ScalingPlanVersion = &v
	return s
}

// SetStatusCode sets the StatusCode field's value.
func (s *ScalingPlan) SetStatusCode(v string) *ScalingPlan {
	s.StatusCode = &v
	return s
}

// SetStatusMessage sets the StatusMessage field's value.
func (s *ScalingPlan) SetStatusMessage(v string) *ScalingPlan {
	s.StatusMessage = &v
	return s
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/ScalingPlanResource
type ScalingPlanResource struct {
	_ struct{} `type:"structure"`

	// ResourceId is a required field
	ResourceId *string `min:"1" type:"string" required:"true"`

	// ScalableDimension is a required field
	ScalableDimension *string `type:"string" required:"true" enum:"ScalableDimension"`

	// ScalingPlanName is a required field
	ScalingPlanName *string `min:"1" type:"string" required:"true"`

	// ScalingPlanVersion is a required field
	ScalingPlanVersion *int64 `type:"long" required:"true"`

	ScalingPolicies []*ScalingPolicy `type:"list"`

	// ScalingStatusCode is a required field
	ScalingStatusCode *string `type:"string" required:"true" enum:"ScalingStatusCode"`

	ScalingStatusMessage *string `type:"string"`

	// ServiceNamespace is a required field
	ServiceNamespace *string `type:"string" required:"true" enum:"ServiceNamespace"`
}

// String returns the string representation
func (s ScalingPlanResource) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingPlanResource) GoString() string {
	return s.String()
}

// SetResourceId sets the ResourceId field's value.
func (s *ScalingPlanResource) SetResourceId(v string) *ScalingPlanResource {
	s.ResourceId = &v
	return s
}

// SetScalableDimension sets the ScalableDimension field's value.
func (s *ScalingPlanResource) SetScalableDimension(v string) *ScalingPlanResource {
	s.ScalableDimension = &v
	return s
}

// SetScalingPlanName sets the ScalingPlanName field's value.
func (s *ScalingPlanResource) SetScalingPlanName(v string) *ScalingPlanResource {
	s.ScalingPlanName = &v
	return s
}

// SetScalingPlanVersion sets the ScalingPlanVersion field's value.
func (s *ScalingPlanResource) SetScalingPlanVersion(v int64) *ScalingPlanResource {
	s.ScalingPlanVersion = &v
	return s
}

// SetScalingPolicies sets the ScalingPolicies field's value.
func (s *ScalingPlanResource) SetScalingPolicies(v []*ScalingPolicy) *ScalingPlanResource {
	s.ScalingPolicies = v
	return s
}

// SetScalingStatusCode sets the ScalingStatusCode field's value.
func (s *ScalingPlanResource) SetScalingStatusCode(v string) *ScalingPlanResource {
	s.ScalingStatusCode = &v
	return s
}

// SetScalingStatusMessage sets the ScalingStatusMessage field's value.
func (s *ScalingPlanResource) SetScalingStatusMessage(v string) *ScalingPlanResource {
	s.ScalingStatusMessage = &v
	return s
}

// SetServiceNamespace sets the ServiceNamespace field's value.
func (s *ScalingPlanResource) SetServiceNamespace(v string) *ScalingPlanResource {
	s.ServiceNamespace = &v
	return s
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/ScalingPolicy
type ScalingPolicy struct {
	_ struct{} `type:"structure"`

	// PolicyName is a required field
	PolicyName *string `min:"1" type:"string" required:"true"`

	// PolicyType is a required field
	PolicyType *string `type:"string" required:"true" enum:"PolicyType"`

	TargetTrackingConfiguration *TargetTrackingConfiguration `type:"structure"`
}

// String returns the string representation
func (s ScalingPolicy) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingPolicy) GoString() string {
	return s.String()
}

// SetPolicyName sets the PolicyName field's value.
func (s *ScalingPolicy) SetPolicyName(v string) *ScalingPolicy {
	s.PolicyName = &v
	return s
}

// SetPolicyType sets the PolicyType field's value.
func (s *ScalingPolicy) SetPolicyType(v string) *ScalingPolicy {
	s.PolicyType = &v
	return s
}

// SetTargetTrackingConfiguration sets the TargetTrackingConfiguration field's value.
func (s *ScalingPolicy) SetTargetTrackingConfiguration(v *TargetTrackingConfiguration) *ScalingPolicy {
	s.TargetTrackingConfiguration = v
	return s
}

// See also, https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/TargetTrackingConfiguration
type TargetTrackingConfiguration struct {
	_ struct{} `type:"structure"`

	CustomizedScalingMetricSpecification *CustomizedScalingMetricSpecification `type:"structure"`

	DisableScaleIn *bool `type:"boolean"`

	EstimatedInstanceWarmup *int64 `type:"integer"`

	PredefinedScalingMetricSpecification *PredefinedScalingMetricSpecification `type:"structure"`

	ScaleInCooldown *int64 `type:"integer"`

	ScaleOutCooldown *int64 `type:"integer"`

	// TargetValue is a required field
	TargetValue *float64 `type:"double" required:"true"`
}

// String returns the string representation
func (s TargetTrackingConfiguration) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s TargetTrackingConfiguration) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *TargetTrackingConfiguration) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "TargetTrackingConfiguration"}
	if s.TargetValue == nil {
		invalidParams.Add(request.NewErrParamRequired("TargetValue"))
	}
	if s.CustomizedScalingMetricSpecification != nil {
		if err := s.CustomizedScalingMetricSpecification.Validate(); err != nil {
			invalidParams.AddNested("CustomizedScalingMetricSpecification", err.(request.ErrInvalidParams))
		}
	}
	if s.PredefinedScalingMetricSpecification != nil {
		if err := s.PredefinedScalingMetricSpecification.Validate(); err != nil {
			invalidParams.AddNested("PredefinedScalingMetricSpecification", err.(request.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCustomizedScalingMetricSpecification sets the CustomizedScalingMetricSpecification field's value.
func (s *TargetTrackingConfiguration) SetCustomizedScalingMetricSpecification(v *CustomizedScalingMetricSpecification) *TargetTrackingConfiguration {
	s.CustomizedScalingMetricSpecification = v
	return s
}

// SetDisableScaleIn sets the DisableScaleIn field's value.
func (s *TargetTrackingConfiguration) SetDisableScaleIn(v bool) *TargetTrackingConfiguration {
	s.DisableScaleIn = &v
	return s
}

// SetEstimatedInstanceWarmup sets the EstimatedInstanceWarmup field's value.
func (s *TargetTrackingConfiguration) SetEstimatedInstanceWarmup(v int64) *TargetTrackingConfiguration {
	s.EstimatedInstanceWarmup = &v
	return s
}

// SetPredefinedScalingMetricSpecification sets the PredefinedScalingMetricSpecification field's value.
func (s *TargetTrackingConfiguration) SetPredefinedScalingMetricSpecification(v *PredefinedScalingMetricSpecification) *TargetTrackingConfiguration {
	s.PredefinedScalingMetricSpecification = v
	return s
}

// SetScaleInCooldown sets the ScaleInCooldown field's value.
func (s *TargetTrackingConfiguration) SetScaleInCooldown(v int64) *TargetTrackingConfiguration {
	s.ScaleInCooldown = &v
	return s
}

// SetScaleOutCooldown sets the ScaleOutCooldown field's value.
func (s *TargetTrackingConfiguration) SetScaleOutCooldown(v int64) *TargetTrackingConfiguration {
	s.ScaleOutCooldown = &v
	return s
}

// SetTargetValue sets the TargetValue field's value.
func (s *TargetTrackingConfiguration) SetTargetValue(v float64) *TargetTrackingConfiguration {
	s.TargetValue = &v
	return s
}

const (
	// MetricStatisticAverage is a MetricStatistic enum value
	MetricStatisticAverage = "Average"

	// MetricStatisticMinimum is a MetricStatistic enum value
	MetricStatisticMinimum = "Minimum"

	// MetricStatisticMaximum is a MetricStatistic enum value
	MetricStatisticMaximum = "Maximum"

	// MetricStatisticSampleCount is a MetricStatistic enum value
	MetricStatisticSampleCount = "SampleCount"

	// MetricStatisticSum is a MetricStatistic enum value
	MetricStatisticSum = "Sum"
)

const (
	// PolicyTypeTargetTrackingScaling is a PolicyType enum value
	PolicyTypeTargetTrackingScaling = "TargetTrackingScaling"
)

const (
	// ScalableDimensionAutoscalingAutoScalingGroupDesiredCapacity is a ScalableDimension enum value
	ScalableDimensionAutoscalingAutoScalingGroupDesiredCapacity = "autoscaling:autoScalingGroup:DesiredCapacity"

	// ScalableDimensionEcsServiceDesiredCount is a ScalableDimension enum value
	ScalableDimensionEcsServiceDesiredCount = "ecs:service:DesiredCount"

	// ScalableDimensionEc2SpotFleetRequestTargetCapacity is a ScalableDimension enum value
	ScalableDimensionEc2SpotFleetRequestTargetCapacity = "ec2:spot-fleet-request:TargetCapacity"

	// ScalableDimensionRdsClusterReadReplicaCount is a ScalableDimension enum value
	ScalableDimensionRdsClusterReadReplicaCount = "rds:cluster:ReadReplicaCount"

	// ScalableDimensionDynamodbTableReadCapacityUnits is a ScalableDimension enum value
	ScalableDimensionDynamodbTableReadCapacityUnits = "dynamodb:table:ReadCapacityUnits"

	// ScalableDimensionDynamodbTableWriteCapacityUnits is a ScalableDimension enum value
	ScalableDimensionDynamodbTableWriteCapacityUnits = "dynamodb:table:WriteCapacityUnits"

	// ScalableDimensionDynamodbIndexReadCapacityUnits is a ScalableDimension enum value
	ScalableDimensionDynamodbIndexReadCapacityUnits = "dynamodb:index:ReadCapacityUnits"

	// ScalableDimensionDynamodbIndexWriteCapacityUnits is a ScalableDimension enum value
	ScalableDimensionDynamodbIndexWriteCapacityUnits = "dynamodb:index:WriteCapacityUnits"
)

const (
	// ScalingMetricTypeAsgaverageCpuutilization is a ScalingMetricType enum value
	ScalingMetricTypeAsgaverageCpuutilization = "ASGAverageCPUUtilization"

	// ScalingMetricTypeAsgaverageNetworkIn is a ScalingMetricType enum value
	ScalingMetricTypeAsgaverageNetworkIn = "ASGAverageNetworkIn"

	// ScalingMetricTypeAsgaverageNetworkOut is a ScalingMetricType enum value
	ScalingMetricTypeAsgaverageNetworkOut = "ASGAverageNetworkOut"

	// ScalingMetricTypeDynamoDbreadCapacityUtilization is a ScalingMetricType enum value
	ScalingMetricTypeDynamoDbreadCapacityUtilization = "DynamoDBReadCapacityUtilization"

	// ScalingMetricTypeDynamoDbwriteCapacityUtilization is a ScalingMetricType enum value
	ScalingMetricTypeDynamoDbwriteCapacityUtilization = "DynamoDBWriteCapacityUtilization"

	// ScalingMetricTypeEcsserviceAverageCpuutilization is a ScalingMetricType enum value
	ScalingMetricTypeEcsserviceAverageCpuutilization = "ECSServiceAverageCPUUtilization"

	// ScalingMetricTypeEcsserviceAverageMemoryUtilization is a ScalingMetricType enum value
	ScalingMetricTypeEcsserviceAverageMemoryUtilization = "ECSServiceAverageMemoryUtilization"

	// ScalingMetricTypeAlbrequestCountPerTarget is a ScalingMetricType enum value
	ScalingMetricTypeAlbrequestCountPerTarget = "ALBRequestCountPerTarget"

	// ScalingMetricTypeRdsreaderAverageCpuutilization is a ScalingMetricType enum value
	ScalingMetricTypeRdsreaderAverageCpuutilization = "RDSReaderAverageCPUUtilization"

	// ScalingMetricTypeRdsreaderAverageDatabaseConnections is a ScalingMetricType enum value
	ScalingMetricTypeRdsreaderAverageDatabaseConnections = "RDSReaderAverageDatabaseConnections"

	// ScalingMetricTypeEc2spotFleetRequestAverageCpuutilization is a ScalingMetricType enum value
	ScalingMetricTypeEc2spotFleetRequestAverageCpuutilization = "EC2SpotFleetRequestAverageCPUUtilization"

	// ScalingMetricTypeEc2spotFleetRequestAverageNetworkIn is a ScalingMetricType enum value
	ScalingMetricTypeEc2spotFleetRequestAverageNetworkIn = "EC2SpotFleetRequestAverageNetworkIn"

	// ScalingMetricTypeEc2spotFleetRequestAverageNetworkOut is a ScalingMetricType enum value
	ScalingMetricTypeEc2spotFleetRequestAverageNetworkOut = "EC2SpotFleetRequestAverageNetworkOut"
)

const (
	// ScalingPlanStatusCodeActive is a ScalingPlanStatusCode enum value
	ScalingPlanStatusCodeActive = "Active"

	// ScalingPlanStatusCodeActiveWithProblems is a ScalingPlanStatusCode enum value
	ScalingPlanStatusCodeActiveWithProblems = "ActiveWithProblems"

	// ScalingPlanStatusCodeCreationInProgress is a ScalingPlanStatusCode enum value
	ScalingPlanStatusCodeCreationInProgress = "CreationInProgress"

	// ScalingPlanStatusCodeCreationFailed is a ScalingPlanStatusCode enum value
	ScalingPlanStatusCodeCreationFailed = "CreationFailed"

	// ScalingPlanStatusCodeDeletionInProgress is a ScalingPlanStatusCode enum value
	ScalingPlanStatusCodeDeletionInProgress = "DeletionInProgress"

	// ScalingPlanStatusCodeDeletionFailed is a ScalingPlanStatusCode enum value
	ScalingPlanStatusCodeDeletionFailed = "DeletionFailed"
)

const (
	// ScalingStatusCodeInactive is a ScalingStatusCode enum value
	ScalingStatusCodeInactive = "Inactive"

	// ScalingStatusCodePartiallyActive is a ScalingStatusCode enum value
	ScalingStatusCodePartiallyActive = "PartiallyActive"

	// ScalingStatusCodeActive is a ScalingStatusCode enum value
	ScalingStatusCodeActive = "Active"
)

const (
	// ServiceNamespaceAutoscaling is a ServiceNamespace enum value
	ServiceNamespaceAutoscaling = "autoscaling"

	// ServiceNamespaceEcs is a ServiceNamespace enum value
	ServiceNamespaceEcs = "ecs"

	// ServiceNamespaceEc2 is a ServiceNamespace enum value
	ServiceNamespaceEc2 = "ec2"

	// ServiceNamespaceRds is a ServiceNamespace enum value
	ServiceNamespaceRds = "rds"

	// ServiceNamespaceDynamodb is a ServiceNamespace enum value
	ServiceNamespaceDynamodb = "dynamodb"
)
