// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package opensearchservice

import (
	"github.com/aws/aws-sdk-go/private/protocol"
)

const (

	// ErrCodeAccessDeniedException for service response error code
	// "AccessDeniedException".
	//
	// An error occurred because you don't have permissions to access the resource.
	ErrCodeAccessDeniedException = "AccessDeniedException"

	// ErrCodeBaseException for service response error code
	// "BaseException".
	//
	// An error occurred while processing the request.
	ErrCodeBaseException = "BaseException"

	// ErrCodeConflictException for service response error code
	// "ConflictException".
	//
	// An error occurred because the client attempts to remove a resource that is
	// currently in use.
	ErrCodeConflictException = "ConflictException"

	// ErrCodeDependencyFailureException for service response error code
	// "DependencyFailureException".
	//
	// An exception for when a failure in one of the dependencies results in the
	// service being unable to fetch details about the resource.
	ErrCodeDependencyFailureException = "DependencyFailureException"

	// ErrCodeDisabledOperationException for service response error code
	// "DisabledOperationException".
	//
	// An error occured because the client wanted to access an unsupported operation.
	ErrCodeDisabledOperationException = "DisabledOperationException"

	// ErrCodeInternalException for service response error code
	// "InternalException".
	//
	// Request processing failed because of an unknown error, exception, or internal
	// failure.
	ErrCodeInternalException = "InternalException"

	// ErrCodeInvalidPaginationTokenException for service response error code
	// "InvalidPaginationTokenException".
	//
	// Request processing failed because you provided an invalid pagination token.
	ErrCodeInvalidPaginationTokenException = "InvalidPaginationTokenException"

	// ErrCodeInvalidTypeException for service response error code
	// "InvalidTypeException".
	//
	// An exception for trying to create or access a sub-resource that's either
	// invalid or not supported.
	ErrCodeInvalidTypeException = "InvalidTypeException"

	// ErrCodeLimitExceededException for service response error code
	// "LimitExceededException".
	//
	// An exception for trying to create more than the allowed number of resources
	// or sub-resources.
	ErrCodeLimitExceededException = "LimitExceededException"

	// ErrCodeResourceAlreadyExistsException for service response error code
	// "ResourceAlreadyExistsException".
	//
	// An exception for creating a resource that already exists.
	ErrCodeResourceAlreadyExistsException = "ResourceAlreadyExistsException"

	// ErrCodeResourceNotFoundException for service response error code
	// "ResourceNotFoundException".
	//
	// An exception for accessing or deleting a resource that doesn't exist.
	ErrCodeResourceNotFoundException = "ResourceNotFoundException"

	// ErrCodeSlotNotAvailableException for service response error code
	// "SlotNotAvailableException".
	//
	// An exception for attempting to schedule a domain action during an unavailable
	// time slot.
	ErrCodeSlotNotAvailableException = "SlotNotAvailableException"

	// ErrCodeValidationException for service response error code
	// "ValidationException".
	//
	// An exception for accessing or deleting a resource that doesn't exist.
	ErrCodeValidationException = "ValidationException"
)

var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{
	"AccessDeniedException":           newErrorAccessDeniedException,
	"BaseException":                   newErrorBaseException,
	"ConflictException":               newErrorConflictException,
	"DependencyFailureException":      newErrorDependencyFailureException,
	"DisabledOperationException":      newErrorDisabledOperationException,
	"InternalException":               newErrorInternalException,
	"InvalidPaginationTokenException": newErrorInvalidPaginationTokenException,
	"InvalidTypeException":            newErrorInvalidTypeException,
	"LimitExceededException":          newErrorLimitExceededException,
	"ResourceAlreadyExistsException":  newErrorResourceAlreadyExistsException,
	"ResourceNotFoundException":       newErrorResourceNotFoundException,
	"SlotNotAvailableException":       newErrorSlotNotAvailableException,
	"ValidationException":             newErrorValidationException,
}
