// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

// Package opsworks provides a client for AWS OpsWorks.
package opsworks

import (
	"sync"

	"github.com/aws/aws-sdk-go/aws"
)

var oprw sync.Mutex

// AssignInstanceRequest generates a request for the AssignInstance operation.
func (c *OpsWorks) AssignInstanceRequest(input *AssignInstanceInput) (req *aws.Request, output *AssignInstanceOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opAssignInstance == nil {
		opAssignInstance = &aws.Operation{
			Name:       "AssignInstance",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &AssignInstanceInput{}
	}

	req = c.newRequest(opAssignInstance, input, output)
	output = &AssignInstanceOutput{}
	req.Data = output
	return
}

// Assign a registered instance to a layer.
//
//  You can assign registered on-premises instances to any layer type. You
// can assign registered Amazon EC2 instances only to custom layers. You cannot
// use this action with instances that were created with AWS OpsWorks.  Required
// Permissions: To use this action, an IAM user must have a Manage permissions
// level for the stack or an attached policy that explicitly grants permissions.
// For more information on user permissions, see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) AssignInstance(input *AssignInstanceInput) (*AssignInstanceOutput, error) {
	req, out := c.AssignInstanceRequest(input)
	err := req.Send()
	return out, err
}

var opAssignInstance *aws.Operation

// AssignVolumeRequest generates a request for the AssignVolume operation.
func (c *OpsWorks) AssignVolumeRequest(input *AssignVolumeInput) (req *aws.Request, output *AssignVolumeOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opAssignVolume == nil {
		opAssignVolume = &aws.Operation{
			Name:       "AssignVolume",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &AssignVolumeInput{}
	}

	req = c.newRequest(opAssignVolume, input, output)
	output = &AssignVolumeOutput{}
	req.Data = output
	return
}

// Assigns one of the stack's registered Amazon EBS volumes to a specified instance.
// The volume must first be registered with the stack by calling RegisterVolume.
// After you register the volume, you must call UpdateVolume to specify a mount
// point before calling AssignVolume. For more information, see Resource Management
// (http://docs.aws.amazon.com/opsworks/latest/userguide/resources.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) AssignVolume(input *AssignVolumeInput) (*AssignVolumeOutput, error) {
	req, out := c.AssignVolumeRequest(input)
	err := req.Send()
	return out, err
}

var opAssignVolume *aws.Operation

// AssociateElasticIPRequest generates a request for the AssociateElasticIP operation.
func (c *OpsWorks) AssociateElasticIPRequest(input *AssociateElasticIPInput) (req *aws.Request, output *AssociateElasticIPOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opAssociateElasticIP == nil {
		opAssociateElasticIP = &aws.Operation{
			Name:       "AssociateElasticIp",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &AssociateElasticIPInput{}
	}

	req = c.newRequest(opAssociateElasticIP, input, output)
	output = &AssociateElasticIPOutput{}
	req.Data = output
	return
}

// Associates one of the stack's registered Elastic IP addresses with a specified
// instance. The address must first be registered with the stack by calling
// RegisterElasticIp. For more information, see Resource Management (http://docs.aws.amazon.com/opsworks/latest/userguide/resources.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) AssociateElasticIP(input *AssociateElasticIPInput) (*AssociateElasticIPOutput, error) {
	req, out := c.AssociateElasticIPRequest(input)
	err := req.Send()
	return out, err
}

var opAssociateElasticIP *aws.Operation

// AttachElasticLoadBalancerRequest generates a request for the AttachElasticLoadBalancer operation.
func (c *OpsWorks) AttachElasticLoadBalancerRequest(input *AttachElasticLoadBalancerInput) (req *aws.Request, output *AttachElasticLoadBalancerOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opAttachElasticLoadBalancer == nil {
		opAttachElasticLoadBalancer = &aws.Operation{
			Name:       "AttachElasticLoadBalancer",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &AttachElasticLoadBalancerInput{}
	}

	req = c.newRequest(opAttachElasticLoadBalancer, input, output)
	output = &AttachElasticLoadBalancerOutput{}
	req.Data = output
	return
}

// Attaches an Elastic Load Balancing load balancer to a specified layer. For
// more information, see Elastic Load Balancing (http://docs.aws.amazon.com/opsworks/latest/userguide/load-balancer-elb.html).
//
//  You must create the Elastic Load Balancing instance separately, by using
// the Elastic Load Balancing console, API, or CLI. For more information, see
//  Elastic Load Balancing Developer Guide (http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/Welcome.html).
//
//  Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) AttachElasticLoadBalancer(input *AttachElasticLoadBalancerInput) (*AttachElasticLoadBalancerOutput, error) {
	req, out := c.AttachElasticLoadBalancerRequest(input)
	err := req.Send()
	return out, err
}

var opAttachElasticLoadBalancer *aws.Operation

// CloneStackRequest generates a request for the CloneStack operation.
func (c *OpsWorks) CloneStackRequest(input *CloneStackInput) (req *aws.Request, output *CloneStackOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opCloneStack == nil {
		opCloneStack = &aws.Operation{
			Name:       "CloneStack",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &CloneStackInput{}
	}

	req = c.newRequest(opCloneStack, input, output)
	output = &CloneStackOutput{}
	req.Data = output
	return
}

// Creates a clone of a specified stack. For more information, see Clone a Stack
// (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-cloning.html).
//
// Required Permissions: To use this action, an IAM user must have an attached
// policy that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) CloneStack(input *CloneStackInput) (*CloneStackOutput, error) {
	req, out := c.CloneStackRequest(input)
	err := req.Send()
	return out, err
}

var opCloneStack *aws.Operation

// CreateAppRequest generates a request for the CreateApp operation.
func (c *OpsWorks) CreateAppRequest(input *CreateAppInput) (req *aws.Request, output *CreateAppOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opCreateApp == nil {
		opCreateApp = &aws.Operation{
			Name:       "CreateApp",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &CreateAppInput{}
	}

	req = c.newRequest(opCreateApp, input, output)
	output = &CreateAppOutput{}
	req.Data = output
	return
}

// Creates an app for a specified stack. For more information, see Creating
// Apps (http://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) CreateApp(input *CreateAppInput) (*CreateAppOutput, error) {
	req, out := c.CreateAppRequest(input)
	err := req.Send()
	return out, err
}

var opCreateApp *aws.Operation

// CreateDeploymentRequest generates a request for the CreateDeployment operation.
func (c *OpsWorks) CreateDeploymentRequest(input *CreateDeploymentInput) (req *aws.Request, output *CreateDeploymentOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opCreateDeployment == nil {
		opCreateDeployment = &aws.Operation{
			Name:       "CreateDeployment",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &CreateDeploymentInput{}
	}

	req = c.newRequest(opCreateDeployment, input, output)
	output = &CreateDeploymentOutput{}
	req.Data = output
	return
}

// Runs deployment or stack commands. For more information, see Deploying Apps
// (http://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-deploying.html)
// and Run Stack Commands (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-commands.html).
//
// Required Permissions: To use this action, an IAM user must have a Deploy
// or Manage permissions level for the stack, or an attached policy that explicitly
// grants permissions. For more information on user permissions, see Managing
// User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) CreateDeployment(input *CreateDeploymentInput) (*CreateDeploymentOutput, error) {
	req, out := c.CreateDeploymentRequest(input)
	err := req.Send()
	return out, err
}

var opCreateDeployment *aws.Operation

// CreateInstanceRequest generates a request for the CreateInstance operation.
func (c *OpsWorks) CreateInstanceRequest(input *CreateInstanceInput) (req *aws.Request, output *CreateInstanceOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opCreateInstance == nil {
		opCreateInstance = &aws.Operation{
			Name:       "CreateInstance",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &CreateInstanceInput{}
	}

	req = c.newRequest(opCreateInstance, input, output)
	output = &CreateInstanceOutput{}
	req.Data = output
	return
}

// Creates an instance in a specified stack. For more information, see Adding
// an Instance to a Layer (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-add.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) CreateInstance(input *CreateInstanceInput) (*CreateInstanceOutput, error) {
	req, out := c.CreateInstanceRequest(input)
	err := req.Send()
	return out, err
}

var opCreateInstance *aws.Operation

// CreateLayerRequest generates a request for the CreateLayer operation.
func (c *OpsWorks) CreateLayerRequest(input *CreateLayerInput) (req *aws.Request, output *CreateLayerOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opCreateLayer == nil {
		opCreateLayer = &aws.Operation{
			Name:       "CreateLayer",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &CreateLayerInput{}
	}

	req = c.newRequest(opCreateLayer, input, output)
	output = &CreateLayerOutput{}
	req.Data = output
	return
}

// Creates a layer. For more information, see How to Create a Layer (http://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-basics-create.html).
//
//  You should use CreateLayer for noncustom layer types such as PHP App Server
// only if the stack does not have an existing layer of that type. A stack can
// have at most one instance of each noncustom layer; if you attempt to create
// a second instance, CreateLayer fails. A stack can have an arbitrary number
// of custom layers, so you can call CreateLayer as many times as you like for
// that layer type.
//
//  Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) CreateLayer(input *CreateLayerInput) (*CreateLayerOutput, error) {
	req, out := c.CreateLayerRequest(input)
	err := req.Send()
	return out, err
}

var opCreateLayer *aws.Operation

// CreateStackRequest generates a request for the CreateStack operation.
func (c *OpsWorks) CreateStackRequest(input *CreateStackInput) (req *aws.Request, output *CreateStackOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opCreateStack == nil {
		opCreateStack = &aws.Operation{
			Name:       "CreateStack",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &CreateStackInput{}
	}

	req = c.newRequest(opCreateStack, input, output)
	output = &CreateStackOutput{}
	req.Data = output
	return
}

// Creates a new stack. For more information, see Create a New Stack (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-edit.html).
//
// Required Permissions: To use this action, an IAM user must have an attached
// policy that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) CreateStack(input *CreateStackInput) (*CreateStackOutput, error) {
	req, out := c.CreateStackRequest(input)
	err := req.Send()
	return out, err
}

var opCreateStack *aws.Operation

// CreateUserProfileRequest generates a request for the CreateUserProfile operation.
func (c *OpsWorks) CreateUserProfileRequest(input *CreateUserProfileInput) (req *aws.Request, output *CreateUserProfileOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opCreateUserProfile == nil {
		opCreateUserProfile = &aws.Operation{
			Name:       "CreateUserProfile",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &CreateUserProfileInput{}
	}

	req = c.newRequest(opCreateUserProfile, input, output)
	output = &CreateUserProfileOutput{}
	req.Data = output
	return
}

// Creates a new user profile.
//
// Required Permissions: To use this action, an IAM user must have an attached
// policy that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) CreateUserProfile(input *CreateUserProfileInput) (*CreateUserProfileOutput, error) {
	req, out := c.CreateUserProfileRequest(input)
	err := req.Send()
	return out, err
}

var opCreateUserProfile *aws.Operation

// DeleteAppRequest generates a request for the DeleteApp operation.
func (c *OpsWorks) DeleteAppRequest(input *DeleteAppInput) (req *aws.Request, output *DeleteAppOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDeleteApp == nil {
		opDeleteApp = &aws.Operation{
			Name:       "DeleteApp",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DeleteAppInput{}
	}

	req = c.newRequest(opDeleteApp, input, output)
	output = &DeleteAppOutput{}
	req.Data = output
	return
}

// Deletes a specified app.
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DeleteApp(input *DeleteAppInput) (*DeleteAppOutput, error) {
	req, out := c.DeleteAppRequest(input)
	err := req.Send()
	return out, err
}

var opDeleteApp *aws.Operation

// DeleteInstanceRequest generates a request for the DeleteInstance operation.
func (c *OpsWorks) DeleteInstanceRequest(input *DeleteInstanceInput) (req *aws.Request, output *DeleteInstanceOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDeleteInstance == nil {
		opDeleteInstance = &aws.Operation{
			Name:       "DeleteInstance",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DeleteInstanceInput{}
	}

	req = c.newRequest(opDeleteInstance, input, output)
	output = &DeleteInstanceOutput{}
	req.Data = output
	return
}

// Deletes a specified instance, which terminates the associated Amazon EC2
// instance. You must stop an instance before you can delete it.
//
// For more information, see Deleting Instances (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-delete.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DeleteInstance(input *DeleteInstanceInput) (*DeleteInstanceOutput, error) {
	req, out := c.DeleteInstanceRequest(input)
	err := req.Send()
	return out, err
}

var opDeleteInstance *aws.Operation

// DeleteLayerRequest generates a request for the DeleteLayer operation.
func (c *OpsWorks) DeleteLayerRequest(input *DeleteLayerInput) (req *aws.Request, output *DeleteLayerOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDeleteLayer == nil {
		opDeleteLayer = &aws.Operation{
			Name:       "DeleteLayer",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DeleteLayerInput{}
	}

	req = c.newRequest(opDeleteLayer, input, output)
	output = &DeleteLayerOutput{}
	req.Data = output
	return
}

// Deletes a specified layer. You must first stop and then delete all associated
// instances or unassign registered instances. For more information, see How
// to Delete a Layer (http://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-basics-delete.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DeleteLayer(input *DeleteLayerInput) (*DeleteLayerOutput, error) {
	req, out := c.DeleteLayerRequest(input)
	err := req.Send()
	return out, err
}

var opDeleteLayer *aws.Operation

// DeleteStackRequest generates a request for the DeleteStack operation.
func (c *OpsWorks) DeleteStackRequest(input *DeleteStackInput) (req *aws.Request, output *DeleteStackOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDeleteStack == nil {
		opDeleteStack = &aws.Operation{
			Name:       "DeleteStack",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DeleteStackInput{}
	}

	req = c.newRequest(opDeleteStack, input, output)
	output = &DeleteStackOutput{}
	req.Data = output
	return
}

// Deletes a specified stack. You must first delete all instances, layers, and
// apps or deregister registered instances. For more information, see Shut Down
// a Stack (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-shutting.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DeleteStack(input *DeleteStackInput) (*DeleteStackOutput, error) {
	req, out := c.DeleteStackRequest(input)
	err := req.Send()
	return out, err
}

var opDeleteStack *aws.Operation

// DeleteUserProfileRequest generates a request for the DeleteUserProfile operation.
func (c *OpsWorks) DeleteUserProfileRequest(input *DeleteUserProfileInput) (req *aws.Request, output *DeleteUserProfileOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDeleteUserProfile == nil {
		opDeleteUserProfile = &aws.Operation{
			Name:       "DeleteUserProfile",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DeleteUserProfileInput{}
	}

	req = c.newRequest(opDeleteUserProfile, input, output)
	output = &DeleteUserProfileOutput{}
	req.Data = output
	return
}

// Deletes a user profile.
//
// Required Permissions: To use this action, an IAM user must have an attached
// policy that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DeleteUserProfile(input *DeleteUserProfileInput) (*DeleteUserProfileOutput, error) {
	req, out := c.DeleteUserProfileRequest(input)
	err := req.Send()
	return out, err
}

var opDeleteUserProfile *aws.Operation

// DeregisterElasticIPRequest generates a request for the DeregisterElasticIP operation.
func (c *OpsWorks) DeregisterElasticIPRequest(input *DeregisterElasticIPInput) (req *aws.Request, output *DeregisterElasticIPOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDeregisterElasticIP == nil {
		opDeregisterElasticIP = &aws.Operation{
			Name:       "DeregisterElasticIp",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DeregisterElasticIPInput{}
	}

	req = c.newRequest(opDeregisterElasticIP, input, output)
	output = &DeregisterElasticIPOutput{}
	req.Data = output
	return
}

// Deregisters a specified Elastic IP address. The address can then be registered
// by another stack. For more information, see Resource Management (http://docs.aws.amazon.com/opsworks/latest/userguide/resources.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DeregisterElasticIP(input *DeregisterElasticIPInput) (*DeregisterElasticIPOutput, error) {
	req, out := c.DeregisterElasticIPRequest(input)
	err := req.Send()
	return out, err
}

var opDeregisterElasticIP *aws.Operation

// DeregisterInstanceRequest generates a request for the DeregisterInstance operation.
func (c *OpsWorks) DeregisterInstanceRequest(input *DeregisterInstanceInput) (req *aws.Request, output *DeregisterInstanceOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDeregisterInstance == nil {
		opDeregisterInstance = &aws.Operation{
			Name:       "DeregisterInstance",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DeregisterInstanceInput{}
	}

	req = c.newRequest(opDeregisterInstance, input, output)
	output = &DeregisterInstanceOutput{}
	req.Data = output
	return
}

// Deregister a registered Amazon EC2 or on-premises instance. This action removes
// the instance from the stack and returns it to your control. This action can
// not be used with instances that were created with AWS OpsWorks.
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DeregisterInstance(input *DeregisterInstanceInput) (*DeregisterInstanceOutput, error) {
	req, out := c.DeregisterInstanceRequest(input)
	err := req.Send()
	return out, err
}

var opDeregisterInstance *aws.Operation

// DeregisterRDSDBInstanceRequest generates a request for the DeregisterRDSDBInstance operation.
func (c *OpsWorks) DeregisterRDSDBInstanceRequest(input *DeregisterRDSDBInstanceInput) (req *aws.Request, output *DeregisterRDSDBInstanceOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDeregisterRDSDBInstance == nil {
		opDeregisterRDSDBInstance = &aws.Operation{
			Name:       "DeregisterRdsDbInstance",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DeregisterRDSDBInstanceInput{}
	}

	req = c.newRequest(opDeregisterRDSDBInstance, input, output)
	output = &DeregisterRDSDBInstanceOutput{}
	req.Data = output
	return
}

// Deregisters an Amazon RDS instance.
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DeregisterRDSDBInstance(input *DeregisterRDSDBInstanceInput) (*DeregisterRDSDBInstanceOutput, error) {
	req, out := c.DeregisterRDSDBInstanceRequest(input)
	err := req.Send()
	return out, err
}

var opDeregisterRDSDBInstance *aws.Operation

// DeregisterVolumeRequest generates a request for the DeregisterVolume operation.
func (c *OpsWorks) DeregisterVolumeRequest(input *DeregisterVolumeInput) (req *aws.Request, output *DeregisterVolumeOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDeregisterVolume == nil {
		opDeregisterVolume = &aws.Operation{
			Name:       "DeregisterVolume",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DeregisterVolumeInput{}
	}

	req = c.newRequest(opDeregisterVolume, input, output)
	output = &DeregisterVolumeOutput{}
	req.Data = output
	return
}

// Deregisters an Amazon EBS volume. The volume can then be registered by another
// stack. For more information, see Resource Management (http://docs.aws.amazon.com/opsworks/latest/userguide/resources.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DeregisterVolume(input *DeregisterVolumeInput) (*DeregisterVolumeOutput, error) {
	req, out := c.DeregisterVolumeRequest(input)
	err := req.Send()
	return out, err
}

var opDeregisterVolume *aws.Operation

// DescribeAppsRequest generates a request for the DescribeApps operation.
func (c *OpsWorks) DescribeAppsRequest(input *DescribeAppsInput) (req *aws.Request, output *DescribeAppsOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeApps == nil {
		opDescribeApps = &aws.Operation{
			Name:       "DescribeApps",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeAppsInput{}
	}

	req = c.newRequest(opDescribeApps, input, output)
	output = &DescribeAppsOutput{}
	req.Data = output
	return
}

// Requests a description of a specified set of apps.
//
//  You must specify at least one of the parameters.
//
//  Required Permissions: To use this action, an IAM user must have a Show,
// Deploy, or Manage permissions level for the stack, or an attached policy
// that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeApps(input *DescribeAppsInput) (*DescribeAppsOutput, error) {
	req, out := c.DescribeAppsRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeApps *aws.Operation

// DescribeCommandsRequest generates a request for the DescribeCommands operation.
func (c *OpsWorks) DescribeCommandsRequest(input *DescribeCommandsInput) (req *aws.Request, output *DescribeCommandsOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeCommands == nil {
		opDescribeCommands = &aws.Operation{
			Name:       "DescribeCommands",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeCommandsInput{}
	}

	req = c.newRequest(opDescribeCommands, input, output)
	output = &DescribeCommandsOutput{}
	req.Data = output
	return
}

// Describes the results of specified commands.
//
//  You must specify at least one of the parameters.
//
//  Required Permissions: To use this action, an IAM user must have a Show,
// Deploy, or Manage permissions level for the stack, or an attached policy
// that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeCommands(input *DescribeCommandsInput) (*DescribeCommandsOutput, error) {
	req, out := c.DescribeCommandsRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeCommands *aws.Operation

// DescribeDeploymentsRequest generates a request for the DescribeDeployments operation.
func (c *OpsWorks) DescribeDeploymentsRequest(input *DescribeDeploymentsInput) (req *aws.Request, output *DescribeDeploymentsOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeDeployments == nil {
		opDescribeDeployments = &aws.Operation{
			Name:       "DescribeDeployments",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeDeploymentsInput{}
	}

	req = c.newRequest(opDescribeDeployments, input, output)
	output = &DescribeDeploymentsOutput{}
	req.Data = output
	return
}

// Requests a description of a specified set of deployments.
//
//  You must specify at least one of the parameters.
//
//  Required Permissions: To use this action, an IAM user must have a Show,
// Deploy, or Manage permissions level for the stack, or an attached policy
// that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeDeployments(input *DescribeDeploymentsInput) (*DescribeDeploymentsOutput, error) {
	req, out := c.DescribeDeploymentsRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeDeployments *aws.Operation

// DescribeElasticIPsRequest generates a request for the DescribeElasticIPs operation.
func (c *OpsWorks) DescribeElasticIPsRequest(input *DescribeElasticIPsInput) (req *aws.Request, output *DescribeElasticIPsOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeElasticIPs == nil {
		opDescribeElasticIPs = &aws.Operation{
			Name:       "DescribeElasticIps",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeElasticIPsInput{}
	}

	req = c.newRequest(opDescribeElasticIPs, input, output)
	output = &DescribeElasticIPsOutput{}
	req.Data = output
	return
}

// Describes Elastic IP addresses (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html).
//
//  You must specify at least one of the parameters.
//
//  Required Permissions: To use this action, an IAM user must have a Show,
// Deploy, or Manage permissions level for the stack, or an attached policy
// that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeElasticIPs(input *DescribeElasticIPsInput) (*DescribeElasticIPsOutput, error) {
	req, out := c.DescribeElasticIPsRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeElasticIPs *aws.Operation

// DescribeElasticLoadBalancersRequest generates a request for the DescribeElasticLoadBalancers operation.
func (c *OpsWorks) DescribeElasticLoadBalancersRequest(input *DescribeElasticLoadBalancersInput) (req *aws.Request, output *DescribeElasticLoadBalancersOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeElasticLoadBalancers == nil {
		opDescribeElasticLoadBalancers = &aws.Operation{
			Name:       "DescribeElasticLoadBalancers",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeElasticLoadBalancersInput{}
	}

	req = c.newRequest(opDescribeElasticLoadBalancers, input, output)
	output = &DescribeElasticLoadBalancersOutput{}
	req.Data = output
	return
}

// Describes a stack's Elastic Load Balancing instances.
//
//  You must specify at least one of the parameters.
//
//  Required Permissions: To use this action, an IAM user must have a Show,
// Deploy, or Manage permissions level for the stack, or an attached policy
// that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeElasticLoadBalancers(input *DescribeElasticLoadBalancersInput) (*DescribeElasticLoadBalancersOutput, error) {
	req, out := c.DescribeElasticLoadBalancersRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeElasticLoadBalancers *aws.Operation

// DescribeInstancesRequest generates a request for the DescribeInstances operation.
func (c *OpsWorks) DescribeInstancesRequest(input *DescribeInstancesInput) (req *aws.Request, output *DescribeInstancesOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeInstances == nil {
		opDescribeInstances = &aws.Operation{
			Name:       "DescribeInstances",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeInstancesInput{}
	}

	req = c.newRequest(opDescribeInstances, input, output)
	output = &DescribeInstancesOutput{}
	req.Data = output
	return
}

// Requests a description of a set of instances.
//
//  You must specify at least one of the parameters.
//
//  Required Permissions: To use this action, an IAM user must have a Show,
// Deploy, or Manage permissions level for the stack, or an attached policy
// that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeInstances(input *DescribeInstancesInput) (*DescribeInstancesOutput, error) {
	req, out := c.DescribeInstancesRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeInstances *aws.Operation

// DescribeLayersRequest generates a request for the DescribeLayers operation.
func (c *OpsWorks) DescribeLayersRequest(input *DescribeLayersInput) (req *aws.Request, output *DescribeLayersOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeLayers == nil {
		opDescribeLayers = &aws.Operation{
			Name:       "DescribeLayers",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeLayersInput{}
	}

	req = c.newRequest(opDescribeLayers, input, output)
	output = &DescribeLayersOutput{}
	req.Data = output
	return
}

// Requests a description of one or more layers in a specified stack.
//
//  You must specify at least one of the parameters.
//
//  Required Permissions: To use this action, an IAM user must have a Show,
// Deploy, or Manage permissions level for the stack, or an attached policy
// that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeLayers(input *DescribeLayersInput) (*DescribeLayersOutput, error) {
	req, out := c.DescribeLayersRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeLayers *aws.Operation

// DescribeLoadBasedAutoScalingRequest generates a request for the DescribeLoadBasedAutoScaling operation.
func (c *OpsWorks) DescribeLoadBasedAutoScalingRequest(input *DescribeLoadBasedAutoScalingInput) (req *aws.Request, output *DescribeLoadBasedAutoScalingOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeLoadBasedAutoScaling == nil {
		opDescribeLoadBasedAutoScaling = &aws.Operation{
			Name:       "DescribeLoadBasedAutoScaling",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeLoadBasedAutoScalingInput{}
	}

	req = c.newRequest(opDescribeLoadBasedAutoScaling, input, output)
	output = &DescribeLoadBasedAutoScalingOutput{}
	req.Data = output
	return
}

// Describes load-based auto scaling configurations for specified layers.
//
//  You must specify at least one of the parameters.
//
//  Required Permissions: To use this action, an IAM user must have a Show,
// Deploy, or Manage permissions level for the stack, or an attached policy
// that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeLoadBasedAutoScaling(input *DescribeLoadBasedAutoScalingInput) (*DescribeLoadBasedAutoScalingOutput, error) {
	req, out := c.DescribeLoadBasedAutoScalingRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeLoadBasedAutoScaling *aws.Operation

// DescribeMyUserProfileRequest generates a request for the DescribeMyUserProfile operation.
func (c *OpsWorks) DescribeMyUserProfileRequest(input *DescribeMyUserProfileInput) (req *aws.Request, output *DescribeMyUserProfileOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeMyUserProfile == nil {
		opDescribeMyUserProfile = &aws.Operation{
			Name:       "DescribeMyUserProfile",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeMyUserProfileInput{}
	}

	req = c.newRequest(opDescribeMyUserProfile, input, output)
	output = &DescribeMyUserProfileOutput{}
	req.Data = output
	return
}

// Describes a user's SSH information.
//
// Required Permissions: To use this action, an IAM user must have self-management
// enabled or an attached policy that explicitly grants permissions. For more
// information on user permissions, see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeMyUserProfile(input *DescribeMyUserProfileInput) (*DescribeMyUserProfileOutput, error) {
	req, out := c.DescribeMyUserProfileRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeMyUserProfile *aws.Operation

// DescribePermissionsRequest generates a request for the DescribePermissions operation.
func (c *OpsWorks) DescribePermissionsRequest(input *DescribePermissionsInput) (req *aws.Request, output *DescribePermissionsOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribePermissions == nil {
		opDescribePermissions = &aws.Operation{
			Name:       "DescribePermissions",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribePermissionsInput{}
	}

	req = c.newRequest(opDescribePermissions, input, output)
	output = &DescribePermissionsOutput{}
	req.Data = output
	return
}

// Describes the permissions for a specified stack.
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribePermissions(input *DescribePermissionsInput) (*DescribePermissionsOutput, error) {
	req, out := c.DescribePermissionsRequest(input)
	err := req.Send()
	return out, err
}

var opDescribePermissions *aws.Operation

// DescribeRAIDArraysRequest generates a request for the DescribeRAIDArrays operation.
func (c *OpsWorks) DescribeRAIDArraysRequest(input *DescribeRAIDArraysInput) (req *aws.Request, output *DescribeRAIDArraysOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeRAIDArrays == nil {
		opDescribeRAIDArrays = &aws.Operation{
			Name:       "DescribeRaidArrays",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeRAIDArraysInput{}
	}

	req = c.newRequest(opDescribeRAIDArrays, input, output)
	output = &DescribeRAIDArraysOutput{}
	req.Data = output
	return
}

// Describe an instance's RAID arrays.
//
//  You must specify at least one of the parameters.
//
//  Required Permissions: To use this action, an IAM user must have a Show,
// Deploy, or Manage permissions level for the stack, or an attached policy
// that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeRAIDArrays(input *DescribeRAIDArraysInput) (*DescribeRAIDArraysOutput, error) {
	req, out := c.DescribeRAIDArraysRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeRAIDArrays *aws.Operation

// DescribeRDSDBInstancesRequest generates a request for the DescribeRDSDBInstances operation.
func (c *OpsWorks) DescribeRDSDBInstancesRequest(input *DescribeRDSDBInstancesInput) (req *aws.Request, output *DescribeRDSDBInstancesOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeRDSDBInstances == nil {
		opDescribeRDSDBInstances = &aws.Operation{
			Name:       "DescribeRdsDbInstances",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeRDSDBInstancesInput{}
	}

	req = c.newRequest(opDescribeRDSDBInstances, input, output)
	output = &DescribeRDSDBInstancesOutput{}
	req.Data = output
	return
}

// Describes Amazon RDS instances.
//
// Required Permissions: To use this action, an IAM user must have a Show,
// Deploy, or Manage permissions level for the stack, or an attached policy
// that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeRDSDBInstances(input *DescribeRDSDBInstancesInput) (*DescribeRDSDBInstancesOutput, error) {
	req, out := c.DescribeRDSDBInstancesRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeRDSDBInstances *aws.Operation

// DescribeServiceErrorsRequest generates a request for the DescribeServiceErrors operation.
func (c *OpsWorks) DescribeServiceErrorsRequest(input *DescribeServiceErrorsInput) (req *aws.Request, output *DescribeServiceErrorsOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeServiceErrors == nil {
		opDescribeServiceErrors = &aws.Operation{
			Name:       "DescribeServiceErrors",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeServiceErrorsInput{}
	}

	req = c.newRequest(opDescribeServiceErrors, input, output)
	output = &DescribeServiceErrorsOutput{}
	req.Data = output
	return
}

// Describes AWS OpsWorks service errors.
//
// Required Permissions: To use this action, an IAM user must have a Show,
// Deploy, or Manage permissions level for the stack, or an attached policy
// that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeServiceErrors(input *DescribeServiceErrorsInput) (*DescribeServiceErrorsOutput, error) {
	req, out := c.DescribeServiceErrorsRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeServiceErrors *aws.Operation

// DescribeStackProvisioningParametersRequest generates a request for the DescribeStackProvisioningParameters operation.
func (c *OpsWorks) DescribeStackProvisioningParametersRequest(input *DescribeStackProvisioningParametersInput) (req *aws.Request, output *DescribeStackProvisioningParametersOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeStackProvisioningParameters == nil {
		opDescribeStackProvisioningParameters = &aws.Operation{
			Name:       "DescribeStackProvisioningParameters",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeStackProvisioningParametersInput{}
	}

	req = c.newRequest(opDescribeStackProvisioningParameters, input, output)
	output = &DescribeStackProvisioningParametersOutput{}
	req.Data = output
	return
}

// Requests a description of a stack's provisioning parameters.
//
// Required Permissions: To use this action, an IAM user must have a Show,
// Deploy, or Manage permissions level for the stack or an attached policy that
// explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeStackProvisioningParameters(input *DescribeStackProvisioningParametersInput) (*DescribeStackProvisioningParametersOutput, error) {
	req, out := c.DescribeStackProvisioningParametersRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeStackProvisioningParameters *aws.Operation

// DescribeStackSummaryRequest generates a request for the DescribeStackSummary operation.
func (c *OpsWorks) DescribeStackSummaryRequest(input *DescribeStackSummaryInput) (req *aws.Request, output *DescribeStackSummaryOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeStackSummary == nil {
		opDescribeStackSummary = &aws.Operation{
			Name:       "DescribeStackSummary",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeStackSummaryInput{}
	}

	req = c.newRequest(opDescribeStackSummary, input, output)
	output = &DescribeStackSummaryOutput{}
	req.Data = output
	return
}

// Describes the number of layers and apps in a specified stack, and the number
// of instances in each state, such as running_setup or online.
//
// Required Permissions: To use this action, an IAM user must have a Show,
// Deploy, or Manage permissions level for the stack, or an attached policy
// that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeStackSummary(input *DescribeStackSummaryInput) (*DescribeStackSummaryOutput, error) {
	req, out := c.DescribeStackSummaryRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeStackSummary *aws.Operation

// DescribeStacksRequest generates a request for the DescribeStacks operation.
func (c *OpsWorks) DescribeStacksRequest(input *DescribeStacksInput) (req *aws.Request, output *DescribeStacksOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeStacks == nil {
		opDescribeStacks = &aws.Operation{
			Name:       "DescribeStacks",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeStacksInput{}
	}

	req = c.newRequest(opDescribeStacks, input, output)
	output = &DescribeStacksOutput{}
	req.Data = output
	return
}

// Requests a description of one or more stacks.
//
// Required Permissions: To use this action, an IAM user must have a Show,
// Deploy, or Manage permissions level for the stack, or an attached policy
// that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeStacks(input *DescribeStacksInput) (*DescribeStacksOutput, error) {
	req, out := c.DescribeStacksRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeStacks *aws.Operation

// DescribeTimeBasedAutoScalingRequest generates a request for the DescribeTimeBasedAutoScaling operation.
func (c *OpsWorks) DescribeTimeBasedAutoScalingRequest(input *DescribeTimeBasedAutoScalingInput) (req *aws.Request, output *DescribeTimeBasedAutoScalingOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeTimeBasedAutoScaling == nil {
		opDescribeTimeBasedAutoScaling = &aws.Operation{
			Name:       "DescribeTimeBasedAutoScaling",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeTimeBasedAutoScalingInput{}
	}

	req = c.newRequest(opDescribeTimeBasedAutoScaling, input, output)
	output = &DescribeTimeBasedAutoScalingOutput{}
	req.Data = output
	return
}

// Describes time-based auto scaling configurations for specified instances.
//
//  You must specify at least one of the parameters.
//
//  Required Permissions: To use this action, an IAM user must have a Show,
// Deploy, or Manage permissions level for the stack, or an attached policy
// that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeTimeBasedAutoScaling(input *DescribeTimeBasedAutoScalingInput) (*DescribeTimeBasedAutoScalingOutput, error) {
	req, out := c.DescribeTimeBasedAutoScalingRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeTimeBasedAutoScaling *aws.Operation

// DescribeUserProfilesRequest generates a request for the DescribeUserProfiles operation.
func (c *OpsWorks) DescribeUserProfilesRequest(input *DescribeUserProfilesInput) (req *aws.Request, output *DescribeUserProfilesOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeUserProfiles == nil {
		opDescribeUserProfiles = &aws.Operation{
			Name:       "DescribeUserProfiles",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeUserProfilesInput{}
	}

	req = c.newRequest(opDescribeUserProfiles, input, output)
	output = &DescribeUserProfilesOutput{}
	req.Data = output
	return
}

// Describe specified users.
//
// Required Permissions: To use this action, an IAM user must have an attached
// policy that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeUserProfiles(input *DescribeUserProfilesInput) (*DescribeUserProfilesOutput, error) {
	req, out := c.DescribeUserProfilesRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeUserProfiles *aws.Operation

// DescribeVolumesRequest generates a request for the DescribeVolumes operation.
func (c *OpsWorks) DescribeVolumesRequest(input *DescribeVolumesInput) (req *aws.Request, output *DescribeVolumesOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDescribeVolumes == nil {
		opDescribeVolumes = &aws.Operation{
			Name:       "DescribeVolumes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DescribeVolumesInput{}
	}

	req = c.newRequest(opDescribeVolumes, input, output)
	output = &DescribeVolumesOutput{}
	req.Data = output
	return
}

// Describes an instance's Amazon EBS volumes.
//
//  You must specify at least one of the parameters.
//
//  Required Permissions: To use this action, an IAM user must have a Show,
// Deploy, or Manage permissions level for the stack, or an attached policy
// that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DescribeVolumes(input *DescribeVolumesInput) (*DescribeVolumesOutput, error) {
	req, out := c.DescribeVolumesRequest(input)
	err := req.Send()
	return out, err
}

var opDescribeVolumes *aws.Operation

// DetachElasticLoadBalancerRequest generates a request for the DetachElasticLoadBalancer operation.
func (c *OpsWorks) DetachElasticLoadBalancerRequest(input *DetachElasticLoadBalancerInput) (req *aws.Request, output *DetachElasticLoadBalancerOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDetachElasticLoadBalancer == nil {
		opDetachElasticLoadBalancer = &aws.Operation{
			Name:       "DetachElasticLoadBalancer",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DetachElasticLoadBalancerInput{}
	}

	req = c.newRequest(opDetachElasticLoadBalancer, input, output)
	output = &DetachElasticLoadBalancerOutput{}
	req.Data = output
	return
}

// Detaches a specified Elastic Load Balancing instance from its layer.
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DetachElasticLoadBalancer(input *DetachElasticLoadBalancerInput) (*DetachElasticLoadBalancerOutput, error) {
	req, out := c.DetachElasticLoadBalancerRequest(input)
	err := req.Send()
	return out, err
}

var opDetachElasticLoadBalancer *aws.Operation

// DisassociateElasticIPRequest generates a request for the DisassociateElasticIP operation.
func (c *OpsWorks) DisassociateElasticIPRequest(input *DisassociateElasticIPInput) (req *aws.Request, output *DisassociateElasticIPOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDisassociateElasticIP == nil {
		opDisassociateElasticIP = &aws.Operation{
			Name:       "DisassociateElasticIp",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DisassociateElasticIPInput{}
	}

	req = c.newRequest(opDisassociateElasticIP, input, output)
	output = &DisassociateElasticIPOutput{}
	req.Data = output
	return
}

// Disassociates an Elastic IP address from its instance. The address remains
// registered with the stack. For more information, see Resource Management
// (http://docs.aws.amazon.com/opsworks/latest/userguide/resources.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) DisassociateElasticIP(input *DisassociateElasticIPInput) (*DisassociateElasticIPOutput, error) {
	req, out := c.DisassociateElasticIPRequest(input)
	err := req.Send()
	return out, err
}

var opDisassociateElasticIP *aws.Operation

// GetHostnameSuggestionRequest generates a request for the GetHostnameSuggestion operation.
func (c *OpsWorks) GetHostnameSuggestionRequest(input *GetHostnameSuggestionInput) (req *aws.Request, output *GetHostnameSuggestionOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opGetHostnameSuggestion == nil {
		opGetHostnameSuggestion = &aws.Operation{
			Name:       "GetHostnameSuggestion",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &GetHostnameSuggestionInput{}
	}

	req = c.newRequest(opGetHostnameSuggestion, input, output)
	output = &GetHostnameSuggestionOutput{}
	req.Data = output
	return
}

// Gets a generated host name for the specified layer, based on the current
// host name theme.
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) GetHostnameSuggestion(input *GetHostnameSuggestionInput) (*GetHostnameSuggestionOutput, error) {
	req, out := c.GetHostnameSuggestionRequest(input)
	err := req.Send()
	return out, err
}

var opGetHostnameSuggestion *aws.Operation

// GrantAccessRequest generates a request for the GrantAccess operation.
func (c *OpsWorks) GrantAccessRequest(input *GrantAccessInput) (req *aws.Request, output *GrantAccessOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opGrantAccess == nil {
		opGrantAccess = &aws.Operation{
			Name:       "GrantAccess",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &GrantAccessInput{}
	}

	req = c.newRequest(opGrantAccess, input, output)
	output = &GrantAccessOutput{}
	req.Data = output
	return
}

// This API can be used only with Windows stacks. Grants RDP access to a Windows
// instance for a specified time period.
func (c *OpsWorks) GrantAccess(input *GrantAccessInput) (*GrantAccessOutput, error) {
	req, out := c.GrantAccessRequest(input)
	err := req.Send()
	return out, err
}

var opGrantAccess *aws.Operation

// RebootInstanceRequest generates a request for the RebootInstance operation.
func (c *OpsWorks) RebootInstanceRequest(input *RebootInstanceInput) (req *aws.Request, output *RebootInstanceOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opRebootInstance == nil {
		opRebootInstance = &aws.Operation{
			Name:       "RebootInstance",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &RebootInstanceInput{}
	}

	req = c.newRequest(opRebootInstance, input, output)
	output = &RebootInstanceOutput{}
	req.Data = output
	return
}

// Reboots a specified instance. For more information, see Starting, Stopping,
// and Rebooting Instances (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-starting.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) RebootInstance(input *RebootInstanceInput) (*RebootInstanceOutput, error) {
	req, out := c.RebootInstanceRequest(input)
	err := req.Send()
	return out, err
}

var opRebootInstance *aws.Operation

// RegisterElasticIPRequest generates a request for the RegisterElasticIP operation.
func (c *OpsWorks) RegisterElasticIPRequest(input *RegisterElasticIPInput) (req *aws.Request, output *RegisterElasticIPOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opRegisterElasticIP == nil {
		opRegisterElasticIP = &aws.Operation{
			Name:       "RegisterElasticIp",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &RegisterElasticIPInput{}
	}

	req = c.newRequest(opRegisterElasticIP, input, output)
	output = &RegisterElasticIPOutput{}
	req.Data = output
	return
}

// Registers an Elastic IP address with a specified stack. An address can be
// registered with only one stack at a time. If the address is already registered,
// you must first deregister it by calling DeregisterElasticIp. For more information,
// see Resource Management (http://docs.aws.amazon.com/opsworks/latest/userguide/resources.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) RegisterElasticIP(input *RegisterElasticIPInput) (*RegisterElasticIPOutput, error) {
	req, out := c.RegisterElasticIPRequest(input)
	err := req.Send()
	return out, err
}

var opRegisterElasticIP *aws.Operation

// RegisterInstanceRequest generates a request for the RegisterInstance operation.
func (c *OpsWorks) RegisterInstanceRequest(input *RegisterInstanceInput) (req *aws.Request, output *RegisterInstanceOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opRegisterInstance == nil {
		opRegisterInstance = &aws.Operation{
			Name:       "RegisterInstance",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &RegisterInstanceInput{}
	}

	req = c.newRequest(opRegisterInstance, input, output)
	output = &RegisterInstanceOutput{}
	req.Data = output
	return
}

// Registers instances with a specified stack that were created outside of AWS
// OpsWorks.
//
// We do not recommend using this action to register instances. The complete
// registration operation has two primary steps, installing the AWS OpsWorks
// agent on the instance and registering the instance with the stack. RegisterInstance
// handles only the second step. You should instead use the AWS CLI register
// command, which performs the entire registration operation. Required Permissions:
// To use this action, an IAM user must have a Manage permissions level for
// the stack or an attached policy that explicitly grants permissions. For more
// information on user permissions, see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) RegisterInstance(input *RegisterInstanceInput) (*RegisterInstanceOutput, error) {
	req, out := c.RegisterInstanceRequest(input)
	err := req.Send()
	return out, err
}

var opRegisterInstance *aws.Operation

// RegisterRDSDBInstanceRequest generates a request for the RegisterRDSDBInstance operation.
func (c *OpsWorks) RegisterRDSDBInstanceRequest(input *RegisterRDSDBInstanceInput) (req *aws.Request, output *RegisterRDSDBInstanceOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opRegisterRDSDBInstance == nil {
		opRegisterRDSDBInstance = &aws.Operation{
			Name:       "RegisterRdsDbInstance",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &RegisterRDSDBInstanceInput{}
	}

	req = c.newRequest(opRegisterRDSDBInstance, input, output)
	output = &RegisterRDSDBInstanceOutput{}
	req.Data = output
	return
}

// Registers an Amazon RDS instance with a stack.
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) RegisterRDSDBInstance(input *RegisterRDSDBInstanceInput) (*RegisterRDSDBInstanceOutput, error) {
	req, out := c.RegisterRDSDBInstanceRequest(input)
	err := req.Send()
	return out, err
}

var opRegisterRDSDBInstance *aws.Operation

// RegisterVolumeRequest generates a request for the RegisterVolume operation.
func (c *OpsWorks) RegisterVolumeRequest(input *RegisterVolumeInput) (req *aws.Request, output *RegisterVolumeOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opRegisterVolume == nil {
		opRegisterVolume = &aws.Operation{
			Name:       "RegisterVolume",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &RegisterVolumeInput{}
	}

	req = c.newRequest(opRegisterVolume, input, output)
	output = &RegisterVolumeOutput{}
	req.Data = output
	return
}

// Registers an Amazon EBS volume with a specified stack. A volume can be registered
// with only one stack at a time. If the volume is already registered, you must
// first deregister it by calling DeregisterVolume. For more information, see
// Resource Management (http://docs.aws.amazon.com/opsworks/latest/userguide/resources.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) RegisterVolume(input *RegisterVolumeInput) (*RegisterVolumeOutput, error) {
	req, out := c.RegisterVolumeRequest(input)
	err := req.Send()
	return out, err
}

var opRegisterVolume *aws.Operation

// SetLoadBasedAutoScalingRequest generates a request for the SetLoadBasedAutoScaling operation.
func (c *OpsWorks) SetLoadBasedAutoScalingRequest(input *SetLoadBasedAutoScalingInput) (req *aws.Request, output *SetLoadBasedAutoScalingOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opSetLoadBasedAutoScaling == nil {
		opSetLoadBasedAutoScaling = &aws.Operation{
			Name:       "SetLoadBasedAutoScaling",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &SetLoadBasedAutoScalingInput{}
	}

	req = c.newRequest(opSetLoadBasedAutoScaling, input, output)
	output = &SetLoadBasedAutoScalingOutput{}
	req.Data = output
	return
}

// Specify the load-based auto scaling configuration for a specified layer.
// For more information, see Managing Load with Time-based and Load-based Instances
// (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-autoscaling.html).
//
//  To use load-based auto scaling, you must create a set of load-based auto
// scaling instances. Load-based auto scaling operates only on the instances
// from that set, so you must ensure that you have created enough instances
// to handle the maximum anticipated load.
//
//  Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) SetLoadBasedAutoScaling(input *SetLoadBasedAutoScalingInput) (*SetLoadBasedAutoScalingOutput, error) {
	req, out := c.SetLoadBasedAutoScalingRequest(input)
	err := req.Send()
	return out, err
}

var opSetLoadBasedAutoScaling *aws.Operation

// SetPermissionRequest generates a request for the SetPermission operation.
func (c *OpsWorks) SetPermissionRequest(input *SetPermissionInput) (req *aws.Request, output *SetPermissionOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opSetPermission == nil {
		opSetPermission = &aws.Operation{
			Name:       "SetPermission",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &SetPermissionInput{}
	}

	req = c.newRequest(opSetPermission, input, output)
	output = &SetPermissionOutput{}
	req.Data = output
	return
}

// Specifies a user's permissions. For more information, see Security and Permissions
// (http://docs.aws.amazon.com/opsworks/latest/userguide/workingsecurity.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) SetPermission(input *SetPermissionInput) (*SetPermissionOutput, error) {
	req, out := c.SetPermissionRequest(input)
	err := req.Send()
	return out, err
}

var opSetPermission *aws.Operation

// SetTimeBasedAutoScalingRequest generates a request for the SetTimeBasedAutoScaling operation.
func (c *OpsWorks) SetTimeBasedAutoScalingRequest(input *SetTimeBasedAutoScalingInput) (req *aws.Request, output *SetTimeBasedAutoScalingOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opSetTimeBasedAutoScaling == nil {
		opSetTimeBasedAutoScaling = &aws.Operation{
			Name:       "SetTimeBasedAutoScaling",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &SetTimeBasedAutoScalingInput{}
	}

	req = c.newRequest(opSetTimeBasedAutoScaling, input, output)
	output = &SetTimeBasedAutoScalingOutput{}
	req.Data = output
	return
}

// Specify the time-based auto scaling configuration for a specified instance.
// For more information, see Managing Load with Time-based and Load-based Instances
// (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-autoscaling.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) SetTimeBasedAutoScaling(input *SetTimeBasedAutoScalingInput) (*SetTimeBasedAutoScalingOutput, error) {
	req, out := c.SetTimeBasedAutoScalingRequest(input)
	err := req.Send()
	return out, err
}

var opSetTimeBasedAutoScaling *aws.Operation

// StartInstanceRequest generates a request for the StartInstance operation.
func (c *OpsWorks) StartInstanceRequest(input *StartInstanceInput) (req *aws.Request, output *StartInstanceOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opStartInstance == nil {
		opStartInstance = &aws.Operation{
			Name:       "StartInstance",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &StartInstanceInput{}
	}

	req = c.newRequest(opStartInstance, input, output)
	output = &StartInstanceOutput{}
	req.Data = output
	return
}

// Starts a specified instance. For more information, see Starting, Stopping,
// and Rebooting Instances (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-starting.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) StartInstance(input *StartInstanceInput) (*StartInstanceOutput, error) {
	req, out := c.StartInstanceRequest(input)
	err := req.Send()
	return out, err
}

var opStartInstance *aws.Operation

// StartStackRequest generates a request for the StartStack operation.
func (c *OpsWorks) StartStackRequest(input *StartStackInput) (req *aws.Request, output *StartStackOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opStartStack == nil {
		opStartStack = &aws.Operation{
			Name:       "StartStack",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &StartStackInput{}
	}

	req = c.newRequest(opStartStack, input, output)
	output = &StartStackOutput{}
	req.Data = output
	return
}

// Starts a stack's instances.
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) StartStack(input *StartStackInput) (*StartStackOutput, error) {
	req, out := c.StartStackRequest(input)
	err := req.Send()
	return out, err
}

var opStartStack *aws.Operation

// StopInstanceRequest generates a request for the StopInstance operation.
func (c *OpsWorks) StopInstanceRequest(input *StopInstanceInput) (req *aws.Request, output *StopInstanceOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opStopInstance == nil {
		opStopInstance = &aws.Operation{
			Name:       "StopInstance",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &StopInstanceInput{}
	}

	req = c.newRequest(opStopInstance, input, output)
	output = &StopInstanceOutput{}
	req.Data = output
	return
}

// Stops a specified instance. When you stop a standard instance, the data disappears
// and must be reinstalled when you restart the instance. You can stop an Amazon
// EBS-backed instance without losing data. For more information, see Starting,
// Stopping, and Rebooting Instances (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-starting.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) StopInstance(input *StopInstanceInput) (*StopInstanceOutput, error) {
	req, out := c.StopInstanceRequest(input)
	err := req.Send()
	return out, err
}

var opStopInstance *aws.Operation

// StopStackRequest generates a request for the StopStack operation.
func (c *OpsWorks) StopStackRequest(input *StopStackInput) (req *aws.Request, output *StopStackOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opStopStack == nil {
		opStopStack = &aws.Operation{
			Name:       "StopStack",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &StopStackInput{}
	}

	req = c.newRequest(opStopStack, input, output)
	output = &StopStackOutput{}
	req.Data = output
	return
}

// Stops a specified stack.
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) StopStack(input *StopStackInput) (*StopStackOutput, error) {
	req, out := c.StopStackRequest(input)
	err := req.Send()
	return out, err
}

var opStopStack *aws.Operation

// UnassignInstanceRequest generates a request for the UnassignInstance operation.
func (c *OpsWorks) UnassignInstanceRequest(input *UnassignInstanceInput) (req *aws.Request, output *UnassignInstanceOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opUnassignInstance == nil {
		opUnassignInstance = &aws.Operation{
			Name:       "UnassignInstance",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &UnassignInstanceInput{}
	}

	req = c.newRequest(opUnassignInstance, input, output)
	output = &UnassignInstanceOutput{}
	req.Data = output
	return
}

// Unassigns a registered instance from all of it's layers. The instance remains
// in the stack as an unassigned instance and can be assigned to another layer,
// as needed. You cannot use this action with instances that were created with
// AWS OpsWorks.
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) UnassignInstance(input *UnassignInstanceInput) (*UnassignInstanceOutput, error) {
	req, out := c.UnassignInstanceRequest(input)
	err := req.Send()
	return out, err
}

var opUnassignInstance *aws.Operation

// UnassignVolumeRequest generates a request for the UnassignVolume operation.
func (c *OpsWorks) UnassignVolumeRequest(input *UnassignVolumeInput) (req *aws.Request, output *UnassignVolumeOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opUnassignVolume == nil {
		opUnassignVolume = &aws.Operation{
			Name:       "UnassignVolume",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &UnassignVolumeInput{}
	}

	req = c.newRequest(opUnassignVolume, input, output)
	output = &UnassignVolumeOutput{}
	req.Data = output
	return
}

// Unassigns an assigned Amazon EBS volume. The volume remains registered with
// the stack. For more information, see Resource Management (http://docs.aws.amazon.com/opsworks/latest/userguide/resources.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) UnassignVolume(input *UnassignVolumeInput) (*UnassignVolumeOutput, error) {
	req, out := c.UnassignVolumeRequest(input)
	err := req.Send()
	return out, err
}

var opUnassignVolume *aws.Operation

// UpdateAppRequest generates a request for the UpdateApp operation.
func (c *OpsWorks) UpdateAppRequest(input *UpdateAppInput) (req *aws.Request, output *UpdateAppOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opUpdateApp == nil {
		opUpdateApp = &aws.Operation{
			Name:       "UpdateApp",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &UpdateAppInput{}
	}

	req = c.newRequest(opUpdateApp, input, output)
	output = &UpdateAppOutput{}
	req.Data = output
	return
}

// Updates a specified app.
//
// Required Permissions: To use this action, an IAM user must have a Deploy
// or Manage permissions level for the stack, or an attached policy that explicitly
// grants permissions. For more information on user permissions, see Managing
// User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) UpdateApp(input *UpdateAppInput) (*UpdateAppOutput, error) {
	req, out := c.UpdateAppRequest(input)
	err := req.Send()
	return out, err
}

var opUpdateApp *aws.Operation

// UpdateElasticIPRequest generates a request for the UpdateElasticIP operation.
func (c *OpsWorks) UpdateElasticIPRequest(input *UpdateElasticIPInput) (req *aws.Request, output *UpdateElasticIPOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opUpdateElasticIP == nil {
		opUpdateElasticIP = &aws.Operation{
			Name:       "UpdateElasticIp",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &UpdateElasticIPInput{}
	}

	req = c.newRequest(opUpdateElasticIP, input, output)
	output = &UpdateElasticIPOutput{}
	req.Data = output
	return
}

// Updates a registered Elastic IP address's name. For more information, see
// Resource Management (http://docs.aws.amazon.com/opsworks/latest/userguide/resources.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) UpdateElasticIP(input *UpdateElasticIPInput) (*UpdateElasticIPOutput, error) {
	req, out := c.UpdateElasticIPRequest(input)
	err := req.Send()
	return out, err
}

var opUpdateElasticIP *aws.Operation

// UpdateInstanceRequest generates a request for the UpdateInstance operation.
func (c *OpsWorks) UpdateInstanceRequest(input *UpdateInstanceInput) (req *aws.Request, output *UpdateInstanceOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opUpdateInstance == nil {
		opUpdateInstance = &aws.Operation{
			Name:       "UpdateInstance",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &UpdateInstanceInput{}
	}

	req = c.newRequest(opUpdateInstance, input, output)
	output = &UpdateInstanceOutput{}
	req.Data = output
	return
}

// Updates a specified instance.
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) UpdateInstance(input *UpdateInstanceInput) (*UpdateInstanceOutput, error) {
	req, out := c.UpdateInstanceRequest(input)
	err := req.Send()
	return out, err
}

var opUpdateInstance *aws.Operation

// UpdateLayerRequest generates a request for the UpdateLayer operation.
func (c *OpsWorks) UpdateLayerRequest(input *UpdateLayerInput) (req *aws.Request, output *UpdateLayerOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opUpdateLayer == nil {
		opUpdateLayer = &aws.Operation{
			Name:       "UpdateLayer",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &UpdateLayerInput{}
	}

	req = c.newRequest(opUpdateLayer, input, output)
	output = &UpdateLayerOutput{}
	req.Data = output
	return
}

// Updates a specified layer.
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) UpdateLayer(input *UpdateLayerInput) (*UpdateLayerOutput, error) {
	req, out := c.UpdateLayerRequest(input)
	err := req.Send()
	return out, err
}

var opUpdateLayer *aws.Operation

// UpdateMyUserProfileRequest generates a request for the UpdateMyUserProfile operation.
func (c *OpsWorks) UpdateMyUserProfileRequest(input *UpdateMyUserProfileInput) (req *aws.Request, output *UpdateMyUserProfileOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opUpdateMyUserProfile == nil {
		opUpdateMyUserProfile = &aws.Operation{
			Name:       "UpdateMyUserProfile",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &UpdateMyUserProfileInput{}
	}

	req = c.newRequest(opUpdateMyUserProfile, input, output)
	output = &UpdateMyUserProfileOutput{}
	req.Data = output
	return
}

// Updates a user's SSH public key.
//
// Required Permissions: To use this action, an IAM user must have self-management
// enabled or an attached policy that explicitly grants permissions. For more
// information on user permissions, see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) UpdateMyUserProfile(input *UpdateMyUserProfileInput) (*UpdateMyUserProfileOutput, error) {
	req, out := c.UpdateMyUserProfileRequest(input)
	err := req.Send()
	return out, err
}

var opUpdateMyUserProfile *aws.Operation

// UpdateRDSDBInstanceRequest generates a request for the UpdateRDSDBInstance operation.
func (c *OpsWorks) UpdateRDSDBInstanceRequest(input *UpdateRDSDBInstanceInput) (req *aws.Request, output *UpdateRDSDBInstanceOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opUpdateRDSDBInstance == nil {
		opUpdateRDSDBInstance = &aws.Operation{
			Name:       "UpdateRdsDbInstance",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &UpdateRDSDBInstanceInput{}
	}

	req = c.newRequest(opUpdateRDSDBInstance, input, output)
	output = &UpdateRDSDBInstanceOutput{}
	req.Data = output
	return
}

// Updates an Amazon RDS instance.
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) UpdateRDSDBInstance(input *UpdateRDSDBInstanceInput) (*UpdateRDSDBInstanceOutput, error) {
	req, out := c.UpdateRDSDBInstanceRequest(input)
	err := req.Send()
	return out, err
}

var opUpdateRDSDBInstance *aws.Operation

// UpdateStackRequest generates a request for the UpdateStack operation.
func (c *OpsWorks) UpdateStackRequest(input *UpdateStackInput) (req *aws.Request, output *UpdateStackOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opUpdateStack == nil {
		opUpdateStack = &aws.Operation{
			Name:       "UpdateStack",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &UpdateStackInput{}
	}

	req = c.newRequest(opUpdateStack, input, output)
	output = &UpdateStackOutput{}
	req.Data = output
	return
}

// Updates a specified stack.
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) UpdateStack(input *UpdateStackInput) (*UpdateStackOutput, error) {
	req, out := c.UpdateStackRequest(input)
	err := req.Send()
	return out, err
}

var opUpdateStack *aws.Operation

// UpdateUserProfileRequest generates a request for the UpdateUserProfile operation.
func (c *OpsWorks) UpdateUserProfileRequest(input *UpdateUserProfileInput) (req *aws.Request, output *UpdateUserProfileOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opUpdateUserProfile == nil {
		opUpdateUserProfile = &aws.Operation{
			Name:       "UpdateUserProfile",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &UpdateUserProfileInput{}
	}

	req = c.newRequest(opUpdateUserProfile, input, output)
	output = &UpdateUserProfileOutput{}
	req.Data = output
	return
}

// Updates a specified user profile.
//
// Required Permissions: To use this action, an IAM user must have an attached
// policy that explicitly grants permissions. For more information on user permissions,
// see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) UpdateUserProfile(input *UpdateUserProfileInput) (*UpdateUserProfileOutput, error) {
	req, out := c.UpdateUserProfileRequest(input)
	err := req.Send()
	return out, err
}

var opUpdateUserProfile *aws.Operation

// UpdateVolumeRequest generates a request for the UpdateVolume operation.
func (c *OpsWorks) UpdateVolumeRequest(input *UpdateVolumeInput) (req *aws.Request, output *UpdateVolumeOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opUpdateVolume == nil {
		opUpdateVolume = &aws.Operation{
			Name:       "UpdateVolume",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &UpdateVolumeInput{}
	}

	req = c.newRequest(opUpdateVolume, input, output)
	output = &UpdateVolumeOutput{}
	req.Data = output
	return
}

// Updates an Amazon EBS volume's name or mount point. For more information,
// see Resource Management (http://docs.aws.amazon.com/opsworks/latest/userguide/resources.html).
//
// Required Permissions: To use this action, an IAM user must have a Manage
// permissions level for the stack, or an attached policy that explicitly grants
// permissions. For more information on user permissions, see Managing User
// Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html).
func (c *OpsWorks) UpdateVolume(input *UpdateVolumeInput) (*UpdateVolumeOutput, error) {
	req, out := c.UpdateVolumeRequest(input)
	err := req.Send()
	return out, err
}

var opUpdateVolume *aws.Operation

// A description of the app.
type App struct {
	// The app ID.
	AppID *string `locationName:"AppId" type:"string"`

	// A Source object that describes the app repository.
	AppSource *Source `type:"structure"`

	// The stack attributes.
	Attributes map[string]*string `type:"map"`

	// When the app was created.
	CreatedAt *string `type:"string"`

	// The app's data sources.
	DataSources []*DataSource `type:"list"`

	// A description of the app.
	Description *string `type:"string"`

	// The app vhost settings with multiple domains separated by commas. For example:
	// 'www.example.com, example.com'
	Domains []*string `type:"list"`

	// Whether to enable SSL for the app.
	EnableSSL *bool `locationName:"EnableSsl" type:"boolean"`

	// An array of EnvironmentVariable objects that specify environment variables
	// to be associated with the app. After you deploy the app, these variables
	// are defined on the associated app server instances. For more information,
	// see  Environment Variables (http://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html#workingapps-creating-environment).
	//
	//  There is no specific limit on the number of environment variables. However,
	// the size of the associated data structure - which includes the variables'
	// names, values, and protected flag values - cannot exceed 10 KB (10240 Bytes).
	// This limit should accommodate most if not all use cases, but if you do exceed
	// it, you will cause an exception (API) with an "Environment: is too large
	// (maximum is 10KB)" message.
	Environment []*EnvironmentVariable `type:"list"`

	// The app name.
	Name *string `type:"string"`

	// An SslConfiguration object with the SSL configuration.
	SSLConfiguration *SSLConfiguration `locationName:"SslConfiguration" type:"structure"`

	// The app's short name.
	Shortname *string `type:"string"`

	// The app stack ID.
	StackID *string `locationName:"StackId" type:"string"`

	// The app type.
	Type *string `type:"string"`

	metadataApp `json:"-" xml:"-"`
}

type metadataApp struct {
	SDKShapeTraits bool `type:"structure"`
}

type AssignInstanceInput struct {
	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string" required:"true"`

	// The layer ID, which must correspond to a custom layer. You cannot assign
	// a registered instance to a built-in layer.
	LayerIDs []*string `locationName:"LayerIds" type:"list" required:"true"`

	metadataAssignInstanceInput `json:"-" xml:"-"`
}

type metadataAssignInstanceInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type AssignInstanceOutput struct {
	metadataAssignInstanceOutput `json:"-" xml:"-"`
}

type metadataAssignInstanceOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type AssignVolumeInput struct {
	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	// The volume ID.
	VolumeID *string `locationName:"VolumeId" type:"string" required:"true"`

	metadataAssignVolumeInput `json:"-" xml:"-"`
}

type metadataAssignVolumeInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type AssignVolumeOutput struct {
	metadataAssignVolumeOutput `json:"-" xml:"-"`
}

type metadataAssignVolumeOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type AssociateElasticIPInput struct {
	// The Elastic IP address.
	ElasticIP *string `locationName:"ElasticIp" type:"string" required:"true"`

	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	metadataAssociateElasticIPInput `json:"-" xml:"-"`
}

type metadataAssociateElasticIPInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type AssociateElasticIPOutput struct {
	metadataAssociateElasticIPOutput `json:"-" xml:"-"`
}

type metadataAssociateElasticIPOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type AttachElasticLoadBalancerInput struct {
	// The Elastic Load Balancing instance's name.
	ElasticLoadBalancerName *string `type:"string" required:"true"`

	// The ID of the layer that the Elastic Load Balancing instance is to be attached
	// to.
	LayerID *string `locationName:"LayerId" type:"string" required:"true"`

	metadataAttachElasticLoadBalancerInput `json:"-" xml:"-"`
}

type metadataAttachElasticLoadBalancerInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type AttachElasticLoadBalancerOutput struct {
	metadataAttachElasticLoadBalancerOutput `json:"-" xml:"-"`
}

type metadataAttachElasticLoadBalancerOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes a load-based auto scaling upscaling or downscaling threshold configuration,
// which specifies when AWS OpsWorks starts or stops load-based instances.
type AutoScalingThresholds struct {
	// Custom Cloudwatch auto scaling alarms, to be used as thresholds. This parameter
	// takes a list of up to five alarm names, which are case sensitive and must
	// be in the same region as the stack.
	//
	// To use custom alarms, you must update your service role to allow cloudwatch:DescribeAlarms.
	// You can either have AWS OpsWorks update the role for you when you first use
	// this feature or you can edit the role manually. For more information, see
	// Allowing AWS OpsWorks to Act on Your Behalf (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-servicerole.html).
	Alarms []*string `type:"list"`

	// The CPU utilization threshold, as a percent of the available CPU.
	CPUThreshold *float64 `locationName:"CpuThreshold" type:"double"`

	// The amount of time (in minutes) after a scaling event occurs that AWS OpsWorks
	// should ignore metrics and suppress additional scaling events. For example,
	// AWS OpsWorks adds new instances following an upscaling event but the instances
	// won't start reducing the load until they have been booted and configured.
	// There is no point in raising additional scaling events during that operation,
	// which typically takes several minutes. IgnoreMetricsTime allows you to direct
	// AWS OpsWorks to suppress scaling events long enough to get the new instances
	// online.
	IgnoreMetricsTime *int64 `type:"integer"`

	// The number of instances to add or remove when the load exceeds a threshold.
	InstanceCount *int64 `type:"integer"`

	// The load threshold. For more information about how load is computed, see
	// Load (computing) (http://en.wikipedia.org/wiki/Load_%28computing%29).
	LoadThreshold *float64 `type:"double"`

	// The memory utilization threshold, as a percent of the available memory.
	MemoryThreshold *float64 `type:"double"`

	// The amount of time, in minutes, that the load must exceed a threshold before
	// more instances are added or removed.
	ThresholdsWaitTime *int64 `type:"integer"`

	metadataAutoScalingThresholds `json:"-" xml:"-"`
}

type metadataAutoScalingThresholds struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes a block device mapping. This data type maps directly to the Amazon
// EC2 BlockDeviceMapping (http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_BlockDeviceMapping.html)
// data type.
type BlockDeviceMapping struct {
	// The device name that is exposed to the instance, such as /dev/sdh. For the
	// root device, you can use the explicit device name or you can set this parameter
	// to ROOT_DEVICE and AWS OpsWorks will provide the correct device name.
	DeviceName *string `type:"string"`

	// An EBSBlockDevice that defines how to configure an Amazon EBS volume when
	// the instance is launched.
	EBS *EBSBlockDevice `locationName:"Ebs" type:"structure"`

	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *string `type:"string"`

	// The virtual device name. For more information, see BlockDeviceMapping (http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_BlockDeviceMapping.html).
	VirtualName *string `type:"string"`

	metadataBlockDeviceMapping `json:"-" xml:"-"`
}

type metadataBlockDeviceMapping struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes the Chef configuration.
type ChefConfiguration struct {
	// The Berkshelf version.
	BerkshelfVersion *string `type:"string"`

	// Whether to enable Berkshelf.
	ManageBerkshelf *bool `type:"boolean"`

	metadataChefConfiguration `json:"-" xml:"-"`
}

type metadataChefConfiguration struct {
	SDKShapeTraits bool `type:"structure"`
}

type CloneStackInput struct {
	// A list of stack attributes and values as key/value pairs to be added to the
	// cloned stack.
	Attributes map[string]*string `type:"map"`

	// A ChefConfiguration object that specifies whether to enable Berkshelf and
	// the Berkshelf version on Chef 11.10 stacks. For more information, see Create
	// a New Stack (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-creating.html).
	ChefConfiguration *ChefConfiguration `type:"structure"`

	// A list of source stack app IDs to be included in the cloned stack.
	CloneAppIDs []*string `locationName:"CloneAppIds" type:"list"`

	// Whether to clone the source stack's permissions.
	ClonePermissions *bool `type:"boolean"`

	// The configuration manager. When you clone a stack we recommend that you use
	// the configuration manager to specify the Chef version, 0.9, 11.4, or 11.10.
	// The default value is currently 11.4.
	ConfigurationManager *StackConfigurationManager `type:"structure"`

	// Contains the information required to retrieve an app or cookbook from a repository.
	// For more information, see Creating Apps (http://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html)
	// or Custom Recipes and Cookbooks (http://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook.html).
	CustomCookbooksSource *Source `type:"structure"`

	// A string that contains user-defined, custom JSON. It is used to override
	// the corresponding default stack configuration JSON values. The string should
	// be in the following format and must escape characters such as '"'.:
	//
	//  "{\"key1\": \"value1\", \"key2\": \"value2\",...}"
	//
	// For more information on custom JSON, see Use Custom JSON to Modify the Stack
	// Configuration Attributes (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-json.html)
	CustomJSON *string `locationName:"CustomJson" type:"string"`

	// The cloned stack's default Availability Zone, which must be in the specified
	// region. For more information, see Regions and Endpoints (http://docs.aws.amazon.com/general/latest/gr/rande.html).
	// If you also specify a value for DefaultSubnetId, the subnet must be in the
	// same zone. For more information, see the VpcId parameter description.
	DefaultAvailabilityZone *string `type:"string"`

	// The ARN of an IAM profile that is the default profile for all of the stack's
	// EC2 instances. For more information about IAM ARNs, see Using Identifiers
	// (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html).
	DefaultInstanceProfileARN *string `locationName:"DefaultInstanceProfileArn" type:"string"`

	// The stack's operating system, which must be set to one of the following.
	//
	//  Standard Linux operating systems: an Amazon Linux version such as Amazon
	// Linux 2014.09, Ubuntu 12.04 LTS, or Ubuntu 14.04 LTS. Custom Linux AMIs:
	// Custom. You specify the custom AMI you want to use when you create instances.
	// Microsoft Windows Server 2012 R2.   The default option is the current Amazon
	// Linux version.
	DefaultOs *string `type:"string"`

	// The default root device type. This value is used by default for all instances
	// in the cloned stack, but you can override it when you create an instance.
	// For more information, see Storage for the Root Device (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html#storage-for-the-root-device).
	DefaultRootDeviceType *string `type:"string"`

	// A default Amazon EC2 key pair name. The default value is none. If you specify
	// a key pair name, AWS OpsWorks installs the public key on the instance and
	// you can use the private key with an SSH client to log in to the instance.
	// For more information, see  Using SSH to Communicate with an Instance (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-ssh.html)
	// and  Managing SSH Access (http://docs.aws.amazon.com/opsworks/latest/userguide/security-ssh-access.html).
	// You can override this setting by specifying a different key pair, or no key
	// pair, when you  create an instance (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-add.html).
	DefaultSSHKeyName *string `locationName:"DefaultSshKeyName" type:"string"`

	// The stack's default VPC subnet ID. This parameter is required if you specify
	// a value for the VpcId parameter. All instances are launched into this subnet
	// unless you specify otherwise when you create the instance. If you also specify
	// a value for DefaultAvailabilityZone, the subnet must be in that zone. For
	// information on default values and when this parameter is required, see the
	// VpcId parameter description.
	DefaultSubnetID *string `locationName:"DefaultSubnetId" type:"string"`

	// The stack's host name theme, with spaces are replaced by underscores. The
	// theme is used to generate host names for the stack's instances. By default,
	// HostnameTheme is set to Layer_Dependent, which creates host names by appending
	// integers to the layer's short name. The other themes are:
	//
	//   Baked_Goods   Clouds   Europe_Cities   Fruits   Greek_Deities   Legendary_creatures_from_Japan
	//   Planets_and_Moons   Roman_Deities   Scottish_Islands   US_Cities   Wild_Cats
	//   To obtain a generated host name, call GetHostNameSuggestion, which returns
	// a host name based on the current theme.
	HostnameTheme *string `type:"string"`

	// The cloned stack name.
	Name *string `type:"string"`

	// The cloned stack AWS region, such as "us-east-1". For more information about
	// AWS regions, see Regions and Endpoints (http://docs.aws.amazon.com/general/latest/gr/rande.html).
	Region *string `type:"string"`

	// The stack AWS Identity and Access Management (IAM) role, which allows AWS
	// OpsWorks to work with AWS resources on your behalf. You must set this parameter
	// to the Amazon Resource Name (ARN) for an existing IAM role. If you create
	// a stack by using the AWS OpsWorks console, it creates the role for you. You
	// can obtain an existing stack's IAM ARN programmatically by calling DescribePermissions.
	// For more information about IAM ARNs, see Using Identifiers (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html).
	//
	//  You must set this parameter to a valid service role ARN or the action will
	// fail; there is no default value. You can specify the source stack's service
	// role ARN, if you prefer, but you must do so explicitly.
	ServiceRoleARN *string `locationName:"ServiceRoleArn" type:"string" required:"true"`

	// The source stack ID.
	SourceStackID *string `locationName:"SourceStackId" type:"string" required:"true"`

	// Whether to use custom cookbooks.
	UseCustomCookbooks *bool `type:"boolean"`

	// Whether to associate the AWS OpsWorks built-in security groups with the stack's
	// layers.
	//
	// AWS OpsWorks provides a standard set of built-in security groups, one for
	// each layer, which are associated with layers by default. With UseOpsworksSecurityGroups
	// you can instead provide your own custom security groups. UseOpsworksSecurityGroups
	// has the following settings:
	//
	//  True - AWS OpsWorks automatically associates the appropriate built-in security
	// group with each layer (default setting). You can associate additional security
	// groups with a layer after you create it but you cannot delete the built-in
	// security group.  False - AWS OpsWorks does not associate built-in security
	// groups with layers. You must create appropriate EC2 security groups and associate
	// a security group with each layer that you create. However, you can still
	// manually associate a built-in security group with a layer on creation; custom
	// security groups are required only for those layers that need custom settings.
	//   For more information, see Create a New Stack (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-creating.html).
	UseOpsWorksSecurityGroups *bool `locationName:"UseOpsworksSecurityGroups" type:"boolean"`

	// The ID of the VPC that the cloned stack is to be launched into. It must be
	// in the specified region. All instances are launched into this VPC, and you
	// cannot change the ID later.
	//
	//  If your account supports EC2 Classic, the default value is no VPC. If your
	// account does not support EC2 Classic, the default value is the default VPC
	// for the specified region.  If the VPC ID corresponds to a default VPC and
	// you have specified either the DefaultAvailabilityZone or the DefaultSubnetId
	// parameter only, AWS OpsWorks infers the value of the other parameter. If
	// you specify neither parameter, AWS OpsWorks sets these parameters to the
	// first valid Availability Zone for the specified region and the corresponding
	// default VPC subnet ID, respectively.
	//
	// If you specify a nondefault VPC ID, note the following:
	//
	//  It must belong to a VPC in your account that is in the specified region.
	// You must specify a value for DefaultSubnetId.  For more information on how
	// to use AWS OpsWorks with a VPC, see Running a Stack in a VPC (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-vpc.html).
	// For more information on default VPC and EC2 Classic, see Supported Platforms
	// (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html).
	VPCID *string `locationName:"VpcId" type:"string"`

	metadataCloneStackInput `json:"-" xml:"-"`
}

type metadataCloneStackInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a CloneStack request.
type CloneStackOutput struct {
	// The cloned stack ID.
	StackID *string `locationName:"StackId" type:"string"`

	metadataCloneStackOutput `json:"-" xml:"-"`
}

type metadataCloneStackOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes a command.
type Command struct {
	// Date and time when the command was acknowledged.
	AcknowledgedAt *string `type:"string"`

	// The command ID.
	CommandID *string `locationName:"CommandId" type:"string"`

	// Date when the command completed.
	CompletedAt *string `type:"string"`

	// Date and time when the command was run.
	CreatedAt *string `type:"string"`

	// The command deployment ID.
	DeploymentID *string `locationName:"DeploymentId" type:"string"`

	// The command exit code.
	ExitCode *int64 `type:"integer"`

	// The ID of the instance where the command was executed.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	// The URL of the command log.
	LogURL *string `locationName:"LogUrl" type:"string"`

	// The command status:
	//
	//  failed successful skipped pending
	Status *string `type:"string"`

	// The command type:
	//
	//   deploy   rollback   start   stop   restart   undeploy   update_dependencies
	//   install_dependencies   update_custom_cookbooks   execute_recipes
	Type *string `type:"string"`

	metadataCommand `json:"-" xml:"-"`
}

type metadataCommand struct {
	SDKShapeTraits bool `type:"structure"`
}

type CreateAppInput struct {
	// A Source object that specifies the app repository.
	AppSource *Source `type:"structure"`

	// One or more user-defined key/value pairs to be added to the stack attributes.
	Attributes map[string]*string `type:"map"`

	// The app's data source.
	DataSources []*DataSource `type:"list"`

	// A description of the app.
	Description *string `type:"string"`

	// The app virtual host settings, with multiple domains separated by commas.
	// For example: 'www.example.com, example.com'
	Domains []*string `type:"list"`

	// Whether to enable SSL for the app.
	EnableSSL *bool `locationName:"EnableSsl" type:"boolean"`

	// An array of EnvironmentVariable objects that specify environment variables
	// to be associated with the app. After you deploy the app, these variables
	// are defined on the associated app server instance. For more information,
	// see  Environment Variables (http://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html#workingapps-creating-environment).
	//
	//  There is no specific limit on the number of environment variables. However,
	// the size of the associated data structure - which includes the variables'
	// names, values, and protected flag values - cannot exceed 10 KB (10240 Bytes).
	// This limit should accommodate most if not all use cases. Exceeding it will
	// cause an exception with the message, "Environment: is too large (maximum
	// is 10KB)."
	//
	// This parameter is supported only by Chef 11.10 stacks. If you have specified
	// one or more environment variables, you cannot modify the stack's Chef version.
	Environment []*EnvironmentVariable `type:"list"`

	// The app name.
	Name *string `type:"string" required:"true"`

	// An SslConfiguration object with the SSL configuration.
	SSLConfiguration *SSLConfiguration `locationName:"SslConfiguration" type:"structure"`

	// The app's short name.
	Shortname *string `type:"string"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string" required:"true"`

	// The app type. Each supported type is associated with a particular layer.
	// For example, PHP applications are associated with a PHP layer. AWS OpsWorks
	// deploys an application to those instances that are members of the corresponding
	// layer. If your app isn't one of the standard types, or you prefer to implement
	// your own Deploy recipes, specify other.
	Type *string `type:"string" required:"true"`

	metadataCreateAppInput `json:"-" xml:"-"`
}

type metadataCreateAppInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a CreateApp request.
type CreateAppOutput struct {
	// The app ID.
	AppID *string `locationName:"AppId" type:"string"`

	metadataCreateAppOutput `json:"-" xml:"-"`
}

type metadataCreateAppOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type CreateDeploymentInput struct {
	// The app ID. This parameter is required for app deployments, but not for other
	// deployment commands.
	AppID *string `locationName:"AppId" type:"string"`

	// A DeploymentCommand object that specifies the deployment command and any
	// associated arguments.
	Command *DeploymentCommand `type:"structure" required:"true"`

	// A user-defined comment.
	Comment *string `type:"string"`

	// A string that contains user-defined, custom JSON. It is used to override
	// the corresponding default stack configuration JSON values. The string should
	// be in the following format and must escape characters such as '"'.:
	//
	//  "{\"key1\": \"value1\", \"key2\": \"value2\",...}"
	//
	// For more information on custom JSON, see Use Custom JSON to Modify the Stack
	// Configuration Attributes (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-json.html).
	CustomJSON *string `locationName:"CustomJson" type:"string"`

	// The instance IDs for the deployment targets.
	InstanceIDs []*string `locationName:"InstanceIds" type:"list"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string" required:"true"`

	metadataCreateDeploymentInput `json:"-" xml:"-"`
}

type metadataCreateDeploymentInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a CreateDeployment request.
type CreateDeploymentOutput struct {
	// The deployment ID, which can be used with other requests to identify the
	// deployment.
	DeploymentID *string `locationName:"DeploymentId" type:"string"`

	metadataCreateDeploymentOutput `json:"-" xml:"-"`
}

type metadataCreateDeploymentOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type CreateInstanceInput struct {
	// A custom AMI ID to be used to create the instance. The AMI should be based
	// on one of the standard AWS OpsWorks AMIs: Amazon Linux, Ubuntu 12.04 LTS,
	// or Ubuntu 14.04 LTS. For more information, see Instances (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances.html).
	//
	// If you specify a custom AMI, you must set Os to Custom.
	AMIID *string `locationName:"AmiId" type:"string"`

	// The instance architecture. The default option is x86_64. Instance types do
	// not necessarily support both architectures. For a list of the architectures
	// that are supported by the different instance types, see Instance Families
	// and Types (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html).
	Architecture *string `type:"string"`

	// For load-based or time-based instances, the type. Windows stacks can use
	// only time-based instances.
	AutoScalingType *string `type:"string"`

	// The instance Availability Zone. For more information, see Regions and Endpoints
	// (http://docs.aws.amazon.com/general/latest/gr/rande.html).
	AvailabilityZone *string `type:"string"`

	// An array of BlockDeviceMapping objects that specify the instance's block
	// devices. For more information, see Block Device Mapping (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html).
	BlockDeviceMappings []*BlockDeviceMapping `type:"list"`

	// Whether to create an Amazon EBS-optimized instance.
	EBSOptimized *bool `locationName:"EbsOptimized" type:"boolean"`

	// The instance host name.
	Hostname *string `type:"string"`

	// Whether to install operating system and package updates when the instance
	// boots. The default value is true. To control when updates are installed,
	// set this value to false. You must then update your instances manually by
	// using CreateDeployment to run the update_dependencies stack command or manually
	// running yum (Amazon Linux) or apt-get (Ubuntu) on the instances.
	//
	//  We strongly recommend using the default value of true to ensure that your
	// instances have the latest security updates.
	InstallUpdatesOnBoot *bool `type:"boolean"`

	// The instance type. AWS OpsWorks supports all instance types except Cluster
	// Compute, Cluster GPU, and High Memory Cluster. For more information, see
	// Instance Families and Types (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html).
	// The parameter values that you use to specify the various types are in the
	// API Name column of the Available Instance Types table.
	InstanceType *string `type:"string" required:"true"`

	// An array that contains the instance layer IDs.
	LayerIDs []*string `locationName:"LayerIds" type:"list" required:"true"`

	// The instance's operating system, which must be set to one of the following.
	//
	// For Windows stacks: Microsoft Windows Server 2012 R2.
	//
	// For Linux stacks:
	//
	//  Standard operating systems: an Amazon Linux version such as Amazon Linux
	// 2014.09, Ubuntu 12.04 LTS, or Ubuntu 14.04 LTS. Custom AMIs: Custom   The
	// default option is the current Amazon Linux version. If you set this parameter
	// to Custom, you must use the CreateInstance action's AmiId parameter to specify
	// the custom AMI that you want to use. For more information on the standard
	// operating systems, see Operating Systems (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-os.html)For
	// more information on how to use custom AMIs with OpsWorks, see Using Custom
	// AMIs (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-custom-ami.html).
	Os *string `type:"string"`

	// The instance root device type. For more information, see Storage for the
	// Root Device (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html#storage-for-the-root-device).
	RootDeviceType *string `type:"string"`

	// The instance's Amazon EC2 key pair name.
	SSHKeyName *string `locationName:"SshKeyName" type:"string"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string" required:"true"`

	// The ID of the instance's subnet. If the stack is running in a VPC, you can
	// use this parameter to override the stack's default subnet ID value and direct
	// AWS OpsWorks to launch the instance in a different subnet.
	SubnetID *string `locationName:"SubnetId" type:"string"`

	// The instance's virtualization type, paravirtual or hvm.
	VirtualizationType *string `type:"string"`

	metadataCreateInstanceInput `json:"-" xml:"-"`
}

type metadataCreateInstanceInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a CreateInstance request.
type CreateInstanceOutput struct {
	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	metadataCreateInstanceOutput `json:"-" xml:"-"`
}

type metadataCreateInstanceOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type CreateLayerInput struct {
	// One or more user-defined key/value pairs to be added to the stack attributes.
	Attributes map[string]*string `type:"map"`

	// Whether to automatically assign an Elastic IP address (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html)
	// to the layer's instances. For more information, see How to Edit a Layer (http://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-basics-edit.html).
	AutoAssignElasticIPs *bool `locationName:"AutoAssignElasticIps" type:"boolean"`

	// For stacks that are running in a VPC, whether to automatically assign a public
	// IP address to the layer's instances. For more information, see How to Edit
	// a Layer (http://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-basics-edit.html).
	AutoAssignPublicIPs *bool `locationName:"AutoAssignPublicIps" type:"boolean"`

	// The ARN of an IAM profile that to be used for the layer's EC2 instances.
	// For more information about IAM ARNs, see Using Identifiers (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html).
	CustomInstanceProfileARN *string `locationName:"CustomInstanceProfileArn" type:"string"`

	// A LayerCustomRecipes object that specifies the layer custom recipes.
	CustomRecipes *Recipes `type:"structure"`

	// An array containing the layer custom security group IDs.
	CustomSecurityGroupIDs []*string `locationName:"CustomSecurityGroupIds" type:"list"`

	// Whether to disable auto healing for the layer.
	EnableAutoHealing *bool `type:"boolean"`

	// Whether to install operating system and package updates when the instance
	// boots. The default value is true. To control when updates are installed,
	// set this value to false. You must then update your instances manually by
	// using CreateDeployment to run the update_dependencies stack command or manually
	// running yum (Amazon Linux) or apt-get (Ubuntu) on the instances.
	//
	//  We strongly recommend using the default value of true, to ensure that your
	// instances have the latest security updates.
	InstallUpdatesOnBoot *bool `type:"boolean"`

	// A LifeCycleEventConfiguration object that you can use to configure the Shutdown
	// event to specify an execution timeout and enable or disable Elastic Load
	// Balancer connection draining.
	LifecycleEventConfiguration *LifecycleEventConfiguration `type:"structure"`

	// The layer name, which is used by the console.
	Name *string `type:"string" required:"true"`

	// An array of Package objects that describe the layer packages.
	Packages []*string `type:"list"`

	// For custom layers only, use this parameter to specify the layer's short name,
	// which is used internally by AWS OpsWorks and by Chef recipes. The short name
	// is also used as the name for the directory where your app files are installed.
	// It can have a maximum of 200 characters, which are limited to the alphanumeric
	// characters, '-', '_', and '.'.
	//
	// The built-in layers' short names are defined by AWS OpsWorks. For more information,
	// see the Layer Reference (http://docs.aws.amazon.com/opsworks/latest/userguide/layers.html)
	Shortname *string `type:"string" required:"true"`

	// The layer stack ID.
	StackID *string `locationName:"StackId" type:"string" required:"true"`

	// The layer type. A stack cannot have more than one built-in layer of the same
	// type. It can have any number of custom layers.
	Type *string `type:"string" required:"true"`

	// Whether to use Amazon EBS-optimized instances.
	UseEBSOptimizedInstances *bool `locationName:"UseEbsOptimizedInstances" type:"boolean"`

	// A VolumeConfigurations object that describes the layer's Amazon EBS volumes.
	VolumeConfigurations []*VolumeConfiguration `type:"list"`

	metadataCreateLayerInput `json:"-" xml:"-"`
}

type metadataCreateLayerInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a CreateLayer request.
type CreateLayerOutput struct {
	// The layer ID.
	LayerID *string `locationName:"LayerId" type:"string"`

	metadataCreateLayerOutput `json:"-" xml:"-"`
}

type metadataCreateLayerOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type CreateStackInput struct {
	// One or more user-defined key/value pairs to be added to the stack attributes.
	Attributes map[string]*string `type:"map"`

	// A ChefConfiguration object that specifies whether to enable Berkshelf and
	// the Berkshelf version on Chef 11.10 stacks. For more information, see Create
	// a New Stack (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-creating.html).
	ChefConfiguration *ChefConfiguration `type:"structure"`

	// The configuration manager. When you clone a stack we recommend that you use
	// the configuration manager to specify the Chef version, 0.9, 11.4, or 11.10.
	// The default value is currently 11.4.
	ConfigurationManager *StackConfigurationManager `type:"structure"`

	// Contains the information required to retrieve an app or cookbook from a repository.
	// For more information, see Creating Apps (http://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html)
	// or Custom Recipes and Cookbooks (http://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook.html).
	CustomCookbooksSource *Source `type:"structure"`

	// A string that contains user-defined, custom JSON. It can be used to override
	// the corresponding default stack configuration attribute values, or to pass
	// data to recipes. The string should be in the following format and must escape
	// characters such as '"'.:
	//
	//  "{\"key1\": \"value1\", \"key2\": \"value2\",...}"
	//
	// For more information on custom JSON, see Use Custom JSON to Modify the Stack
	// Configuration Attributes (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-json.html).
	CustomJSON *string `locationName:"CustomJson" type:"string"`

	// The stack's default Availability Zone, which must be in the specified region.
	// For more information, see Regions and Endpoints (http://docs.aws.amazon.com/general/latest/gr/rande.html).
	// If you also specify a value for DefaultSubnetId, the subnet must be in the
	// same zone. For more information, see the VpcId parameter description.
	DefaultAvailabilityZone *string `type:"string"`

	// The ARN of an IAM profile that is the default profile for all of the stack's
	// EC2 instances. For more information about IAM ARNs, see Using Identifiers
	// (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html).
	DefaultInstanceProfileARN *string `locationName:"DefaultInstanceProfileArn" type:"string" required:"true"`

	// The stack's operating system, which must be set to one of the following.
	//
	//  Standard Linux operating systems: an Amazon Linux version such as Amazon
	// Linux 2014.09, Ubuntu 12.04 LTS, or Ubuntu 14.04 LTS. Custom Linux AMIs:
	// Custom. You specify the custom AMI you want to use when you create instances.
	// Microsoft Windows Server 2012 R2.   The default option is the current Amazon
	// Linux version.
	DefaultOs *string `type:"string"`

	// The default root device type. This value is used by default for all instances
	// in the stack, but you can override it when you create an instance. The default
	// option is instance-store. For more information, see Storage for the Root
	// Device (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html#storage-for-the-root-device).
	DefaultRootDeviceType *string `type:"string"`

	// A default Amazon EC2 key pair name. The default value is none. If you specify
	// a key pair name, AWS OpsWorks installs the public key on the instance and
	// you can use the private key with an SSH client to log in to the instance.
	// For more information, see  Using SSH to Communicate with an Instance (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-ssh.html)
	// and  Managing SSH Access (http://docs.aws.amazon.com/opsworks/latest/userguide/security-ssh-access.html).
	// You can override this setting by specifying a different key pair, or no key
	// pair, when you  create an instance (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-add.html).
	DefaultSSHKeyName *string `locationName:"DefaultSshKeyName" type:"string"`

	// The stack's default VPC subnet ID. This parameter is required if you specify
	// a value for the VpcId parameter. All instances are launched into this subnet
	// unless you specify otherwise when you create the instance. If you also specify
	// a value for DefaultAvailabilityZone, the subnet must be in that zone. For
	// information on default values and when this parameter is required, see the
	// VpcId parameter description.
	DefaultSubnetID *string `locationName:"DefaultSubnetId" type:"string"`

	// The stack's host name theme, with spaces are replaced by underscores. The
	// theme is used to generate host names for the stack's instances. By default,
	// HostnameTheme is set to Layer_Dependent, which creates host names by appending
	// integers to the layer's short name. The other themes are:
	//
	//   Baked_Goods   Clouds   Europe_Cities   Fruits   Greek_Deities   Legendary_creatures_from_Japan
	//   Planets_and_Moons   Roman_Deities   Scottish_Islands   US_Cities   Wild_Cats
	//   To obtain a generated host name, call GetHostNameSuggestion, which returns
	// a host name based on the current theme.
	HostnameTheme *string `type:"string"`

	// The stack name.
	Name *string `type:"string" required:"true"`

	// The stack AWS region, such as "us-east-1". For more information about Amazon
	// regions, see Regions and Endpoints (http://docs.aws.amazon.com/general/latest/gr/rande.html).
	Region *string `type:"string" required:"true"`

	// The stack AWS Identity and Access Management (IAM) role, which allows AWS
	// OpsWorks to work with AWS resources on your behalf. You must set this parameter
	// to the Amazon Resource Name (ARN) for an existing IAM role. For more information
	// about IAM ARNs, see Using Identifiers (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html).
	ServiceRoleARN *string `locationName:"ServiceRoleArn" type:"string" required:"true"`

	// Whether the stack uses custom cookbooks.
	UseCustomCookbooks *bool `type:"boolean"`

	// Whether to associate the AWS OpsWorks built-in security groups with the stack's
	// layers.
	//
	// AWS OpsWorks provides a standard set of built-in security groups, one for
	// each layer, which are associated with layers by default. With UseOpsworksSecurityGroups
	// you can instead provide your own custom security groups. UseOpsworksSecurityGroups
	// has the following settings:
	//
	//  True - AWS OpsWorks automatically associates the appropriate built-in security
	// group with each layer (default setting). You can associate additional security
	// groups with a layer after you create it but you cannot delete the built-in
	// security group.  False - AWS OpsWorks does not associate built-in security
	// groups with layers. You must create appropriate EC2 security groups and associate
	// a security group with each layer that you create. However, you can still
	// manually associate a built-in security group with a layer on creation; custom
	// security groups are required only for those layers that need custom settings.
	//   For more information, see Create a New Stack (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-creating.html).
	UseOpsWorksSecurityGroups *bool `locationName:"UseOpsworksSecurityGroups" type:"boolean"`

	// The ID of the VPC that the stack is to be launched into. It must be in the
	// specified region. All instances are launched into this VPC, and you cannot
	// change the ID later.
	//
	//  If your account supports EC2 Classic, the default value is no VPC. If your
	// account does not support EC2 Classic, the default value is the default VPC
	// for the specified region.  If the VPC ID corresponds to a default VPC and
	// you have specified either the DefaultAvailabilityZone or the DefaultSubnetId
	// parameter only, AWS OpsWorks infers the value of the other parameter. If
	// you specify neither parameter, AWS OpsWorks sets these parameters to the
	// first valid Availability Zone for the specified region and the corresponding
	// default VPC subnet ID, respectively.
	//
	// If you specify a nondefault VPC ID, note the following:
	//
	//  It must belong to a VPC in your account that is in the specified region.
	// You must specify a value for DefaultSubnetId.  For more information on how
	// to use AWS OpsWorks with a VPC, see Running a Stack in a VPC (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-vpc.html).
	// For more information on default VPC and EC2 Classic, see Supported Platforms
	// (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html).
	VPCID *string `locationName:"VpcId" type:"string"`

	metadataCreateStackInput `json:"-" xml:"-"`
}

type metadataCreateStackInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a CreateStack request.
type CreateStackOutput struct {
	// The stack ID, which is an opaque string that you use to identify the stack
	// when performing actions such as DescribeStacks.
	StackID *string `locationName:"StackId" type:"string"`

	metadataCreateStackOutput `json:"-" xml:"-"`
}

type metadataCreateStackOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type CreateUserProfileInput struct {
	// Whether users can specify their own SSH public key through the My Settings
	// page. For more information, see Setting an IAM User's Public SSH Key (http://docs.aws.amazon.com/opsworks/latest/userguide/security-settingsshkey.html).
	AllowSelfManagement *bool `type:"boolean"`

	// The user's IAM ARN.
	IAMUserARN *string `locationName:"IamUserArn" type:"string" required:"true"`

	// The user's public SSH key.
	SSHPublicKey *string `locationName:"SshPublicKey" type:"string"`

	// The user's SSH user name. The allowable characters are [a-z], [A-Z], [0-9],
	// '-', and '_'. If the specified name includes other punctuation marks, AWS
	// OpsWorks removes them. For example, my.name will be changed to myname. If
	// you do not specify an SSH user name, AWS OpsWorks generates one from the
	// IAM user name.
	SSHUsername *string `locationName:"SshUsername" type:"string"`

	metadataCreateUserProfileInput `json:"-" xml:"-"`
}

type metadataCreateUserProfileInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a CreateUserProfile request.
type CreateUserProfileOutput struct {
	// The user's IAM ARN.
	IAMUserARN *string `locationName:"IamUserArn" type:"string"`

	metadataCreateUserProfileOutput `json:"-" xml:"-"`
}

type metadataCreateUserProfileOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes an app's data source.
type DataSource struct {
	// The data source's ARN.
	ARN *string `locationName:"Arn" type:"string"`

	// The database name.
	DatabaseName *string `type:"string"`

	// The data source's type, AutoSelectOpsworksMysqlInstance, OpsworksMysqlInstance,
	// or RdsDbInstance.
	Type *string `type:"string"`

	metadataDataSource `json:"-" xml:"-"`
}

type metadataDataSource struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteAppInput struct {
	// The app ID.
	AppID *string `locationName:"AppId" type:"string" required:"true"`

	metadataDeleteAppInput `json:"-" xml:"-"`
}

type metadataDeleteAppInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteAppOutput struct {
	metadataDeleteAppOutput `json:"-" xml:"-"`
}

type metadataDeleteAppOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteInstanceInput struct {
	// Whether to delete the instance Elastic IP address.
	DeleteElasticIP *bool `locationName:"DeleteElasticIp" type:"boolean"`

	// Whether to delete the instance's Amazon EBS volumes.
	DeleteVolumes *bool `type:"boolean"`

	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string" required:"true"`

	metadataDeleteInstanceInput `json:"-" xml:"-"`
}

type metadataDeleteInstanceInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteInstanceOutput struct {
	metadataDeleteInstanceOutput `json:"-" xml:"-"`
}

type metadataDeleteInstanceOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteLayerInput struct {
	// The layer ID.
	LayerID *string `locationName:"LayerId" type:"string" required:"true"`

	metadataDeleteLayerInput `json:"-" xml:"-"`
}

type metadataDeleteLayerInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteLayerOutput struct {
	metadataDeleteLayerOutput `json:"-" xml:"-"`
}

type metadataDeleteLayerOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteStackInput struct {
	// The stack ID.
	StackID *string `locationName:"StackId" type:"string" required:"true"`

	metadataDeleteStackInput `json:"-" xml:"-"`
}

type metadataDeleteStackInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteStackOutput struct {
	metadataDeleteStackOutput `json:"-" xml:"-"`
}

type metadataDeleteStackOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteUserProfileInput struct {
	// The user's IAM ARN.
	IAMUserARN *string `locationName:"IamUserArn" type:"string" required:"true"`

	metadataDeleteUserProfileInput `json:"-" xml:"-"`
}

type metadataDeleteUserProfileInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteUserProfileOutput struct {
	metadataDeleteUserProfileOutput `json:"-" xml:"-"`
}

type metadataDeleteUserProfileOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes a deployment of a stack or app.
type Deployment struct {
	// The app ID.
	AppID *string `locationName:"AppId" type:"string"`

	// Used to specify a stack or deployment command.
	Command *DeploymentCommand `type:"structure"`

	// A user-defined comment.
	Comment *string `type:"string"`

	// Date when the deployment completed.
	CompletedAt *string `type:"string"`

	// Date when the deployment was created.
	CreatedAt *string `type:"string"`

	// A string that contains user-defined custom JSON. It can be used to override
	// the corresponding default stack configuration attribute values for stack
	// or to pass data to recipes. The string should be in the following format
	// and must escape characters such as '"'.:
	//
	//  "{\"key1\": \"value1\", \"key2\": \"value2\",...}"
	//
	// For more information on custom JSON, see Use Custom JSON to Modify the Stack
	// Configuration Attributes (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-json.html).
	CustomJSON *string `locationName:"CustomJson" type:"string"`

	// The deployment ID.
	DeploymentID *string `locationName:"DeploymentId" type:"string"`

	// The deployment duration.
	Duration *int64 `type:"integer"`

	// The user's IAM ARN.
	IAMUserARN *string `locationName:"IamUserArn" type:"string"`

	// The IDs of the target instances.
	InstanceIDs []*string `locationName:"InstanceIds" type:"list"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string"`

	// The deployment status:
	//
	//  running successful failed
	Status *string `type:"string"`

	metadataDeployment `json:"-" xml:"-"`
}

type metadataDeployment struct {
	SDKShapeTraits bool `type:"structure"`
}

// Used to specify a stack or deployment command.
type DeploymentCommand struct {
	// The arguments of those commands that take arguments. It should be set to
	// a JSON object with the following format:
	//
	//  {"arg_name1" : ["value1", "value2", ...], "arg_name2" : ["value1", "value2",
	// ...], ...}
	//
	// The update_dependencies command takes two arguments:
	//
	//   upgrade_os_to - Specifies the desired Amazon Linux version for instances
	// whose OS you want to upgrade, such as Amazon Linux 2014.09. You must also
	// set the allow_reboot argument to true.  allow_reboot - Specifies whether
	// to allow AWS OpsWorks to reboot the instances if necessary, after installing
	// the updates. This argument can be set to either true or false. The default
	// value is false.  For example, to upgrade an instance to Amazon Linux 2014.09,
	// set Args to the following.
	//
	//  { "upgrade_os_to":["Amazon Linux 2014.09"], "allow_reboot":["true"] }
	Args map[string][]*string `type:"map"`

	// Specifies the operation. You can specify only one command.
	//
	// For stacks, the following commands are available:
	//
	//   execute_recipes: Execute one or more recipes. To specify the recipes,
	// set an Args parameter named recipes to the list of recipes to be executed.
	// For example, to execute phpapp::appsetup, set Args to {"recipes":["phpapp::appsetup"]}.
	//  install_dependencies: Install the stack's dependencies.  update_custom_cookbooks:
	// Update the stack's custom cookbooks.  update_dependencies: Update the stack's
	// dependencies.  The update_dependencies and install_dependencies commands
	// are supported only for Linux instances. You can run the commands successfully
	// on Windows instances, but they do nothing. For apps, the following commands
	// are available:
	//
	//   deploy: Deploy an app. Ruby on Rails apps have an optional Args parameter
	// named migrate. Set Args to {"migrate":["true"]} to migrate the database.
	// The default setting is {"migrate":["false"]}.  rollback Roll the app back
	// to the previous version. When you update an app, AWS OpsWorks stores the
	// previous version, up to a maximum of five versions. You can use this command
	// to roll an app back as many as four versions.  start: Start the app's web
	// or application server.  stop: Stop the app's web or application server.
	// restart: Restart the app's web or application server.  undeploy: Undeploy
	// the app.
	Name *string `type:"string" required:"true"`

	metadataDeploymentCommand `json:"-" xml:"-"`
}

type metadataDeploymentCommand struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeregisterElasticIPInput struct {
	// The Elastic IP address.
	ElasticIP *string `locationName:"ElasticIp" type:"string" required:"true"`

	metadataDeregisterElasticIPInput `json:"-" xml:"-"`
}

type metadataDeregisterElasticIPInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeregisterElasticIPOutput struct {
	metadataDeregisterElasticIPOutput `json:"-" xml:"-"`
}

type metadataDeregisterElasticIPOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeregisterInstanceInput struct {
	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string" required:"true"`

	metadataDeregisterInstanceInput `json:"-" xml:"-"`
}

type metadataDeregisterInstanceInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeregisterInstanceOutput struct {
	metadataDeregisterInstanceOutput `json:"-" xml:"-"`
}

type metadataDeregisterInstanceOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeregisterRDSDBInstanceInput struct {
	// The Amazon RDS instance's ARN.
	RDSDBInstanceARN *string `locationName:"RdsDbInstanceArn" type:"string" required:"true"`

	metadataDeregisterRDSDBInstanceInput `json:"-" xml:"-"`
}

type metadataDeregisterRDSDBInstanceInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeregisterRDSDBInstanceOutput struct {
	metadataDeregisterRDSDBInstanceOutput `json:"-" xml:"-"`
}

type metadataDeregisterRDSDBInstanceOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeregisterVolumeInput struct {
	// The AWS OpsWorks volume ID, which is the GUID that AWS OpsWorks assigned
	// to the instance when you registered the volume with the stack, not the Amazon
	// EC2 volume ID.
	VolumeID *string `locationName:"VolumeId" type:"string" required:"true"`

	metadataDeregisterVolumeInput `json:"-" xml:"-"`
}

type metadataDeregisterVolumeInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeregisterVolumeOutput struct {
	metadataDeregisterVolumeOutput `json:"-" xml:"-"`
}

type metadataDeregisterVolumeOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeAppsInput struct {
	// An array of app IDs for the apps to be described. If you use this parameter,
	// DescribeApps returns a description of the specified apps. Otherwise, it returns
	// a description of every app.
	AppIDs []*string `locationName:"AppIds" type:"list"`

	// The app stack ID. If you use this parameter, DescribeApps returns a description
	// of the apps in the specified stack.
	StackID *string `locationName:"StackId" type:"string"`

	metadataDescribeAppsInput `json:"-" xml:"-"`
}

type metadataDescribeAppsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeApps request.
type DescribeAppsOutput struct {
	// An array of App objects that describe the specified apps.
	Apps []*App `type:"list"`

	metadataDescribeAppsOutput `json:"-" xml:"-"`
}

type metadataDescribeAppsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeCommandsInput struct {
	// An array of command IDs. If you include this parameter, DescribeCommands
	// returns a description of the specified commands. Otherwise, it returns a
	// description of every command.
	CommandIDs []*string `locationName:"CommandIds" type:"list"`

	// The deployment ID. If you include this parameter, DescribeCommands returns
	// a description of the commands associated with the specified deployment.
	DeploymentID *string `locationName:"DeploymentId" type:"string"`

	// The instance ID. If you include this parameter, DescribeCommands returns
	// a description of the commands associated with the specified instance.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	metadataDescribeCommandsInput `json:"-" xml:"-"`
}

type metadataDescribeCommandsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeCommands request.
type DescribeCommandsOutput struct {
	// An array of Command objects that describe each of the specified commands.
	Commands []*Command `type:"list"`

	metadataDescribeCommandsOutput `json:"-" xml:"-"`
}

type metadataDescribeCommandsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeDeploymentsInput struct {
	// The app ID. If you include this parameter, DescribeDeployments returns a
	// description of the commands associated with the specified app.
	AppID *string `locationName:"AppId" type:"string"`

	// An array of deployment IDs to be described. If you include this parameter,
	// DescribeDeployments returns a description of the specified deployments. Otherwise,
	// it returns a description of every deployment.
	DeploymentIDs []*string `locationName:"DeploymentIds" type:"list"`

	// The stack ID. If you include this parameter, DescribeDeployments returns
	// a description of the commands associated with the specified stack.
	StackID *string `locationName:"StackId" type:"string"`

	metadataDescribeDeploymentsInput `json:"-" xml:"-"`
}

type metadataDescribeDeploymentsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeDeployments request.
type DescribeDeploymentsOutput struct {
	// An array of Deployment objects that describe the deployments.
	Deployments []*Deployment `type:"list"`

	metadataDescribeDeploymentsOutput `json:"-" xml:"-"`
}

type metadataDescribeDeploymentsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeElasticIPsInput struct {
	// An array of Elastic IP addresses to be described. If you include this parameter,
	// DescribeElasticIps returns a description of the specified Elastic IP addresses.
	// Otherwise, it returns a description of every Elastic IP address.
	IPs []*string `locationName:"Ips" type:"list"`

	// The instance ID. If you include this parameter, DescribeElasticIps returns
	// a description of the Elastic IP addresses associated with the specified instance.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	// A stack ID. If you include this parameter, DescribeElasticIps returns a description
	// of the Elastic IP addresses that are registered with the specified stack.
	StackID *string `locationName:"StackId" type:"string"`

	metadataDescribeElasticIPsInput `json:"-" xml:"-"`
}

type metadataDescribeElasticIPsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeElasticIps request.
type DescribeElasticIPsOutput struct {
	// An ElasticIps object that describes the specified Elastic IP addresses.
	ElasticIPs []*ElasticIP `locationName:"ElasticIps" type:"list"`

	metadataDescribeElasticIPsOutput `json:"-" xml:"-"`
}

type metadataDescribeElasticIPsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeElasticLoadBalancersInput struct {
	// A list of layer IDs. The action describes the Elastic Load Balancing instances
	// for the specified layers.
	LayerIDs []*string `locationName:"LayerIds" type:"list"`

	// A stack ID. The action describes the stack's Elastic Load Balancing instances.
	StackID *string `locationName:"StackId" type:"string"`

	metadataDescribeElasticLoadBalancersInput `json:"-" xml:"-"`
}

type metadataDescribeElasticLoadBalancersInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeElasticLoadBalancers request.
type DescribeElasticLoadBalancersOutput struct {
	// A list of ElasticLoadBalancer objects that describe the specified Elastic
	// Load Balancing instances.
	ElasticLoadBalancers []*ElasticLoadBalancer `type:"list"`

	metadataDescribeElasticLoadBalancersOutput `json:"-" xml:"-"`
}

type metadataDescribeElasticLoadBalancersOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeInstancesInput struct {
	// An array of instance IDs to be described. If you use this parameter, DescribeInstances
	// returns a description of the specified instances. Otherwise, it returns a
	// description of every instance.
	InstanceIDs []*string `locationName:"InstanceIds" type:"list"`

	// A layer ID. If you use this parameter, DescribeInstances returns descriptions
	// of the instances associated with the specified layer.
	LayerID *string `locationName:"LayerId" type:"string"`

	// A stack ID. If you use this parameter, DescribeInstances returns descriptions
	// of the instances associated with the specified stack.
	StackID *string `locationName:"StackId" type:"string"`

	metadataDescribeInstancesInput `json:"-" xml:"-"`
}

type metadataDescribeInstancesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeInstances request.
type DescribeInstancesOutput struct {
	// An array of Instance objects that describe the instances.
	Instances []*Instance `type:"list"`

	metadataDescribeInstancesOutput `json:"-" xml:"-"`
}

type metadataDescribeInstancesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeLayersInput struct {
	// An array of layer IDs that specify the layers to be described. If you omit
	// this parameter, DescribeLayers returns a description of every layer in the
	// specified stack.
	LayerIDs []*string `locationName:"LayerIds" type:"list"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string"`

	metadataDescribeLayersInput `json:"-" xml:"-"`
}

type metadataDescribeLayersInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeLayers request.
type DescribeLayersOutput struct {
	// An array of Layer objects that describe the layers.
	Layers []*Layer `type:"list"`

	metadataDescribeLayersOutput `json:"-" xml:"-"`
}

type metadataDescribeLayersOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeLoadBasedAutoScalingInput struct {
	// An array of layer IDs.
	LayerIDs []*string `locationName:"LayerIds" type:"list" required:"true"`

	metadataDescribeLoadBasedAutoScalingInput `json:"-" xml:"-"`
}

type metadataDescribeLoadBasedAutoScalingInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeLoadBasedAutoScaling request.
type DescribeLoadBasedAutoScalingOutput struct {
	// An array of LoadBasedAutoScalingConfiguration objects that describe each
	// layer's configuration.
	LoadBasedAutoScalingConfigurations []*LoadBasedAutoScalingConfiguration `type:"list"`

	metadataDescribeLoadBasedAutoScalingOutput `json:"-" xml:"-"`
}

type metadataDescribeLoadBasedAutoScalingOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeMyUserProfileInput struct {
	metadataDescribeMyUserProfileInput `json:"-" xml:"-"`
}

type metadataDescribeMyUserProfileInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeMyUserProfile request.
type DescribeMyUserProfileOutput struct {
	// A UserProfile object that describes the user's SSH information.
	UserProfile *SelfUserProfile `type:"structure"`

	metadataDescribeMyUserProfileOutput `json:"-" xml:"-"`
}

type metadataDescribeMyUserProfileOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribePermissionsInput struct {
	// The user's IAM ARN. For more information about IAM ARNs, see Using Identifiers
	// (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html).
	IAMUserARN *string `locationName:"IamUserArn" type:"string"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string"`

	metadataDescribePermissionsInput `json:"-" xml:"-"`
}

type metadataDescribePermissionsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribePermissions request.
type DescribePermissionsOutput struct {
	// An array of Permission objects that describe the stack permissions.
	//
	//  If the request object contains only a stack ID, the array contains a Permission
	// object with permissions for each of the stack IAM ARNs. If the request object
	// contains only an IAM ARN, the array contains a Permission object with permissions
	// for each of the user's stack IDs. If the request contains a stack ID and
	// an IAM ARN, the array contains a single Permission object with permissions
	// for the specified stack and IAM ARN.
	Permissions []*Permission `type:"list"`

	metadataDescribePermissionsOutput `json:"-" xml:"-"`
}

type metadataDescribePermissionsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeRAIDArraysInput struct {
	// The instance ID. If you use this parameter, DescribeRaidArrays returns descriptions
	// of the RAID arrays associated with the specified instance.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	// An array of RAID array IDs. If you use this parameter, DescribeRaidArrays
	// returns descriptions of the specified arrays. Otherwise, it returns a description
	// of every array.
	RAIDArrayIDs []*string `locationName:"RaidArrayIds" type:"list"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string"`

	metadataDescribeRAIDArraysInput `json:"-" xml:"-"`
}

type metadataDescribeRAIDArraysInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeRaidArrays request.
type DescribeRAIDArraysOutput struct {
	// A RaidArrays object that describes the specified RAID arrays.
	RAIDArrays []*RAIDArray `locationName:"RaidArrays" type:"list"`

	metadataDescribeRAIDArraysOutput `json:"-" xml:"-"`
}

type metadataDescribeRAIDArraysOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeRDSDBInstancesInput struct {
	// An array containing the ARNs of the instances to be described.
	RDSDBInstanceARNs []*string `locationName:"RdsDbInstanceArns" type:"list"`

	// The stack ID that the instances are registered with. The operation returns
	// descriptions of all registered Amazon RDS instances.
	StackID *string `locationName:"StackId" type:"string" required:"true"`

	metadataDescribeRDSDBInstancesInput `json:"-" xml:"-"`
}

type metadataDescribeRDSDBInstancesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeRdsDbInstances request.
type DescribeRDSDBInstancesOutput struct {
	// An a array of RdsDbInstance objects that describe the instances.
	RDSDBInstances []*RDSDBInstance `locationName:"RdsDbInstances" type:"list"`

	metadataDescribeRDSDBInstancesOutput `json:"-" xml:"-"`
}

type metadataDescribeRDSDBInstancesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeServiceErrorsInput struct {
	// The instance ID. If you use this parameter, DescribeServiceErrors returns
	// descriptions of the errors associated with the specified instance.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	// An array of service error IDs. If you use this parameter, DescribeServiceErrors
	// returns descriptions of the specified errors. Otherwise, it returns a description
	// of every error.
	ServiceErrorIDs []*string `locationName:"ServiceErrorIds" type:"list"`

	// The stack ID. If you use this parameter, DescribeServiceErrors returns descriptions
	// of the errors associated with the specified stack.
	StackID *string `locationName:"StackId" type:"string"`

	metadataDescribeServiceErrorsInput `json:"-" xml:"-"`
}

type metadataDescribeServiceErrorsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeServiceErrors request.
type DescribeServiceErrorsOutput struct {
	// An array of ServiceError objects that describe the specified service errors.
	ServiceErrors []*ServiceError `type:"list"`

	metadataDescribeServiceErrorsOutput `json:"-" xml:"-"`
}

type metadataDescribeServiceErrorsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeStackProvisioningParametersInput struct {
	// The stack ID
	StackID *string `locationName:"StackId" type:"string" required:"true"`

	metadataDescribeStackProvisioningParametersInput `json:"-" xml:"-"`
}

type metadataDescribeStackProvisioningParametersInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeStackProvisioningParameters request.
type DescribeStackProvisioningParametersOutput struct {
	// The AWS OpsWorks agent installer's URL.
	AgentInstallerURL *string `locationName:"AgentInstallerUrl" type:"string"`

	// An embedded object that contains the provisioning parameters.
	Parameters map[string]*string `type:"map"`

	metadataDescribeStackProvisioningParametersOutput `json:"-" xml:"-"`
}

type metadataDescribeStackProvisioningParametersOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeStackSummaryInput struct {
	// The stack ID.
	StackID *string `locationName:"StackId" type:"string" required:"true"`

	metadataDescribeStackSummaryInput `json:"-" xml:"-"`
}

type metadataDescribeStackSummaryInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeStackSummary request.
type DescribeStackSummaryOutput struct {
	// A StackSummary object that contains the results.
	StackSummary *StackSummary `type:"structure"`

	metadataDescribeStackSummaryOutput `json:"-" xml:"-"`
}

type metadataDescribeStackSummaryOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeStacksInput struct {
	// An array of stack IDs that specify the stacks to be described. If you omit
	// this parameter, DescribeStacks returns a description of every stack.
	StackIDs []*string `locationName:"StackIds" type:"list"`

	metadataDescribeStacksInput `json:"-" xml:"-"`
}

type metadataDescribeStacksInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeStacks request.
type DescribeStacksOutput struct {
	// An array of Stack objects that describe the stacks.
	Stacks []*Stack `type:"list"`

	metadataDescribeStacksOutput `json:"-" xml:"-"`
}

type metadataDescribeStacksOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeTimeBasedAutoScalingInput struct {
	// An array of instance IDs.
	InstanceIDs []*string `locationName:"InstanceIds" type:"list" required:"true"`

	metadataDescribeTimeBasedAutoScalingInput `json:"-" xml:"-"`
}

type metadataDescribeTimeBasedAutoScalingInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeTimeBasedAutoScaling request.
type DescribeTimeBasedAutoScalingOutput struct {
	// An array of TimeBasedAutoScalingConfiguration objects that describe the configuration
	// for the specified instances.
	TimeBasedAutoScalingConfigurations []*TimeBasedAutoScalingConfiguration `type:"list"`

	metadataDescribeTimeBasedAutoScalingOutput `json:"-" xml:"-"`
}

type metadataDescribeTimeBasedAutoScalingOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeUserProfilesInput struct {
	// An array of IAM user ARNs that identify the users to be described.
	IAMUserARNs []*string `locationName:"IamUserArns" type:"list"`

	metadataDescribeUserProfilesInput `json:"-" xml:"-"`
}

type metadataDescribeUserProfilesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeUserProfiles request.
type DescribeUserProfilesOutput struct {
	// A Users object that describes the specified users.
	UserProfiles []*UserProfile `type:"list"`

	metadataDescribeUserProfilesOutput `json:"-" xml:"-"`
}

type metadataDescribeUserProfilesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeVolumesInput struct {
	// The instance ID. If you use this parameter, DescribeVolumes returns descriptions
	// of the volumes associated with the specified instance.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	// The RAID array ID. If you use this parameter, DescribeVolumes returns descriptions
	// of the volumes associated with the specified RAID array.
	RAIDArrayID *string `locationName:"RaidArrayId" type:"string"`

	// A stack ID. The action describes the stack's registered Amazon EBS volumes.
	StackID *string `locationName:"StackId" type:"string"`

	// Am array of volume IDs. If you use this parameter, DescribeVolumes returns
	// descriptions of the specified volumes. Otherwise, it returns a description
	// of every volume.
	VolumeIDs []*string `locationName:"VolumeIds" type:"list"`

	metadataDescribeVolumesInput `json:"-" xml:"-"`
}

type metadataDescribeVolumesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a DescribeVolumes request.
type DescribeVolumesOutput struct {
	// An array of volume IDs.
	Volumes []*Volume `type:"list"`

	metadataDescribeVolumesOutput `json:"-" xml:"-"`
}

type metadataDescribeVolumesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DetachElasticLoadBalancerInput struct {
	// The Elastic Load Balancing instance's name.
	ElasticLoadBalancerName *string `type:"string" required:"true"`

	// The ID of the layer that the Elastic Load Balancing instance is attached
	// to.
	LayerID *string `locationName:"LayerId" type:"string" required:"true"`

	metadataDetachElasticLoadBalancerInput `json:"-" xml:"-"`
}

type metadataDetachElasticLoadBalancerInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DetachElasticLoadBalancerOutput struct {
	metadataDetachElasticLoadBalancerOutput `json:"-" xml:"-"`
}

type metadataDetachElasticLoadBalancerOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DisassociateElasticIPInput struct {
	// The Elastic IP address.
	ElasticIP *string `locationName:"ElasticIp" type:"string" required:"true"`

	metadataDisassociateElasticIPInput `json:"-" xml:"-"`
}

type metadataDisassociateElasticIPInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DisassociateElasticIPOutput struct {
	metadataDisassociateElasticIPOutput `json:"-" xml:"-"`
}

type metadataDisassociateElasticIPOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes an Amazon EBS volume. This data type maps directly to the Amazon
// EC2 EbsBlockDevice (http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EbsBlockDevice.html)
// data type.
type EBSBlockDevice struct {
	// Whether the volume is deleted on instance termination.
	DeleteOnTermination *bool `type:"boolean"`

	// The number of I/O operations per second (IOPS) that the volume supports.
	// For more information, see EbsBlockDevice (http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EbsBlockDevice.html).
	IOPS *int64 `locationName:"Iops" type:"integer"`

	// The snapshot ID.
	SnapshotID *string `locationName:"SnapshotId" type:"string"`

	// The volume size, in GiB. For more information, see EbsBlockDevice (http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EbsBlockDevice.html).
	VolumeSize *int64 `type:"integer"`

	// The volume type. gp2 for General Purpose (SSD) volumes, io1 for Provisioned
	// IOPS (SSD) volumes, and standard for Magnetic volumes.
	VolumeType *string `type:"string"`

	metadataEBSBlockDevice `json:"-" xml:"-"`
}

type metadataEBSBlockDevice struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes an Elastic IP address.
type ElasticIP struct {
	// The domain.
	Domain *string `type:"string"`

	// The IP address.
	IP *string `locationName:"Ip" type:"string"`

	// The ID of the instance that the address is attached to.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	// The name.
	Name *string `type:"string"`

	// The AWS region. For more information, see Regions and Endpoints (http://docs.aws.amazon.com/general/latest/gr/rande.html).
	Region *string `type:"string"`

	metadataElasticIP `json:"-" xml:"-"`
}

type metadataElasticIP struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes an Elastic Load Balancing instance.
type ElasticLoadBalancer struct {
	// A list of Availability Zones.
	AvailabilityZones []*string `type:"list"`

	// The instance's public DNS name.
	DNSName *string `locationName:"DnsName" type:"string"`

	// A list of the EC2 instances that the Elastic Load Balancing instance is managing
	// traffic for.
	EC2InstanceIDs []*string `locationName:"Ec2InstanceIds" type:"list"`

	// The Elastic Load Balancing instance's name.
	ElasticLoadBalancerName *string `type:"string"`

	// The ID of the layer that the instance is attached to.
	LayerID *string `locationName:"LayerId" type:"string"`

	// The instance's AWS region.
	Region *string `type:"string"`

	// The ID of the stack that the instance is associated with.
	StackID *string `locationName:"StackId" type:"string"`

	// A list of subnet IDs, if the stack is running in a VPC.
	SubnetIDs []*string `locationName:"SubnetIds" type:"list"`

	// The VPC ID.
	VPCID *string `locationName:"VpcId" type:"string"`

	metadataElasticLoadBalancer `json:"-" xml:"-"`
}

type metadataElasticLoadBalancer struct {
	SDKShapeTraits bool `type:"structure"`
}

// Represents an app's environment variable.
type EnvironmentVariable struct {
	// (Required) The environment variable's name, which can consist of up to 64
	// characters and must be specified. The name can contain upper- and lowercase
	// letters, numbers, and underscores (_), but it must start with a letter or
	// underscore.
	Key *string `type:"string" required:"true"`

	// (Optional) Whether the variable's value will be returned by the DescribeApps
	// action. To conceal an environment variable's value, set Secure to true. DescribeApps
	// then returns *****FILTERED***** instead of the actual value. The default
	// value for Secure is false.
	Secure *bool `type:"boolean"`

	// (Optional) The environment variable's value, which can be left empty. If
	// you specify a value, it can contain up to 256 characters, which must all
	// be printable.
	Value *string `type:"string" required:"true"`

	metadataEnvironmentVariable `json:"-" xml:"-"`
}

type metadataEnvironmentVariable struct {
	SDKShapeTraits bool `type:"structure"`
}

type GetHostnameSuggestionInput struct {
	// The layer ID.
	LayerID *string `locationName:"LayerId" type:"string" required:"true"`

	metadataGetHostnameSuggestionInput `json:"-" xml:"-"`
}

type metadataGetHostnameSuggestionInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a GetHostnameSuggestion request.
type GetHostnameSuggestionOutput struct {
	// The generated host name.
	Hostname *string `type:"string"`

	// The layer ID.
	LayerID *string `locationName:"LayerId" type:"string"`

	metadataGetHostnameSuggestionOutput `json:"-" xml:"-"`
}

type metadataGetHostnameSuggestionOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type GrantAccessInput struct {
	// The instance's AWS OpsWorks ID.
	InstanceID *string `locationName:"InstanceId" type:"string" required:"true"`

	// The length of time (in minutes) that the grant is valid. When the grant expires
	// at the end of this period, the user will no longer be able to use the credentials
	// to log in. If the user is logged in at the time, he or she automatically
	// will be logged out.
	ValidForInMinutes *int64 `type:"integer"`

	metadataGrantAccessInput `json:"-" xml:"-"`
}

type metadataGrantAccessInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a GrantAccess request.
type GrantAccessOutput struct {
	// A TemporaryCredential object that contains the data needed to log in to the
	// instance by RDP clients, such as the Microsoft Remote Desktop Connection.
	TemporaryCredential *TemporaryCredential `type:"structure"`

	metadataGrantAccessOutput `json:"-" xml:"-"`
}

type metadataGrantAccessOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes an instance.
type Instance struct {
	// A custom AMI ID to be used to create the instance. The AMI should be based
	// on one of the standard AWS OpsWorks APIs: Amazon Linux, Ubuntu 12.04 LTS,
	// or Ubuntu 14.04 LTS. For more information, see Instances (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances.html)
	AMIID *string `locationName:"AmiId" type:"string"`

	// The instance architecture, "i386" or "x86_64".
	Architecture *string `type:"string"`

	// For load-based or time-based instances, the type.
	AutoScalingType *string `type:"string"`

	// The instance Availability Zone. For more information, see Regions and Endpoints
	// (http://docs.aws.amazon.com/general/latest/gr/rande.html).
	AvailabilityZone *string `type:"string"`

	// An array of BlockDeviceMapping objects that specify the instance's block
	// device mappings.
	BlockDeviceMappings []*BlockDeviceMapping `type:"list"`

	// The time that the instance was created.
	CreatedAt *string `type:"string"`

	// Whether this is an Amazon EBS-optimized instance.
	EBSOptimized *bool `locationName:"EbsOptimized" type:"boolean"`

	// The ID of the associated Amazon EC2 instance.
	EC2InstanceID *string `locationName:"Ec2InstanceId" type:"string"`

	// The instance Elastic IP address  (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html).
	ElasticIP *string `locationName:"ElasticIp" type:"string"`

	// The instance host name.
	Hostname *string `type:"string"`

	// For registered instances, the infrastructure class: ec2 or on-premises
	InfrastructureClass *string `type:"string"`

	// Whether to install operating system and package updates when the instance
	// boots. The default value is true. If this value is set to false, you must
	// then update your instances manually by using CreateDeployment to run the
	// update_dependencies stack command or manually running yum (Amazon Linux)
	// or apt-get (Ubuntu) on the instances.
	//
	//  We strongly recommend using the default value of true, to ensure that your
	// instances have the latest security updates.
	InstallUpdatesOnBoot *bool `type:"boolean"`

	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	// The ARN of the instance's IAM profile. For more information about IAM ARNs,
	// see Using Identifiers (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html).
	InstanceProfileARN *string `locationName:"InstanceProfileArn" type:"string"`

	// The instance type. AWS OpsWorks supports all instance types except Cluster
	// Compute, Cluster GPU, and High Memory Cluster. For more information, see
	// Instance Families and Types (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html).
	// The parameter values that specify the various types are in the API Name column
	// of the Available Instance Types table.
	InstanceType *string `type:"string"`

	// The ID of the last service error. For more information, call DescribeServiceErrors.
	LastServiceErrorID *string `locationName:"LastServiceErrorId" type:"string"`

	// An array containing the instance layer IDs.
	LayerIDs []*string `locationName:"LayerIds" type:"list"`

	// The instance's operating system.
	Os *string `type:"string"`

	// The instance private DNS name.
	PrivateDNS *string `locationName:"PrivateDns" type:"string"`

	// The instance private IP address.
	PrivateIP *string `locationName:"PrivateIp" type:"string"`

	// The instance public DNS name.
	PublicDNS *string `locationName:"PublicDns" type:"string"`

	// The instance public IP address.
	PublicIP *string `locationName:"PublicIp" type:"string"`

	// For registered instances, who performed the registration.
	RegisteredBy *string `type:"string"`

	// The instance's reported AWS OpsWorks agent version.
	ReportedAgentVersion *string `type:"string"`

	// For registered instances, the reported operating system.
	ReportedOs *ReportedOs `type:"structure"`

	// The instance's root device type. For more information, see Storage for the
	// Root Device (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html#storage-for-the-root-device).
	RootDeviceType *string `type:"string"`

	// The root device volume ID.
	RootDeviceVolumeID *string `locationName:"RootDeviceVolumeId" type:"string"`

	// The SSH key's DSA fingerprint.
	SSHHostDSAKeyFingerprint *string `locationName:"SshHostDsaKeyFingerprint" type:"string"`

	// The SSH key's RSA fingerprint.
	SSHHostRSAKeyFingerprint *string `locationName:"SshHostRsaKeyFingerprint" type:"string"`

	// The instance's Amazon EC2 key pair name.
	SSHKeyName *string `locationName:"SshKeyName" type:"string"`

	// An array containing the instance security group IDs.
	SecurityGroupIDs []*string `locationName:"SecurityGroupIds" type:"list"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string"`

	// The instance status:
	//
	//   booting   connection_lost   online   pending   rebooting   requested
	//  running_setup   setup_failed   shutting_down   start_failed   stopped
	// stopping   terminated   terminating
	Status *string `type:"string"`

	// The instance's subnet ID, if the stack is running in a VPC.
	SubnetID *string `locationName:"SubnetId" type:"string"`

	// The instance's virtualization type, paravirtual or hvm.
	VirtualizationType *string `type:"string"`

	metadataInstance `json:"-" xml:"-"`
}

type metadataInstance struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains a description of an Amazon EC2 instance from the Amazon EC2 metadata
// service. For more information, see Instance Metadata and User Data (http://docs.aws.amazon.com/sdkfornet/latest/apidocs/Index.html).
type InstanceIdentity struct {
	// A JSON document that contains the metadata.
	Document *string `type:"string"`

	// A signature that can be used to verify the document's accuracy and authenticity.
	Signature *string `type:"string"`

	metadataInstanceIdentity `json:"-" xml:"-"`
}

type metadataInstanceIdentity struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes how many instances a stack has for each status.
type InstancesCount struct {
	// The number of instances in the Assigning state.
	Assigning *int64 `type:"integer"`

	// The number of instances with booting status.
	Booting *int64 `type:"integer"`

	// The number of instances with connection_lost status.
	ConnectionLost *int64 `type:"integer"`

	// The number of instances in the Deregistering state.
	Deregistering *int64 `type:"integer"`

	// The number of instances with online status.
	Online *int64 `type:"integer"`

	// The number of instances with pending status.
	Pending *int64 `type:"integer"`

	// The number of instances with rebooting status.
	Rebooting *int64 `type:"integer"`

	// The number of instances in the Registered state.
	Registered *int64 `type:"integer"`

	// The number of instances in the Registering state.
	Registering *int64 `type:"integer"`

	// The number of instances with requested status.
	Requested *int64 `type:"integer"`

	// The number of instances with running_setup status.
	RunningSetup *int64 `type:"integer"`

	// The number of instances with setup_failed status.
	SetupFailed *int64 `type:"integer"`

	// The number of instances with shutting_down status.
	ShuttingDown *int64 `type:"integer"`

	// The number of instances with start_failed status.
	StartFailed *int64 `type:"integer"`

	// The number of instances with stopped status.
	Stopped *int64 `type:"integer"`

	// The number of instances with stopping status.
	Stopping *int64 `type:"integer"`

	// The number of instances with terminated status.
	Terminated *int64 `type:"integer"`

	// The number of instances with terminating status.
	Terminating *int64 `type:"integer"`

	// The number of instances in the Unassigning state.
	Unassigning *int64 `type:"integer"`

	metadataInstancesCount `json:"-" xml:"-"`
}

type metadataInstancesCount struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes a layer.
type Layer struct {
	// The layer attributes.
	//
	// For the HaproxyStatsPassword, MysqlRootPassword, and GangliaPassword attributes,
	// AWS OpsWorks returns *****FILTERED***** instead of the actual value
	Attributes map[string]*string `type:"map"`

	// Whether to automatically assign an Elastic IP address (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html)
	// to the layer's instances. For more information, see How to Edit a Layer (http://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-basics-edit.html).
	AutoAssignElasticIPs *bool `locationName:"AutoAssignElasticIps" type:"boolean"`

	// For stacks that are running in a VPC, whether to automatically assign a public
	// IP address to the layer's instances. For more information, see How to Edit
	// a Layer (http://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-basics-edit.html).
	AutoAssignPublicIPs *bool `locationName:"AutoAssignPublicIps" type:"boolean"`

	// Date when the layer was created.
	CreatedAt *string `type:"string"`

	// The ARN of the default IAM profile to be used for the layer's EC2 instances.
	// For more information about IAM ARNs, see Using Identifiers (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html).
	CustomInstanceProfileARN *string `locationName:"CustomInstanceProfileArn" type:"string"`

	// A LayerCustomRecipes object that specifies the layer's custom recipes.
	CustomRecipes *Recipes `type:"structure"`

	// An array containing the layer's custom security group IDs.
	CustomSecurityGroupIDs []*string `locationName:"CustomSecurityGroupIds" type:"list"`

	// AWS OpsWorks supports five lifecycle events, setup, configuration, deploy,
	// undeploy, and shutdown. For each layer, AWS OpsWorks runs a set of standard
	// recipes for each event. In addition, you can provide custom recipes for any
	// or all layers and events. AWS OpsWorks runs custom event recipes after the
	// standard recipes. LayerCustomRecipes specifies the custom recipes for a particular
	// layer to be run in response to each of the five events.
	//
	// To specify a recipe, use the cookbook's directory name in the repository
	// followed by two colons and the recipe name, which is the recipe's file name
	// without the .rb extension. For example: phpapp2::dbsetup specifies the dbsetup.rb
	// recipe in the repository's phpapp2 folder.
	DefaultRecipes *Recipes `type:"structure"`

	// An array containing the layer's security group names.
	DefaultSecurityGroupNames []*string `type:"list"`

	// Whether auto healing is disabled for the layer.
	EnableAutoHealing *bool `type:"boolean"`

	// Whether to install operating system and package updates when the instance
	// boots. The default value is true. If this value is set to false, you must
	// then update your instances manually by using CreateDeployment to run the
	// update_dependencies stack command or manually running yum (Amazon Linux)
	// or apt-get (Ubuntu) on the instances.
	//
	//  We strongly recommend using the default value of true, to ensure that your
	// instances have the latest security updates.
	InstallUpdatesOnBoot *bool `type:"boolean"`

	// The layer ID.
	LayerID *string `locationName:"LayerId" type:"string"`

	// A LifeCycleEventConfiguration object that specifies the Shutdown event configuration.
	LifecycleEventConfiguration *LifecycleEventConfiguration `type:"structure"`

	// The layer name.
	Name *string `type:"string"`

	// An array of Package objects that describe the layer's packages.
	Packages []*string `type:"list"`

	// The layer short name.
	Shortname *string `type:"string"`

	// The layer stack ID.
	StackID *string `locationName:"StackId" type:"string"`

	// The layer type.
	Type *string `type:"string"`

	// Whether the layer uses Amazon EBS-optimized instances.
	UseEBSOptimizedInstances *bool `locationName:"UseEbsOptimizedInstances" type:"boolean"`

	// A VolumeConfigurations object that describes the layer's Amazon EBS volumes.
	VolumeConfigurations []*VolumeConfiguration `type:"list"`

	metadataLayer `json:"-" xml:"-"`
}

type metadataLayer struct {
	SDKShapeTraits bool `type:"structure"`
}

// Specifies the lifecycle event configuration
type LifecycleEventConfiguration struct {
	// A ShutdownEventConfiguration object that specifies the Shutdown event configuration.
	Shutdown *ShutdownEventConfiguration `type:"structure"`

	metadataLifecycleEventConfiguration `json:"-" xml:"-"`
}

type metadataLifecycleEventConfiguration struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes a layer's load-based auto scaling configuration.
type LoadBasedAutoScalingConfiguration struct {
	// An AutoScalingThresholds object that describes the downscaling configuration,
	// which defines how and when AWS OpsWorks reduces the number of instances.
	DownScaling *AutoScalingThresholds `type:"structure"`

	// Whether load-based auto scaling is enabled for the layer.
	Enable *bool `type:"boolean"`

	// The layer ID.
	LayerID *string `locationName:"LayerId" type:"string"`

	// An AutoScalingThresholds object that describes the upscaling configuration,
	// which defines how and when AWS OpsWorks increases the number of instances.
	UpScaling *AutoScalingThresholds `type:"structure"`

	metadataLoadBasedAutoScalingConfiguration `json:"-" xml:"-"`
}

type metadataLoadBasedAutoScalingConfiguration struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes stack or user permissions.
type Permission struct {
	// Whether the user can use SSH.
	AllowSSH *bool `locationName:"AllowSsh" type:"boolean"`

	// Whether the user can use sudo.
	AllowSudo *bool `type:"boolean"`

	// The Amazon Resource Name (ARN) for an AWS Identity and Access Management
	// (IAM) role. For more information about IAM ARNs, see Using Identifiers (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html).
	IAMUserARN *string `locationName:"IamUserArn" type:"string"`

	// The user's permission level, which must be the following:
	//
	//   deny   show   deploy   manage   iam_only   For more information on the
	// permissions associated with these levels, see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html)
	Level *string `type:"string"`

	// A stack ID.
	StackID *string `locationName:"StackId" type:"string"`

	metadataPermission `json:"-" xml:"-"`
}

type metadataPermission struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes an instance's RAID array.
type RAIDArray struct {
	// The array's Availability Zone. For more information, see Regions and Endpoints
	// (http://docs.aws.amazon.com/general/latest/gr/rande.html).
	AvailabilityZone *string `type:"string"`

	// When the RAID array was created.
	CreatedAt *string `type:"string"`

	// The array's Linux device. For example /dev/mdadm0.
	Device *string `type:"string"`

	// For PIOPS volumes, the IOPS per disk.
	IOPS *int64 `locationName:"Iops" type:"integer"`

	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	// The array's mount point.
	MountPoint *string `type:"string"`

	// The array name.
	Name *string `type:"string"`

	// The number of disks in the array.
	NumberOfDisks *int64 `type:"integer"`

	// The array ID.
	RAIDArrayID *string `locationName:"RaidArrayId" type:"string"`

	// The RAID level (http://en.wikipedia.org/wiki/Standard_RAID_levels).
	RAIDLevel *int64 `locationName:"RaidLevel" type:"integer"`

	// The array's size.
	Size *int64 `type:"integer"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string"`

	// The volume type, standard or PIOPS.
	VolumeType *string `type:"string"`

	metadataRAIDArray `json:"-" xml:"-"`
}

type metadataRAIDArray struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes an Amazon RDS instance.
type RDSDBInstance struct {
	// The instance's address.
	Address *string `type:"string"`

	// The DB instance identifier.
	DBInstanceIdentifier *string `locationName:"DbInstanceIdentifier" type:"string"`

	// AWS OpsWorks returns *****FILTERED***** instead of the actual value.
	DBPassword *string `locationName:"DbPassword" type:"string"`

	// The master user name.
	DBUser *string `locationName:"DbUser" type:"string"`

	// The instance's database engine.
	Engine *string `type:"string"`

	// Set to true if AWS OpsWorks was unable to discover the Amazon RDS instance.
	// AWS OpsWorks attempts to discover the instance only once. If this value is
	// set to true, you must deregister the instance and then register it again.
	MissingOnRDS *bool `locationName:"MissingOnRds" type:"boolean"`

	// The instance's ARN.
	RDSDBInstanceARN *string `locationName:"RdsDbInstanceArn" type:"string"`

	// The instance's AWS region.
	Region *string `type:"string"`

	// The ID of the stack that the instance is registered with.
	StackID *string `locationName:"StackId" type:"string"`

	metadataRDSDBInstance `json:"-" xml:"-"`
}

type metadataRDSDBInstance struct {
	SDKShapeTraits bool `type:"structure"`
}

type RebootInstanceInput struct {
	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string" required:"true"`

	metadataRebootInstanceInput `json:"-" xml:"-"`
}

type metadataRebootInstanceInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type RebootInstanceOutput struct {
	metadataRebootInstanceOutput `json:"-" xml:"-"`
}

type metadataRebootInstanceOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// AWS OpsWorks supports five lifecycle events, setup, configuration, deploy,
// undeploy, and shutdown. For each layer, AWS OpsWorks runs a set of standard
// recipes for each event. In addition, you can provide custom recipes for any
// or all layers and events. AWS OpsWorks runs custom event recipes after the
// standard recipes. LayerCustomRecipes specifies the custom recipes for a particular
// layer to be run in response to each of the five events.
//
// To specify a recipe, use the cookbook's directory name in the repository
// followed by two colons and the recipe name, which is the recipe's file name
// without the .rb extension. For example: phpapp2::dbsetup specifies the dbsetup.rb
// recipe in the repository's phpapp2 folder.
type Recipes struct {
	// An array of custom recipe names to be run following a configure event.
	Configure []*string `type:"list"`

	// An array of custom recipe names to be run following a deploy event.
	Deploy []*string `type:"list"`

	// An array of custom recipe names to be run following a setup event.
	Setup []*string `type:"list"`

	// An array of custom recipe names to be run following a shutdown event.
	Shutdown []*string `type:"list"`

	// An array of custom recipe names to be run following a undeploy event.
	Undeploy []*string `type:"list"`

	metadataRecipes `json:"-" xml:"-"`
}

type metadataRecipes struct {
	SDKShapeTraits bool `type:"structure"`
}

type RegisterElasticIPInput struct {
	// The Elastic IP address.
	ElasticIP *string `locationName:"ElasticIp" type:"string" required:"true"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string" required:"true"`

	metadataRegisterElasticIPInput `json:"-" xml:"-"`
}

type metadataRegisterElasticIPInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a RegisterElasticIp request.
type RegisterElasticIPOutput struct {
	// The Elastic IP address.
	ElasticIP *string `locationName:"ElasticIp" type:"string"`

	metadataRegisterElasticIPOutput `json:"-" xml:"-"`
}

type metadataRegisterElasticIPOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type RegisterInstanceInput struct {
	// The instance's hostname.
	Hostname *string `type:"string"`

	// An InstanceIdentity object that contains the instance's identity.
	InstanceIdentity *InstanceIdentity `type:"structure"`

	// The instance's private IP address.
	PrivateIP *string `locationName:"PrivateIp" type:"string"`

	// The instance's public IP address.
	PublicIP *string `locationName:"PublicIp" type:"string"`

	// The instances public RSA key. This key is used to encrypt communication between
	// the instance and the service.
	RSAPublicKey *string `locationName:"RsaPublicKey" type:"string"`

	// The instances public RSA key fingerprint.
	RSAPublicKeyFingerprint *string `locationName:"RsaPublicKeyFingerprint" type:"string"`

	// The ID of the stack that the instance is to be registered with.
	StackID *string `locationName:"StackId" type:"string" required:"true"`

	metadataRegisterInstanceInput `json:"-" xml:"-"`
}

type metadataRegisterInstanceInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a RegisterInstanceResult request.
type RegisterInstanceOutput struct {
	// The registered instance's AWS OpsWorks ID.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	metadataRegisterInstanceOutput `json:"-" xml:"-"`
}

type metadataRegisterInstanceOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type RegisterRDSDBInstanceInput struct {
	// The database password.
	DBPassword *string `locationName:"DbPassword" type:"string" required:"true"`

	// The database's master user name.
	DBUser *string `locationName:"DbUser" type:"string" required:"true"`

	// The Amazon RDS instance's ARN.
	RDSDBInstanceARN *string `locationName:"RdsDbInstanceArn" type:"string" required:"true"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string" required:"true"`

	metadataRegisterRDSDBInstanceInput `json:"-" xml:"-"`
}

type metadataRegisterRDSDBInstanceInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type RegisterRDSDBInstanceOutput struct {
	metadataRegisterRDSDBInstanceOutput `json:"-" xml:"-"`
}

type metadataRegisterRDSDBInstanceOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type RegisterVolumeInput struct {
	// The Amazon EBS volume ID.
	EC2VolumeID *string `locationName:"Ec2VolumeId" type:"string"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string" required:"true"`

	metadataRegisterVolumeInput `json:"-" xml:"-"`
}

type metadataRegisterVolumeInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the response to a RegisterVolume request.
type RegisterVolumeOutput struct {
	// The volume ID.
	VolumeID *string `locationName:"VolumeId" type:"string"`

	metadataRegisterVolumeOutput `json:"-" xml:"-"`
}

type metadataRegisterVolumeOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// A registered instance's reported operating system.
type ReportedOs struct {
	// The operating system family.
	Family *string `type:"string"`

	// The operating system name.
	Name *string `type:"string"`

	// The operating system version.
	Version *string `type:"string"`

	metadataReportedOs `json:"-" xml:"-"`
}

type metadataReportedOs struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes an app's SSL configuration.
type SSLConfiguration struct {
	// The contents of the certificate's domain.crt file.
	Certificate *string `type:"string" required:"true"`

	// Optional. Can be used to specify an intermediate certificate authority key
	// or client authentication.
	Chain *string `type:"string"`

	// The private key; the contents of the certificate's domain.kex file.
	PrivateKey *string `type:"string" required:"true"`

	metadataSSLConfiguration `json:"-" xml:"-"`
}

type metadataSSLConfiguration struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes a user's SSH information.
type SelfUserProfile struct {
	// The user's IAM ARN.
	IAMUserARN *string `locationName:"IamUserArn" type:"string"`

	// The user's name.
	Name *string `type:"string"`

	// The user's SSH public key.
	SSHPublicKey *string `locationName:"SshPublicKey" type:"string"`

	// The user's SSH user name.
	SSHUsername *string `locationName:"SshUsername" type:"string"`

	metadataSelfUserProfile `json:"-" xml:"-"`
}

type metadataSelfUserProfile struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes an AWS OpsWorks service error.
type ServiceError struct {
	// When the error occurred.
	CreatedAt *string `type:"string"`

	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	// A message that describes the error.
	Message *string `type:"string"`

	// The error ID.
	ServiceErrorID *string `locationName:"ServiceErrorId" type:"string"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string"`

	// The error type.
	Type *string `type:"string"`

	metadataServiceError `json:"-" xml:"-"`
}

type metadataServiceError struct {
	SDKShapeTraits bool `type:"structure"`
}

type SetLoadBasedAutoScalingInput struct {
	// An AutoScalingThresholds object with the downscaling threshold configuration.
	// If the load falls below these thresholds for a specified amount of time,
	// AWS OpsWorks stops a specified number of instances.
	DownScaling *AutoScalingThresholds `type:"structure"`

	// Enables load-based auto scaling for the layer.
	Enable *bool `type:"boolean"`

	// The layer ID.
	LayerID *string `locationName:"LayerId" type:"string" required:"true"`

	// An AutoScalingThresholds object with the upscaling threshold configuration.
	// If the load exceeds these thresholds for a specified amount of time, AWS
	// OpsWorks starts a specified number of instances.
	UpScaling *AutoScalingThresholds `type:"structure"`

	metadataSetLoadBasedAutoScalingInput `json:"-" xml:"-"`
}

type metadataSetLoadBasedAutoScalingInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type SetLoadBasedAutoScalingOutput struct {
	metadataSetLoadBasedAutoScalingOutput `json:"-" xml:"-"`
}

type metadataSetLoadBasedAutoScalingOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type SetPermissionInput struct {
	// The user is allowed to use SSH to communicate with the instance.
	AllowSSH *bool `locationName:"AllowSsh" type:"boolean"`

	// The user is allowed to use sudo to elevate privileges.
	AllowSudo *bool `type:"boolean"`

	// The user's IAM ARN.
	IAMUserARN *string `locationName:"IamUserArn" type:"string" required:"true"`

	// The user's permission level, which must be set to one of the following strings.
	// You cannot set your own permissions level.
	//
	//   deny   show   deploy   manage   iam_only   For more information on the
	// permissions associated with these levels, see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html)
	Level *string `type:"string"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string" required:"true"`

	metadataSetPermissionInput `json:"-" xml:"-"`
}

type metadataSetPermissionInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type SetPermissionOutput struct {
	metadataSetPermissionOutput `json:"-" xml:"-"`
}

type metadataSetPermissionOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type SetTimeBasedAutoScalingInput struct {
	// An AutoScalingSchedule with the instance schedule.
	AutoScalingSchedule *WeeklyAutoScalingSchedule `type:"structure"`

	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string" required:"true"`

	metadataSetTimeBasedAutoScalingInput `json:"-" xml:"-"`
}

type metadataSetTimeBasedAutoScalingInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type SetTimeBasedAutoScalingOutput struct {
	metadataSetTimeBasedAutoScalingOutput `json:"-" xml:"-"`
}

type metadataSetTimeBasedAutoScalingOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The Shutdown event configuration.
type ShutdownEventConfiguration struct {
	// Whether to enable Elastic Load Balancing connection draining. For more information,
	// see Connection Draining (http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/TerminologyandKeyConcepts.html#conn-drain)
	DelayUntilELBConnectionsDrained *bool `locationName:"DelayUntilElbConnectionsDrained" type:"boolean"`

	// The time, in seconds, that AWS OpsWorks will wait after triggering a Shutdown
	// event before shutting down an instance.
	ExecutionTimeout *int64 `type:"integer"`

	metadataShutdownEventConfiguration `json:"-" xml:"-"`
}

type metadataShutdownEventConfiguration struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the information required to retrieve an app or cookbook from a repository.
// For more information, see Creating Apps (http://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html)
// or Custom Recipes and Cookbooks (http://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook.html).
type Source struct {
	// When included in a request, the parameter depends on the repository type.
	//
	//  For Amazon S3 bundles, set Password to the appropriate IAM secret access
	// key. For HTTP bundles and Subversion repositories, set Password to the password.
	//  For more information on how to safely handle IAM credentials, see .
	//
	// In responses, AWS OpsWorks returns *****FILTERED***** instead of the actual
	// value.
	Password *string `type:"string"`

	// The application's version. AWS OpsWorks enables you to easily deploy new
	// versions of an application. One of the simplest approaches is to have branches
	// or revisions in your repository that represent different versions that can
	// potentially be deployed.
	Revision *string `type:"string"`

	// In requests, the repository's SSH key.
	//
	// In responses, AWS OpsWorks returns *****FILTERED***** instead of the actual
	// value.
	SSHKey *string `locationName:"SshKey" type:"string"`

	// The repository type.
	Type *string `type:"string"`

	// The source URL.
	URL *string `locationName:"Url" type:"string"`

	// This parameter depends on the repository type.
	//
	//  For Amazon S3 bundles, set Username to the appropriate IAM access key ID.
	// For HTTP bundles, Git repositories, and Subversion repositories, set Username
	// to the user name.
	Username *string `type:"string"`

	metadataSource `json:"-" xml:"-"`
}

type metadataSource struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes a stack.
type Stack struct {
	// The stack's ARN.
	ARN *string `locationName:"Arn" type:"string"`

	// The stack's attributes.
	Attributes map[string]*string `type:"map"`

	// A ChefConfiguration object that specifies whether to enable Berkshelf and
	// the Berkshelf version. For more information, see Create a New Stack (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-creating.html).
	ChefConfiguration *ChefConfiguration `type:"structure"`

	// The configuration manager.
	ConfigurationManager *StackConfigurationManager `type:"structure"`

	// Date when the stack was created.
	CreatedAt *string `type:"string"`

	// Contains the information required to retrieve an app or cookbook from a repository.
	// For more information, see Creating Apps (http://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html)
	// or Custom Recipes and Cookbooks (http://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook.html).
	CustomCookbooksSource *Source `type:"structure"`

	// A string that contains user-defined, custom JSON. It can be used to override
	// the corresponding default stack configuration JSON values or to pass data
	// to recipes. The string should be in the following format and must escape
	// characters such as '"'.:
	//
	//  "{\"key1\": \"value1\", \"key2\": \"value2\",...}"
	//
	// For more information on custom JSON, see Use Custom JSON to Modify the Stack
	// Configuration Attributes (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-json.html).
	CustomJSON *string `locationName:"CustomJson" type:"string"`

	// The stack's default Availability Zone. For more information, see Regions
	// and Endpoints (http://docs.aws.amazon.com/general/latest/gr/rande.html).
	DefaultAvailabilityZone *string `type:"string"`

	// The ARN of an IAM profile that is the default profile for all of the stack's
	// EC2 instances. For more information about IAM ARNs, see Using Identifiers
	// (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html).
	DefaultInstanceProfileARN *string `locationName:"DefaultInstanceProfileArn" type:"string"`

	// The stack's default operating system.
	DefaultOs *string `type:"string"`

	// The default root device type. This value is used by default for all instances
	// in the stack, but you can override it when you create an instance. For more
	// information, see Storage for the Root Device (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html#storage-for-the-root-device).
	DefaultRootDeviceType *string `type:"string"`

	// A default Amazon EC2 key pair for the stack's instances. You can override
	// this value when you create or update an instance.
	DefaultSSHKeyName *string `locationName:"DefaultSshKeyName" type:"string"`

	// The default subnet ID, if the stack is running in a VPC.
	DefaultSubnetID *string `locationName:"DefaultSubnetId" type:"string"`

	// The stack host name theme, with spaces replaced by underscores.
	HostnameTheme *string `type:"string"`

	// The stack name.
	Name *string `type:"string"`

	// The stack AWS region, such as "us-east-1". For more information about AWS
	// regions, see Regions and Endpoints (http://docs.aws.amazon.com/general/latest/gr/rande.html).
	Region *string `type:"string"`

	// The stack AWS Identity and Access Management (IAM) role.
	ServiceRoleARN *string `locationName:"ServiceRoleArn" type:"string"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string"`

	// Whether the stack uses custom cookbooks.
	UseCustomCookbooks *bool `type:"boolean"`

	// Whether the stack automatically associates the AWS OpsWorks built-in security
	// groups with the stack's layers.
	UseOpsWorksSecurityGroups *bool `locationName:"UseOpsworksSecurityGroups" type:"boolean"`

	// The VPC ID, if the stack is running in a VPC.
	VPCID *string `locationName:"VpcId" type:"string"`

	metadataStack `json:"-" xml:"-"`
}

type metadataStack struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes the configuration manager.
type StackConfigurationManager struct {
	// The name. This parameter must be set to "Chef".
	Name *string `type:"string"`

	// The Chef version. This parameter must be set to 0.9, 11.4, or 11.10. The
	// default value is 11.4.
	Version *string `type:"string"`

	metadataStackConfigurationManager `json:"-" xml:"-"`
}

type metadataStackConfigurationManager struct {
	SDKShapeTraits bool `type:"structure"`
}

// Summarizes the number of layers, instances, and apps in a stack.
type StackSummary struct {
	// The stack's ARN.
	ARN *string `locationName:"Arn" type:"string"`

	// The number of apps.
	AppsCount *int64 `type:"integer"`

	// An InstancesCount object with the number of instances in each status.
	InstancesCount *InstancesCount `type:"structure"`

	// The number of layers.
	LayersCount *int64 `type:"integer"`

	// The stack name.
	Name *string `type:"string"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string"`

	metadataStackSummary `json:"-" xml:"-"`
}

type metadataStackSummary struct {
	SDKShapeTraits bool `type:"structure"`
}

type StartInstanceInput struct {
	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string" required:"true"`

	metadataStartInstanceInput `json:"-" xml:"-"`
}

type metadataStartInstanceInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type StartInstanceOutput struct {
	metadataStartInstanceOutput `json:"-" xml:"-"`
}

type metadataStartInstanceOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type StartStackInput struct {
	// The stack ID.
	StackID *string `locationName:"StackId" type:"string" required:"true"`

	metadataStartStackInput `json:"-" xml:"-"`
}

type metadataStartStackInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type StartStackOutput struct {
	metadataStartStackOutput `json:"-" xml:"-"`
}

type metadataStartStackOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type StopInstanceInput struct {
	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string" required:"true"`

	metadataStopInstanceInput `json:"-" xml:"-"`
}

type metadataStopInstanceInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type StopInstanceOutput struct {
	metadataStopInstanceOutput `json:"-" xml:"-"`
}

type metadataStopInstanceOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type StopStackInput struct {
	// The stack ID.
	StackID *string `locationName:"StackId" type:"string" required:"true"`

	metadataStopStackInput `json:"-" xml:"-"`
}

type metadataStopStackInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type StopStackOutput struct {
	metadataStopStackOutput `json:"-" xml:"-"`
}

type metadataStopStackOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Contains the data needed by RDP clients such as the Microsoft Remote Desktop
// Connection to log in to the instance.
type TemporaryCredential struct {
	// The instance's AWS OpsWorks ID.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	// The password.
	Password *string `type:"string"`

	// The user name.
	Username *string `type:"string"`

	// The length of time (in minutes) that the grant is valid. When the grant expires,
	// at the end of this period, the user will no longer be able to use the credentials
	// to log in. If they are logged in at the time, they will be automatically
	// logged out.
	ValidForInMinutes *int64 `type:"integer"`

	metadataTemporaryCredential `json:"-" xml:"-"`
}

type metadataTemporaryCredential struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes an instance's time-based auto scaling configuration.
type TimeBasedAutoScalingConfiguration struct {
	// A WeeklyAutoScalingSchedule object with the instance schedule.
	AutoScalingSchedule *WeeklyAutoScalingSchedule `type:"structure"`

	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	metadataTimeBasedAutoScalingConfiguration `json:"-" xml:"-"`
}

type metadataTimeBasedAutoScalingConfiguration struct {
	SDKShapeTraits bool `type:"structure"`
}

type UnassignInstanceInput struct {
	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string" required:"true"`

	metadataUnassignInstanceInput `json:"-" xml:"-"`
}

type metadataUnassignInstanceInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UnassignInstanceOutput struct {
	metadataUnassignInstanceOutput `json:"-" xml:"-"`
}

type metadataUnassignInstanceOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UnassignVolumeInput struct {
	// The volume ID.
	VolumeID *string `locationName:"VolumeId" type:"string" required:"true"`

	metadataUnassignVolumeInput `json:"-" xml:"-"`
}

type metadataUnassignVolumeInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UnassignVolumeOutput struct {
	metadataUnassignVolumeOutput `json:"-" xml:"-"`
}

type metadataUnassignVolumeOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateAppInput struct {
	// The app ID.
	AppID *string `locationName:"AppId" type:"string" required:"true"`

	// A Source object that specifies the app repository.
	AppSource *Source `type:"structure"`

	// One or more user-defined key/value pairs to be added to the stack attributes.
	Attributes map[string]*string `type:"map"`

	// The app's data sources.
	DataSources []*DataSource `type:"list"`

	// A description of the app.
	Description *string `type:"string"`

	// The app's virtual host settings, with multiple domains separated by commas.
	// For example: 'www.example.com, example.com'
	Domains []*string `type:"list"`

	// Whether SSL is enabled for the app.
	EnableSSL *bool `locationName:"EnableSsl" type:"boolean"`

	// An array of EnvironmentVariable objects that specify environment variables
	// to be associated with the app. After you deploy the app, these variables
	// are defined on the associated app server instances.For more information,
	// see  Environment Variables (http://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html#workingapps-creating-environment).
	//
	//  There is no specific limit on the number of environment variables. However,
	// the size of the associated data structure - which includes the variables'
	// names, values, and protected flag values - cannot exceed 10 KB (10240 Bytes).
	// This limit should accommodate most if not all use cases. Exceeding it will
	// cause an exception with the message, "Environment: is too large (maximum
	// is 10KB)."
	//
	// This parameter is supported only by Chef 11.10 stacks. If you have specified
	// one or more environment variables, you cannot modify the stack's Chef version.
	Environment []*EnvironmentVariable `type:"list"`

	// The app name.
	Name *string `type:"string"`

	// An SslConfiguration object with the SSL configuration.
	SSLConfiguration *SSLConfiguration `locationName:"SslConfiguration" type:"structure"`

	// The app type.
	Type *string `type:"string"`

	metadataUpdateAppInput `json:"-" xml:"-"`
}

type metadataUpdateAppInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateAppOutput struct {
	metadataUpdateAppOutput `json:"-" xml:"-"`
}

type metadataUpdateAppOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateElasticIPInput struct {
	// The address.
	ElasticIP *string `locationName:"ElasticIp" type:"string" required:"true"`

	// The new name.
	Name *string `type:"string"`

	metadataUpdateElasticIPInput `json:"-" xml:"-"`
}

type metadataUpdateElasticIPInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateElasticIPOutput struct {
	metadataUpdateElasticIPOutput `json:"-" xml:"-"`
}

type metadataUpdateElasticIPOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateInstanceInput struct {
	// A custom AMI ID to be used to create the instance. The AMI should be based
	// on one of the standard AWS OpsWorks AMIs: Amazon Linux, Ubuntu 12.04 LTS,
	// or Ubuntu 14.04 LTS. For more information, see Instances (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances.html)
	//
	// If you specify a custom AMI, you must set Os to Custom.
	AMIID *string `locationName:"AmiId" type:"string"`

	// The instance architecture. Instance types do not necessarily support both
	// architectures. For a list of the architectures that are supported by the
	// different instance types, see Instance Families and Types (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html).
	Architecture *string `type:"string"`

	// For load-based or time-based instances, the type. Windows stacks can use
	// only time-based instances.
	AutoScalingType *string `type:"string"`

	// Whether this is an Amazon EBS-optimized instance.
	EBSOptimized *bool `locationName:"EbsOptimized" type:"boolean"`

	// The instance host name.
	Hostname *string `type:"string"`

	// Whether to install operating system and package updates when the instance
	// boots. The default value is true. To control when updates are installed,
	// set this value to false. You must then update your instances manually by
	// using CreateDeployment to run the update_dependencies stack command or manually
	// running yum (Amazon Linux) or apt-get (Ubuntu) on the instances.
	//
	//  We strongly recommend using the default value of true, to ensure that your
	// instances have the latest security updates.
	InstallUpdatesOnBoot *bool `type:"boolean"`

	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string" required:"true"`

	// The instance type. AWS OpsWorks supports all instance types except Cluster
	// Compute, Cluster GPU, and High Memory Cluster. For more information, see
	// Instance Families and Types (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html).
	// The parameter values that you use to specify the various types are in the
	// API Name column of the Available Instance Types table.
	InstanceType *string `type:"string"`

	// The instance's layer IDs.
	LayerIDs []*string `locationName:"LayerIds" type:"list"`

	// The instance's operating system, which must be set to one of the following.
	//
	// For Windows stacks: Microsoft Windows Server 2012 R2.
	//
	// For Linux stacks:
	//
	//  Standard operating systems: an Amazon Linux version such as Amazon Linux
	// 2014.09, Ubuntu 12.04 LTS, or Ubuntu 14.04 LTS. Custom AMIs: Custom   The
	// default option is the current Amazon Linux version. If you set this parameter
	// to Custom, you must use the CreateInstance action's AmiId parameter to specify
	// the custom AMI that you want to use. For more information on the standard
	// operating systems, see Operating Systems (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-os.html)For
	// more information on how to use custom AMIs with OpsWorks, see Using Custom
	// AMIs (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-custom-ami.html).
	Os *string `type:"string"`

	// The instance's Amazon EC2 key name.
	SSHKeyName *string `locationName:"SshKeyName" type:"string"`

	metadataUpdateInstanceInput `json:"-" xml:"-"`
}

type metadataUpdateInstanceInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateInstanceOutput struct {
	metadataUpdateInstanceOutput `json:"-" xml:"-"`
}

type metadataUpdateInstanceOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateLayerInput struct {
	// One or more user-defined key/value pairs to be added to the stack attributes.
	Attributes map[string]*string `type:"map"`

	// Whether to automatically assign an Elastic IP address (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html)
	// to the layer's instances. For more information, see How to Edit a Layer (http://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-basics-edit.html).
	AutoAssignElasticIPs *bool `locationName:"AutoAssignElasticIps" type:"boolean"`

	// For stacks that are running in a VPC, whether to automatically assign a public
	// IP address to the layer's instances. For more information, see How to Edit
	// a Layer (http://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-basics-edit.html).
	AutoAssignPublicIPs *bool `locationName:"AutoAssignPublicIps" type:"boolean"`

	// The ARN of an IAM profile to be used for all of the layer's EC2 instances.
	// For more information about IAM ARNs, see Using Identifiers (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html).
	CustomInstanceProfileARN *string `locationName:"CustomInstanceProfileArn" type:"string"`

	// A LayerCustomRecipes object that specifies the layer's custom recipes.
	CustomRecipes *Recipes `type:"structure"`

	// An array containing the layer's custom security group IDs.
	CustomSecurityGroupIDs []*string `locationName:"CustomSecurityGroupIds" type:"list"`

	// Whether to disable auto healing for the layer.
	EnableAutoHealing *bool `type:"boolean"`

	// Whether to install operating system and package updates when the instance
	// boots. The default value is true. To control when updates are installed,
	// set this value to false. You must then update your instances manually by
	// using CreateDeployment to run the update_dependencies stack command or manually
	// running yum (Amazon Linux) or apt-get (Ubuntu) on the instances.
	//
	//  We strongly recommend using the default value of true, to ensure that your
	// instances have the latest security updates.
	InstallUpdatesOnBoot *bool `type:"boolean"`

	// The layer ID.
	LayerID *string `locationName:"LayerId" type:"string" required:"true"`

	LifecycleEventConfiguration *LifecycleEventConfiguration `type:"structure"`

	// The layer name, which is used by the console.
	Name *string `type:"string"`

	// An array of Package objects that describe the layer's packages.
	Packages []*string `type:"list"`

	// For custom layers only, use this parameter to specify the layer's short name,
	// which is used internally by AWS OpsWorksand by Chef. The short name is also
	// used as the name for the directory where your app files are installed. It
	// can have a maximum of 200 characters and must be in the following format:
	// /\A[a-z0-9\-\_\.]+\Z/.
	//
	// The built-in layers' short names are defined by AWS OpsWorks. For more information,
	// see the Layer Reference (http://docs.aws.amazon.com/opsworks/latest/userguide/layers.html)
	Shortname *string `type:"string"`

	// Whether to use Amazon EBS-optimized instances.
	UseEBSOptimizedInstances *bool `locationName:"UseEbsOptimizedInstances" type:"boolean"`

	// A VolumeConfigurations object that describes the layer's Amazon EBS volumes.
	VolumeConfigurations []*VolumeConfiguration `type:"list"`

	metadataUpdateLayerInput `json:"-" xml:"-"`
}

type metadataUpdateLayerInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateLayerOutput struct {
	metadataUpdateLayerOutput `json:"-" xml:"-"`
}

type metadataUpdateLayerOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateMyUserProfileInput struct {
	// The user's SSH public key.
	SSHPublicKey *string `locationName:"SshPublicKey" type:"string"`

	metadataUpdateMyUserProfileInput `json:"-" xml:"-"`
}

type metadataUpdateMyUserProfileInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateMyUserProfileOutput struct {
	metadataUpdateMyUserProfileOutput `json:"-" xml:"-"`
}

type metadataUpdateMyUserProfileOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateRDSDBInstanceInput struct {
	// The database password.
	DBPassword *string `locationName:"DbPassword" type:"string"`

	// The master user name.
	DBUser *string `locationName:"DbUser" type:"string"`

	// The Amazon RDS instance's ARN.
	RDSDBInstanceARN *string `locationName:"RdsDbInstanceArn" type:"string" required:"true"`

	metadataUpdateRDSDBInstanceInput `json:"-" xml:"-"`
}

type metadataUpdateRDSDBInstanceInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateRDSDBInstanceOutput struct {
	metadataUpdateRDSDBInstanceOutput `json:"-" xml:"-"`
}

type metadataUpdateRDSDBInstanceOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateStackInput struct {
	// One or more user-defined key/value pairs to be added to the stack attributes.
	Attributes map[string]*string `type:"map"`

	// A ChefConfiguration object that specifies whether to enable Berkshelf and
	// the Berkshelf version on Chef 11.10 stacks. For more information, see Create
	// a New Stack (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-creating.html).
	ChefConfiguration *ChefConfiguration `type:"structure"`

	// The configuration manager. When you clone a stack we recommend that you use
	// the configuration manager to specify the Chef version, 0.9, 11.4, or 11.10.
	// The default value is currently 11.4.
	ConfigurationManager *StackConfigurationManager `type:"structure"`

	// Contains the information required to retrieve an app or cookbook from a repository.
	// For more information, see Creating Apps (http://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html)
	// or Custom Recipes and Cookbooks (http://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook.html).
	CustomCookbooksSource *Source `type:"structure"`

	// A string that contains user-defined, custom JSON. It can be used to override
	// the corresponding default stack configuration JSON values or to pass data
	// to recipes. The string should be in the following format and must escape
	// characters such as '"'.:
	//
	//  "{\"key1\": \"value1\", \"key2\": \"value2\",...}"
	//
	// For more information on custom JSON, see Use Custom JSON to Modify the Stack
	// Configuration Attributes (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-json.html).
	CustomJSON *string `locationName:"CustomJson" type:"string"`

	// The stack's default Availability Zone, which must be in the specified region.
	// For more information, see Regions and Endpoints (http://docs.aws.amazon.com/general/latest/gr/rande.html).
	// If you also specify a value for DefaultSubnetId, the subnet must be in the
	// same zone. For more information, see CreateStack.
	DefaultAvailabilityZone *string `type:"string"`

	// The ARN of an IAM profile that is the default profile for all of the stack's
	// EC2 instances. For more information about IAM ARNs, see Using Identifiers
	// (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html).
	DefaultInstanceProfileARN *string `locationName:"DefaultInstanceProfileArn" type:"string"`

	// The stack's operating system, which must be set to one of the following.
	//
	//  Standard Linux operating systems: an Amazon Linux version such as Amazon
	// Linux 2014.09, Ubuntu 12.04 LTS, or Ubuntu 14.04 LTS. Custom Linux AMIs:
	// Custom. You specify the custom AMI you want to use when you create instances.
	// Microsoft Windows Server 2012 R2.   The default option is the current Amazon
	// Linux version.
	DefaultOs *string `type:"string"`

	// The default root device type. This value is used by default for all instances
	// in the stack, but you can override it when you create an instance. For more
	// information, see Storage for the Root Device (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html#storage-for-the-root-device).
	DefaultRootDeviceType *string `type:"string"`

	// A default Amazon EC2 key pair name. The default value is none. If you specify
	// a key pair name, AWS OpsWorks installs the public key on the instance and
	// you can use the private key with an SSH client to log in to the instance.
	// For more information, see  Using SSH to Communicate with an Instance (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-ssh.html)
	// and  Managing SSH Access (http://docs.aws.amazon.com/opsworks/latest/userguide/security-ssh-access.html).
	// You can override this setting by specifying a different key pair, or no key
	// pair, when you  create an instance (http://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-add.html).
	DefaultSSHKeyName *string `locationName:"DefaultSshKeyName" type:"string"`

	// The stack's default VPC subnet ID. This parameter is required if you specify
	// a value for the VpcId parameter. All instances are launched into this subnet
	// unless you specify otherwise when you create the instance. If you also specify
	// a value for DefaultAvailabilityZone, the subnet must be in that zone. For
	// information on default values and when this parameter is required, see the
	// VpcId parameter description.
	DefaultSubnetID *string `locationName:"DefaultSubnetId" type:"string"`

	// The stack's new host name theme, with spaces are replaced by underscores.
	// The theme is used to generate host names for the stack's instances. By default,
	// HostnameTheme is set to Layer_Dependent, which creates host names by appending
	// integers to the layer's short name. The other themes are:
	//
	//   Baked_Goods   Clouds   Europe_Cities   Fruits   Greek_Deities   Legendary_creatures_from_Japan
	//   Planets_and_Moons   Roman_Deities   Scottish_Islands   US_Cities   Wild_Cats
	//   To obtain a generated host name, call GetHostNameSuggestion, which returns
	// a host name based on the current theme.
	HostnameTheme *string `type:"string"`

	// The stack's new name.
	Name *string `type:"string"`

	// The stack AWS Identity and Access Management (IAM) role, which allows AWS
	// OpsWorks to work with AWS resources on your behalf. You must set this parameter
	// to the Amazon Resource Name (ARN) for an existing IAM role. For more information
	// about IAM ARNs, see Using Identifiers (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html).
	//
	//  You must set this parameter to a valid service role ARN or the action will
	// fail; there is no default value. You can specify the stack's current service
	// role ARN, if you prefer, but you must do so explicitly.
	ServiceRoleARN *string `locationName:"ServiceRoleArn" type:"string"`

	// The stack ID.
	StackID *string `locationName:"StackId" type:"string" required:"true"`

	// Whether the stack uses custom cookbooks.
	UseCustomCookbooks *bool `type:"boolean"`

	// Whether to associate the AWS OpsWorks built-in security groups with the stack's
	// layers.
	//
	// AWS OpsWorks provides a standard set of built-in security groups, one for
	// each layer, which are associated with layers by default. UseOpsworksSecurityGroups
	// allows you to instead provide your own custom security groups. UseOpsworksSecurityGroups
	// has the following settings:
	//
	//  True - AWS OpsWorks automatically associates the appropriate built-in security
	// group with each layer (default setting). You can associate additional security
	// groups with a layer after you create it but you cannot delete the built-in
	// security group.  False - AWS OpsWorks does not associate built-in security
	// groups with layers. You must create appropriate EC2 security groups and associate
	// a security group with each layer that you create. However, you can still
	// manually associate a built-in security group with a layer on creation; custom
	// security groups are required only for those layers that need custom settings.
	//   For more information, see Create a New Stack (http://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-creating.html).
	UseOpsWorksSecurityGroups *bool `locationName:"UseOpsworksSecurityGroups" type:"boolean"`

	metadataUpdateStackInput `json:"-" xml:"-"`
}

type metadataUpdateStackInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateStackOutput struct {
	metadataUpdateStackOutput `json:"-" xml:"-"`
}

type metadataUpdateStackOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateUserProfileInput struct {
	// Whether users can specify their own SSH public key through the My Settings
	// page. For more information, see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/security-settingsshkey.html).
	AllowSelfManagement *bool `type:"boolean"`

	// The user IAM ARN.
	IAMUserARN *string `locationName:"IamUserArn" type:"string" required:"true"`

	// The user's new SSH public key.
	SSHPublicKey *string `locationName:"SshPublicKey" type:"string"`

	// The user's SSH user name. The allowable characters are [a-z], [A-Z], [0-9],
	// '-', and '_'. If the specified name includes other punctuation marks, AWS
	// OpsWorks removes them. For example, my.name will be changed to myname. If
	// you do not specify an SSH user name, AWS OpsWorks generates one from the
	// IAM user name.
	SSHUsername *string `locationName:"SshUsername" type:"string"`

	metadataUpdateUserProfileInput `json:"-" xml:"-"`
}

type metadataUpdateUserProfileInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateUserProfileOutput struct {
	metadataUpdateUserProfileOutput `json:"-" xml:"-"`
}

type metadataUpdateUserProfileOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateVolumeInput struct {
	// The new mount point.
	MountPoint *string `type:"string"`

	// The new name.
	Name *string `type:"string"`

	// The volume ID.
	VolumeID *string `locationName:"VolumeId" type:"string" required:"true"`

	metadataUpdateVolumeInput `json:"-" xml:"-"`
}

type metadataUpdateVolumeInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateVolumeOutput struct {
	metadataUpdateVolumeOutput `json:"-" xml:"-"`
}

type metadataUpdateVolumeOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes a user's SSH information.
type UserProfile struct {
	// Whether users can specify their own SSH public key through the My Settings
	// page. For more information, see Managing User Permissions (http://docs.aws.amazon.com/opsworks/latest/userguide/security-settingsshkey.html).
	AllowSelfManagement *bool `type:"boolean"`

	// The user's IAM ARN.
	IAMUserARN *string `locationName:"IamUserArn" type:"string"`

	// The user's name.
	Name *string `type:"string"`

	// The user's SSH public key.
	SSHPublicKey *string `locationName:"SshPublicKey" type:"string"`

	// The user's SSH user name.
	SSHUsername *string `locationName:"SshUsername" type:"string"`

	metadataUserProfile `json:"-" xml:"-"`
}

type metadataUserProfile struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes an instance's Amazon EBS volume.
type Volume struct {
	// The volume Availability Zone. For more information, see Regions and Endpoints
	// (http://docs.aws.amazon.com/general/latest/gr/rande.html).
	AvailabilityZone *string `type:"string"`

	// The device name.
	Device *string `type:"string"`

	// The Amazon EC2 volume ID.
	EC2VolumeID *string `locationName:"Ec2VolumeId" type:"string"`

	// For PIOPS volumes, the IOPS per disk.
	IOPS *int64 `locationName:"Iops" type:"integer"`

	// The instance ID.
	InstanceID *string `locationName:"InstanceId" type:"string"`

	// The volume mount point. For example "/dev/sdh".
	MountPoint *string `type:"string"`

	// The volume name.
	Name *string `type:"string"`

	// The RAID array ID.
	RAIDArrayID *string `locationName:"RaidArrayId" type:"string"`

	// The AWS region. For more information about AWS regions, see Regions and Endpoints
	// (http://docs.aws.amazon.com/general/latest/gr/rande.html).
	Region *string `type:"string"`

	// The volume size.
	Size *int64 `type:"integer"`

	// The value returned by DescribeVolumes (http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVolumes.html).
	Status *string `type:"string"`

	// The volume ID.
	VolumeID *string `locationName:"VolumeId" type:"string"`

	// The volume type, standard or PIOPS.
	VolumeType *string `type:"string"`

	metadataVolume `json:"-" xml:"-"`
}

type metadataVolume struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes an Amazon EBS volume configuration.
type VolumeConfiguration struct {
	// For PIOPS volumes, the IOPS per disk.
	IOPS *int64 `locationName:"Iops" type:"integer"`

	// The volume mount point. For example "/dev/sdh".
	MountPoint *string `type:"string" required:"true"`

	// The number of disks in the volume.
	NumberOfDisks *int64 `type:"integer" required:"true"`

	// The volume RAID level (http://en.wikipedia.org/wiki/Standard_RAID_levels).
	RAIDLevel *int64 `locationName:"RaidLevel" type:"integer"`

	// The volume size.
	Size *int64 `type:"integer" required:"true"`

	// The volume type:
	//
	//   standard - Magnetic  io1 - Provisioned IOPS (SSD)  gp2 - General Purpose
	// (SSD)
	VolumeType *string `type:"string"`

	metadataVolumeConfiguration `json:"-" xml:"-"`
}

type metadataVolumeConfiguration struct {
	SDKShapeTraits bool `type:"structure"`
}

// Describes a time-based instance's auto scaling schedule. The schedule consists
// of a set of key-value pairs.
//
//  The key is the time period (a UTC hour) and must be an integer from 0 -
// 23. The value indicates whether the instance should be online or offline
// for the specified period, and must be set to "on" or "off"  The default setting
// for all time periods is off, so you use the following parameters primarily
// to specify the online periods. You don't have to explicitly specify offline
// periods unless you want to change an online period to an offline period.
//
// The following example specifies that the instance should be online for four
// hours, from UTC 1200 - 1600. It will be off for the remainder of the day.
//
//   { "12":"on", "13":"on", "14":"on", "15":"on" }
type WeeklyAutoScalingSchedule struct {
	// The schedule for Friday.
	Friday map[string]*string `type:"map"`

	// The schedule for Monday.
	Monday map[string]*string `type:"map"`

	// The schedule for Saturday.
	Saturday map[string]*string `type:"map"`

	// The schedule for Sunday.
	Sunday map[string]*string `type:"map"`

	// The schedule for Thursday.
	Thursday map[string]*string `type:"map"`

	// The schedule for Tuesday.
	Tuesday map[string]*string `type:"map"`

	// The schedule for Wednesday.
	Wednesday map[string]*string `type:"map"`

	metadataWeeklyAutoScalingSchedule `json:"-" xml:"-"`
}

type metadataWeeklyAutoScalingSchedule struct {
	SDKShapeTraits bool `type:"structure"`
}
