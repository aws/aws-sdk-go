package storagegateway

// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

import (
	"github.com/awslabs/aws-sdk-go/aws"
	"time"
)

// ActivateGatewayRequest generates a request for the ActivateGateway operation.
func (c *StorageGateway) ActivateGatewayRequest(input *ActivateGatewayInput) (req *aws.Request, output *ActivateGatewayOutput) {
	if opActivateGateway == nil {
		opActivateGateway = &aws.Operation{
			Name:       "ActivateGateway",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opActivateGateway, input, output)
	output = &ActivateGatewayOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) ActivateGateway(input *ActivateGatewayInput) (output *ActivateGatewayOutput, err error) {
	req, out := c.ActivateGatewayRequest(input)
	output = out
	err = req.Send()
	return
}

var opActivateGateway *aws.Operation

// AddCacheRequest generates a request for the AddCache operation.
func (c *StorageGateway) AddCacheRequest(input *AddCacheInput) (req *aws.Request, output *AddCacheOutput) {
	if opAddCache == nil {
		opAddCache = &aws.Operation{
			Name:       "AddCache",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opAddCache, input, output)
	output = &AddCacheOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) AddCache(input *AddCacheInput) (output *AddCacheOutput, err error) {
	req, out := c.AddCacheRequest(input)
	output = out
	err = req.Send()
	return
}

var opAddCache *aws.Operation

// AddUploadBufferRequest generates a request for the AddUploadBuffer operation.
func (c *StorageGateway) AddUploadBufferRequest(input *AddUploadBufferInput) (req *aws.Request, output *AddUploadBufferOutput) {
	if opAddUploadBuffer == nil {
		opAddUploadBuffer = &aws.Operation{
			Name:       "AddUploadBuffer",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opAddUploadBuffer, input, output)
	output = &AddUploadBufferOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) AddUploadBuffer(input *AddUploadBufferInput) (output *AddUploadBufferOutput, err error) {
	req, out := c.AddUploadBufferRequest(input)
	output = out
	err = req.Send()
	return
}

var opAddUploadBuffer *aws.Operation

// AddWorkingStorageRequest generates a request for the AddWorkingStorage operation.
func (c *StorageGateway) AddWorkingStorageRequest(input *AddWorkingStorageInput) (req *aws.Request, output *AddWorkingStorageOutput) {
	if opAddWorkingStorage == nil {
		opAddWorkingStorage = &aws.Operation{
			Name:       "AddWorkingStorage",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opAddWorkingStorage, input, output)
	output = &AddWorkingStorageOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) AddWorkingStorage(input *AddWorkingStorageInput) (output *AddWorkingStorageOutput, err error) {
	req, out := c.AddWorkingStorageRequest(input)
	output = out
	err = req.Send()
	return
}

var opAddWorkingStorage *aws.Operation

// CancelArchivalRequest generates a request for the CancelArchival operation.
func (c *StorageGateway) CancelArchivalRequest(input *CancelArchivalInput) (req *aws.Request, output *CancelArchivalOutput) {
	if opCancelArchival == nil {
		opCancelArchival = &aws.Operation{
			Name:       "CancelArchival",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCancelArchival, input, output)
	output = &CancelArchivalOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) CancelArchival(input *CancelArchivalInput) (output *CancelArchivalOutput, err error) {
	req, out := c.CancelArchivalRequest(input)
	output = out
	err = req.Send()
	return
}

var opCancelArchival *aws.Operation

// CancelRetrievalRequest generates a request for the CancelRetrieval operation.
func (c *StorageGateway) CancelRetrievalRequest(input *CancelRetrievalInput) (req *aws.Request, output *CancelRetrievalOutput) {
	if opCancelRetrieval == nil {
		opCancelRetrieval = &aws.Operation{
			Name:       "CancelRetrieval",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCancelRetrieval, input, output)
	output = &CancelRetrievalOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) CancelRetrieval(input *CancelRetrievalInput) (output *CancelRetrievalOutput, err error) {
	req, out := c.CancelRetrievalRequest(input)
	output = out
	err = req.Send()
	return
}

var opCancelRetrieval *aws.Operation

// CreateCachediSCSIVolumeRequest generates a request for the CreateCachediSCSIVolume operation.
func (c *StorageGateway) CreateCachediSCSIVolumeRequest(input *CreateCachediSCSIVolumeInput) (req *aws.Request, output *CreateCachediSCSIVolumeOutput) {
	if opCreateCachediSCSIVolume == nil {
		opCreateCachediSCSIVolume = &aws.Operation{
			Name:       "CreateCachediSCSIVolume",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateCachediSCSIVolume, input, output)
	output = &CreateCachediSCSIVolumeOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) CreateCachediSCSIVolume(input *CreateCachediSCSIVolumeInput) (output *CreateCachediSCSIVolumeOutput, err error) {
	req, out := c.CreateCachediSCSIVolumeRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateCachediSCSIVolume *aws.Operation

// CreateSnapshotRequest generates a request for the CreateSnapshot operation.
func (c *StorageGateway) CreateSnapshotRequest(input *CreateSnapshotInput) (req *aws.Request, output *CreateSnapshotOutput) {
	if opCreateSnapshot == nil {
		opCreateSnapshot = &aws.Operation{
			Name:       "CreateSnapshot",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateSnapshot, input, output)
	output = &CreateSnapshotOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) CreateSnapshot(input *CreateSnapshotInput) (output *CreateSnapshotOutput, err error) {
	req, out := c.CreateSnapshotRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateSnapshot *aws.Operation

// CreateSnapshotFromVolumeRecoveryPointRequest generates a request for the CreateSnapshotFromVolumeRecoveryPoint operation.
func (c *StorageGateway) CreateSnapshotFromVolumeRecoveryPointRequest(input *CreateSnapshotFromVolumeRecoveryPointInput) (req *aws.Request, output *CreateSnapshotFromVolumeRecoveryPointOutput) {
	if opCreateSnapshotFromVolumeRecoveryPoint == nil {
		opCreateSnapshotFromVolumeRecoveryPoint = &aws.Operation{
			Name:       "CreateSnapshotFromVolumeRecoveryPoint",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateSnapshotFromVolumeRecoveryPoint, input, output)
	output = &CreateSnapshotFromVolumeRecoveryPointOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) CreateSnapshotFromVolumeRecoveryPoint(input *CreateSnapshotFromVolumeRecoveryPointInput) (output *CreateSnapshotFromVolumeRecoveryPointOutput, err error) {
	req, out := c.CreateSnapshotFromVolumeRecoveryPointRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateSnapshotFromVolumeRecoveryPoint *aws.Operation

// CreateStorediSCSIVolumeRequest generates a request for the CreateStorediSCSIVolume operation.
func (c *StorageGateway) CreateStorediSCSIVolumeRequest(input *CreateStorediSCSIVolumeInput) (req *aws.Request, output *CreateStorediSCSIVolumeOutput) {
	if opCreateStorediSCSIVolume == nil {
		opCreateStorediSCSIVolume = &aws.Operation{
			Name:       "CreateStorediSCSIVolume",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateStorediSCSIVolume, input, output)
	output = &CreateStorediSCSIVolumeOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) CreateStorediSCSIVolume(input *CreateStorediSCSIVolumeInput) (output *CreateStorediSCSIVolumeOutput, err error) {
	req, out := c.CreateStorediSCSIVolumeRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateStorediSCSIVolume *aws.Operation

// CreateTapesRequest generates a request for the CreateTapes operation.
func (c *StorageGateway) CreateTapesRequest(input *CreateTapesInput) (req *aws.Request, output *CreateTapesOutput) {
	if opCreateTapes == nil {
		opCreateTapes = &aws.Operation{
			Name:       "CreateTapes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateTapes, input, output)
	output = &CreateTapesOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) CreateTapes(input *CreateTapesInput) (output *CreateTapesOutput, err error) {
	req, out := c.CreateTapesRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateTapes *aws.Operation

// DeleteBandwidthRateLimitRequest generates a request for the DeleteBandwidthRateLimit operation.
func (c *StorageGateway) DeleteBandwidthRateLimitRequest(input *DeleteBandwidthRateLimitInput) (req *aws.Request, output *DeleteBandwidthRateLimitOutput) {
	if opDeleteBandwidthRateLimit == nil {
		opDeleteBandwidthRateLimit = &aws.Operation{
			Name:       "DeleteBandwidthRateLimit",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteBandwidthRateLimit, input, output)
	output = &DeleteBandwidthRateLimitOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DeleteBandwidthRateLimit(input *DeleteBandwidthRateLimitInput) (output *DeleteBandwidthRateLimitOutput, err error) {
	req, out := c.DeleteBandwidthRateLimitRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteBandwidthRateLimit *aws.Operation

// DeleteChapCredentialsRequest generates a request for the DeleteChapCredentials operation.
func (c *StorageGateway) DeleteChapCredentialsRequest(input *DeleteChapCredentialsInput) (req *aws.Request, output *DeleteChapCredentialsOutput) {
	if opDeleteChapCredentials == nil {
		opDeleteChapCredentials = &aws.Operation{
			Name:       "DeleteChapCredentials",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteChapCredentials, input, output)
	output = &DeleteChapCredentialsOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DeleteChapCredentials(input *DeleteChapCredentialsInput) (output *DeleteChapCredentialsOutput, err error) {
	req, out := c.DeleteChapCredentialsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteChapCredentials *aws.Operation

// DeleteGatewayRequest generates a request for the DeleteGateway operation.
func (c *StorageGateway) DeleteGatewayRequest(input *DeleteGatewayInput) (req *aws.Request, output *DeleteGatewayOutput) {
	if opDeleteGateway == nil {
		opDeleteGateway = &aws.Operation{
			Name:       "DeleteGateway",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteGateway, input, output)
	output = &DeleteGatewayOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DeleteGateway(input *DeleteGatewayInput) (output *DeleteGatewayOutput, err error) {
	req, out := c.DeleteGatewayRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteGateway *aws.Operation

// DeleteSnapshotScheduleRequest generates a request for the DeleteSnapshotSchedule operation.
func (c *StorageGateway) DeleteSnapshotScheduleRequest(input *DeleteSnapshotScheduleInput) (req *aws.Request, output *DeleteSnapshotScheduleOutput) {
	if opDeleteSnapshotSchedule == nil {
		opDeleteSnapshotSchedule = &aws.Operation{
			Name:       "DeleteSnapshotSchedule",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteSnapshotSchedule, input, output)
	output = &DeleteSnapshotScheduleOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DeleteSnapshotSchedule(input *DeleteSnapshotScheduleInput) (output *DeleteSnapshotScheduleOutput, err error) {
	req, out := c.DeleteSnapshotScheduleRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteSnapshotSchedule *aws.Operation

// DeleteTapeRequest generates a request for the DeleteTape operation.
func (c *StorageGateway) DeleteTapeRequest(input *DeleteTapeInput) (req *aws.Request, output *DeleteTapeOutput) {
	if opDeleteTape == nil {
		opDeleteTape = &aws.Operation{
			Name:       "DeleteTape",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteTape, input, output)
	output = &DeleteTapeOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DeleteTape(input *DeleteTapeInput) (output *DeleteTapeOutput, err error) {
	req, out := c.DeleteTapeRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteTape *aws.Operation

// DeleteTapeArchiveRequest generates a request for the DeleteTapeArchive operation.
func (c *StorageGateway) DeleteTapeArchiveRequest(input *DeleteTapeArchiveInput) (req *aws.Request, output *DeleteTapeArchiveOutput) {
	if opDeleteTapeArchive == nil {
		opDeleteTapeArchive = &aws.Operation{
			Name:       "DeleteTapeArchive",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteTapeArchive, input, output)
	output = &DeleteTapeArchiveOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DeleteTapeArchive(input *DeleteTapeArchiveInput) (output *DeleteTapeArchiveOutput, err error) {
	req, out := c.DeleteTapeArchiveRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteTapeArchive *aws.Operation

// DeleteVolumeRequest generates a request for the DeleteVolume operation.
func (c *StorageGateway) DeleteVolumeRequest(input *DeleteVolumeInput) (req *aws.Request, output *DeleteVolumeOutput) {
	if opDeleteVolume == nil {
		opDeleteVolume = &aws.Operation{
			Name:       "DeleteVolume",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteVolume, input, output)
	output = &DeleteVolumeOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DeleteVolume(input *DeleteVolumeInput) (output *DeleteVolumeOutput, err error) {
	req, out := c.DeleteVolumeRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteVolume *aws.Operation

// DescribeBandwidthRateLimitRequest generates a request for the DescribeBandwidthRateLimit operation.
func (c *StorageGateway) DescribeBandwidthRateLimitRequest(input *DescribeBandwidthRateLimitInput) (req *aws.Request, output *DescribeBandwidthRateLimitOutput) {
	if opDescribeBandwidthRateLimit == nil {
		opDescribeBandwidthRateLimit = &aws.Operation{
			Name:       "DescribeBandwidthRateLimit",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeBandwidthRateLimit, input, output)
	output = &DescribeBandwidthRateLimitOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DescribeBandwidthRateLimit(input *DescribeBandwidthRateLimitInput) (output *DescribeBandwidthRateLimitOutput, err error) {
	req, out := c.DescribeBandwidthRateLimitRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeBandwidthRateLimit *aws.Operation

// DescribeCacheRequest generates a request for the DescribeCache operation.
func (c *StorageGateway) DescribeCacheRequest(input *DescribeCacheInput) (req *aws.Request, output *DescribeCacheOutput) {
	if opDescribeCache == nil {
		opDescribeCache = &aws.Operation{
			Name:       "DescribeCache",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeCache, input, output)
	output = &DescribeCacheOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DescribeCache(input *DescribeCacheInput) (output *DescribeCacheOutput, err error) {
	req, out := c.DescribeCacheRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeCache *aws.Operation

// DescribeCachediSCSIVolumesRequest generates a request for the DescribeCachediSCSIVolumes operation.
func (c *StorageGateway) DescribeCachediSCSIVolumesRequest(input *DescribeCachediSCSIVolumesInput) (req *aws.Request, output *DescribeCachediSCSIVolumesOutput) {
	if opDescribeCachediSCSIVolumes == nil {
		opDescribeCachediSCSIVolumes = &aws.Operation{
			Name:       "DescribeCachediSCSIVolumes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeCachediSCSIVolumes, input, output)
	output = &DescribeCachediSCSIVolumesOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DescribeCachediSCSIVolumes(input *DescribeCachediSCSIVolumesInput) (output *DescribeCachediSCSIVolumesOutput, err error) {
	req, out := c.DescribeCachediSCSIVolumesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeCachediSCSIVolumes *aws.Operation

// DescribeChapCredentialsRequest generates a request for the DescribeChapCredentials operation.
func (c *StorageGateway) DescribeChapCredentialsRequest(input *DescribeChapCredentialsInput) (req *aws.Request, output *DescribeChapCredentialsOutput) {
	if opDescribeChapCredentials == nil {
		opDescribeChapCredentials = &aws.Operation{
			Name:       "DescribeChapCredentials",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeChapCredentials, input, output)
	output = &DescribeChapCredentialsOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DescribeChapCredentials(input *DescribeChapCredentialsInput) (output *DescribeChapCredentialsOutput, err error) {
	req, out := c.DescribeChapCredentialsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeChapCredentials *aws.Operation

// DescribeGatewayInformationRequest generates a request for the DescribeGatewayInformation operation.
func (c *StorageGateway) DescribeGatewayInformationRequest(input *DescribeGatewayInformationInput) (req *aws.Request, output *DescribeGatewayInformationOutput) {
	if opDescribeGatewayInformation == nil {
		opDescribeGatewayInformation = &aws.Operation{
			Name:       "DescribeGatewayInformation",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeGatewayInformation, input, output)
	output = &DescribeGatewayInformationOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DescribeGatewayInformation(input *DescribeGatewayInformationInput) (output *DescribeGatewayInformationOutput, err error) {
	req, out := c.DescribeGatewayInformationRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeGatewayInformation *aws.Operation

// DescribeMaintenanceStartTimeRequest generates a request for the DescribeMaintenanceStartTime operation.
func (c *StorageGateway) DescribeMaintenanceStartTimeRequest(input *DescribeMaintenanceStartTimeInput) (req *aws.Request, output *DescribeMaintenanceStartTimeOutput) {
	if opDescribeMaintenanceStartTime == nil {
		opDescribeMaintenanceStartTime = &aws.Operation{
			Name:       "DescribeMaintenanceStartTime",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeMaintenanceStartTime, input, output)
	output = &DescribeMaintenanceStartTimeOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DescribeMaintenanceStartTime(input *DescribeMaintenanceStartTimeInput) (output *DescribeMaintenanceStartTimeOutput, err error) {
	req, out := c.DescribeMaintenanceStartTimeRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeMaintenanceStartTime *aws.Operation

// DescribeSnapshotScheduleRequest generates a request for the DescribeSnapshotSchedule operation.
func (c *StorageGateway) DescribeSnapshotScheduleRequest(input *DescribeSnapshotScheduleInput) (req *aws.Request, output *DescribeSnapshotScheduleOutput) {
	if opDescribeSnapshotSchedule == nil {
		opDescribeSnapshotSchedule = &aws.Operation{
			Name:       "DescribeSnapshotSchedule",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeSnapshotSchedule, input, output)
	output = &DescribeSnapshotScheduleOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DescribeSnapshotSchedule(input *DescribeSnapshotScheduleInput) (output *DescribeSnapshotScheduleOutput, err error) {
	req, out := c.DescribeSnapshotScheduleRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeSnapshotSchedule *aws.Operation

// DescribeStorediSCSIVolumesRequest generates a request for the DescribeStorediSCSIVolumes operation.
func (c *StorageGateway) DescribeStorediSCSIVolumesRequest(input *DescribeStorediSCSIVolumesInput) (req *aws.Request, output *DescribeStorediSCSIVolumesOutput) {
	if opDescribeStorediSCSIVolumes == nil {
		opDescribeStorediSCSIVolumes = &aws.Operation{
			Name:       "DescribeStorediSCSIVolumes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeStorediSCSIVolumes, input, output)
	output = &DescribeStorediSCSIVolumesOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DescribeStorediSCSIVolumes(input *DescribeStorediSCSIVolumesInput) (output *DescribeStorediSCSIVolumesOutput, err error) {
	req, out := c.DescribeStorediSCSIVolumesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeStorediSCSIVolumes *aws.Operation

// DescribeTapeArchivesRequest generates a request for the DescribeTapeArchives operation.
func (c *StorageGateway) DescribeTapeArchivesRequest(input *DescribeTapeArchivesInput) (req *aws.Request, output *DescribeTapeArchivesOutput) {
	if opDescribeTapeArchives == nil {
		opDescribeTapeArchives = &aws.Operation{
			Name:       "DescribeTapeArchives",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeTapeArchives, input, output)
	output = &DescribeTapeArchivesOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DescribeTapeArchives(input *DescribeTapeArchivesInput) (output *DescribeTapeArchivesOutput, err error) {
	req, out := c.DescribeTapeArchivesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeTapeArchives *aws.Operation

// DescribeTapeRecoveryPointsRequest generates a request for the DescribeTapeRecoveryPoints operation.
func (c *StorageGateway) DescribeTapeRecoveryPointsRequest(input *DescribeTapeRecoveryPointsInput) (req *aws.Request, output *DescribeTapeRecoveryPointsOutput) {
	if opDescribeTapeRecoveryPoints == nil {
		opDescribeTapeRecoveryPoints = &aws.Operation{
			Name:       "DescribeTapeRecoveryPoints",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeTapeRecoveryPoints, input, output)
	output = &DescribeTapeRecoveryPointsOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DescribeTapeRecoveryPoints(input *DescribeTapeRecoveryPointsInput) (output *DescribeTapeRecoveryPointsOutput, err error) {
	req, out := c.DescribeTapeRecoveryPointsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeTapeRecoveryPoints *aws.Operation

// DescribeTapesRequest generates a request for the DescribeTapes operation.
func (c *StorageGateway) DescribeTapesRequest(input *DescribeTapesInput) (req *aws.Request, output *DescribeTapesOutput) {
	if opDescribeTapes == nil {
		opDescribeTapes = &aws.Operation{
			Name:       "DescribeTapes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeTapes, input, output)
	output = &DescribeTapesOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DescribeTapes(input *DescribeTapesInput) (output *DescribeTapesOutput, err error) {
	req, out := c.DescribeTapesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeTapes *aws.Operation

// DescribeUploadBufferRequest generates a request for the DescribeUploadBuffer operation.
func (c *StorageGateway) DescribeUploadBufferRequest(input *DescribeUploadBufferInput) (req *aws.Request, output *DescribeUploadBufferOutput) {
	if opDescribeUploadBuffer == nil {
		opDescribeUploadBuffer = &aws.Operation{
			Name:       "DescribeUploadBuffer",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeUploadBuffer, input, output)
	output = &DescribeUploadBufferOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DescribeUploadBuffer(input *DescribeUploadBufferInput) (output *DescribeUploadBufferOutput, err error) {
	req, out := c.DescribeUploadBufferRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeUploadBuffer *aws.Operation

// DescribeVTLDevicesRequest generates a request for the DescribeVTLDevices operation.
func (c *StorageGateway) DescribeVTLDevicesRequest(input *DescribeVTLDevicesInput) (req *aws.Request, output *DescribeVTLDevicesOutput) {
	if opDescribeVTLDevices == nil {
		opDescribeVTLDevices = &aws.Operation{
			Name:       "DescribeVTLDevices",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeVTLDevices, input, output)
	output = &DescribeVTLDevicesOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DescribeVTLDevices(input *DescribeVTLDevicesInput) (output *DescribeVTLDevicesOutput, err error) {
	req, out := c.DescribeVTLDevicesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeVTLDevices *aws.Operation

// DescribeWorkingStorageRequest generates a request for the DescribeWorkingStorage operation.
func (c *StorageGateway) DescribeWorkingStorageRequest(input *DescribeWorkingStorageInput) (req *aws.Request, output *DescribeWorkingStorageOutput) {
	if opDescribeWorkingStorage == nil {
		opDescribeWorkingStorage = &aws.Operation{
			Name:       "DescribeWorkingStorage",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeWorkingStorage, input, output)
	output = &DescribeWorkingStorageOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DescribeWorkingStorage(input *DescribeWorkingStorageInput) (output *DescribeWorkingStorageOutput, err error) {
	req, out := c.DescribeWorkingStorageRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeWorkingStorage *aws.Operation

// DisableGatewayRequest generates a request for the DisableGateway operation.
func (c *StorageGateway) DisableGatewayRequest(input *DisableGatewayInput) (req *aws.Request, output *DisableGatewayOutput) {
	if opDisableGateway == nil {
		opDisableGateway = &aws.Operation{
			Name:       "DisableGateway",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDisableGateway, input, output)
	output = &DisableGatewayOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) DisableGateway(input *DisableGatewayInput) (output *DisableGatewayOutput, err error) {
	req, out := c.DisableGatewayRequest(input)
	output = out
	err = req.Send()
	return
}

var opDisableGateway *aws.Operation

// ListGatewaysRequest generates a request for the ListGateways operation.
func (c *StorageGateway) ListGatewaysRequest(input *ListGatewaysInput) (req *aws.Request, output *ListGatewaysOutput) {
	if opListGateways == nil {
		opListGateways = &aws.Operation{
			Name:       "ListGateways",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListGateways, input, output)
	output = &ListGatewaysOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) ListGateways(input *ListGatewaysInput) (output *ListGatewaysOutput, err error) {
	req, out := c.ListGatewaysRequest(input)
	output = out
	err = req.Send()
	return
}

var opListGateways *aws.Operation

// ListLocalDisksRequest generates a request for the ListLocalDisks operation.
func (c *StorageGateway) ListLocalDisksRequest(input *ListLocalDisksInput) (req *aws.Request, output *ListLocalDisksOutput) {
	if opListLocalDisks == nil {
		opListLocalDisks = &aws.Operation{
			Name:       "ListLocalDisks",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListLocalDisks, input, output)
	output = &ListLocalDisksOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) ListLocalDisks(input *ListLocalDisksInput) (output *ListLocalDisksOutput, err error) {
	req, out := c.ListLocalDisksRequest(input)
	output = out
	err = req.Send()
	return
}

var opListLocalDisks *aws.Operation

// ListVolumeRecoveryPointsRequest generates a request for the ListVolumeRecoveryPoints operation.
func (c *StorageGateway) ListVolumeRecoveryPointsRequest(input *ListVolumeRecoveryPointsInput) (req *aws.Request, output *ListVolumeRecoveryPointsOutput) {
	if opListVolumeRecoveryPoints == nil {
		opListVolumeRecoveryPoints = &aws.Operation{
			Name:       "ListVolumeRecoveryPoints",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListVolumeRecoveryPoints, input, output)
	output = &ListVolumeRecoveryPointsOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) ListVolumeRecoveryPoints(input *ListVolumeRecoveryPointsInput) (output *ListVolumeRecoveryPointsOutput, err error) {
	req, out := c.ListVolumeRecoveryPointsRequest(input)
	output = out
	err = req.Send()
	return
}

var opListVolumeRecoveryPoints *aws.Operation

// ListVolumesRequest generates a request for the ListVolumes operation.
func (c *StorageGateway) ListVolumesRequest(input *ListVolumesInput) (req *aws.Request, output *ListVolumesOutput) {
	if opListVolumes == nil {
		opListVolumes = &aws.Operation{
			Name:       "ListVolumes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListVolumes, input, output)
	output = &ListVolumesOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) ListVolumes(input *ListVolumesInput) (output *ListVolumesOutput, err error) {
	req, out := c.ListVolumesRequest(input)
	output = out
	err = req.Send()
	return
}

var opListVolumes *aws.Operation

// ResetCacheRequest generates a request for the ResetCache operation.
func (c *StorageGateway) ResetCacheRequest(input *ResetCacheInput) (req *aws.Request, output *ResetCacheOutput) {
	if opResetCache == nil {
		opResetCache = &aws.Operation{
			Name:       "ResetCache",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opResetCache, input, output)
	output = &ResetCacheOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) ResetCache(input *ResetCacheInput) (output *ResetCacheOutput, err error) {
	req, out := c.ResetCacheRequest(input)
	output = out
	err = req.Send()
	return
}

var opResetCache *aws.Operation

// RetrieveTapeArchiveRequest generates a request for the RetrieveTapeArchive operation.
func (c *StorageGateway) RetrieveTapeArchiveRequest(input *RetrieveTapeArchiveInput) (req *aws.Request, output *RetrieveTapeArchiveOutput) {
	if opRetrieveTapeArchive == nil {
		opRetrieveTapeArchive = &aws.Operation{
			Name:       "RetrieveTapeArchive",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRetrieveTapeArchive, input, output)
	output = &RetrieveTapeArchiveOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) RetrieveTapeArchive(input *RetrieveTapeArchiveInput) (output *RetrieveTapeArchiveOutput, err error) {
	req, out := c.RetrieveTapeArchiveRequest(input)
	output = out
	err = req.Send()
	return
}

var opRetrieveTapeArchive *aws.Operation

// RetrieveTapeRecoveryPointRequest generates a request for the RetrieveTapeRecoveryPoint operation.
func (c *StorageGateway) RetrieveTapeRecoveryPointRequest(input *RetrieveTapeRecoveryPointInput) (req *aws.Request, output *RetrieveTapeRecoveryPointOutput) {
	if opRetrieveTapeRecoveryPoint == nil {
		opRetrieveTapeRecoveryPoint = &aws.Operation{
			Name:       "RetrieveTapeRecoveryPoint",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRetrieveTapeRecoveryPoint, input, output)
	output = &RetrieveTapeRecoveryPointOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) RetrieveTapeRecoveryPoint(input *RetrieveTapeRecoveryPointInput) (output *RetrieveTapeRecoveryPointOutput, err error) {
	req, out := c.RetrieveTapeRecoveryPointRequest(input)
	output = out
	err = req.Send()
	return
}

var opRetrieveTapeRecoveryPoint *aws.Operation

// ShutdownGatewayRequest generates a request for the ShutdownGateway operation.
func (c *StorageGateway) ShutdownGatewayRequest(input *ShutdownGatewayInput) (req *aws.Request, output *ShutdownGatewayOutput) {
	if opShutdownGateway == nil {
		opShutdownGateway = &aws.Operation{
			Name:       "ShutdownGateway",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opShutdownGateway, input, output)
	output = &ShutdownGatewayOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) ShutdownGateway(input *ShutdownGatewayInput) (output *ShutdownGatewayOutput, err error) {
	req, out := c.ShutdownGatewayRequest(input)
	output = out
	err = req.Send()
	return
}

var opShutdownGateway *aws.Operation

// StartGatewayRequest generates a request for the StartGateway operation.
func (c *StorageGateway) StartGatewayRequest(input *StartGatewayInput) (req *aws.Request, output *StartGatewayOutput) {
	if opStartGateway == nil {
		opStartGateway = &aws.Operation{
			Name:       "StartGateway",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opStartGateway, input, output)
	output = &StartGatewayOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) StartGateway(input *StartGatewayInput) (output *StartGatewayOutput, err error) {
	req, out := c.StartGatewayRequest(input)
	output = out
	err = req.Send()
	return
}

var opStartGateway *aws.Operation

// UpdateBandwidthRateLimitRequest generates a request for the UpdateBandwidthRateLimit operation.
func (c *StorageGateway) UpdateBandwidthRateLimitRequest(input *UpdateBandwidthRateLimitInput) (req *aws.Request, output *UpdateBandwidthRateLimitOutput) {
	if opUpdateBandwidthRateLimit == nil {
		opUpdateBandwidthRateLimit = &aws.Operation{
			Name:       "UpdateBandwidthRateLimit",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opUpdateBandwidthRateLimit, input, output)
	output = &UpdateBandwidthRateLimitOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) UpdateBandwidthRateLimit(input *UpdateBandwidthRateLimitInput) (output *UpdateBandwidthRateLimitOutput, err error) {
	req, out := c.UpdateBandwidthRateLimitRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdateBandwidthRateLimit *aws.Operation

// UpdateChapCredentialsRequest generates a request for the UpdateChapCredentials operation.
func (c *StorageGateway) UpdateChapCredentialsRequest(input *UpdateChapCredentialsInput) (req *aws.Request, output *UpdateChapCredentialsOutput) {
	if opUpdateChapCredentials == nil {
		opUpdateChapCredentials = &aws.Operation{
			Name:       "UpdateChapCredentials",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opUpdateChapCredentials, input, output)
	output = &UpdateChapCredentialsOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) UpdateChapCredentials(input *UpdateChapCredentialsInput) (output *UpdateChapCredentialsOutput, err error) {
	req, out := c.UpdateChapCredentialsRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdateChapCredentials *aws.Operation

// UpdateGatewayInformationRequest generates a request for the UpdateGatewayInformation operation.
func (c *StorageGateway) UpdateGatewayInformationRequest(input *UpdateGatewayInformationInput) (req *aws.Request, output *UpdateGatewayInformationOutput) {
	if opUpdateGatewayInformation == nil {
		opUpdateGatewayInformation = &aws.Operation{
			Name:       "UpdateGatewayInformation",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opUpdateGatewayInformation, input, output)
	output = &UpdateGatewayInformationOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) UpdateGatewayInformation(input *UpdateGatewayInformationInput) (output *UpdateGatewayInformationOutput, err error) {
	req, out := c.UpdateGatewayInformationRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdateGatewayInformation *aws.Operation

// UpdateGatewaySoftwareNowRequest generates a request for the UpdateGatewaySoftwareNow operation.
func (c *StorageGateway) UpdateGatewaySoftwareNowRequest(input *UpdateGatewaySoftwareNowInput) (req *aws.Request, output *UpdateGatewaySoftwareNowOutput) {
	if opUpdateGatewaySoftwareNow == nil {
		opUpdateGatewaySoftwareNow = &aws.Operation{
			Name:       "UpdateGatewaySoftwareNow",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opUpdateGatewaySoftwareNow, input, output)
	output = &UpdateGatewaySoftwareNowOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) UpdateGatewaySoftwareNow(input *UpdateGatewaySoftwareNowInput) (output *UpdateGatewaySoftwareNowOutput, err error) {
	req, out := c.UpdateGatewaySoftwareNowRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdateGatewaySoftwareNow *aws.Operation

// UpdateMaintenanceStartTimeRequest generates a request for the UpdateMaintenanceStartTime operation.
func (c *StorageGateway) UpdateMaintenanceStartTimeRequest(input *UpdateMaintenanceStartTimeInput) (req *aws.Request, output *UpdateMaintenanceStartTimeOutput) {
	if opUpdateMaintenanceStartTime == nil {
		opUpdateMaintenanceStartTime = &aws.Operation{
			Name:       "UpdateMaintenanceStartTime",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opUpdateMaintenanceStartTime, input, output)
	output = &UpdateMaintenanceStartTimeOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) UpdateMaintenanceStartTime(input *UpdateMaintenanceStartTimeInput) (output *UpdateMaintenanceStartTimeOutput, err error) {
	req, out := c.UpdateMaintenanceStartTimeRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdateMaintenanceStartTime *aws.Operation

// UpdateSnapshotScheduleRequest generates a request for the UpdateSnapshotSchedule operation.
func (c *StorageGateway) UpdateSnapshotScheduleRequest(input *UpdateSnapshotScheduleInput) (req *aws.Request, output *UpdateSnapshotScheduleOutput) {
	if opUpdateSnapshotSchedule == nil {
		opUpdateSnapshotSchedule = &aws.Operation{
			Name:       "UpdateSnapshotSchedule",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opUpdateSnapshotSchedule, input, output)
	output = &UpdateSnapshotScheduleOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) UpdateSnapshotSchedule(input *UpdateSnapshotScheduleInput) (output *UpdateSnapshotScheduleOutput, err error) {
	req, out := c.UpdateSnapshotScheduleRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdateSnapshotSchedule *aws.Operation

// UpdateVTLDeviceTypeRequest generates a request for the UpdateVTLDeviceType operation.
func (c *StorageGateway) UpdateVTLDeviceTypeRequest(input *UpdateVTLDeviceTypeInput) (req *aws.Request, output *UpdateVTLDeviceTypeOutput) {
	if opUpdateVTLDeviceType == nil {
		opUpdateVTLDeviceType = &aws.Operation{
			Name:       "UpdateVTLDeviceType",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opUpdateVTLDeviceType, input, output)
	output = &UpdateVTLDeviceTypeOutput{}
	req.Data = output
	return
}

func (c *StorageGateway) UpdateVTLDeviceType(input *UpdateVTLDeviceTypeInput) (output *UpdateVTLDeviceTypeOutput, err error) {
	req, out := c.UpdateVTLDeviceTypeRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdateVTLDeviceType *aws.Operation

type ActivateGatewayInput struct {
	ActivationKey     *string `type:"string" json:",omitempty"`
	GatewayName       *string `type:"string" json:",omitempty"`
	GatewayRegion     *string `type:"string" json:",omitempty"`
	GatewayTimezone   *string `type:"string" json:",omitempty"`
	GatewayType       *string `type:"string" json:",omitempty"`
	MediumChangerType *string `type:"string" json:",omitempty"`
	TapeDriveType     *string `type:"string" json:",omitempty"`

	metadataActivateGatewayInput `json:"-", xml:"-"`
}

type metadataActivateGatewayInput struct {
	SDKShapeTraits bool `type:"structure" required:"ActivationKey,GatewayName,GatewayTimezone,GatewayRegion" json:",omitempty"`
}

type ActivateGatewayOutput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataActivateGatewayOutput `json:"-", xml:"-"`
}

type metadataActivateGatewayOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type AddCacheInput struct {
	DiskIDs    []*string `locationName:"DiskIds" type:"list" json:"DiskIds,omitempty"`
	GatewayARN *string   `type:"string" json:",omitempty"`

	metadataAddCacheInput `json:"-", xml:"-"`
}

type metadataAddCacheInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN,DiskIds" json:",omitempty"`
}

type AddCacheOutput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataAddCacheOutput `json:"-", xml:"-"`
}

type metadataAddCacheOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type AddUploadBufferInput struct {
	DiskIDs    []*string `locationName:"DiskIds" type:"list" json:"DiskIds,omitempty"`
	GatewayARN *string   `type:"string" json:",omitempty"`

	metadataAddUploadBufferInput `json:"-", xml:"-"`
}

type metadataAddUploadBufferInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN,DiskIds" json:",omitempty"`
}

type AddUploadBufferOutput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataAddUploadBufferOutput `json:"-", xml:"-"`
}

type metadataAddUploadBufferOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type AddWorkingStorageInput struct {
	DiskIDs    []*string `locationName:"DiskIds" type:"list" json:"DiskIds,omitempty"`
	GatewayARN *string   `type:"string" json:",omitempty"`

	metadataAddWorkingStorageInput `json:"-", xml:"-"`
}

type metadataAddWorkingStorageInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN,DiskIds" json:",omitempty"`
}

type AddWorkingStorageOutput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataAddWorkingStorageOutput `json:"-", xml:"-"`
}

type metadataAddWorkingStorageOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CachediSCSIVolume struct {
	SourceSnapshotID      *string                `locationName:"SourceSnapshotId" type:"string" json:"SourceSnapshotId,omitempty"`
	VolumeARN             *string                `type:"string" json:",omitempty"`
	VolumeID              *string                `locationName:"VolumeId" type:"string" json:"VolumeId,omitempty"`
	VolumeProgress        *float64               `type:"double" json:",omitempty"`
	VolumeSizeInBytes     *int64                 `type:"long" json:",omitempty"`
	VolumeStatus          *string                `type:"string" json:",omitempty"`
	VolumeType            *string                `type:"string" json:",omitempty"`
	VolumeiSCSIAttributes *VolumeiSCSIAttributes `type:"structure" json:",omitempty"`

	metadataCachediSCSIVolume `json:"-", xml:"-"`
}

type metadataCachediSCSIVolume struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CancelArchivalInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`
	TapeARN    *string `type:"string" json:",omitempty"`

	metadataCancelArchivalInput `json:"-", xml:"-"`
}

type metadataCancelArchivalInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN,TapeARN" json:",omitempty"`
}

type CancelArchivalOutput struct {
	TapeARN *string `type:"string" json:",omitempty"`

	metadataCancelArchivalOutput `json:"-", xml:"-"`
}

type metadataCancelArchivalOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CancelRetrievalInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`
	TapeARN    *string `type:"string" json:",omitempty"`

	metadataCancelRetrievalInput `json:"-", xml:"-"`
}

type metadataCancelRetrievalInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN,TapeARN" json:",omitempty"`
}

type CancelRetrievalOutput struct {
	TapeARN *string `type:"string" json:",omitempty"`

	metadataCancelRetrievalOutput `json:"-", xml:"-"`
}

type metadataCancelRetrievalOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ChapInfo struct {
	InitiatorName                 *string `type:"string" json:",omitempty"`
	SecretToAuthenticateInitiator *string `type:"string" json:",omitempty"`
	SecretToAuthenticateTarget    *string `type:"string" json:",omitempty"`
	TargetARN                     *string `type:"string" json:",omitempty"`

	metadataChapInfo `json:"-", xml:"-"`
}

type metadataChapInfo struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CreateCachediSCSIVolumeInput struct {
	ClientToken        *string `type:"string" json:",omitempty"`
	GatewayARN         *string `type:"string" json:",omitempty"`
	NetworkInterfaceID *string `locationName:"NetworkInterfaceId" type:"string" json:"NetworkInterfaceId,omitempty"`
	SnapshotID         *string `locationName:"SnapshotId" type:"string" json:"SnapshotId,omitempty"`
	TargetName         *string `type:"string" json:",omitempty"`
	VolumeSizeInBytes  *int64  `type:"long" json:",omitempty"`

	metadataCreateCachediSCSIVolumeInput `json:"-", xml:"-"`
}

type metadataCreateCachediSCSIVolumeInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN,VolumeSizeInBytes,TargetName,NetworkInterfaceId,ClientToken" json:",omitempty"`
}

type CreateCachediSCSIVolumeOutput struct {
	TargetARN *string `type:"string" json:",omitempty"`
	VolumeARN *string `type:"string" json:",omitempty"`

	metadataCreateCachediSCSIVolumeOutput `json:"-", xml:"-"`
}

type metadataCreateCachediSCSIVolumeOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CreateSnapshotFromVolumeRecoveryPointInput struct {
	SnapshotDescription *string `type:"string" json:",omitempty"`
	VolumeARN           *string `type:"string" json:",omitempty"`

	metadataCreateSnapshotFromVolumeRecoveryPointInput `json:"-", xml:"-"`
}

type metadataCreateSnapshotFromVolumeRecoveryPointInput struct {
	SDKShapeTraits bool `type:"structure" required:"VolumeARN,SnapshotDescription" json:",omitempty"`
}

type CreateSnapshotFromVolumeRecoveryPointOutput struct {
	SnapshotID              *string `locationName:"SnapshotId" type:"string" json:"SnapshotId,omitempty"`
	VolumeARN               *string `type:"string" json:",omitempty"`
	VolumeRecoveryPointTime *string `type:"string" json:",omitempty"`

	metadataCreateSnapshotFromVolumeRecoveryPointOutput `json:"-", xml:"-"`
}

type metadataCreateSnapshotFromVolumeRecoveryPointOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CreateSnapshotInput struct {
	SnapshotDescription *string `type:"string" json:",omitempty"`
	VolumeARN           *string `type:"string" json:",omitempty"`

	metadataCreateSnapshotInput `json:"-", xml:"-"`
}

type metadataCreateSnapshotInput struct {
	SDKShapeTraits bool `type:"structure" required:"VolumeARN,SnapshotDescription" json:",omitempty"`
}

type CreateSnapshotOutput struct {
	SnapshotID *string `locationName:"SnapshotId" type:"string" json:"SnapshotId,omitempty"`
	VolumeARN  *string `type:"string" json:",omitempty"`

	metadataCreateSnapshotOutput `json:"-", xml:"-"`
}

type metadataCreateSnapshotOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CreateStorediSCSIVolumeInput struct {
	DiskID               *string `locationName:"DiskId" type:"string" json:"DiskId,omitempty"`
	GatewayARN           *string `type:"string" json:",omitempty"`
	NetworkInterfaceID   *string `locationName:"NetworkInterfaceId" type:"string" json:"NetworkInterfaceId,omitempty"`
	PreserveExistingData *bool   `type:"boolean" json:",omitempty"`
	SnapshotID           *string `locationName:"SnapshotId" type:"string" json:"SnapshotId,omitempty"`
	TargetName           *string `type:"string" json:",omitempty"`

	metadataCreateStorediSCSIVolumeInput `json:"-", xml:"-"`
}

type metadataCreateStorediSCSIVolumeInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN,DiskId,PreserveExistingData,TargetName,NetworkInterfaceId" json:",omitempty"`
}

type CreateStorediSCSIVolumeOutput struct {
	TargetARN         *string `type:"string" json:",omitempty"`
	VolumeARN         *string `type:"string" json:",omitempty"`
	VolumeSizeInBytes *int64  `type:"long" json:",omitempty"`

	metadataCreateStorediSCSIVolumeOutput `json:"-", xml:"-"`
}

type metadataCreateStorediSCSIVolumeOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CreateTapesInput struct {
	ClientToken       *string `type:"string" json:",omitempty"`
	GatewayARN        *string `type:"string" json:",omitempty"`
	NumTapesToCreate  *int    `type:"integer" json:",omitempty"`
	TapeBarcodePrefix *string `type:"string" json:",omitempty"`
	TapeSizeInBytes   *int64  `type:"long" json:",omitempty"`

	metadataCreateTapesInput `json:"-", xml:"-"`
}

type metadataCreateTapesInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN,TapeSizeInBytes,ClientToken,NumTapesToCreate,TapeBarcodePrefix" json:",omitempty"`
}

type CreateTapesOutput struct {
	TapeARNs []*string `type:"list" json:",omitempty"`

	metadataCreateTapesOutput `json:"-", xml:"-"`
}

type metadataCreateTapesOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DeleteBandwidthRateLimitInput struct {
	BandwidthType *string `type:"string" json:",omitempty"`
	GatewayARN    *string `type:"string" json:",omitempty"`

	metadataDeleteBandwidthRateLimitInput `json:"-", xml:"-"`
}

type metadataDeleteBandwidthRateLimitInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN,BandwidthType" json:",omitempty"`
}

type DeleteBandwidthRateLimitOutput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataDeleteBandwidthRateLimitOutput `json:"-", xml:"-"`
}

type metadataDeleteBandwidthRateLimitOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DeleteChapCredentialsInput struct {
	InitiatorName *string `type:"string" json:",omitempty"`
	TargetARN     *string `type:"string" json:",omitempty"`

	metadataDeleteChapCredentialsInput `json:"-", xml:"-"`
}

type metadataDeleteChapCredentialsInput struct {
	SDKShapeTraits bool `type:"structure" required:"TargetARN,InitiatorName" json:",omitempty"`
}

type DeleteChapCredentialsOutput struct {
	InitiatorName *string `type:"string" json:",omitempty"`
	TargetARN     *string `type:"string" json:",omitempty"`

	metadataDeleteChapCredentialsOutput `json:"-", xml:"-"`
}

type metadataDeleteChapCredentialsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DeleteGatewayInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataDeleteGatewayInput `json:"-", xml:"-"`
}

type metadataDeleteGatewayInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type DeleteGatewayOutput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataDeleteGatewayOutput `json:"-", xml:"-"`
}

type metadataDeleteGatewayOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DeleteSnapshotScheduleInput struct {
	VolumeARN *string `type:"string" json:",omitempty"`

	metadataDeleteSnapshotScheduleInput `json:"-", xml:"-"`
}

type metadataDeleteSnapshotScheduleInput struct {
	SDKShapeTraits bool `type:"structure" required:"VolumeARN" json:",omitempty"`
}

type DeleteSnapshotScheduleOutput struct {
	VolumeARN *string `type:"string" json:",omitempty"`

	metadataDeleteSnapshotScheduleOutput `json:"-", xml:"-"`
}

type metadataDeleteSnapshotScheduleOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DeleteTapeArchiveInput struct {
	TapeARN *string `type:"string" json:",omitempty"`

	metadataDeleteTapeArchiveInput `json:"-", xml:"-"`
}

type metadataDeleteTapeArchiveInput struct {
	SDKShapeTraits bool `type:"structure" required:"TapeARN" json:",omitempty"`
}

type DeleteTapeArchiveOutput struct {
	TapeARN *string `type:"string" json:",omitempty"`

	metadataDeleteTapeArchiveOutput `json:"-", xml:"-"`
}

type metadataDeleteTapeArchiveOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DeleteTapeInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`
	TapeARN    *string `type:"string" json:",omitempty"`

	metadataDeleteTapeInput `json:"-", xml:"-"`
}

type metadataDeleteTapeInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN,TapeARN" json:",omitempty"`
}

type DeleteTapeOutput struct {
	TapeARN *string `type:"string" json:",omitempty"`

	metadataDeleteTapeOutput `json:"-", xml:"-"`
}

type metadataDeleteTapeOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DeleteVolumeInput struct {
	VolumeARN *string `type:"string" json:",omitempty"`

	metadataDeleteVolumeInput `json:"-", xml:"-"`
}

type metadataDeleteVolumeInput struct {
	SDKShapeTraits bool `type:"structure" required:"VolumeARN" json:",omitempty"`
}

type DeleteVolumeOutput struct {
	VolumeARN *string `type:"string" json:",omitempty"`

	metadataDeleteVolumeOutput `json:"-", xml:"-"`
}

type metadataDeleteVolumeOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeBandwidthRateLimitInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataDescribeBandwidthRateLimitInput `json:"-", xml:"-"`
}

type metadataDescribeBandwidthRateLimitInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type DescribeBandwidthRateLimitOutput struct {
	AverageDownloadRateLimitInBitsPerSec *int64  `type:"long" json:",omitempty"`
	AverageUploadRateLimitInBitsPerSec   *int64  `type:"long" json:",omitempty"`
	GatewayARN                           *string `type:"string" json:",omitempty"`

	metadataDescribeBandwidthRateLimitOutput `json:"-", xml:"-"`
}

type metadataDescribeBandwidthRateLimitOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeCacheInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataDescribeCacheInput `json:"-", xml:"-"`
}

type metadataDescribeCacheInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type DescribeCacheOutput struct {
	CacheAllocatedInBytes *int64    `type:"long" json:",omitempty"`
	CacheDirtyPercentage  *float64  `type:"double" json:",omitempty"`
	CacheHitPercentage    *float64  `type:"double" json:",omitempty"`
	CacheMissPercentage   *float64  `type:"double" json:",omitempty"`
	CacheUsedPercentage   *float64  `type:"double" json:",omitempty"`
	DiskIDs               []*string `locationName:"DiskIds" type:"list" json:"DiskIds,omitempty"`
	GatewayARN            *string   `type:"string" json:",omitempty"`

	metadataDescribeCacheOutput `json:"-", xml:"-"`
}

type metadataDescribeCacheOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeCachediSCSIVolumesInput struct {
	VolumeARNs []*string `type:"list" json:",omitempty"`

	metadataDescribeCachediSCSIVolumesInput `json:"-", xml:"-"`
}

type metadataDescribeCachediSCSIVolumesInput struct {
	SDKShapeTraits bool `type:"structure" required:"VolumeARNs" json:",omitempty"`
}

type DescribeCachediSCSIVolumesOutput struct {
	CachediSCSIVolumes []*CachediSCSIVolume `type:"list" json:",omitempty"`

	metadataDescribeCachediSCSIVolumesOutput `json:"-", xml:"-"`
}

type metadataDescribeCachediSCSIVolumesOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeChapCredentialsInput struct {
	TargetARN *string `type:"string" json:",omitempty"`

	metadataDescribeChapCredentialsInput `json:"-", xml:"-"`
}

type metadataDescribeChapCredentialsInput struct {
	SDKShapeTraits bool `type:"structure" required:"TargetARN" json:",omitempty"`
}

type DescribeChapCredentialsOutput struct {
	ChapCredentials []*ChapInfo `type:"list" json:",omitempty"`

	metadataDescribeChapCredentialsOutput `json:"-", xml:"-"`
}

type metadataDescribeChapCredentialsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeGatewayInformationInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataDescribeGatewayInformationInput `json:"-", xml:"-"`
}

type metadataDescribeGatewayInformationInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type DescribeGatewayInformationOutput struct {
	GatewayARN                 *string             `type:"string" json:",omitempty"`
	GatewayID                  *string             `locationName:"GatewayId" type:"string" json:"GatewayId,omitempty"`
	GatewayNetworkInterfaces   []*NetworkInterface `type:"list" json:",omitempty"`
	GatewayState               *string             `type:"string" json:",omitempty"`
	GatewayTimezone            *string             `type:"string" json:",omitempty"`
	GatewayType                *string             `type:"string" json:",omitempty"`
	NextUpdateAvailabilityDate *string             `type:"string" json:",omitempty"`

	metadataDescribeGatewayInformationOutput `json:"-", xml:"-"`
}

type metadataDescribeGatewayInformationOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeMaintenanceStartTimeInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataDescribeMaintenanceStartTimeInput `json:"-", xml:"-"`
}

type metadataDescribeMaintenanceStartTimeInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type DescribeMaintenanceStartTimeOutput struct {
	DayOfWeek    *int    `type:"integer" json:",omitempty"`
	GatewayARN   *string `type:"string" json:",omitempty"`
	HourOfDay    *int    `type:"integer" json:",omitempty"`
	MinuteOfHour *int    `type:"integer" json:",omitempty"`
	Timezone     *string `type:"string" json:",omitempty"`

	metadataDescribeMaintenanceStartTimeOutput `json:"-", xml:"-"`
}

type metadataDescribeMaintenanceStartTimeOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeSnapshotScheduleInput struct {
	VolumeARN *string `type:"string" json:",omitempty"`

	metadataDescribeSnapshotScheduleInput `json:"-", xml:"-"`
}

type metadataDescribeSnapshotScheduleInput struct {
	SDKShapeTraits bool `type:"structure" required:"VolumeARN" json:",omitempty"`
}

type DescribeSnapshotScheduleOutput struct {
	Description       *string `type:"string" json:",omitempty"`
	RecurrenceInHours *int    `type:"integer" json:",omitempty"`
	StartAt           *int    `type:"integer" json:",omitempty"`
	Timezone          *string `type:"string" json:",omitempty"`
	VolumeARN         *string `type:"string" json:",omitempty"`

	metadataDescribeSnapshotScheduleOutput `json:"-", xml:"-"`
}

type metadataDescribeSnapshotScheduleOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeStorediSCSIVolumesInput struct {
	VolumeARNs []*string `type:"list" json:",omitempty"`

	metadataDescribeStorediSCSIVolumesInput `json:"-", xml:"-"`
}

type metadataDescribeStorediSCSIVolumesInput struct {
	SDKShapeTraits bool `type:"structure" required:"VolumeARNs" json:",omitempty"`
}

type DescribeStorediSCSIVolumesOutput struct {
	StorediSCSIVolumes []*StorediSCSIVolume `type:"list" json:",omitempty"`

	metadataDescribeStorediSCSIVolumesOutput `json:"-", xml:"-"`
}

type metadataDescribeStorediSCSIVolumesOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeTapeArchivesInput struct {
	Limit    *int      `type:"integer" json:",omitempty"`
	Marker   *string   `type:"string" json:",omitempty"`
	TapeARNs []*string `type:"list" json:",omitempty"`

	metadataDescribeTapeArchivesInput `json:"-", xml:"-"`
}

type metadataDescribeTapeArchivesInput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeTapeArchivesOutput struct {
	Marker       *string        `type:"string" json:",omitempty"`
	TapeArchives []*TapeArchive `type:"list" json:",omitempty"`

	metadataDescribeTapeArchivesOutput `json:"-", xml:"-"`
}

type metadataDescribeTapeArchivesOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeTapeRecoveryPointsInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`
	Limit      *int    `type:"integer" json:",omitempty"`
	Marker     *string `type:"string" json:",omitempty"`

	metadataDescribeTapeRecoveryPointsInput `json:"-", xml:"-"`
}

type metadataDescribeTapeRecoveryPointsInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type DescribeTapeRecoveryPointsOutput struct {
	GatewayARN             *string                  `type:"string" json:",omitempty"`
	Marker                 *string                  `type:"string" json:",omitempty"`
	TapeRecoveryPointInfos []*TapeRecoveryPointInfo `type:"list" json:",omitempty"`

	metadataDescribeTapeRecoveryPointsOutput `json:"-", xml:"-"`
}

type metadataDescribeTapeRecoveryPointsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeTapesInput struct {
	GatewayARN *string   `type:"string" json:",omitempty"`
	Limit      *int      `type:"integer" json:",omitempty"`
	Marker     *string   `type:"string" json:",omitempty"`
	TapeARNs   []*string `type:"list" json:",omitempty"`

	metadataDescribeTapesInput `json:"-", xml:"-"`
}

type metadataDescribeTapesInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type DescribeTapesOutput struct {
	Marker *string `type:"string" json:",omitempty"`
	Tapes  []*Tape `type:"list" json:",omitempty"`

	metadataDescribeTapesOutput `json:"-", xml:"-"`
}

type metadataDescribeTapesOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeUploadBufferInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataDescribeUploadBufferInput `json:"-", xml:"-"`
}

type metadataDescribeUploadBufferInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type DescribeUploadBufferOutput struct {
	DiskIDs                      []*string `locationName:"DiskIds" type:"list" json:"DiskIds,omitempty"`
	GatewayARN                   *string   `type:"string" json:",omitempty"`
	UploadBufferAllocatedInBytes *int64    `type:"long" json:",omitempty"`
	UploadBufferUsedInBytes      *int64    `type:"long" json:",omitempty"`

	metadataDescribeUploadBufferOutput `json:"-", xml:"-"`
}

type metadataDescribeUploadBufferOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeVTLDevicesInput struct {
	GatewayARN    *string   `type:"string" json:",omitempty"`
	Limit         *int      `type:"integer" json:",omitempty"`
	Marker        *string   `type:"string" json:",omitempty"`
	VTLDeviceARNs []*string `type:"list" json:",omitempty"`

	metadataDescribeVTLDevicesInput `json:"-", xml:"-"`
}

type metadataDescribeVTLDevicesInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type DescribeVTLDevicesOutput struct {
	GatewayARN *string      `type:"string" json:",omitempty"`
	Marker     *string      `type:"string" json:",omitempty"`
	VTLDevices []*VTLDevice `type:"list" json:",omitempty"`

	metadataDescribeVTLDevicesOutput `json:"-", xml:"-"`
}

type metadataDescribeVTLDevicesOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeWorkingStorageInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataDescribeWorkingStorageInput `json:"-", xml:"-"`
}

type metadataDescribeWorkingStorageInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type DescribeWorkingStorageOutput struct {
	DiskIDs                        []*string `locationName:"DiskIds" type:"list" json:"DiskIds,omitempty"`
	GatewayARN                     *string   `type:"string" json:",omitempty"`
	WorkingStorageAllocatedInBytes *int64    `type:"long" json:",omitempty"`
	WorkingStorageUsedInBytes      *int64    `type:"long" json:",omitempty"`

	metadataDescribeWorkingStorageOutput `json:"-", xml:"-"`
}

type metadataDescribeWorkingStorageOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DeviceiSCSIAttributes struct {
	ChapEnabled          *bool   `type:"boolean" json:",omitempty"`
	NetworkInterfaceID   *string `locationName:"NetworkInterfaceId" type:"string" json:"NetworkInterfaceId,omitempty"`
	NetworkInterfacePort *int    `type:"integer" json:",omitempty"`
	TargetARN            *string `type:"string" json:",omitempty"`

	metadataDeviceiSCSIAttributes `json:"-", xml:"-"`
}

type metadataDeviceiSCSIAttributes struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DisableGatewayInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataDisableGatewayInput `json:"-", xml:"-"`
}

type metadataDisableGatewayInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type DisableGatewayOutput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataDisableGatewayOutput `json:"-", xml:"-"`
}

type metadataDisableGatewayOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Disk struct {
	DiskAllocationResource *string `type:"string" json:",omitempty"`
	DiskAllocationType     *string `type:"string" json:",omitempty"`
	DiskID                 *string `locationName:"DiskId" type:"string" json:"DiskId,omitempty"`
	DiskNode               *string `type:"string" json:",omitempty"`
	DiskPath               *string `type:"string" json:",omitempty"`
	DiskSizeInBytes        *int64  `type:"long" json:",omitempty"`
	DiskStatus             *string `type:"string" json:",omitempty"`

	metadataDisk `json:"-", xml:"-"`
}

type metadataDisk struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type GatewayInfo struct {
	GatewayARN              *string `type:"string" json:",omitempty"`
	GatewayOperationalState *string `type:"string" json:",omitempty"`
	GatewayType             *string `type:"string" json:",omitempty"`

	metadataGatewayInfo `json:"-", xml:"-"`
}

type metadataGatewayInfo struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type InternalServerError struct {
	Error   *StorageGatewayError `locationName:"error" type:"structure" json:"error,omitempty"`
	Message *string              `locationName:"message" type:"string" json:"message,omitempty"`

	metadataInternalServerError `json:"-", xml:"-"`
}

type metadataInternalServerError struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type InvalidGatewayRequestException struct {
	Error   *StorageGatewayError `locationName:"error" type:"structure" json:"error,omitempty"`
	Message *string              `locationName:"message" type:"string" json:"message,omitempty"`

	metadataInvalidGatewayRequestException `json:"-", xml:"-"`
}

type metadataInvalidGatewayRequestException struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListGatewaysInput struct {
	Limit  *int    `type:"integer" json:",omitempty"`
	Marker *string `type:"string" json:",omitempty"`

	metadataListGatewaysInput `json:"-", xml:"-"`
}

type metadataListGatewaysInput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListGatewaysOutput struct {
	Gateways []*GatewayInfo `type:"list" json:",omitempty"`
	Marker   *string        `type:"string" json:",omitempty"`

	metadataListGatewaysOutput `json:"-", xml:"-"`
}

type metadataListGatewaysOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListLocalDisksInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataListLocalDisksInput `json:"-", xml:"-"`
}

type metadataListLocalDisksInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type ListLocalDisksOutput struct {
	Disks      []*Disk `type:"list" json:",omitempty"`
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataListLocalDisksOutput `json:"-", xml:"-"`
}

type metadataListLocalDisksOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListVolumeRecoveryPointsInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataListVolumeRecoveryPointsInput `json:"-", xml:"-"`
}

type metadataListVolumeRecoveryPointsInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type ListVolumeRecoveryPointsOutput struct {
	GatewayARN               *string                    `type:"string" json:",omitempty"`
	VolumeRecoveryPointInfos []*VolumeRecoveryPointInfo `type:"list" json:",omitempty"`

	metadataListVolumeRecoveryPointsOutput `json:"-", xml:"-"`
}

type metadataListVolumeRecoveryPointsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListVolumesInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`
	Limit      *int    `type:"integer" json:",omitempty"`
	Marker     *string `type:"string" json:",omitempty"`

	metadataListVolumesInput `json:"-", xml:"-"`
}

type metadataListVolumesInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type ListVolumesOutput struct {
	GatewayARN  *string       `type:"string" json:",omitempty"`
	Marker      *string       `type:"string" json:",omitempty"`
	VolumeInfos []*VolumeInfo `type:"list" json:",omitempty"`

	metadataListVolumesOutput `json:"-", xml:"-"`
}

type metadataListVolumesOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type NetworkInterface struct {
	IPV4Address *string `locationName:"Ipv4Address" type:"string" json:"Ipv4Address,omitempty"`
	IPV6Address *string `locationName:"Ipv6Address" type:"string" json:"Ipv6Address,omitempty"`
	MACAddress  *string `locationName:"MacAddress" type:"string" json:"MacAddress,omitempty"`

	metadataNetworkInterface `json:"-", xml:"-"`
}

type metadataNetworkInterface struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ResetCacheInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataResetCacheInput `json:"-", xml:"-"`
}

type metadataResetCacheInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type ResetCacheOutput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataResetCacheOutput `json:"-", xml:"-"`
}

type metadataResetCacheOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type RetrieveTapeArchiveInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`
	TapeARN    *string `type:"string" json:",omitempty"`

	metadataRetrieveTapeArchiveInput `json:"-", xml:"-"`
}

type metadataRetrieveTapeArchiveInput struct {
	SDKShapeTraits bool `type:"structure" required:"TapeARN,GatewayARN" json:",omitempty"`
}

type RetrieveTapeArchiveOutput struct {
	TapeARN *string `type:"string" json:",omitempty"`

	metadataRetrieveTapeArchiveOutput `json:"-", xml:"-"`
}

type metadataRetrieveTapeArchiveOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type RetrieveTapeRecoveryPointInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`
	TapeARN    *string `type:"string" json:",omitempty"`

	metadataRetrieveTapeRecoveryPointInput `json:"-", xml:"-"`
}

type metadataRetrieveTapeRecoveryPointInput struct {
	SDKShapeTraits bool `type:"structure" required:"TapeARN,GatewayARN" json:",omitempty"`
}

type RetrieveTapeRecoveryPointOutput struct {
	TapeARN *string `type:"string" json:",omitempty"`

	metadataRetrieveTapeRecoveryPointOutput `json:"-", xml:"-"`
}

type metadataRetrieveTapeRecoveryPointOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ShutdownGatewayInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataShutdownGatewayInput `json:"-", xml:"-"`
}

type metadataShutdownGatewayInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type ShutdownGatewayOutput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataShutdownGatewayOutput `json:"-", xml:"-"`
}

type metadataShutdownGatewayOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type StartGatewayInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataStartGatewayInput `json:"-", xml:"-"`
}

type metadataStartGatewayInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type StartGatewayOutput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataStartGatewayOutput `json:"-", xml:"-"`
}

type metadataStartGatewayOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type StorageGatewayError struct {
	ErrorCode    *string             `locationName:"errorCode" type:"string" json:"errorCode,omitempty"`
	ErrorDetails *map[string]*string `locationName:"errorDetails" type:"map" json:"errorDetails,omitempty"`

	metadataStorageGatewayError `json:"-", xml:"-"`
}

type metadataStorageGatewayError struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type StorediSCSIVolume struct {
	PreservedExistingData *bool                  `type:"boolean" json:",omitempty"`
	SourceSnapshotID      *string                `locationName:"SourceSnapshotId" type:"string" json:"SourceSnapshotId,omitempty"`
	VolumeARN             *string                `type:"string" json:",omitempty"`
	VolumeDiskID          *string                `locationName:"VolumeDiskId" type:"string" json:"VolumeDiskId,omitempty"`
	VolumeID              *string                `locationName:"VolumeId" type:"string" json:"VolumeId,omitempty"`
	VolumeProgress        *float64               `type:"double" json:",omitempty"`
	VolumeSizeInBytes     *int64                 `type:"long" json:",omitempty"`
	VolumeStatus          *string                `type:"string" json:",omitempty"`
	VolumeType            *string                `type:"string" json:",omitempty"`
	VolumeiSCSIAttributes *VolumeiSCSIAttributes `type:"structure" json:",omitempty"`

	metadataStorediSCSIVolume `json:"-", xml:"-"`
}

type metadataStorediSCSIVolume struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Tape struct {
	Progress        *float64 `type:"double" json:",omitempty"`
	TapeARN         *string  `type:"string" json:",omitempty"`
	TapeBarcode     *string  `type:"string" json:",omitempty"`
	TapeSizeInBytes *int64   `type:"long" json:",omitempty"`
	TapeStatus      *string  `type:"string" json:",omitempty"`
	VTLDevice       *string  `type:"string" json:",omitempty"`

	metadataTape `json:"-", xml:"-"`
}

type metadataTape struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type TapeArchive struct {
	CompletionTime  *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	RetrievedTo     *string    `type:"string" json:",omitempty"`
	TapeARN         *string    `type:"string" json:",omitempty"`
	TapeBarcode     *string    `type:"string" json:",omitempty"`
	TapeSizeInBytes *int64     `type:"long" json:",omitempty"`
	TapeStatus      *string    `type:"string" json:",omitempty"`

	metadataTapeArchive `json:"-", xml:"-"`
}

type metadataTapeArchive struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type TapeRecoveryPointInfo struct {
	TapeARN               *string    `type:"string" json:",omitempty"`
	TapeRecoveryPointTime *time.Time `type:"timestamp" timestampFormat:"unix" json:",omitempty"`
	TapeSizeInBytes       *int64     `type:"long" json:",omitempty"`
	TapeStatus            *string    `type:"string" json:",omitempty"`

	metadataTapeRecoveryPointInfo `json:"-", xml:"-"`
}

type metadataTapeRecoveryPointInfo struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type UpdateBandwidthRateLimitInput struct {
	AverageDownloadRateLimitInBitsPerSec *int64  `type:"long" json:",omitempty"`
	AverageUploadRateLimitInBitsPerSec   *int64  `type:"long" json:",omitempty"`
	GatewayARN                           *string `type:"string" json:",omitempty"`

	metadataUpdateBandwidthRateLimitInput `json:"-", xml:"-"`
}

type metadataUpdateBandwidthRateLimitInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type UpdateBandwidthRateLimitOutput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataUpdateBandwidthRateLimitOutput `json:"-", xml:"-"`
}

type metadataUpdateBandwidthRateLimitOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type UpdateChapCredentialsInput struct {
	InitiatorName                 *string `type:"string" json:",omitempty"`
	SecretToAuthenticateInitiator *string `type:"string" json:",omitempty"`
	SecretToAuthenticateTarget    *string `type:"string" json:",omitempty"`
	TargetARN                     *string `type:"string" json:",omitempty"`

	metadataUpdateChapCredentialsInput `json:"-", xml:"-"`
}

type metadataUpdateChapCredentialsInput struct {
	SDKShapeTraits bool `type:"structure" required:"TargetARN,SecretToAuthenticateInitiator,InitiatorName" json:",omitempty"`
}

type UpdateChapCredentialsOutput struct {
	InitiatorName *string `type:"string" json:",omitempty"`
	TargetARN     *string `type:"string" json:",omitempty"`

	metadataUpdateChapCredentialsOutput `json:"-", xml:"-"`
}

type metadataUpdateChapCredentialsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type UpdateGatewayInformationInput struct {
	GatewayARN      *string `type:"string" json:",omitempty"`
	GatewayName     *string `type:"string" json:",omitempty"`
	GatewayTimezone *string `type:"string" json:",omitempty"`

	metadataUpdateGatewayInformationInput `json:"-", xml:"-"`
}

type metadataUpdateGatewayInformationInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type UpdateGatewayInformationOutput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataUpdateGatewayInformationOutput `json:"-", xml:"-"`
}

type metadataUpdateGatewayInformationOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type UpdateGatewaySoftwareNowInput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataUpdateGatewaySoftwareNowInput `json:"-", xml:"-"`
}

type metadataUpdateGatewaySoftwareNowInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN" json:",omitempty"`
}

type UpdateGatewaySoftwareNowOutput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataUpdateGatewaySoftwareNowOutput `json:"-", xml:"-"`
}

type metadataUpdateGatewaySoftwareNowOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type UpdateMaintenanceStartTimeInput struct {
	DayOfWeek    *int    `type:"integer" json:",omitempty"`
	GatewayARN   *string `type:"string" json:",omitempty"`
	HourOfDay    *int    `type:"integer" json:",omitempty"`
	MinuteOfHour *int    `type:"integer" json:",omitempty"`

	metadataUpdateMaintenanceStartTimeInput `json:"-", xml:"-"`
}

type metadataUpdateMaintenanceStartTimeInput struct {
	SDKShapeTraits bool `type:"structure" required:"GatewayARN,HourOfDay,MinuteOfHour,DayOfWeek" json:",omitempty"`
}

type UpdateMaintenanceStartTimeOutput struct {
	GatewayARN *string `type:"string" json:",omitempty"`

	metadataUpdateMaintenanceStartTimeOutput `json:"-", xml:"-"`
}

type metadataUpdateMaintenanceStartTimeOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type UpdateSnapshotScheduleInput struct {
	Description       *string `type:"string" json:",omitempty"`
	RecurrenceInHours *int    `type:"integer" json:",omitempty"`
	StartAt           *int    `type:"integer" json:",omitempty"`
	VolumeARN         *string `type:"string" json:",omitempty"`

	metadataUpdateSnapshotScheduleInput `json:"-", xml:"-"`
}

type metadataUpdateSnapshotScheduleInput struct {
	SDKShapeTraits bool `type:"structure" required:"VolumeARN,StartAt,RecurrenceInHours" json:",omitempty"`
}

type UpdateSnapshotScheduleOutput struct {
	VolumeARN *string `type:"string" json:",omitempty"`

	metadataUpdateSnapshotScheduleOutput `json:"-", xml:"-"`
}

type metadataUpdateSnapshotScheduleOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type UpdateVTLDeviceTypeInput struct {
	DeviceType   *string `type:"string" json:",omitempty"`
	VTLDeviceARN *string `type:"string" json:",omitempty"`

	metadataUpdateVTLDeviceTypeInput `json:"-", xml:"-"`
}

type metadataUpdateVTLDeviceTypeInput struct {
	SDKShapeTraits bool `type:"structure" required:"VTLDeviceARN,DeviceType" json:",omitempty"`
}

type UpdateVTLDeviceTypeOutput struct {
	VTLDeviceARN *string `type:"string" json:",omitempty"`

	metadataUpdateVTLDeviceTypeOutput `json:"-", xml:"-"`
}

type metadataUpdateVTLDeviceTypeOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type VTLDevice struct {
	DeviceiSCSIAttributes      *DeviceiSCSIAttributes `type:"structure" json:",omitempty"`
	VTLDeviceARN               *string                `type:"string" json:",omitempty"`
	VTLDeviceProductIdentifier *string                `type:"string" json:",omitempty"`
	VTLDeviceType              *string                `type:"string" json:",omitempty"`
	VTLDeviceVendor            *string                `type:"string" json:",omitempty"`

	metadataVTLDevice `json:"-", xml:"-"`
}

type metadataVTLDevice struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type VolumeInfo struct {
	VolumeARN  *string `type:"string" json:",omitempty"`
	VolumeType *string `type:"string" json:",omitempty"`

	metadataVolumeInfo `json:"-", xml:"-"`
}

type metadataVolumeInfo struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type VolumeRecoveryPointInfo struct {
	VolumeARN               *string `type:"string" json:",omitempty"`
	VolumeRecoveryPointTime *string `type:"string" json:",omitempty"`
	VolumeSizeInBytes       *int64  `type:"long" json:",omitempty"`
	VolumeUsageInBytes      *int64  `type:"long" json:",omitempty"`

	metadataVolumeRecoveryPointInfo `json:"-", xml:"-"`
}

type metadataVolumeRecoveryPointInfo struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type VolumeiSCSIAttributes struct {
	ChapEnabled          *bool   `type:"boolean" json:",omitempty"`
	LunNumber            *int    `type:"integer" json:",omitempty"`
	NetworkInterfaceID   *string `locationName:"NetworkInterfaceId" type:"string" json:"NetworkInterfaceId,omitempty"`
	NetworkInterfacePort *int    `type:"integer" json:",omitempty"`
	TargetARN            *string `type:"string" json:",omitempty"`

	metadataVolumeiSCSIAttributes `json:"-", xml:"-"`
}

type metadataVolumeiSCSIAttributes struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}