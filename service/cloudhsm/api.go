package cloudhsm

// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

import (
	"github.com/awslabs/aws-sdk-go/aws"
)

// CreateHAPGRequest generates a request for the CreateHAPG operation.
func (c *CloudHSM) CreateHAPGRequest(input *CreateHAPGInput) (req *aws.Request, output *CreateHAPGOutput) {
	if opCreateHAPG == nil {
		opCreateHAPG = &aws.Operation{
			Name:       "CreateHapg",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateHAPG, input, output)
	output = &CreateHAPGOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) CreateHAPG(input *CreateHAPGInput) (output *CreateHAPGOutput, err error) {
	req, out := c.CreateHAPGRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateHAPG *aws.Operation

// CreateHSMRequest generates a request for the CreateHSM operation.
func (c *CloudHSM) CreateHSMRequest(input *CreateHSMInput) (req *aws.Request, output *CreateHSMOutput) {
	if opCreateHSM == nil {
		opCreateHSM = &aws.Operation{
			Name:       "CreateHsm",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateHSM, input, output)
	output = &CreateHSMOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) CreateHSM(input *CreateHSMInput) (output *CreateHSMOutput, err error) {
	req, out := c.CreateHSMRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateHSM *aws.Operation

// CreateLunaClientRequest generates a request for the CreateLunaClient operation.
func (c *CloudHSM) CreateLunaClientRequest(input *CreateLunaClientInput) (req *aws.Request, output *CreateLunaClientOutput) {
	if opCreateLunaClient == nil {
		opCreateLunaClient = &aws.Operation{
			Name:       "CreateLunaClient",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateLunaClient, input, output)
	output = &CreateLunaClientOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) CreateLunaClient(input *CreateLunaClientInput) (output *CreateLunaClientOutput, err error) {
	req, out := c.CreateLunaClientRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateLunaClient *aws.Operation

// DeleteHAPGRequest generates a request for the DeleteHAPG operation.
func (c *CloudHSM) DeleteHAPGRequest(input *DeleteHAPGInput) (req *aws.Request, output *DeleteHAPGOutput) {
	if opDeleteHAPG == nil {
		opDeleteHAPG = &aws.Operation{
			Name:       "DeleteHapg",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteHAPG, input, output)
	output = &DeleteHAPGOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) DeleteHAPG(input *DeleteHAPGInput) (output *DeleteHAPGOutput, err error) {
	req, out := c.DeleteHAPGRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteHAPG *aws.Operation

// DeleteHSMRequest generates a request for the DeleteHSM operation.
func (c *CloudHSM) DeleteHSMRequest(input *DeleteHSMInput) (req *aws.Request, output *DeleteHSMOutput) {
	if opDeleteHSM == nil {
		opDeleteHSM = &aws.Operation{
			Name:       "DeleteHsm",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteHSM, input, output)
	output = &DeleteHSMOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) DeleteHSM(input *DeleteHSMInput) (output *DeleteHSMOutput, err error) {
	req, out := c.DeleteHSMRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteHSM *aws.Operation

// DeleteLunaClientRequest generates a request for the DeleteLunaClient operation.
func (c *CloudHSM) DeleteLunaClientRequest(input *DeleteLunaClientInput) (req *aws.Request, output *DeleteLunaClientOutput) {
	if opDeleteLunaClient == nil {
		opDeleteLunaClient = &aws.Operation{
			Name:       "DeleteLunaClient",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteLunaClient, input, output)
	output = &DeleteLunaClientOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) DeleteLunaClient(input *DeleteLunaClientInput) (output *DeleteLunaClientOutput, err error) {
	req, out := c.DeleteLunaClientRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteLunaClient *aws.Operation

// DescribeHAPGRequest generates a request for the DescribeHAPG operation.
func (c *CloudHSM) DescribeHAPGRequest(input *DescribeHAPGInput) (req *aws.Request, output *DescribeHAPGOutput) {
	if opDescribeHAPG == nil {
		opDescribeHAPG = &aws.Operation{
			Name:       "DescribeHapg",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeHAPG, input, output)
	output = &DescribeHAPGOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) DescribeHAPG(input *DescribeHAPGInput) (output *DescribeHAPGOutput, err error) {
	req, out := c.DescribeHAPGRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeHAPG *aws.Operation

// DescribeHSMRequest generates a request for the DescribeHSM operation.
func (c *CloudHSM) DescribeHSMRequest(input *DescribeHSMInput) (req *aws.Request, output *DescribeHSMOutput) {
	if opDescribeHSM == nil {
		opDescribeHSM = &aws.Operation{
			Name:       "DescribeHsm",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeHSM, input, output)
	output = &DescribeHSMOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) DescribeHSM(input *DescribeHSMInput) (output *DescribeHSMOutput, err error) {
	req, out := c.DescribeHSMRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeHSM *aws.Operation

// DescribeLunaClientRequest generates a request for the DescribeLunaClient operation.
func (c *CloudHSM) DescribeLunaClientRequest(input *DescribeLunaClientInput) (req *aws.Request, output *DescribeLunaClientOutput) {
	if opDescribeLunaClient == nil {
		opDescribeLunaClient = &aws.Operation{
			Name:       "DescribeLunaClient",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeLunaClient, input, output)
	output = &DescribeLunaClientOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) DescribeLunaClient(input *DescribeLunaClientInput) (output *DescribeLunaClientOutput, err error) {
	req, out := c.DescribeLunaClientRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeLunaClient *aws.Operation

// GetConfigRequest generates a request for the GetConfig operation.
func (c *CloudHSM) GetConfigRequest(input *GetConfigInput) (req *aws.Request, output *GetConfigOutput) {
	if opGetConfig == nil {
		opGetConfig = &aws.Operation{
			Name:       "GetConfig",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opGetConfig, input, output)
	output = &GetConfigOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) GetConfig(input *GetConfigInput) (output *GetConfigOutput, err error) {
	req, out := c.GetConfigRequest(input)
	output = out
	err = req.Send()
	return
}

var opGetConfig *aws.Operation

// ListAvailableZonesRequest generates a request for the ListAvailableZones operation.
func (c *CloudHSM) ListAvailableZonesRequest(input *ListAvailableZonesInput) (req *aws.Request, output *ListAvailableZonesOutput) {
	if opListAvailableZones == nil {
		opListAvailableZones = &aws.Operation{
			Name:       "ListAvailableZones",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListAvailableZones, input, output)
	output = &ListAvailableZonesOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) ListAvailableZones(input *ListAvailableZonesInput) (output *ListAvailableZonesOutput, err error) {
	req, out := c.ListAvailableZonesRequest(input)
	output = out
	err = req.Send()
	return
}

var opListAvailableZones *aws.Operation

// ListHSMsRequest generates a request for the ListHSMs operation.
func (c *CloudHSM) ListHSMsRequest(input *ListHSMsInput) (req *aws.Request, output *ListHSMsOutput) {
	if opListHSMs == nil {
		opListHSMs = &aws.Operation{
			Name:       "ListHsms",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListHSMs, input, output)
	output = &ListHSMsOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) ListHSMs(input *ListHSMsInput) (output *ListHSMsOutput, err error) {
	req, out := c.ListHSMsRequest(input)
	output = out
	err = req.Send()
	return
}

var opListHSMs *aws.Operation

// ListHapgsRequest generates a request for the ListHapgs operation.
func (c *CloudHSM) ListHapgsRequest(input *ListHapgsInput) (req *aws.Request, output *ListHapgsOutput) {
	if opListHapgs == nil {
		opListHapgs = &aws.Operation{
			Name:       "ListHapgs",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListHapgs, input, output)
	output = &ListHapgsOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) ListHapgs(input *ListHapgsInput) (output *ListHapgsOutput, err error) {
	req, out := c.ListHapgsRequest(input)
	output = out
	err = req.Send()
	return
}

var opListHapgs *aws.Operation

// ListLunaClientsRequest generates a request for the ListLunaClients operation.
func (c *CloudHSM) ListLunaClientsRequest(input *ListLunaClientsInput) (req *aws.Request, output *ListLunaClientsOutput) {
	if opListLunaClients == nil {
		opListLunaClients = &aws.Operation{
			Name:       "ListLunaClients",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListLunaClients, input, output)
	output = &ListLunaClientsOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) ListLunaClients(input *ListLunaClientsInput) (output *ListLunaClientsOutput, err error) {
	req, out := c.ListLunaClientsRequest(input)
	output = out
	err = req.Send()
	return
}

var opListLunaClients *aws.Operation

// ModifyHAPGRequest generates a request for the ModifyHAPG operation.
func (c *CloudHSM) ModifyHAPGRequest(input *ModifyHAPGInput) (req *aws.Request, output *ModifyHAPGOutput) {
	if opModifyHAPG == nil {
		opModifyHAPG = &aws.Operation{
			Name:       "ModifyHapg",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opModifyHAPG, input, output)
	output = &ModifyHAPGOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) ModifyHAPG(input *ModifyHAPGInput) (output *ModifyHAPGOutput, err error) {
	req, out := c.ModifyHAPGRequest(input)
	output = out
	err = req.Send()
	return
}

var opModifyHAPG *aws.Operation

// ModifyHSMRequest generates a request for the ModifyHSM operation.
func (c *CloudHSM) ModifyHSMRequest(input *ModifyHSMInput) (req *aws.Request, output *ModifyHSMOutput) {
	if opModifyHSM == nil {
		opModifyHSM = &aws.Operation{
			Name:       "ModifyHsm",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opModifyHSM, input, output)
	output = &ModifyHSMOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) ModifyHSM(input *ModifyHSMInput) (output *ModifyHSMOutput, err error) {
	req, out := c.ModifyHSMRequest(input)
	output = out
	err = req.Send()
	return
}

var opModifyHSM *aws.Operation

// ModifyLunaClientRequest generates a request for the ModifyLunaClient operation.
func (c *CloudHSM) ModifyLunaClientRequest(input *ModifyLunaClientInput) (req *aws.Request, output *ModifyLunaClientOutput) {
	if opModifyLunaClient == nil {
		opModifyLunaClient = &aws.Operation{
			Name:       "ModifyLunaClient",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opModifyLunaClient, input, output)
	output = &ModifyLunaClientOutput{}
	req.Data = output
	return
}

func (c *CloudHSM) ModifyLunaClient(input *ModifyLunaClientInput) (output *ModifyLunaClientOutput, err error) {
	req, out := c.ModifyLunaClientRequest(input)
	output = out
	err = req.Send()
	return
}

var opModifyLunaClient *aws.Operation

type CloudHSMInternalException struct {
	metadataCloudHSMInternalException `json:"-", xml:"-"`
}

type metadataCloudHSMInternalException struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CloudHSMServiceException struct {
	Message   *string `locationName:"message" type:"string" json:"message,omitempty"`
	Retryable *bool   `locationName:"retryable" type:"boolean" json:"retryable,omitempty"`

	metadataCloudHSMServiceException `json:"-", xml:"-"`
}

type metadataCloudHSMServiceException struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CreateHAPGInput struct {
	Label *string `type:"string" json:",omitempty"`

	metadataCreateHAPGInput `json:"-", xml:"-"`
}

type metadataCreateHAPGInput struct {
	SDKShapeTraits bool `type:"structure" required:"Label" json:",omitempty"`
}

type CreateHAPGOutput struct {
	HAPGARN *string `locationName:"HapgArn" type:"string" json:"HapgArn,omitempty"`

	metadataCreateHAPGOutput `json:"-", xml:"-"`
}

type metadataCreateHAPGOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CreateHSMInput struct {
	ClientToken      *string `locationName:"ClientToken" type:"string" json:"ClientToken,omitempty"`
	ENIIP            *string `locationName:"EniIp" type:"string" json:"EniIp,omitempty"`
	ExternalID       *string `locationName:"ExternalId" type:"string" json:"ExternalId,omitempty"`
	IAMRoleARN       *string `locationName:"IamRoleArn" type:"string" json:"IamRoleArn,omitempty"`
	SSHKey           *string `locationName:"SshKey" type:"string" json:"SshKey,omitempty"`
	SubnetID         *string `locationName:"SubnetId" type:"string" json:"SubnetId,omitempty"`
	SubscriptionType *string `locationName:"SubscriptionType" type:"string" json:"SubscriptionType,omitempty"`
	SyslogIP         *string `locationName:"SyslogIp" type:"string" json:"SyslogIp,omitempty"`

	metadataCreateHSMInput `json:"-", xml:"-"`
}

type metadataCreateHSMInput struct {
	SDKShapeTraits bool `locationName:"CreateHsmRequest" type:"structure" required:"SubnetId,SshKey,IamRoleArn,SubscriptionType" json:",omitempty"`
}

type CreateHSMOutput struct {
	HSMARN *string `locationName:"HsmArn" type:"string" json:"HsmArn,omitempty"`

	metadataCreateHSMOutput `json:"-", xml:"-"`
}

type metadataCreateHSMOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CreateLunaClientInput struct {
	Certificate *string `type:"string" json:",omitempty"`
	Label       *string `type:"string" json:",omitempty"`

	metadataCreateLunaClientInput `json:"-", xml:"-"`
}

type metadataCreateLunaClientInput struct {
	SDKShapeTraits bool `type:"structure" required:"Certificate" json:",omitempty"`
}

type CreateLunaClientOutput struct {
	ClientARN *string `locationName:"ClientArn" type:"string" json:"ClientArn,omitempty"`

	metadataCreateLunaClientOutput `json:"-", xml:"-"`
}

type metadataCreateLunaClientOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DeleteHAPGInput struct {
	HAPGARN *string `locationName:"HapgArn" type:"string" json:"HapgArn,omitempty"`

	metadataDeleteHAPGInput `json:"-", xml:"-"`
}

type metadataDeleteHAPGInput struct {
	SDKShapeTraits bool `type:"structure" required:"HapgArn" json:",omitempty"`
}

type DeleteHAPGOutput struct {
	Status *string `type:"string" json:",omitempty"`

	metadataDeleteHAPGOutput `json:"-", xml:"-"`
}

type metadataDeleteHAPGOutput struct {
	SDKShapeTraits bool `type:"structure" required:"Status" json:",omitempty"`
}

type DeleteHSMInput struct {
	HSMARN *string `locationName:"HsmArn" type:"string" json:"HsmArn,omitempty"`

	metadataDeleteHSMInput `json:"-", xml:"-"`
}

type metadataDeleteHSMInput struct {
	SDKShapeTraits bool `locationName:"DeleteHsmRequest" type:"structure" required:"HsmArn" json:",omitempty"`
}

type DeleteHSMOutput struct {
	Status *string `type:"string" json:",omitempty"`

	metadataDeleteHSMOutput `json:"-", xml:"-"`
}

type metadataDeleteHSMOutput struct {
	SDKShapeTraits bool `type:"structure" required:"Status" json:",omitempty"`
}

type DeleteLunaClientInput struct {
	ClientARN *string `locationName:"ClientArn" type:"string" json:"ClientArn,omitempty"`

	metadataDeleteLunaClientInput `json:"-", xml:"-"`
}

type metadataDeleteLunaClientInput struct {
	SDKShapeTraits bool `type:"structure" required:"ClientArn" json:",omitempty"`
}

type DeleteLunaClientOutput struct {
	Status *string `type:"string" json:",omitempty"`

	metadataDeleteLunaClientOutput `json:"-", xml:"-"`
}

type metadataDeleteLunaClientOutput struct {
	SDKShapeTraits bool `type:"structure" required:"Status" json:",omitempty"`
}

type DescribeHAPGInput struct {
	HAPGARN *string `locationName:"HapgArn" type:"string" json:"HapgArn,omitempty"`

	metadataDescribeHAPGInput `json:"-", xml:"-"`
}

type metadataDescribeHAPGInput struct {
	SDKShapeTraits bool `type:"structure" required:"HapgArn" json:",omitempty"`
}

type DescribeHAPGOutput struct {
	HAPGARN                 *string   `locationName:"HapgArn" type:"string" json:"HapgArn,omitempty"`
	HAPGSerial              *string   `locationName:"HapgSerial" type:"string" json:"HapgSerial,omitempty"`
	HSMsLastActionFailed    []*string `locationName:"HsmsLastActionFailed" type:"list" json:"HsmsLastActionFailed,omitempty"`
	HSMsPendingDeletion     []*string `locationName:"HsmsPendingDeletion" type:"list" json:"HsmsPendingDeletion,omitempty"`
	HSMsPendingRegistration []*string `locationName:"HsmsPendingRegistration" type:"list" json:"HsmsPendingRegistration,omitempty"`
	Label                   *string   `type:"string" json:",omitempty"`
	LastModifiedTimestamp   *string   `type:"string" json:",omitempty"`
	PartitionSerialList     []*string `type:"list" json:",omitempty"`
	State                   *string   `type:"string" json:",omitempty"`

	metadataDescribeHAPGOutput `json:"-", xml:"-"`
}

type metadataDescribeHAPGOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeHSMInput struct {
	HSMARN          *string `locationName:"HsmArn" type:"string" json:"HsmArn,omitempty"`
	HSMSerialNumber *string `locationName:"HsmSerialNumber" type:"string" json:"HsmSerialNumber,omitempty"`

	metadataDescribeHSMInput `json:"-", xml:"-"`
}

type metadataDescribeHSMInput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeHSMOutput struct {
	AvailabilityZone      *string   `type:"string" json:",omitempty"`
	ENIID                 *string   `locationName:"EniId" type:"string" json:"EniId,omitempty"`
	ENIIP                 *string   `locationName:"EniIp" type:"string" json:"EniIp,omitempty"`
	HSMARN                *string   `locationName:"HsmArn" type:"string" json:"HsmArn,omitempty"`
	HSMType               *string   `locationName:"HsmType" type:"string" json:"HsmType,omitempty"`
	IAMRoleARN            *string   `locationName:"IamRoleArn" type:"string" json:"IamRoleArn,omitempty"`
	Partitions            []*string `type:"list" json:",omitempty"`
	SSHKeyLastUpdated     *string   `locationName:"SshKeyLastUpdated" type:"string" json:"SshKeyLastUpdated,omitempty"`
	SSHPublicKey          *string   `locationName:"SshPublicKey" type:"string" json:"SshPublicKey,omitempty"`
	SerialNumber          *string   `type:"string" json:",omitempty"`
	ServerCertLastUpdated *string   `type:"string" json:",omitempty"`
	ServerCertURI         *string   `locationName:"ServerCertUri" type:"string" json:"ServerCertUri,omitempty"`
	SoftwareVersion       *string   `type:"string" json:",omitempty"`
	Status                *string   `type:"string" json:",omitempty"`
	StatusDetails         *string   `type:"string" json:",omitempty"`
	SubnetID              *string   `locationName:"SubnetId" type:"string" json:"SubnetId,omitempty"`
	SubscriptionEndDate   *string   `type:"string" json:",omitempty"`
	SubscriptionStartDate *string   `type:"string" json:",omitempty"`
	SubscriptionType      *string   `type:"string" json:",omitempty"`
	VPCID                 *string   `locationName:"VpcId" type:"string" json:"VpcId,omitempty"`
	VendorName            *string   `type:"string" json:",omitempty"`

	metadataDescribeHSMOutput `json:"-", xml:"-"`
}

type metadataDescribeHSMOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeLunaClientInput struct {
	CertificateFingerprint *string `type:"string" json:",omitempty"`
	ClientARN              *string `locationName:"ClientArn" type:"string" json:"ClientArn,omitempty"`

	metadataDescribeLunaClientInput `json:"-", xml:"-"`
}

type metadataDescribeLunaClientInput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DescribeLunaClientOutput struct {
	Certificate            *string `type:"string" json:",omitempty"`
	CertificateFingerprint *string `type:"string" json:",omitempty"`
	ClientARN              *string `locationName:"ClientArn" type:"string" json:"ClientArn,omitempty"`
	Label                  *string `type:"string" json:",omitempty"`
	LastModifiedTimestamp  *string `type:"string" json:",omitempty"`

	metadataDescribeLunaClientOutput `json:"-", xml:"-"`
}

type metadataDescribeLunaClientOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type GetConfigInput struct {
	ClientARN     *string   `locationName:"ClientArn" type:"string" json:"ClientArn,omitempty"`
	ClientVersion *string   `type:"string" json:",omitempty"`
	HAPGList      []*string `locationName:"HapgList" type:"list" json:"HapgList,omitempty"`

	metadataGetConfigInput `json:"-", xml:"-"`
}

type metadataGetConfigInput struct {
	SDKShapeTraits bool `type:"structure" required:"ClientArn,ClientVersion,HapgList" json:",omitempty"`
}

type GetConfigOutput struct {
	ConfigCred *string `type:"string" json:",omitempty"`
	ConfigFile *string `type:"string" json:",omitempty"`
	ConfigType *string `type:"string" json:",omitempty"`

	metadataGetConfigOutput `json:"-", xml:"-"`
}

type metadataGetConfigOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type InvalidRequestException struct {
	metadataInvalidRequestException `json:"-", xml:"-"`
}

type metadataInvalidRequestException struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListAvailableZonesInput struct {
	metadataListAvailableZonesInput `json:"-", xml:"-"`
}

type metadataListAvailableZonesInput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListAvailableZonesOutput struct {
	AZList []*string `type:"list" json:",omitempty"`

	metadataListAvailableZonesOutput `json:"-", xml:"-"`
}

type metadataListAvailableZonesOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListHSMsInput struct {
	NextToken *string `type:"string" json:",omitempty"`

	metadataListHSMsInput `json:"-", xml:"-"`
}

type metadataListHSMsInput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListHSMsOutput struct {
	HSMList   []*string `locationName:"HsmList" type:"list" json:"HsmList,omitempty"`
	NextToken *string   `type:"string" json:",omitempty"`

	metadataListHSMsOutput `json:"-", xml:"-"`
}

type metadataListHSMsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListHapgsInput struct {
	NextToken *string `type:"string" json:",omitempty"`

	metadataListHapgsInput `json:"-", xml:"-"`
}

type metadataListHapgsInput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListHapgsOutput struct {
	HAPGList  []*string `locationName:"HapgList" type:"list" json:"HapgList,omitempty"`
	NextToken *string   `type:"string" json:",omitempty"`

	metadataListHapgsOutput `json:"-", xml:"-"`
}

type metadataListHapgsOutput struct {
	SDKShapeTraits bool `type:"structure" required:"HapgList" json:",omitempty"`
}

type ListLunaClientsInput struct {
	NextToken *string `type:"string" json:",omitempty"`

	metadataListLunaClientsInput `json:"-", xml:"-"`
}

type metadataListLunaClientsInput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListLunaClientsOutput struct {
	ClientList []*string `type:"list" json:",omitempty"`
	NextToken  *string   `type:"string" json:",omitempty"`

	metadataListLunaClientsOutput `json:"-", xml:"-"`
}

type metadataListLunaClientsOutput struct {
	SDKShapeTraits bool `type:"structure" required:"ClientList" json:",omitempty"`
}

type ModifyHAPGInput struct {
	HAPGARN             *string   `locationName:"HapgArn" type:"string" json:"HapgArn,omitempty"`
	Label               *string   `type:"string" json:",omitempty"`
	PartitionSerialList []*string `type:"list" json:",omitempty"`

	metadataModifyHAPGInput `json:"-", xml:"-"`
}

type metadataModifyHAPGInput struct {
	SDKShapeTraits bool `type:"structure" required:"HapgArn" json:",omitempty"`
}

type ModifyHAPGOutput struct {
	HAPGARN *string `locationName:"HapgArn" type:"string" json:"HapgArn,omitempty"`

	metadataModifyHAPGOutput `json:"-", xml:"-"`
}

type metadataModifyHAPGOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ModifyHSMInput struct {
	ENIIP      *string `locationName:"EniIp" type:"string" json:"EniIp,omitempty"`
	ExternalID *string `locationName:"ExternalId" type:"string" json:"ExternalId,omitempty"`
	HSMARN     *string `locationName:"HsmArn" type:"string" json:"HsmArn,omitempty"`
	IAMRoleARN *string `locationName:"IamRoleArn" type:"string" json:"IamRoleArn,omitempty"`
	SubnetID   *string `locationName:"SubnetId" type:"string" json:"SubnetId,omitempty"`
	SyslogIP   *string `locationName:"SyslogIp" type:"string" json:"SyslogIp,omitempty"`

	metadataModifyHSMInput `json:"-", xml:"-"`
}

type metadataModifyHSMInput struct {
	SDKShapeTraits bool `locationName:"ModifyHsmRequest" type:"structure" required:"HsmArn" json:",omitempty"`
}

type ModifyHSMOutput struct {
	HSMARN *string `locationName:"HsmArn" type:"string" json:"HsmArn,omitempty"`

	metadataModifyHSMOutput `json:"-", xml:"-"`
}

type metadataModifyHSMOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ModifyLunaClientInput struct {
	Certificate *string `type:"string" json:",omitempty"`
	ClientARN   *string `locationName:"ClientArn" type:"string" json:"ClientArn,omitempty"`

	metadataModifyLunaClientInput `json:"-", xml:"-"`
}

type metadataModifyLunaClientInput struct {
	SDKShapeTraits bool `type:"structure" required:"ClientArn,Certificate" json:",omitempty"`
}

type ModifyLunaClientOutput struct {
	ClientARN *string `locationName:"ClientArn" type:"string" json:"ClientArn,omitempty"`

	metadataModifyLunaClientOutput `json:"-", xml:"-"`
}

type metadataModifyLunaClientOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}