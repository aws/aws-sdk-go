// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

// Package route53domains provides a client for Amazon Route 53 Domains.
package route53domains

import (
	"sync"
	"time"

	"github.com/aws/aws-sdk-go/aws"
)

var oprw sync.Mutex

// CheckDomainAvailabilityRequest generates a request for the CheckDomainAvailability operation.
func (c *Route53Domains) CheckDomainAvailabilityRequest(input *CheckDomainAvailabilityInput) (req *aws.Request, output *CheckDomainAvailabilityOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opCheckDomainAvailability == nil {
		opCheckDomainAvailability = &aws.Operation{
			Name:       "CheckDomainAvailability",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &CheckDomainAvailabilityInput{}
	}

	req = c.newRequest(opCheckDomainAvailability, input, output)
	output = &CheckDomainAvailabilityOutput{}
	req.Data = output
	return
}

// This operation checks the availability of one domain name. You can access
// this API without authenticating. Note that if the availability status of
// a domain is pending, you must submit another request to determine the availability
// of the domain name.
func (c *Route53Domains) CheckDomainAvailability(input *CheckDomainAvailabilityInput) (*CheckDomainAvailabilityOutput, error) {
	req, out := c.CheckDomainAvailabilityRequest(input)
	err := req.Send()
	return out, err
}

var opCheckDomainAvailability *aws.Operation

// DeleteTagsForDomainRequest generates a request for the DeleteTagsForDomain operation.
func (c *Route53Domains) DeleteTagsForDomainRequest(input *DeleteTagsForDomainInput) (req *aws.Request, output *DeleteTagsForDomainOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDeleteTagsForDomain == nil {
		opDeleteTagsForDomain = &aws.Operation{
			Name:       "DeleteTagsForDomain",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DeleteTagsForDomainInput{}
	}

	req = c.newRequest(opDeleteTagsForDomain, input, output)
	output = &DeleteTagsForDomainOutput{}
	req.Data = output
	return
}

// This operation deletes the specified tags for a domain.
//
// All tag operations are eventually consistent; subsequent operations may
// not immediately represent all issued operations.
func (c *Route53Domains) DeleteTagsForDomain(input *DeleteTagsForDomainInput) (*DeleteTagsForDomainOutput, error) {
	req, out := c.DeleteTagsForDomainRequest(input)
	err := req.Send()
	return out, err
}

var opDeleteTagsForDomain *aws.Operation

// DisableDomainAutoRenewRequest generates a request for the DisableDomainAutoRenew operation.
func (c *Route53Domains) DisableDomainAutoRenewRequest(input *DisableDomainAutoRenewInput) (req *aws.Request, output *DisableDomainAutoRenewOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDisableDomainAutoRenew == nil {
		opDisableDomainAutoRenew = &aws.Operation{
			Name:       "DisableDomainAutoRenew",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DisableDomainAutoRenewInput{}
	}

	req = c.newRequest(opDisableDomainAutoRenew, input, output)
	output = &DisableDomainAutoRenewOutput{}
	req.Data = output
	return
}

// This operation disables automatic renewal of domain registration for the
// specified domain.
//
// Caution! Amazon Route 53 doesn't have a manual renewal process, so if you
// disable automatic renewal, registration for the domain will not be renewed
// when the expiration date passes, and you will lose control of the domain
// name.
func (c *Route53Domains) DisableDomainAutoRenew(input *DisableDomainAutoRenewInput) (*DisableDomainAutoRenewOutput, error) {
	req, out := c.DisableDomainAutoRenewRequest(input)
	err := req.Send()
	return out, err
}

var opDisableDomainAutoRenew *aws.Operation

// DisableDomainTransferLockRequest generates a request for the DisableDomainTransferLock operation.
func (c *Route53Domains) DisableDomainTransferLockRequest(input *DisableDomainTransferLockInput) (req *aws.Request, output *DisableDomainTransferLockOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opDisableDomainTransferLock == nil {
		opDisableDomainTransferLock = &aws.Operation{
			Name:       "DisableDomainTransferLock",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &DisableDomainTransferLockInput{}
	}

	req = c.newRequest(opDisableDomainTransferLock, input, output)
	output = &DisableDomainTransferLockOutput{}
	req.Data = output
	return
}

// This operation removes the transfer lock on the domain (specifically the
// clientTransferProhibited status) to allow domain transfers. We recommend
// you refrain from performing this action unless you intend to transfer the
// domain to a different registrar. Successful submission returns an operation
// ID that you can use to track the progress and completion of the action. If
// the request is not completed successfully, the domain registrant will be
// notified by email.
func (c *Route53Domains) DisableDomainTransferLock(input *DisableDomainTransferLockInput) (*DisableDomainTransferLockOutput, error) {
	req, out := c.DisableDomainTransferLockRequest(input)
	err := req.Send()
	return out, err
}

var opDisableDomainTransferLock *aws.Operation

// EnableDomainAutoRenewRequest generates a request for the EnableDomainAutoRenew operation.
func (c *Route53Domains) EnableDomainAutoRenewRequest(input *EnableDomainAutoRenewInput) (req *aws.Request, output *EnableDomainAutoRenewOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opEnableDomainAutoRenew == nil {
		opEnableDomainAutoRenew = &aws.Operation{
			Name:       "EnableDomainAutoRenew",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &EnableDomainAutoRenewInput{}
	}

	req = c.newRequest(opEnableDomainAutoRenew, input, output)
	output = &EnableDomainAutoRenewOutput{}
	req.Data = output
	return
}

// This operation configures Amazon Route 53 to automatically renew the specified
// domain before the domain registration expires. The cost of renewing your
// domain registration is billed to your AWS account.
//
// The period during which you can renew a domain name varies by TLD. For a
// list of TLDs and their renewal policies, see "Renewal, restoration, and deletion
// times" (http://wiki.gandi.net/en/domains/renew#renewal_restoration_and_deletion_times)
// on the website for our registrar partner, Gandi. Route 53 requires that you
// renew before the end of the renewal period that is listed on the Gandi website
// so we can complete processing before the deadline.
func (c *Route53Domains) EnableDomainAutoRenew(input *EnableDomainAutoRenewInput) (*EnableDomainAutoRenewOutput, error) {
	req, out := c.EnableDomainAutoRenewRequest(input)
	err := req.Send()
	return out, err
}

var opEnableDomainAutoRenew *aws.Operation

// EnableDomainTransferLockRequest generates a request for the EnableDomainTransferLock operation.
func (c *Route53Domains) EnableDomainTransferLockRequest(input *EnableDomainTransferLockInput) (req *aws.Request, output *EnableDomainTransferLockOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opEnableDomainTransferLock == nil {
		opEnableDomainTransferLock = &aws.Operation{
			Name:       "EnableDomainTransferLock",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &EnableDomainTransferLockInput{}
	}

	req = c.newRequest(opEnableDomainTransferLock, input, output)
	output = &EnableDomainTransferLockOutput{}
	req.Data = output
	return
}

// This operation sets the transfer lock on the domain (specifically the clientTransferProhibited
// status) to prevent domain transfers. Successful submission returns an operation
// ID that you can use to track the progress and completion of the action. If
// the request is not completed successfully, the domain registrant will be
// notified by email.
func (c *Route53Domains) EnableDomainTransferLock(input *EnableDomainTransferLockInput) (*EnableDomainTransferLockOutput, error) {
	req, out := c.EnableDomainTransferLockRequest(input)
	err := req.Send()
	return out, err
}

var opEnableDomainTransferLock *aws.Operation

// GetDomainDetailRequest generates a request for the GetDomainDetail operation.
func (c *Route53Domains) GetDomainDetailRequest(input *GetDomainDetailInput) (req *aws.Request, output *GetDomainDetailOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opGetDomainDetail == nil {
		opGetDomainDetail = &aws.Operation{
			Name:       "GetDomainDetail",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &GetDomainDetailInput{}
	}

	req = c.newRequest(opGetDomainDetail, input, output)
	output = &GetDomainDetailOutput{}
	req.Data = output
	return
}

// This operation returns detailed information about the domain. The domain's
// contact information is also returned as part of the output.
func (c *Route53Domains) GetDomainDetail(input *GetDomainDetailInput) (*GetDomainDetailOutput, error) {
	req, out := c.GetDomainDetailRequest(input)
	err := req.Send()
	return out, err
}

var opGetDomainDetail *aws.Operation

// GetOperationDetailRequest generates a request for the GetOperationDetail operation.
func (c *Route53Domains) GetOperationDetailRequest(input *GetOperationDetailInput) (req *aws.Request, output *GetOperationDetailOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opGetOperationDetail == nil {
		opGetOperationDetail = &aws.Operation{
			Name:       "GetOperationDetail",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &GetOperationDetailInput{}
	}

	req = c.newRequest(opGetOperationDetail, input, output)
	output = &GetOperationDetailOutput{}
	req.Data = output
	return
}

// This operation returns the current status of an operation that is not completed.
func (c *Route53Domains) GetOperationDetail(input *GetOperationDetailInput) (*GetOperationDetailOutput, error) {
	req, out := c.GetOperationDetailRequest(input)
	err := req.Send()
	return out, err
}

var opGetOperationDetail *aws.Operation

// ListDomainsRequest generates a request for the ListDomains operation.
func (c *Route53Domains) ListDomainsRequest(input *ListDomainsInput) (req *aws.Request, output *ListDomainsOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opListDomains == nil {
		opListDomains = &aws.Operation{
			Name:       "ListDomains",
			HTTPMethod: "POST",
			HTTPPath:   "/",
			Paginator: &aws.Paginator{
				InputTokens:     []string{"Marker"},
				OutputTokens:    []string{"NextPageMarker"},
				LimitToken:      "MaxItems",
				TruncationToken: "",
			},
		}
	}

	if input == nil {
		input = &ListDomainsInput{}
	}

	req = c.newRequest(opListDomains, input, output)
	output = &ListDomainsOutput{}
	req.Data = output
	return
}

// This operation returns all the domain names registered with Amazon Route
// 53 for the current AWS account.
func (c *Route53Domains) ListDomains(input *ListDomainsInput) (*ListDomainsOutput, error) {
	req, out := c.ListDomainsRequest(input)
	err := req.Send()
	return out, err
}

func (c *Route53Domains) ListDomainsPages(input *ListDomainsInput, fn func(p *ListDomainsOutput, lastPage bool) (shouldContinue bool)) error {
	page, _ := c.ListDomainsRequest(input)
	return page.EachPage(func(p interface{}, lastPage bool) bool {
		return fn(p.(*ListDomainsOutput), lastPage)
	})
}

var opListDomains *aws.Operation

// ListOperationsRequest generates a request for the ListOperations operation.
func (c *Route53Domains) ListOperationsRequest(input *ListOperationsInput) (req *aws.Request, output *ListOperationsOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opListOperations == nil {
		opListOperations = &aws.Operation{
			Name:       "ListOperations",
			HTTPMethod: "POST",
			HTTPPath:   "/",
			Paginator: &aws.Paginator{
				InputTokens:     []string{"Marker"},
				OutputTokens:    []string{"NextPageMarker"},
				LimitToken:      "MaxItems",
				TruncationToken: "",
			},
		}
	}

	if input == nil {
		input = &ListOperationsInput{}
	}

	req = c.newRequest(opListOperations, input, output)
	output = &ListOperationsOutput{}
	req.Data = output
	return
}

// This operation returns the operation IDs of operations that are not yet complete.
func (c *Route53Domains) ListOperations(input *ListOperationsInput) (*ListOperationsOutput, error) {
	req, out := c.ListOperationsRequest(input)
	err := req.Send()
	return out, err
}

func (c *Route53Domains) ListOperationsPages(input *ListOperationsInput, fn func(p *ListOperationsOutput, lastPage bool) (shouldContinue bool)) error {
	page, _ := c.ListOperationsRequest(input)
	return page.EachPage(func(p interface{}, lastPage bool) bool {
		return fn(p.(*ListOperationsOutput), lastPage)
	})
}

var opListOperations *aws.Operation

// ListTagsForDomainRequest generates a request for the ListTagsForDomain operation.
func (c *Route53Domains) ListTagsForDomainRequest(input *ListTagsForDomainInput) (req *aws.Request, output *ListTagsForDomainOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opListTagsForDomain == nil {
		opListTagsForDomain = &aws.Operation{
			Name:       "ListTagsForDomain",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &ListTagsForDomainInput{}
	}

	req = c.newRequest(opListTagsForDomain, input, output)
	output = &ListTagsForDomainOutput{}
	req.Data = output
	return
}

// This operation returns all of the tags that are associated with the specified
// domain.
//
// All tag operations are eventually consistent; subsequent operations may
// not immediately represent all issued operations.
func (c *Route53Domains) ListTagsForDomain(input *ListTagsForDomainInput) (*ListTagsForDomainOutput, error) {
	req, out := c.ListTagsForDomainRequest(input)
	err := req.Send()
	return out, err
}

var opListTagsForDomain *aws.Operation

// RegisterDomainRequest generates a request for the RegisterDomain operation.
func (c *Route53Domains) RegisterDomainRequest(input *RegisterDomainInput) (req *aws.Request, output *RegisterDomainOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opRegisterDomain == nil {
		opRegisterDomain = &aws.Operation{
			Name:       "RegisterDomain",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &RegisterDomainInput{}
	}

	req = c.newRequest(opRegisterDomain, input, output)
	output = &RegisterDomainOutput{}
	req.Data = output
	return
}

// This operation registers a domain. Domains are registered by the AWS registrar
// partner, Gandi. For some top-level domains (TLDs), this operation requires
// extra parameters.
//
// When you register a domain, Amazon Route 53 does the following:
//
//  Creates a Amazon Route 53 hosted zone that has the same name as the domain.
// Amazon Route 53 assigns four name servers to your hosted zone and automatically
// updates your domain registration with the names of these name servers. Enables
// autorenew, so your domain registration will renew automatically each year.
// We'll notify you in advance of the renewal date so you can choose whether
// to renew the registration. Optionally enables privacy protection, so WHOIS
// queries return contact information for our registrar partner, Gandi, instead
// of the information you entered for registrant, admin, and tech contacts.
// If registration is successful, returns an operation ID that you can use to
// track the progress and completion of the action. If the request is not completed
// successfully, the domain registrant is notified by email. Charges your AWS
// account an amount based on the top-level domain. For more information, see
// Amazon Route 53 Pricing (http://aws.amazon.com/route53/pricing/).
func (c *Route53Domains) RegisterDomain(input *RegisterDomainInput) (*RegisterDomainOutput, error) {
	req, out := c.RegisterDomainRequest(input)
	err := req.Send()
	return out, err
}

var opRegisterDomain *aws.Operation

// RetrieveDomainAuthCodeRequest generates a request for the RetrieveDomainAuthCode operation.
func (c *Route53Domains) RetrieveDomainAuthCodeRequest(input *RetrieveDomainAuthCodeInput) (req *aws.Request, output *RetrieveDomainAuthCodeOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opRetrieveDomainAuthCode == nil {
		opRetrieveDomainAuthCode = &aws.Operation{
			Name:       "RetrieveDomainAuthCode",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &RetrieveDomainAuthCodeInput{}
	}

	req = c.newRequest(opRetrieveDomainAuthCode, input, output)
	output = &RetrieveDomainAuthCodeOutput{}
	req.Data = output
	return
}

// This operation returns the AuthCode for the domain. To transfer a domain
// to another registrar, you provide this value to the new registrar.
func (c *Route53Domains) RetrieveDomainAuthCode(input *RetrieveDomainAuthCodeInput) (*RetrieveDomainAuthCodeOutput, error) {
	req, out := c.RetrieveDomainAuthCodeRequest(input)
	err := req.Send()
	return out, err
}

var opRetrieveDomainAuthCode *aws.Operation

// TransferDomainRequest generates a request for the TransferDomain operation.
func (c *Route53Domains) TransferDomainRequest(input *TransferDomainInput) (req *aws.Request, output *TransferDomainOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opTransferDomain == nil {
		opTransferDomain = &aws.Operation{
			Name:       "TransferDomain",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &TransferDomainInput{}
	}

	req = c.newRequest(opTransferDomain, input, output)
	output = &TransferDomainOutput{}
	req.Data = output
	return
}

// This operation transfers a domain from another registrar to Amazon Route
// 53. When the transfer is complete, the domain is registered with the AWS
// registrar partner, Gandi.
//
// For transfer requirements, a detailed procedure, and information about viewing
// the status of a domain transfer, see Transferring Registration for a Domain
// to Amazon Route 53 (http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/domain-transfer-to-route-53.html)
// in the Amazon Route 53 Developer Guide.
//
// If the registrar for your domain is also the DNS service provider for the
// domain, we highly recommend that you consider transferring your DNS service
// to Amazon Route 53 or to another DNS service provider before you transfer
// your registration. Some registrars provide free DNS service when you purchase
// a domain registration. When you transfer the registration, the previous registrar
// will not renew your domain registration and could end your DNS service at
// any time.
//
// Caution! If the registrar for your domain is also the DNS service provider
// for the domain and you don't transfer DNS service to another provider, your
// website, email, and the web applications associated with the domain might
// become unavailable. If the transfer is successful, this method returns an
// operation ID that you can use to track the progress and completion of the
// action. If the transfer doesn't complete successfully, the domain registrant
// will be notified by email.
func (c *Route53Domains) TransferDomain(input *TransferDomainInput) (*TransferDomainOutput, error) {
	req, out := c.TransferDomainRequest(input)
	err := req.Send()
	return out, err
}

var opTransferDomain *aws.Operation

// UpdateDomainContactRequest generates a request for the UpdateDomainContact operation.
func (c *Route53Domains) UpdateDomainContactRequest(input *UpdateDomainContactInput) (req *aws.Request, output *UpdateDomainContactOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opUpdateDomainContact == nil {
		opUpdateDomainContact = &aws.Operation{
			Name:       "UpdateDomainContact",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &UpdateDomainContactInput{}
	}

	req = c.newRequest(opUpdateDomainContact, input, output)
	output = &UpdateDomainContactOutput{}
	req.Data = output
	return
}

// This operation updates the contact information for a particular domain. Information
// for at least one contact (registrant, administrator, or technical) must be
// supplied for update.
//
// If the update is successful, this method returns an operation ID that you
// can use to track the progress and completion of the action. If the request
// is not completed successfully, the domain registrant will be notified by
// email.
func (c *Route53Domains) UpdateDomainContact(input *UpdateDomainContactInput) (*UpdateDomainContactOutput, error) {
	req, out := c.UpdateDomainContactRequest(input)
	err := req.Send()
	return out, err
}

var opUpdateDomainContact *aws.Operation

// UpdateDomainContactPrivacyRequest generates a request for the UpdateDomainContactPrivacy operation.
func (c *Route53Domains) UpdateDomainContactPrivacyRequest(input *UpdateDomainContactPrivacyInput) (req *aws.Request, output *UpdateDomainContactPrivacyOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opUpdateDomainContactPrivacy == nil {
		opUpdateDomainContactPrivacy = &aws.Operation{
			Name:       "UpdateDomainContactPrivacy",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &UpdateDomainContactPrivacyInput{}
	}

	req = c.newRequest(opUpdateDomainContactPrivacy, input, output)
	output = &UpdateDomainContactPrivacyOutput{}
	req.Data = output
	return
}

// This operation updates the specified domain contact's privacy setting. When
// the privacy option is enabled, personal information such as postal or email
// address is hidden from the results of a public WHOIS query. The privacy services
// are provided by the AWS registrar, Gandi. For more information, see the Gandi
// privacy features (http://www.gandi.net/domain/whois/?currency=USD&amp;lang=en).
//
// This operation only affects the privacy of the specified contact type (registrant,
// administrator, or tech). Successful acceptance returns an operation ID that
// you can use with GetOperationDetail to track the progress and completion
// of the action. If the request is not completed successfully, the domain registrant
// will be notified by email.
func (c *Route53Domains) UpdateDomainContactPrivacy(input *UpdateDomainContactPrivacyInput) (*UpdateDomainContactPrivacyOutput, error) {
	req, out := c.UpdateDomainContactPrivacyRequest(input)
	err := req.Send()
	return out, err
}

var opUpdateDomainContactPrivacy *aws.Operation

// UpdateDomainNameserversRequest generates a request for the UpdateDomainNameservers operation.
func (c *Route53Domains) UpdateDomainNameserversRequest(input *UpdateDomainNameserversInput) (req *aws.Request, output *UpdateDomainNameserversOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opUpdateDomainNameservers == nil {
		opUpdateDomainNameservers = &aws.Operation{
			Name:       "UpdateDomainNameservers",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &UpdateDomainNameserversInput{}
	}

	req = c.newRequest(opUpdateDomainNameservers, input, output)
	output = &UpdateDomainNameserversOutput{}
	req.Data = output
	return
}

// This operation replaces the current set of name servers for the domain with
// the specified set of name servers. If you use Amazon Route 53 as your DNS
// service, specify the four name servers in the delegation set for the hosted
// zone for the domain.
//
// If successful, this operation returns an operation ID that you can use to
// track the progress and completion of the action. If the request is not completed
// successfully, the domain registrant will be notified by email.
func (c *Route53Domains) UpdateDomainNameservers(input *UpdateDomainNameserversInput) (*UpdateDomainNameserversOutput, error) {
	req, out := c.UpdateDomainNameserversRequest(input)
	err := req.Send()
	return out, err
}

var opUpdateDomainNameservers *aws.Operation

// UpdateTagsForDomainRequest generates a request for the UpdateTagsForDomain operation.
func (c *Route53Domains) UpdateTagsForDomainRequest(input *UpdateTagsForDomainInput) (req *aws.Request, output *UpdateTagsForDomainOutput) {
	oprw.Lock()
	defer oprw.Unlock()

	if opUpdateTagsForDomain == nil {
		opUpdateTagsForDomain = &aws.Operation{
			Name:       "UpdateTagsForDomain",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	if input == nil {
		input = &UpdateTagsForDomainInput{}
	}

	req = c.newRequest(opUpdateTagsForDomain, input, output)
	output = &UpdateTagsForDomainOutput{}
	req.Data = output
	return
}

// This operation adds or updates tags for a specified domain.
//
// All tag operations are eventually consistent; subsequent operations may
// not immediately represent all issued operations.
func (c *Route53Domains) UpdateTagsForDomain(input *UpdateTagsForDomainInput) (*UpdateTagsForDomainOutput, error) {
	req, out := c.UpdateTagsForDomainRequest(input)
	err := req.Send()
	return out, err
}

var opUpdateTagsForDomain *aws.Operation

// The CheckDomainAvailability request contains the following elements.
type CheckDomainAvailabilityInput struct {
	// The name of a domain.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: The domain name can contain only the letters a through z, the
	// numbers 0 through 9, and hyphen (-). Internationalized Domain Names are not
	// supported.
	//
	// Required: Yes
	DomainName *string `type:"string" required:"true"`

	// Reserved for future use.
	IDNLangCode *string `locationName:"IdnLangCode" type:"string"`

	metadataCheckDomainAvailabilityInput `json:"-" xml:"-"`
}

type metadataCheckDomainAvailabilityInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The CheckDomainAvailability response includes the following elements.
type CheckDomainAvailabilityOutput struct {
	// Whether the domain name is available for registering.
	//
	//  You can only register domains designated as AVAILABLE.
	//
	//  Type: String
	//
	// Valid values:
	//
	//   AVAILABLE – The domain name is available.  AVAILABLE_RESERVED – The domain
	// name is reserved under specific conditions.  AVAILABLE_PREORDER – The domain
	// name is available and can be preordered.  UNAVAILABLE – The domain name is
	// not available.  UNAVAILABLE_PREMIUM – The domain name is not available.
	// UNAVAILABLE_RESTRICTED – The domain name is forbidden.  RESERVED – The domain
	// name has been reserved for another person or organization.  DONT_KNOW – The
	// TLD registry didn't reply with a definitive answer about whether the domain
	// name is available. Amazon Route 53 can return this response for a variety
	// of reasons, for example, the registry is performing maintenance. Try again
	// later.
	Availability *string `type:"string" required:"true"`

	metadataCheckDomainAvailabilityOutput `json:"-" xml:"-"`
}

type metadataCheckDomainAvailabilityOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// ContactDetail includes the following elements.
type ContactDetail struct {
	// First line of the contact's address.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters.
	//
	// Parents: RegistrantContact, AdminContact, TechContact
	//
	// Required: Yes
	AddressLine1 *string `type:"string"`

	// Second line of contact's address, if any.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters.
	//
	// Parents: RegistrantContact, AdminContact, TechContact
	//
	// Required: No
	AddressLine2 *string `type:"string"`

	// The city of the contact's address.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters.
	//
	// Parents: RegistrantContact, AdminContact, TechContact
	//
	// Required: Yes
	City *string `type:"string"`

	// Indicates whether the contact is a person, company, association, or public
	// organization. If you choose an option other than PERSON, you must enter an
	// organization name, and you can't enable privacy protection for the contact.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters.
	//
	// Valid values: PERSON | COMPANY | ASSOCIATION | PUBLIC_BODY
	//
	// Parents: RegistrantContact, AdminContact, TechContact
	//
	// Required: Yes
	ContactType *string `type:"string"`

	// Code for the country of the contact's address.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters.
	//
	// Parents: RegistrantContact, AdminContact, TechContact
	//
	// Required: Yes
	CountryCode *string `type:"string"`

	// Email address of the contact.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 254 characters.
	//
	// Parents: RegistrantContact, AdminContact, TechContact
	//
	// Required: Yes
	Email *string `type:"string"`

	// A list of name-value pairs for parameters required by certain top-level domains.
	//
	// Type: Complex
	//
	// Default: None
	//
	// Parents: RegistrantContact, AdminContact, TechContact
	//
	// Children: Name, Value
	//
	// Required: No
	ExtraParams []*ExtraParam `type:"list"`

	// Fax number of the contact.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Phone number must be specified in the format "+[country dialing
	// code].[number including any area code]". For example, a US phone number might
	// appear as "+1.1234567890".
	//
	// Parents: RegistrantContact, AdminContact, TechContact
	//
	// Required: No
	Fax *string `type:"string"`

	// First name of contact.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters.
	//
	// Parents: RegistrantContact, AdminContact, TechContact
	//
	// Required: Yes
	FirstName *string `type:"string"`

	// Last name of contact.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters.
	//
	// Parents: RegistrantContact, AdminContact, TechContact
	//
	// Required: Yes
	LastName *string `type:"string"`

	// Name of the organization for contact types other than PERSON.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters. Contact type must not be PERSON.
	//
	// Parents: RegistrantContact, AdminContact, TechContact
	//
	// Required: No
	OrganizationName *string `type:"string"`

	// The phone number of the contact.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Phone number must be specified in the format "+[country dialing
	// code].[number including any area code>]". For example, a US phone number
	// might appear as "+1.1234567890".
	//
	// Parents: RegistrantContact, AdminContact, TechContact
	//
	// Required: Yes
	PhoneNumber *string `type:"string"`

	// The state or province of the contact's city.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters.
	//
	// Parents: RegistrantContact, AdminContact, TechContact
	//
	// Required: No
	State *string `type:"string"`

	// The zip or postal code of the contact's address.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters.
	//
	// Parents: RegistrantContact, AdminContact, TechContact
	//
	// Required: No
	ZipCode *string `type:"string"`

	metadataContactDetail `json:"-" xml:"-"`
}

type metadataContactDetail struct {
	SDKShapeTraits bool `type:"structure"`
}

// The DeleteTagsForDomainRequest includes the following elements.
type DeleteTagsForDomainInput struct {
	// The domain for which you want to delete one or more tags.
	//
	// The name of a domain.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: The domain name can contain only the letters a through z, the
	// numbers 0 through 9, and hyphen (-). Hyphens are allowed only when theyaposre
	// surrounded by letters, numbers, or other hyphens. You canapost specify a
	// hyphen at the beginning or end of a label. To specify an Internationalized
	// Domain Name, you must convert the name to Punycode.
	//
	// Required: Yes
	DomainName *string `type:"string" required:"true"`

	// A list of tag keys to delete.
	//
	// Type: A list that contains the keys of the tags that you want to delete.
	//
	// Default: None
	//
	// Required: No
	//
	// '>
	TagsToDelete []*string `type:"list" required:"true"`

	metadataDeleteTagsForDomainInput `json:"-" xml:"-"`
}

type metadataDeleteTagsForDomainInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteTagsForDomainOutput struct {
	metadataDeleteTagsForDomainOutput `json:"-" xml:"-"`
}

type metadataDeleteTagsForDomainOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DisableDomainAutoRenewInput struct {
	DomainName *string `type:"string" required:"true"`

	metadataDisableDomainAutoRenewInput `json:"-" xml:"-"`
}

type metadataDisableDomainAutoRenewInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DisableDomainAutoRenewOutput struct {
	metadataDisableDomainAutoRenewOutput `json:"-" xml:"-"`
}

type metadataDisableDomainAutoRenewOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The DisableDomainTransferLock request includes the following element.
type DisableDomainTransferLockInput struct {
	// The name of a domain.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: The domain name can contain only the letters a through z, the
	// numbers 0 through 9, and hyphen (-). Internationalized Domain Names are not
	// supported.
	//
	// Required: Yes
	DomainName *string `type:"string" required:"true"`

	metadataDisableDomainTransferLockInput `json:"-" xml:"-"`
}

type metadataDisableDomainTransferLockInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The DisableDomainTransferLock response includes the following element.
type DisableDomainTransferLockOutput struct {
	// Identifier for tracking the progress of the request. To use this ID to query
	// the operation status, use GetOperationDetail.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters.
	OperationID *string `locationName:"OperationId" type:"string" required:"true"`

	metadataDisableDomainTransferLockOutput `json:"-" xml:"-"`
}

type metadataDisableDomainTransferLockOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DomainSummary struct {
	// Indicates whether the domain is automatically renewed upon expiration.
	//
	// Type: Boolean
	//
	// Valid values: True | False
	AutoRenew *bool `type:"boolean"`

	// The name of a domain.
	//
	// Type: String
	DomainName *string `type:"string" required:"true"`

	// Expiration date of the domain in Coordinated Universal Time (UTC).
	//
	// Type: Long
	Expiry *time.Time `type:"timestamp" timestampFormat:"unix"`

	// Indicates whether a domain is locked from unauthorized transfer to another
	// party.
	//
	// Type: Boolean
	//
	// Valid values: True | False
	TransferLock *bool `type:"boolean"`

	metadataDomainSummary `json:"-" xml:"-"`
}

type metadataDomainSummary struct {
	SDKShapeTraits bool `type:"structure"`
}

type EnableDomainAutoRenewInput struct {
	DomainName *string `type:"string" required:"true"`

	metadataEnableDomainAutoRenewInput `json:"-" xml:"-"`
}

type metadataEnableDomainAutoRenewInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type EnableDomainAutoRenewOutput struct {
	metadataEnableDomainAutoRenewOutput `json:"-" xml:"-"`
}

type metadataEnableDomainAutoRenewOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The EnableDomainTransferLock request includes the following element.
type EnableDomainTransferLockInput struct {
	// The name of a domain.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: The domain name can contain only the letters a through z, the
	// numbers 0 through 9, and hyphen (-). Internationalized Domain Names are not
	// supported.
	//
	// Required: Yes
	DomainName *string `type:"string" required:"true"`

	metadataEnableDomainTransferLockInput `json:"-" xml:"-"`
}

type metadataEnableDomainTransferLockInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The EnableDomainTransferLock response includes the following elements.
type EnableDomainTransferLockOutput struct {
	// Identifier for tracking the progress of the request. To use this ID to query
	// the operation status, use GetOperationDetail.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters.
	OperationID *string `locationName:"OperationId" type:"string" required:"true"`

	metadataEnableDomainTransferLockOutput `json:"-" xml:"-"`
}

type metadataEnableDomainTransferLockOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// ExtraParam includes the following elements.
type ExtraParam struct {
	// Name of the additional parameter required by the top-level domain.
	//
	// Type: String
	//
	// Default: None
	//
	// Valid values: DUNS_NUMBER | BRAND_NUMBER | BIRTH_DEPARTMENT | BIRTH_DATE_IN_YYYY_MM_DD
	// | BIRTH_COUNTRY | BIRTH_CITY | DOCUMENT_NUMBER | AU_ID_NUMBER | AU_ID_TYPE
	// | CA_LEGAL_TYPE | ES_IDENTIFICATION | ES_IDENTIFICATION_TYPE | ES_LEGAL_FORM
	// | FI_BUSINESS_NUMBER | FI_ID_NUMBER | IT_PIN | RU_PASSPORT_DATA | SE_ID_NUMBER
	// | SG_ID_NUMBER | VAT_NUMBER
	//
	// Parent: ExtraParams
	//
	// Required: Yes
	Name *string `type:"string" required:"true"`

	// Values corresponding to the additional parameter names required by some top-level
	// domains.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 2048 characters.
	//
	// Parent: ExtraParams
	//
	// Required: Yes
	Value *string `type:"string" required:"true"`

	metadataExtraParam `json:"-" xml:"-"`
}

type metadataExtraParam struct {
	SDKShapeTraits bool `type:"structure"`
}

// The GetDomainDetail request includes the following element.
type GetDomainDetailInput struct {
	// The name of a domain.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: The domain name can contain only the letters a through z, the
	// numbers 0 through 9, and hyphen (-). Internationalized Domain Names are not
	// supported.
	//
	// Required: Yes
	DomainName *string `type:"string" required:"true"`

	metadataGetDomainDetailInput `json:"-" xml:"-"`
}

type metadataGetDomainDetailInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The GetDomainDetail response includes the following elements.
type GetDomainDetailOutput struct {
	// Email address to contact to report incorrect contact information for a domain,
	// to report that the domain is being used to send spam, to report that someone
	// is cybersquatting on a domain name, or report some other type of abuse.
	//
	// Type: String
	AbuseContactEmail *string `type:"string"`

	// Phone number for reporting abuse.
	//
	// Type: String
	AbuseContactPhone *string `type:"string"`

	// Provides details about the domain administrative contact.
	//
	// Type: Complex
	//
	// Children: FirstName, MiddleName, LastName, ContactType, OrganizationName,
	// AddressLine1, AddressLine2, City, State, CountryCode, ZipCode, PhoneNumber,
	// Email, Fax, ExtraParams
	AdminContact *ContactDetail `type:"structure" required:"true"`

	// Specifies whether contact information for the admin contact is concealed
	// from WHOIS queries. If the value is true, WHOIS ("who is") queries will return
	// contact information for our registrar partner, Gandi, instead of the contact
	// information that you enter.
	//
	// Type: Boolean
	AdminPrivacy *bool `type:"boolean"`

	// Specifies whether the domain registration is set to renew automatically.
	//
	// Type: Boolean
	AutoRenew *bool `type:"boolean"`

	// The date when the domain was created as found in the response to a WHOIS
	// query. The date format is Unix time.
	CreationDate *time.Time `type:"timestamp" timestampFormat:"unix"`

	// Reserved for future use.
	DNSSec *string `locationName:"DnsSec" type:"string"`

	// The name of a domain.
	//
	// Type: String
	DomainName *string `type:"string" required:"true"`

	// The date when the registration for the domain is set to expire. The date
	// format is Unix time.
	ExpirationDate *time.Time `type:"timestamp" timestampFormat:"unix"`

	// The name of the domain.
	//
	// Type: String
	Nameservers []*Nameserver `type:"list" required:"true"`

	// Provides details about the domain registrant.
	//
	// Type: Complex
	//
	// Children: FirstName, MiddleName, LastName, ContactType, OrganizationName,
	// AddressLine1, AddressLine2, City, State, CountryCode, ZipCode, PhoneNumber,
	// Email, Fax, ExtraParams
	RegistrantContact *ContactDetail `type:"structure" required:"true"`

	// Specifies whether contact information for the registrant contact is concealed
	// from WHOIS queries. If the value is true, WHOIS ("who is") queries will return
	// contact information for our registrar partner, Gandi, instead of the contact
	// information that you enter.
	//
	// Type: Boolean
	RegistrantPrivacy *bool `type:"boolean"`

	// Name of the registrar of the domain as identified in the registry. Amazon
	// Route 53 domains are registered by registrar Gandi. The value is "GANDI SAS".
	//
	// Type: String
	RegistrarName *string `type:"string"`

	// Web address of the registrar.
	//
	// Type: String
	RegistrarURL *string `locationName:"RegistrarUrl" type:"string"`

	// Reserved for future use.
	RegistryDomainID *string `locationName:"RegistryDomainId" type:"string"`

	// Reseller of the domain. Domains registered or transferred using Amazon Route
	// 53 domains will have "Amazon" as the reseller.
	//
	// Type: String
	Reseller *string `type:"string"`

	// An array of domain name status codes, also known as Extensible Provisioning
	// Protocol (EPP) status codes.
	//
	// ICANN, the organization that maintains a central database of domain names,
	// has developed a set of domain name status codes that tell you the status
	// of a variety of operations on a domain name, for example, registering a domain
	// name, transferring a domain name to another registrar, renewing the registration
	// for a domain name, and so on. All registrars use this same set of status
	// codes.
	//
	// For a current list of domain name status codes and an explanation of what
	// each code means, go to the ICANN website (https://www.icann.org/) and search
	// for epp status codes. (Search on the ICANN website; web searches sometimes
	// return an old version of the document.)
	//
	// Type: Array of String
	StatusList []*string `type:"list"`

	// Provides details about the domain technical contact.
	//
	// Type: Complex
	//
	// Children: FirstName, MiddleName, LastName, ContactType, OrganizationName,
	// AddressLine1, AddressLine2, City, State, CountryCode, ZipCode, PhoneNumber,
	// Email, Fax, ExtraParams
	TechContact *ContactDetail `type:"structure" required:"true"`

	// Specifies whether contact information for the tech contact is concealed from
	// WHOIS queries. If the value is true, WHOIS ("who is") queries will return
	// contact information for our registrar partner, Gandi, instead of the contact
	// information that you enter.
	//
	// Type: Boolean
	TechPrivacy *bool `type:"boolean"`

	// The last updated date of the domain as found in the response to a WHOIS query.
	// The date format is Unix time.
	UpdatedDate *time.Time `type:"timestamp" timestampFormat:"unix"`

	// The fully qualified name of the WHOIS server that can answer the WHOIS query
	// for the domain.
	//
	// Type: String
	WhoIsServer *string `type:"string"`

	metadataGetDomainDetailOutput `json:"-" xml:"-"`
}

type metadataGetDomainDetailOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The GetOperationDetail request includes the following element.
type GetOperationDetailInput struct {
	// The identifier for the operation for which you want to get the status. Amazon
	// Route 53 returned the identifier in the response to the original request.
	//
	// Type: String
	//
	// Default: None
	//
	// Required: Yes
	OperationID *string `locationName:"OperationId" type:"string" required:"true"`

	metadataGetOperationDetailInput `json:"-" xml:"-"`
}

type metadataGetOperationDetailInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The GetOperationDetail response includes the following elements.
type GetOperationDetailOutput struct {
	// The name of a domain.
	//
	// Type: String
	DomainName *string `type:"string"`

	// Detailed information on the status including possible errors.
	//
	// Type: String
	Message *string `type:"string"`

	// The identifier for the operation.
	//
	// Type: String
	OperationID *string `locationName:"OperationId" type:"string"`

	// The current status of the requested operation in the system.
	//
	// Type: String
	Status *string `type:"string"`

	// The date when the request was submitted.
	SubmittedDate *time.Time `type:"timestamp" timestampFormat:"unix"`

	// The type of operation that was requested.
	//
	// Type: String
	Type *string `type:"string"`

	metadataGetOperationDetailOutput `json:"-" xml:"-"`
}

type metadataGetOperationDetailOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The ListDomains request includes the following elements.
type ListDomainsInput struct {
	// For an initial request for a list of domains, omit this element. If the number
	// of domains that are associated with the current AWS account is greater than
	// the value that you specified for MaxItems, you can use Marker to return additional
	// domains. Get the value of NextPageMarker from the previous response, and
	// submit another request that includes the value of NextPageMarker in the Marker
	// element.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: The marker must match the value specified in the previous request.
	//
	// Required: No
	Marker *string `type:"string"`

	// Number of domains to be returned.
	//
	// Type: Integer
	//
	// Default: 20
	//
	// Constraints: A numeral between 1 and 100.
	//
	// Required: No
	MaxItems *int64 `type:"integer"`

	metadataListDomainsInput `json:"-" xml:"-"`
}

type metadataListDomainsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The ListDomains response includes the following elements.
type ListDomainsOutput struct {
	// A summary of domains.
	//
	// Type: Complex type containing a list of domain summaries.
	//
	// Children: AutoRenew, DomainName, Expiry, TransferLock
	Domains []*DomainSummary `type:"list" required:"true"`

	// If there are more domains than you specified for MaxItems in the request,
	// submit another request and include the value of NextPageMarker in the value
	// of Marker.
	//
	// Type: String
	//
	// Parent: Operations
	NextPageMarker *string `type:"string"`

	metadataListDomainsOutput `json:"-" xml:"-"`
}

type metadataListDomainsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The ListOperations request includes the following elements.
type ListOperationsInput struct {
	// For an initial request for a list of operations, omit this element. If the
	// number of operations that are not yet complete is greater than the value
	// that you specified for MaxItems, you can use Marker to return additional
	// operations. Get the value of NextPageMarker from the previous response, and
	// submit another request that includes the value of NextPageMarker in the Marker
	// element.
	//
	// Type: String
	//
	// Default: None
	//
	// Required: No
	Marker *string `type:"string"`

	// Number of domains to be returned.
	//
	// Type: Integer
	//
	// Default: 20
	//
	// Constraints: A value between 1 and 100.
	//
	// Required: No
	MaxItems *int64 `type:"integer"`

	metadataListOperationsInput `json:"-" xml:"-"`
}

type metadataListOperationsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The ListOperations response includes the following elements.
type ListOperationsOutput struct {
	// If there are more operations than you specified for MaxItems in the request,
	// submit another request and include the value of NextPageMarker in the value
	// of Marker.
	//
	// Type: String
	//
	// Parent: Operations
	NextPageMarker *string `type:"string"`

	// Lists summaries of the operations.
	//
	// Type: Complex type containing a list of operation summaries
	//
	// Children: OperationId, Status, SubmittedDate, Type
	Operations []*OperationSummary `type:"list" required:"true"`

	metadataListOperationsOutput `json:"-" xml:"-"`
}

type metadataListOperationsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The ListTagsForDomainRequest includes the following elements.
type ListTagsForDomainInput struct {
	// The domain for which you want to get a list of tags.
	DomainName *string `type:"string" required:"true"`

	metadataListTagsForDomainInput `json:"-" xml:"-"`
}

type metadataListTagsForDomainInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The ListTagsForDomain response includes the following elements.
type ListTagsForDomainOutput struct {
	// A list of the tags that are associated with the specified domain.
	//
	// Type: A complex type containing a list of tags
	//
	// Each tag includes the following elements.
	//
	//   Key
	//
	// The key (name) of a tag.
	//
	// Type: String
	//
	//   Value
	//
	// The value of a tag.
	//
	// Type: String
	TagList []*Tag `type:"list" required:"true"`

	metadataListTagsForDomainOutput `json:"-" xml:"-"`
}

type metadataListTagsForDomainOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Nameserver includes the following elements.
type Nameserver struct {
	// Glue IP address of a name server entry. Glue IP addresses are required only
	// when the name of the name server is a subdomain of the domain. For example,
	// if your domain is example.com and the name server for the domain is ns.example.com,
	// you need to specify the IP address for ns.example.com.
	//
	// Type: List of IP addresses.
	//
	// Constraints: The list can contain only one IPv4 and one IPv6 address.
	//
	// Parent: Nameservers
	GlueIPs []*string `locationName:"GlueIps" type:"list"`

	// The fully qualified host name of the name server.
	//
	// Type: String
	//
	// Constraint: Maximum 255 characterss
	//
	// Parent: Nameservers
	Name *string `type:"string" required:"true"`

	metadataNameserver `json:"-" xml:"-"`
}

type metadataNameserver struct {
	SDKShapeTraits bool `type:"structure"`
}

// OperationSummary includes the following elements.
type OperationSummary struct {
	// Identifier returned to track the requested action.
	//
	// Type: String
	OperationID *string `locationName:"OperationId" type:"string" required:"true"`

	// The current status of the requested operation in the system.
	//
	// Type: String
	Status *string `type:"string" required:"true"`

	// The date when the request was submitted.
	SubmittedDate *time.Time `type:"timestamp" timestampFormat:"unix" required:"true"`

	// Type of the action requested.
	//
	// Type: String
	//
	// Valid values: REGISTER_DOMAIN | DELETE_DOMAIN | TRANSFER_IN_DOMAIN | UPDATE_DOMAIN_CONTACT
	// | UPDATE_NAMESERVER | CHANGE_PRIVACY_PROTECTION | DOMAIN_LOCK
	Type *string `type:"string" required:"true"`

	metadataOperationSummary `json:"-" xml:"-"`
}

type metadataOperationSummary struct {
	SDKShapeTraits bool `type:"structure"`
}

// The RegisterDomain request includes the following elements.
type RegisterDomainInput struct {
	// Provides detailed contact information.
	//
	// Type: Complex
	//
	// Children: FirstName, MiddleName, LastName, ContactType, OrganizationName,
	// AddressLine1, AddressLine2, City, State, CountryCode, ZipCode, PhoneNumber,
	// Email, Fax, ExtraParams
	//
	// Required: Yes
	AdminContact *ContactDetail `type:"structure" required:"true"`

	// Indicates whether the domain will be automatically renewed (true) or not
	// (false). Autorenewal only takes effect after the account is charged.
	//
	// Type: Boolean
	//
	// Valid values: true | false
	//
	// Default: true
	//
	// Required: No
	AutoRenew *bool `type:"boolean"`

	// The name of a domain.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: The domain name can contain only the letters a through z, the
	// numbers 0 through 9, and hyphen (-). Internationalized Domain Names are not
	// supported.
	//
	// Required: Yes
	DomainName *string `type:"string" required:"true"`

	// The number of years the domain will be registered. Domains are registered
	// for a minimum of one year. The maximum period depends on the top-level domain.
	//
	// Type: Integer
	//
	// Default: 1
	//
	// Valid values: Integer from 1 to 10
	//
	// Required: Yes
	DurationInYears *int64 `type:"integer" required:"true"`

	// Reserved for future use.
	IDNLangCode *string `locationName:"IdnLangCode" type:"string"`

	// Whether you want to conceal contact information from WHOIS queries. If you
	// specify true, WHOIS ("who is") queries will return contact information for
	// our registrar partner, Gandi, instead of the contact information that you
	// enter.
	//
	// Type: Boolean
	//
	// Default: true
	//
	// Valid values: true | false
	//
	// Required: No
	PrivacyProtectAdminContact *bool `type:"boolean"`

	// Whether you want to conceal contact information from WHOIS queries. If you
	// specify true, WHOIS ("who is") queries will return contact information for
	// our registrar partner, Gandi, instead of the contact information that you
	// enter.
	//
	// Type: Boolean
	//
	// Default: true
	//
	// Valid values: true | false
	//
	// Required: No
	PrivacyProtectRegistrantContact *bool `type:"boolean"`

	// Whether you want to conceal contact information from WHOIS queries. If you
	// specify true, WHOIS ("who is") queries will return contact information for
	// our registrar partner, Gandi, instead of the contact information that you
	// enter.
	//
	// Type: Boolean
	//
	// Default: true
	//
	// Valid values: true | false
	//
	// Required: No
	PrivacyProtectTechContact *bool `type:"boolean"`

	// Provides detailed contact information.
	//
	// Type: Complex
	//
	// Children: FirstName, MiddleName, LastName, ContactType, OrganizationName,
	// AddressLine1, AddressLine2, City, State, CountryCode, ZipCode, PhoneNumber,
	// Email, Fax, ExtraParams
	//
	// Required: Yes
	RegistrantContact *ContactDetail `type:"structure" required:"true"`

	// Provides detailed contact information.
	//
	// Type: Complex
	//
	// Children: FirstName, MiddleName, LastName, ContactType, OrganizationName,
	// AddressLine1, AddressLine2, City, State, CountryCode, ZipCode, PhoneNumber,
	// Email, Fax, ExtraParams
	//
	// Required: Yes
	TechContact *ContactDetail `type:"structure" required:"true"`

	metadataRegisterDomainInput `json:"-" xml:"-"`
}

type metadataRegisterDomainInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The RegisterDomain response includes the following element.
type RegisterDomainOutput struct {
	// Identifier for tracking the progress of the request. To use this ID to query
	// the operation status, use GetOperationDetail.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters.
	OperationID *string `locationName:"OperationId" type:"string" required:"true"`

	metadataRegisterDomainOutput `json:"-" xml:"-"`
}

type metadataRegisterDomainOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The RetrieveDomainAuthCode request includes the following element.
type RetrieveDomainAuthCodeInput struct {
	// The name of a domain.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: The domain name can contain only the letters a through z, the
	// numbers 0 through 9, and hyphen (-). Internationalized Domain Names are not
	// supported.
	//
	// Required: Yes
	DomainName *string `type:"string" required:"true"`

	metadataRetrieveDomainAuthCodeInput `json:"-" xml:"-"`
}

type metadataRetrieveDomainAuthCodeInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The RetrieveDomainAuthCode response includes the following element.
type RetrieveDomainAuthCodeOutput struct {
	// The authorization code for the domain.
	//
	// Type: String
	AuthCode *string `type:"string" required:"true"`

	metadataRetrieveDomainAuthCodeOutput `json:"-" xml:"-"`
}

type metadataRetrieveDomainAuthCodeOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// Each tag includes the following elements.
type Tag struct {
	// The key (name) of a tag.
	//
	// Type: String
	//
	// Default: None
	//
	// Valid values: A-Z, a-z, 0-9, space, ".:/=+\-@"
	//
	// Constraints: Each key can be 1-128 characters long.
	//
	// Required: Yes
	Key *string `type:"string"`

	// The value of a tag.
	//
	// Type: String
	//
	// Default: None
	//
	// Valid values: A-Z, a-z, 0-9, space, ".:/=+\-@"
	//
	// Constraints: Each value can be 0-256 characters long.
	//
	// Required: Yes
	Value *string `type:"string"`

	metadataTag `json:"-" xml:"-"`
}

type metadataTag struct {
	SDKShapeTraits bool `type:"structure"`
}

// The TransferDomain request includes the following elements.
type TransferDomainInput struct {
	// Provides detailed contact information.
	//
	// Type: Complex
	//
	// Children: FirstName, MiddleName, LastName, ContactType, OrganizationName,
	// AddressLine1, AddressLine2, City, State, CountryCode, ZipCode, PhoneNumber,
	// Email, Fax, ExtraParams
	//
	// Required: Yes
	AdminContact *ContactDetail `type:"structure" required:"true"`

	// The authorization code for the domain. You get this value from the current
	// registrar.
	//
	// Type: String
	//
	// Required: Yes
	AuthCode *string `type:"string"`

	// Indicates whether the domain will be automatically renewed (true) or not
	// (false). Autorenewal only takes effect after the account is charged.
	//
	// Type: Boolean
	//
	// Valid values: true | false
	//
	// Default: true
	//
	// Required: No
	AutoRenew *bool `type:"boolean"`

	// The name of a domain.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: The domain name can contain only the letters a through z, the
	// numbers 0 through 9, and hyphen (-). Internationalized Domain Names are not
	// supported.
	//
	// Required: Yes
	DomainName *string `type:"string" required:"true"`

	// The number of years the domain will be registered. Domains are registered
	// for a minimum of one year. The maximum period depends on the top-level domain.
	//
	// Type: Integer
	//
	// Default: 1
	//
	// Valid values: Integer from 1 to 10
	//
	// Required: Yes
	DurationInYears *int64 `type:"integer" required:"true"`

	// Reserved for future use.
	IDNLangCode *string `locationName:"IdnLangCode" type:"string"`

	// Contains details for the host and glue IP addresses.
	//
	// Type: Complex
	//
	// Children: GlueIps, Name
	//
	// Required: No
	Nameservers []*Nameserver `type:"list"`

	// Whether you want to conceal contact information from WHOIS queries. If you
	// specify true, WHOIS ("who is") queries will return contact information for
	// our registrar partner, Gandi, instead of the contact information that you
	// enter.
	//
	// Type: Boolean
	//
	// Default: true
	//
	// Valid values: true | false
	//
	// Required: No
	PrivacyProtectAdminContact *bool `type:"boolean"`

	// Whether you want to conceal contact information from WHOIS queries. If you
	// specify true, WHOIS ("who is") queries will return contact information for
	// our registrar partner, Gandi, instead of the contact information that you
	// enter.
	//
	// Type: Boolean
	//
	// Default: true
	//
	// Valid values: true | false
	//
	// Required: No
	PrivacyProtectRegistrantContact *bool `type:"boolean"`

	// Whether you want to conceal contact information from WHOIS queries. If you
	// specify true, WHOIS ("who is") queries will return contact information for
	// our registrar partner, Gandi, instead of the contact information that you
	// enter.
	//
	// Type: Boolean
	//
	// Default: true
	//
	// Valid values: true | false
	//
	// Required: No
	PrivacyProtectTechContact *bool `type:"boolean"`

	// Provides detailed contact information.
	//
	// Type: Complex
	//
	// Children: FirstName, MiddleName, LastName, ContactType, OrganizationName,
	// AddressLine1, AddressLine2, City, State, CountryCode, ZipCode, PhoneNumber,
	// Email, Fax, ExtraParams
	//
	// Required: Yes
	RegistrantContact *ContactDetail `type:"structure" required:"true"`

	// Provides detailed contact information.
	//
	// Type: Complex
	//
	// Children: FirstName, MiddleName, LastName, ContactType, OrganizationName,
	// AddressLine1, AddressLine2, City, State, CountryCode, ZipCode, PhoneNumber,
	// Email, Fax, ExtraParams
	//
	// Required: Yes
	TechContact *ContactDetail `type:"structure" required:"true"`

	metadataTransferDomainInput `json:"-" xml:"-"`
}

type metadataTransferDomainInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The TranserDomain response includes the following element.
type TransferDomainOutput struct {
	// Identifier for tracking the progress of the request. To use this ID to query
	// the operation status, use GetOperationDetail.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters.
	OperationID *string `locationName:"OperationId" type:"string" required:"true"`

	metadataTransferDomainOutput `json:"-" xml:"-"`
}

type metadataTransferDomainOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The UpdateDomainContact request includes the following elements.
type UpdateDomainContactInput struct {
	// Provides detailed contact information.
	//
	// Type: Complex
	//
	// Children: FirstName, MiddleName, LastName, ContactType, OrganizationName,
	// AddressLine1, AddressLine2, City, State, CountryCode, ZipCode, PhoneNumber,
	// Email, Fax, ExtraParams
	//
	// Required: Yes
	AdminContact *ContactDetail `type:"structure"`

	// The name of a domain.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: The domain name can contain only the letters a through z, the
	// numbers 0 through 9, and hyphen (-). Internationalized Domain Names are not
	// supported.
	//
	// Required: Yes
	DomainName *string `type:"string" required:"true"`

	// Provides detailed contact information.
	//
	// Type: Complex
	//
	// Children: FirstName, MiddleName, LastName, ContactType, OrganizationName,
	// AddressLine1, AddressLine2, City, State, CountryCode, ZipCode, PhoneNumber,
	// Email, Fax, ExtraParams
	//
	// Required: Yes
	RegistrantContact *ContactDetail `type:"structure"`

	// Provides detailed contact information.
	//
	// Type: Complex
	//
	// Children: FirstName, MiddleName, LastName, ContactType, OrganizationName,
	// AddressLine1, AddressLine2, City, State, CountryCode, ZipCode, PhoneNumber,
	// Email, Fax, ExtraParams
	//
	// Required: Yes
	TechContact *ContactDetail `type:"structure"`

	metadataUpdateDomainContactInput `json:"-" xml:"-"`
}

type metadataUpdateDomainContactInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The UpdateDomainContact response includes the following element.
type UpdateDomainContactOutput struct {
	// Identifier for tracking the progress of the request. To use this ID to query
	// the operation status, use GetOperationDetail.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters.
	OperationID *string `locationName:"OperationId" type:"string" required:"true"`

	metadataUpdateDomainContactOutput `json:"-" xml:"-"`
}

type metadataUpdateDomainContactOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The UpdateDomainContactPrivacy request includes the following elements.
type UpdateDomainContactPrivacyInput struct {
	// Whether you want to conceal contact information from WHOIS queries. If you
	// specify true, WHOIS ("who is") queries will return contact information for
	// our registrar partner, Gandi, instead of the contact information that you
	// enter.
	//
	// Type: Boolean
	//
	// Default: None
	//
	// Valid values: true | false
	//
	// Required: No
	AdminPrivacy *bool `type:"boolean"`

	// The name of a domain.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: The domain name can contain only the letters a through z, the
	// numbers 0 through 9, and hyphen (-). Internationalized Domain Names are not
	// supported.
	//
	// Required: Yes
	DomainName *string `type:"string" required:"true"`

	// Whether you want to conceal contact information from WHOIS queries. If you
	// specify true, WHOIS ("who is") queries will return contact information for
	// our registrar partner, Gandi, instead of the contact information that you
	// enter.
	//
	// Type: Boolean
	//
	// Default: None
	//
	// Valid values: true | false
	//
	// Required: No
	RegistrantPrivacy *bool `type:"boolean"`

	// Whether you want to conceal contact information from WHOIS queries. If you
	// specify true, WHOIS ("who is") queries will return contact information for
	// our registrar partner, Gandi, instead of the contact information that you
	// enter.
	//
	// Type: Boolean
	//
	// Default: None
	//
	// Valid values: true | false
	//
	// Required: No
	TechPrivacy *bool `type:"boolean"`

	metadataUpdateDomainContactPrivacyInput `json:"-" xml:"-"`
}

type metadataUpdateDomainContactPrivacyInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The UpdateDomainContactPrivacy response includes the following element.
type UpdateDomainContactPrivacyOutput struct {
	// Identifier for tracking the progress of the request. To use this ID to query
	// the operation status, use GetOperationDetail.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters.
	OperationID *string `locationName:"OperationId" type:"string" required:"true"`

	metadataUpdateDomainContactPrivacyOutput `json:"-" xml:"-"`
}

type metadataUpdateDomainContactPrivacyOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The UpdateDomainNameserver request includes the following elements.
type UpdateDomainNameserversInput struct {
	// The name of a domain.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: The domain name can contain only the letters a through z, the
	// numbers 0 through 9, and hyphen (-). Internationalized Domain Names are not
	// supported.
	//
	// Required: Yes
	DomainName *string `type:"string" required:"true"`

	// The authorization key for .fi domains
	FIAuthKey *string `type:"string"`

	// A list of new name servers for the domain.
	//
	// Type: Complex
	//
	// Children: Name, GlueIps
	//
	// Required: Yes
	Nameservers []*Nameserver `type:"list" required:"true"`

	metadataUpdateDomainNameserversInput `json:"-" xml:"-"`
}

type metadataUpdateDomainNameserversInput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The UpdateDomainNameservers response includes the following element.
type UpdateDomainNameserversOutput struct {
	// Identifier for tracking the progress of the request. To use this ID to query
	// the operation status, use GetOperationDetail.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: Maximum 255 characters.
	OperationID *string `locationName:"OperationId" type:"string" required:"true"`

	metadataUpdateDomainNameserversOutput `json:"-" xml:"-"`
}

type metadataUpdateDomainNameserversOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

// The UpdateTagsForDomainRequest includes the following elements.
type UpdateTagsForDomainInput struct {
	// The domain for which you want to add or update tags.
	//
	// The name of a domain.
	//
	// Type: String
	//
	// Default: None
	//
	// Constraints: The domain name can contain only the letters a through z, the
	// numbers 0 through 9, and hyphen (-). Hyphens are allowed only when theyaposre
	// surrounded by letters, numbers, or other hyphens. You canapost specify a
	// hyphen at the beginning or end of a label. To specify an Internationalized
	// Domain Name, you must convert the name to Punycode.
	//
	// Required: Yes
	DomainName *string `type:"string" required:"true"`

	// A list of the tag keys and values that you want to add or update. If you
	// specify a key that already exists, the corresponding value will be replaced.
	//
	// Type: A complex type containing a list of tags
	//
	// Default: None
	//
	// Required: No
	//
	// '> Each tag includes the following elements:
	//
	//   Key
	//
	// The key (name) of a tag.
	//
	// Type: String
	//
	// Default: None
	//
	// Valid values: Unicode characters including alphanumeric, space, and ".:/=+\-@"
	//
	// Constraints: Each key can be 1-128 characters long.
	//
	// Required: Yes
	//
	//   Value
	//
	// The value of a tag.
	//
	// Type: String
	//
	// Default: None
	//
	// Valid values: Unicode characters including alphanumeric, space, and ".:/=+\-@"
	//
	// Constraints: Each value can be 0-256 characters long.
	//
	// Required: Yes
	TagsToUpdate []*Tag `type:"list"`

	metadataUpdateTagsForDomainInput `json:"-" xml:"-"`
}

type metadataUpdateTagsForDomainInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateTagsForDomainOutput struct {
	metadataUpdateTagsForDomainOutput `json:"-" xml:"-"`
}

type metadataUpdateTagsForDomainOutput struct {
	SDKShapeTraits bool `type:"structure"`
}
